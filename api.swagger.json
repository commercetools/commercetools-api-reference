{
  "swagger": "2.0",
  "info": {
    "title": "Commercetools",
    "version": "v1"
  },
  "host": "api.sphere.io",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth_2_0": {
      "description": "HTTP API authorization uses [OAuth2](http://tools.ietf.org/html/rfc6750){:target=\"_blank\"}.\n\nClients must obtain an access token from the auth service using one of\nthe authorization flows described below, before they are able to make authorized requests\nto other SPHERE.IO services. On successful completion of an authorization flow,\na client will be given an `access_token`, which they need to include in requests\nto authorized service endpoints via the HTTP `Authorization` header like this:\n",
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://auth.sphere.io/oauth/token",
      "scopes": {
        "manage_project:{projectKey}": "",
        "manage_products:{projectKey}": "",
        "view_products:{projectKey}": "",
        "manage_orders:{projectKey}": "",
        "view_orders:{projectKey}": "",
        "manage_customers:{projectKey}": "",
        "view_customers:{projectKey}": "",
        "manage_payments:{projectKey}": "",
        "view_payments:{projectKey}": "",
        "manage_subscriptions:{projectKey}": "",
        "manage_extensions:{projectKey}": "",
        "manage_types:{projectKey}": "",
        "view_types:{projectKey}": "",
        "view_shopping_lists:{projectKey}": "",
        "manage_shopping_lists:{projectKey}": "",
        "manage_my_orders:{projectKey}": "",
        "manage_my_profile:{projectKey}": "",
        "view_project_settings:{projectKey}": ""
      }
    }
  },
  "definitions": {
    "PagedQueryResponse": {
      "title": "PagedQueryResponse",
      "type": "object",
      "properties": {
        "count": {
          "title": "count",
          "format": "int64",
          "type": "number"
        },
        "total": {
          "title": "total",
          "format": "int64",
          "type": "number"
        },
        "offset": {
          "title": "offset",
          "format": "int64",
          "type": "number"
        },
        "results": {
          "title": "results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "required": [
        "count",
        "offset",
        "results"
      ]
    },
    "Update": {
      "title": "Update",
      "type": "object",
      "properties": {
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "actions": {
          "title": "actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateAction"
          }
        }
      },
      "required": [
        "version",
        "actions"
      ]
    },
    "UpdateAction": {
      "title": "UpdateAction",
      "type": "object",
      "properties": {
        "action": {
          "title": "action",
          "type": "string"
        }
      },
      "required": [
        "action"
      ]
    },
    "CartDiscount": {
      "title": "CartDiscount",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "value": {
              "title": "value",
              "$ref": "#/definitions/CartDiscountValue"
            },
            "cartPredicate": {
              "title": "cartPredicate",
              "type": "string"
            },
            "target": {
              "title": "target",
              "$ref": "#/definitions/CartDiscountTarget"
            },
            "sortOrder": {
              "title": "sortOrder",
              "type": "string"
            },
            "isActive": {
              "title": "isActive",
              "type": "boolean"
            },
            "validFrom": {
              "title": "validFrom",
              "type": "string",
              "format": "date-time"
            },
            "validUntil": {
              "title": "validUntil",
              "type": "string",
              "format": "date-time"
            },
            "requiresDiscountCode": {
              "title": "requiresDiscountCode",
              "type": "boolean"
            },
            "references": {
              "title": "references",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "stackingMode": {
              "title": "stackingMode",
              "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.\n",
              "$ref": "#/definitions/StackingMode"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            }
          },
          "required": [
            "name",
            "value",
            "cartPredicate",
            "sortOrder",
            "isActive",
            "requiresDiscountCode",
            "references",
            "stackingMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount",
      "x-annotation-updateType": "CartDiscountUpdate"
    },
    "CartDiscountChangeCartPredicateAction": {
      "title": "CartDiscountChangeCartPredicateAction",
      "example": {
        "action": "changeCartPredicate",
        "cartPredicate": "lineItemTotal(1 = 1) >  \"10.00 USD\""
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "cartPredicate": {
              "title": "cartPredicate",
              "type": "string"
            }
          },
          "required": [
            "cartPredicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-cart-predicate"
    },
    "CartDiscountChangeIsActiveAction": {
      "title": "CartDiscountChangeIsActiveAction",
      "example": {
        "action": "changeIsActive",
        "isActive": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "isActive": {
              "title": "isActive",
              "type": "boolean"
            }
          },
          "required": [
            "isActive"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-isactive"
    },
    "CartDiscountChangeNameAction": {
      "title": "CartDiscountChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "en": "NewNameEN",
          "de": "NewNameDE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-name"
    },
    "CartDiscountChangeRequiresDiscountCodeAction": {
      "title": "CartDiscountChangeRequiresDiscountCodeAction",
      "example": {
        "action": "changeRequiresDiscountCode",
        "requiresDiscountCode": true
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "requiresDiscountCode": {
              "title": "requiresDiscountCode",
              "type": "boolean"
            }
          },
          "required": [
            "requiresDiscountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-requires-discountcode"
    },
    "CartDiscountChangeSortOrderAction": {
      "title": "CartDiscountChangeSortOrderAction",
      "example": {
        "action": "changeSortOrder",
        "sortOrder": "0.2"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "sortOrder": {
              "title": "sortOrder",
              "type": "string"
            }
          },
          "required": [
            "sortOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-sort-order"
    },
    "CartDiscountChangeStackingModeAction": {
      "title": "CartDiscountChangeStackingModeAction",
      "example": {
        "action": "changeStackingMode",
        "stackingMode": "Stacking"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "stackingMode": {
              "title": "stackingMode",
              "$ref": "#/definitions/StackingMode"
            }
          },
          "required": [
            "stackingMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-stacking-mode"
    },
    "CartDiscountChangeTargetAction": {
      "title": "CartDiscountChangeTargetAction",
      "example": {
        "action": "changeTarget",
        "target": {
          "type": "lineItems",
          "predicate": "sku = \"mySKU\""
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "target": {
              "title": "target",
              "$ref": "#/definitions/CartDiscountTarget"
            }
          },
          "required": [
            "target"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-target"
    },
    "CartDiscountChangeValueAction": {
      "title": "CartDiscountChangeValueAction",
      "example": {
        "action": "changeValue",
        "value": {
          "type": "absolute",
          "money": [
            {
              "currencyCode": "EUR",
              "centAmount": 40099
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "value": {
              "title": "value",
              "$ref": "#/definitions/CartDiscountValue"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-value"
    },
    "CartDiscountCustomLineItemsTarget": {
      "title": "CartDiscountCustomLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "predicate": {
              "title": "predicate",
              "type": "string"
            }
          },
          "required": [
            "predicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountDraft": {
      "title": "CartDiscountDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "value": {
          "title": "value",
          "$ref": "#/definitions/CartDiscountValue"
        },
        "cartPredicate": {
          "title": "cartPredicate",
          "type": "string"
        },
        "target": {
          "title": "target",
          "$ref": "#/definitions/CartDiscountTarget"
        },
        "sortOrder": {
          "title": "sortOrder",
          "type": "string"
        },
        "isActive": {
          "title": "isActive",
          "type": "boolean"
        },
        "validFrom": {
          "title": "validFrom",
          "type": "string",
          "format": "date-time"
        },
        "validUntil": {
          "title": "validUntil",
          "type": "string",
          "format": "date-time"
        },
        "requiresDiscountCode": {
          "title": "requiresDiscountCode",
          "type": "boolean"
        },
        "stackingMode": {
          "title": "stackingMode",
          "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.\n",
          "$ref": "#/definitions/StackingMode"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        }
      },
      "required": [
        "name",
        "value",
        "cartPredicate",
        "sortOrder",
        "requiresDiscountCode"
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
    },
    "CartDiscountLineItemsTarget": {
      "title": "CartDiscountLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "predicate": {
              "title": "predicate",
              "type": "string"
            }
          },
          "required": [
            "predicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountPagedQueryResponse": {
      "title": "CartDiscountPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscount"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountReference": {
      "title": "CartDiscountReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/CartDiscount"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
    },
    "CartDiscountSetCustomFieldAction": {
      "title": "CartDiscountSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "StringCustomField",
        "value": "myValue"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountSetCustomTypeAction": {
      "title": "CartDiscountSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "089eaa2e-b54b-42d7-811e-23e180fe8dcc",
          "typeId": "type"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountSetDescriptionAction": {
      "title": "CartDiscountSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "en": "New Description EN",
          "de": "New Description DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-description"
    },
    "CartDiscountSetValidFromAction": {
      "title": "CartDiscountSetValidFromAction",
      "example": {
        "action": "setValidFrom",
        "validFrom": "2017-01-11T15:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "validFrom": {
              "title": "validFrom",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-from"
    },
    "CartDiscountSetValidUntilAction": {
      "title": "CartDiscountSetValidUntilAction",
      "example": {
        "action": "setValidFrom",
        "validFrom": "2017-01-11T15:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "validUntil": {
              "title": "validUntil",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-until"
    },
    "CartDiscountShippingCostTarget": {
      "title": "CartDiscountShippingCostTarget",
      "$ref": "#/definitions/CartDiscountTarget",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountTarget": {
      "title": "CartDiscountTarget",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscounttarget"
    },
    "CartDiscountUpdate": {
      "title": "CartDiscountUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountUpdateAction": {
      "title": "CartDiscountUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValue": {
      "title": "CartDiscountValue",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscountvalue"
    },
    "CartDiscountValueAbsolute": {
      "title": "CartDiscountValueAbsolute",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValue"
        },
        {
          "properties": {
            "money": {
              "title": "money",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Money"
              }
            }
          },
          "required": [
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueGiftLineItem": {
      "title": "CartDiscountValueGiftLineItem",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValue"
        },
        {
          "properties": {
            "product": {
              "title": "product",
              "$ref": "#/definitions/ProductReference"
            },
            "variantId": {
              "title": "variantId",
              "format": "int64",
              "type": "number"
            },
            "supplyChannel": {
              "title": "supplyChannel",
              "$ref": "#/definitions/ChannelReference"
            },
            "distributionChannel": {
              "title": "distributionChannel",
              "$ref": "#/definitions/ChannelReference"
            }
          },
          "required": [
            "product",
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueRelative": {
      "title": "CartDiscountValueRelative",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValue"
        },
        {
          "properties": {
            "permyriad": {
              "title": "permyriad",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "permyriad"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "MultiBuyCustomLineItemsTarget": {
      "title": "MultiBuyCustomLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "predicate": {
              "title": "predicate",
              "description": "A valid custom line item target predicate. The discount will be applied to custom line items that are\nmatched by the predicate.\n",
              "type": "string"
            },
            "triggerQuantity": {
              "title": "triggerQuantity",
              "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
              "type": "integer"
            },
            "discountedQuantity": {
              "title": "discountedQuantity",
              "description": "Quantity of line items that are discounted per application of this discount.",
              "type": "integer"
            },
            "maxOccurrence": {
              "title": "maxOccurrence",
              "description": "Maximum number of applications of this discount.",
              "type": "integer"
            },
            "selectionMode": {
              "title": "selectionMode",
              "$ref": "#/definitions/SelectionMode"
            }
          },
          "required": [
            "predicate",
            "triggerQuantity",
            "discountedQuantity",
            "selectionMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "MultiBuyLineItemsTarget": {
      "title": "MultiBuyLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "predicate": {
              "title": "predicate",
              "description": "A valid line item target predicate. The discount will be applied to line items that are matched by the predicate.\n",
              "type": "string"
            },
            "triggerQuantity": {
              "title": "triggerQuantity",
              "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
              "type": "integer"
            },
            "discountedQuantity": {
              "title": "discountedQuantity",
              "description": "Quantity of line items that are discounted per application of this discount.",
              "type": "integer"
            },
            "maxOccurrence": {
              "title": "maxOccurrence",
              "description": "Maximum number of applications of this discount.",
              "type": "integer"
            },
            "selectionMode": {
              "title": "selectionMode",
              "$ref": "#/definitions/SelectionMode"
            }
          },
          "required": [
            "predicate",
            "triggerQuantity",
            "discountedQuantity",
            "selectionMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CartDiscount"
    },
    "SelectionMode": {
      "title": "SelectionMode",
      "enum": [
        "Cheapest",
        "MostExpensive"
      ],
      "type": "string",
      "x-annotation-package": "CartDiscount"
    },
    "StackingMode": {
      "title": "StackingMode",
      "enum": [
        "Stacking",
        "StopAfterThisDiscount"
      ],
      "type": "string",
      "x-annotation-package": "CartDiscount"
    },
    "Cart": {
      "title": "Cart",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "customerId": {
              "title": "customerId",
              "type": "string"
            },
            "customerEmail": {
              "title": "customerEmail",
              "type": "string"
            },
            "anonymousId": {
              "title": "anonymousId",
              "type": "string"
            },
            "lineItems": {
              "title": "lineItems",
              "type": "array",
              "items": {
                "$ref": "#/definitions/LineItem"
              }
            },
            "customLineItems": {
              "title": "customLineItems",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomLineItem"
              }
            },
            "totalPrice": {
              "title": "totalPrice",
              "$ref": "#/definitions/TypedMoney"
            },
            "taxedPrice": {
              "title": "taxedPrice",
              "$ref": "#/definitions/TaxedPrice"
            },
            "cartState": {
              "title": "cartState",
              "$ref": "#/definitions/CartState"
            },
            "shippingAddress": {
              "title": "shippingAddress",
              "$ref": "#/definitions/Address"
            },
            "billingAddress": {
              "title": "billingAddress",
              "$ref": "#/definitions/Address"
            },
            "inventoryMode": {
              "title": "inventoryMode",
              "$ref": "#/definitions/InventoryMode"
            },
            "taxMode": {
              "title": "taxMode",
              "$ref": "#/definitions/TaxMode"
            },
            "taxRoundingMode": {
              "title": "taxRoundingMode",
              "$ref": "#/definitions/RoundingMode"
            },
            "taxCalculationMode": {
              "title": "taxCalculationMode",
              "$ref": "#/definitions/TaxCalculationMode"
            },
            "customerGroup": {
              "title": "customerGroup",
              "$ref": "#/definitions/CustomerGroupReference"
            },
            "country": {
              "title": "country",
              "type": "string"
            },
            "shippingInfo": {
              "title": "shippingInfo",
              "$ref": "#/definitions/ShippingInfo"
            },
            "discountCodes": {
              "title": "discountCodes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCodeInfo"
              }
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "paymentInfo": {
              "title": "paymentInfo",
              "$ref": "#/definitions/PaymentInfo"
            },
            "locale": {
              "title": "locale",
              "type": "string"
            },
            "deleteDaysAfterLastModification": {
              "title": "deleteDaysAfterLastModification",
              "format": "int64",
              "type": "number"
            },
            "refusedGifts": {
              "title": "refusedGifts",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountReference"
              }
            },
            "origin": {
              "title": "origin",
              "$ref": "#/definitions/CartOrigin"
            },
            "shippingRateInput": {
              "title": "shippingRateInput",
              "$ref": "#/definitions/ShippingRateInput"
            }
          },
          "required": [
            "lineItems",
            "customLineItems",
            "totalPrice",
            "cartState",
            "refusedGifts",
            "origin"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart",
      "x-annotation-updateType": "CartUpdate"
    },
    "CartAddCustomLineItemAction": {
      "title": "CartAddCustomLineItemAction",
      "example": {
        "action": "addCustomLineItem",
        "name": {
          "en": "Name EN",
          "de": "Name DE"
        },
        "quantity": 1,
        "money": {
          "currencyCode": "EUR",
          "centAmount": 4200
        },
        "slug": "mySlug",
        "taxCategory": {
          "typeId": "tax-category",
          "id": "5786eba8-d448-4b7a-84fd-07fd1d612696"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFieldsDraft"
            },
            "externalTaxRate": {
              "title": "externalTaxRate",
              "$ref": "#/definitions/ExternalTaxRateDraft"
            },
            "money": {
              "title": "money",
              "$ref": "#/definitions/Money"
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "slug": {
              "title": "slug",
              "type": "string"
            },
            "taxCategory": {
              "title": "taxCategory",
              "$ref": "#/definitions/TaxCategoryReference"
            }
          },
          "required": [
            "money",
            "name",
            "quantity",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-customlineitem"
    },
    "CartAddDiscountCodeAction": {
      "title": "CartAddDiscountCodeAction",
      "example": {
        "action": "addDiscountCode",
        "code": "mydiscountcode"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "code": {
              "title": "code",
              "type": "string"
            }
          },
          "required": [
            "code"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-discountcode"
    },
    "CartAddLineItemAction": {
      "title": "CartAddLineItemAction",
      "example": {
        "action": "addLineItem",
        "productId": "e6b98eaa-631d-422b-9fc0-af67c18ff48d",
        "variantId": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFieldsDraft"
            },
            "distributionChannel": {
              "title": "distributionChannel",
              "$ref": "#/definitions/ChannelReference"
            },
            "externalTaxRate": {
              "title": "externalTaxRate",
              "$ref": "#/definitions/ExternalTaxRateDraft"
            },
            "productId": {
              "title": "productId",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "format": "int64",
              "type": "number"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "quantity": {
              "title": "quantity",
              "default": 1,
              "type": "number"
            },
            "supplyChannel": {
              "title": "supplyChannel",
              "$ref": "#/definitions/ChannelReference"
            },
            "externalPrice": {
              "title": "externalPrice",
              "$ref": "#/definitions/Money"
            },
            "externalTotalPrice": {
              "title": "externalTotalPrice",
              "$ref": "#/definitions/ExternalLineItemTotalPrice"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-lineitem"
    },
    "CartAddPaymentAction": {
      "title": "CartAddPaymentAction",
      "example": {
        "action": "addPayment",
        "payment": {
          "id": "d45b6f23-76a0-459f-bf55-591dfe8a4ade",
          "typeId": "payment"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "payment": {
              "title": "payment",
              "$ref": "#/definitions/PaymentReference"
            }
          },
          "required": [
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-payment"
    },
    "CartAddShoppingListAction": {
      "title": "CartAddShoppingListAction",
      "example": {
        "action": "addShoppingList",
        "shoppingList": {
          "id": "e7ca6063-4f17-42d0-8b84-822029105ffb",
          "typeId": "shopping-list"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "distributionChannel": {
              "title": "distributionChannel",
              "$ref": "#/definitions/ChannelReference"
            },
            "shoppingList": {
              "title": "shoppingList",
              "$ref": "#/definitions/ShoppingListReference"
            },
            "supplyChannel": {
              "title": "supplyChannel",
              "$ref": "#/definitions/ChannelReference"
            }
          },
          "required": [
            "shoppingList"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-shoppinglist"
    },
    "CartChangeCustomLineItemMoneyAction": {
      "title": "CartChangeCustomLineItemMoneyAction",
      "example": {
        "action": "changeCustomLineItemMoney",
        "customLineItemId": "{{customLineItemId}}",
        "money": {
          "currencyCode": "EUR",
          "centAmount": 4200
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "money": {
              "title": "money",
              "$ref": "#/definitions/Money"
            }
          },
          "required": [
            "customLineItemId",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-money"
    },
    "CartChangeCustomLineItemQuantityAction": {
      "title": "CartChangeCustomLineItemQuantityAction",
      "example": {
        "action": "changeCustomLineItemQuantity",
        "customLineItemId": "{{customLineItemId}}",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            }
          },
          "required": [
            "customLineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-quantity"
    },
    "CartChangeLineItemQuantityAction": {
      "title": "CartChangeLineItemQuantityAction",
      "example": {
        "action": "changeLineItemQuantity",
        "lineItemId": "{{lineItemId}}",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "externalPrice": {
              "title": "externalPrice",
              "$ref": "#/definitions/Money"
            },
            "externalTotalPrice": {
              "title": "externalTotalPrice",
              "$ref": "#/definitions/ExternalLineItemTotalPrice"
            }
          },
          "required": [
            "lineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-lineitem-quantity"
    },
    "CartChangeTaxCalculationModeAction": {
      "title": "CartChangeTaxCalculationModeAction",
      "example": {
        "action": "changeTaxCalculationMode",
        "taxCalculationMode": "UnitPriceLevel"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "taxCalculationMode": {
              "title": "taxCalculationMode",
              "$ref": "#/definitions/TaxCalculationMode"
            }
          },
          "required": [
            "taxCalculationMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-tax-calculationmode"
    },
    "CartChangeTaxModeAction": {
      "title": "CartChangeTaxModeAction",
      "example": {
        "action": "changeTaxMode",
        "taxMode": "Platform"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "taxMode": {
              "title": "taxMode",
              "$ref": "#/definitions/TaxMode"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-taxmode"
    },
    "CartChangeTaxRoundingModeAction": {
      "title": "CartChangeTaxRoundingModeAction",
      "example": {
        "action": "changeTaxRoundingMode",
        "taxRoundingMode": "HalfUp"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "taxRoundingMode": {
              "title": "taxRoundingMode",
              "$ref": "#/definitions/RoundingMode"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-tax-roundingmode"
    },
    "CartDraft": {
      "title": "CartDraft",
      "type": "object",
      "properties": {
        "currency": {
          "title": "currency",
          "$ref": "#/definitions/CurrencyCode"
        },
        "customerId": {
          "title": "customerId",
          "type": "string"
        },
        "customerEmail": {
          "title": "customerEmail",
          "type": "string"
        },
        "customerGroup": {
          "title": "customerGroup",
          "$ref": "#/definitions/CustomerGroupReference"
        },
        "anonymousId": {
          "title": "anonymousId",
          "type": "string"
        },
        "country": {
          "title": "country",
          "type": "string"
        },
        "inventoryMode": {
          "title": "inventoryMode",
          "$ref": "#/definitions/InventoryMode"
        },
        "taxMode": {
          "title": "taxMode",
          "$ref": "#/definitions/TaxMode"
        },
        "taxRoundingMode": {
          "title": "taxRoundingMode",
          "$ref": "#/definitions/RoundingMode"
        },
        "taxCalculationMode": {
          "title": "taxCalculationMode",
          "$ref": "#/definitions/TaxCalculationMode"
        },
        "lineItems": {
          "title": "lineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemDraft"
          }
        },
        "customLineItems": {
          "title": "customLineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomLineItemDraft"
          }
        },
        "shippingAddress": {
          "title": "shippingAddress",
          "$ref": "#/definitions/Address"
        },
        "billingAddress": {
          "title": "billingAddress",
          "$ref": "#/definitions/Address"
        },
        "shippingMethod": {
          "title": "shippingMethod",
          "$ref": "#/definitions/ShippingMethodReference"
        },
        "externalTaxRateForShippingMethod": {
          "title": "externalTaxRateForShippingMethod",
          "$ref": "#/definitions/ExternalTaxRateDraft"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "locale": {
          "title": "locale",
          "type": "string"
        },
        "deleteDaysAfterLastModification": {
          "title": "deleteDaysAfterLastModification",
          "format": "int64",
          "type": "number"
        },
        "origin": {
          "title": "origin",
          "$ref": "#/definitions/CartOrigin"
        },
        "shippingRateInput": {
          "title": "shippingRateInput",
          "$ref": "#/definitions/ShippingRateInputDraft"
        }
      },
      "required": [
        "currency"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartdraft"
    },
    "CartOrigin": {
      "title": "CartOrigin",
      "enum": [
        "Customer",
        "Merchant"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
    },
    "CartPagedQueryResponse": {
      "title": "CartPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cart"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart"
    },
    "CartRecalculateAction": {
      "title": "CartRecalculateAction",
      "example": {
        "action": "recalculate",
        "updateProductData": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "updateProductData": {
              "title": "updateProductData",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#recalculate"
    },
    "CartReference": {
      "title": "CartReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Cart"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart"
    },
    "CartRemoveCustomLineItemAction": {
      "title": "CartRemoveCustomLineItemAction",
      "example": {
        "action": "removeCustomLineItem",
        "customLineItemId": "{{customLineItemId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            }
          },
          "required": [
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-customlineitem"
    },
    "CartRemoveDiscountCodeAction": {
      "title": "CartRemoveDiscountCodeAction",
      "example": {
        "action": "removeDiscountCode",
        "discountCode": {
          "typeId": "discount-code",
          "id": "{{discountCodeId}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "discountCode": {
              "title": "discountCode",
              "$ref": "#/definitions/DiscountCodeReference"
            }
          },
          "required": [
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-discountcode"
    },
    "CartRemoveLineItemAction": {
      "title": "CartRemoveLineItemAction",
      "example": {
        "action": "removeLineItem",
        "lineItemId": "{{lineItemId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "externalPrice": {
              "title": "externalPrice",
              "$ref": "#/definitions/Money"
            },
            "externalTotalPrice": {
              "title": "externalTotalPrice",
              "$ref": "#/definitions/ExternalLineItemTotalPrice"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-lineitem"
    },
    "CartRemovePaymentAction": {
      "title": "CartRemovePaymentAction",
      "example": {
        "action": "removePayment",
        "payment": {
          "id": "d45b6f23-76a0-459f-bf55-591dfe8a4ade",
          "typeId": "payment"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "payment": {
              "title": "payment",
              "$ref": "#/definitions/PaymentReference"
            }
          },
          "required": [
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-payment"
    },
    "CartSetAnonymousIdAction": {
      "title": "CartSetAnonymousIdAction",
      "example": {
        "action": "setAnonymousId",
        "anonymousId": "myAnonymousId"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "anonymousId": {
              "title": "anonymousId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-anonymous-id"
    },
    "CartSetBillingAddressAction": {
      "title": "CartSetBillingAddressAction",
      "example": {
        "action": "setBillingAddress",
        "address": {
          "firstName": "Max",
          "lastName": "Mustermann",
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-billing-address"
    },
    "CartSetCartTotalTaxAction": {
      "title": "CartSetCartTotalTaxAction",
      "example": {
        "action": "setCartTotalTax",
        "externalTotalGross": {
          "currencyCode": "EUR",
          "centAmount": 4000000
        },
        "externalTaxPortions": [
          {
            "name": "taxPortion",
            "rate": 0.18,
            "amount": {
              "centAmount": 5000000,
              "currencyCode": "EUR"
            }
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTotalGross": {
              "title": "externalTotalGross",
              "$ref": "#/definitions/Money"
            },
            "externalTaxPortions": {
              "title": "externalTaxPortions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxPortion"
              }
            }
          },
          "required": [
            "externalTotalGross",
            "externalTaxPortions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart"
    },
    "CartSetCountryAction": {
      "title": "CartSetCountryAction",
      "example": {
        "action": "setCountry",
        "country": "DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "country": {
              "title": "country",
              "$ref": "#/definitions/CountryCode"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-country"
    },
    "CartSetCustomFieldAction": {
      "title": "CartSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "StringCustomField",
        "value": "myValue"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart"
    },
    "CartSetCustomLineItemCustomFieldAction": {
      "title": "CartSetCustomLineItemCustomFieldAction",
      "example": {
        "action": "setCustomLineItemCustomField",
        "customLineItemId": "{{customLineItemId}}",
        "name": "StringCustomField",
        "value": "myNewValue"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "customLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-customfield"
    },
    "CartSetCustomLineItemCustomTypeAction": {
      "title": "CartSetCustomLineItemCustomTypeAction",
      "example": {
        "action": "setCustomLineItemCustomType",
        "customLineItemId": "{{customLineItemId}}",
        "type": {
          "id": "7c30f10f-db54-418d-b62f-6ab4a4216222",
          "typeId": "type"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "required": [
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-custom-type"
    },
    "CartSetCustomLineItemTaxAmountAction": {
      "title": "CartSetCustomLineItemTaxAmountAction",
      "example": {
        "action": "setCustomLineItemTaxAmount",
        "customLineItemId": "{{customLineItemId}}",
        "externalTaxAmount": {
          "totalGross": {
            "centAmount": 2000000,
            "currencyCode": "EUR"
          },
          "taxRate": {
            "name": "myTaxRate",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTaxAmount": {
              "title": "externalTaxAmount",
              "$ref": "#/definitions/ExternalTaxAmountDraft"
            },
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            }
          },
          "required": [
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxamount"
    },
    "CartSetCustomLineItemTaxRateAction": {
      "title": "CartSetCustomLineItemTaxRateAction",
      "example": {
        "action": "setCustomLineItemTaxRate",
        "customLineItemId": "{{customLineItemId}}",
        "externalTaxRate": {
          "name": "myTaxRate",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "externalTaxRate": {
              "title": "externalTaxRate",
              "$ref": "#/definitions/ExternalTaxRateDraft"
            }
          },
          "required": [
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxrate"
    },
    "CartSetCustomShippingMethodAction": {
      "title": "CartSetCustomShippingMethodAction",
      "example": {
        "action": "setCustomShippingMethod",
        "shippingMethodName": "myCustomShippingMethod",
        "shippingRate": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4200
          }
        },
        "taxCategory": {
          "id": "5786eba8-d448-4b7a-84fd-07fd1d612696",
          "typeId": "tax-category"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTaxRate": {
              "title": "externalTaxRate",
              "$ref": "#/definitions/ExternalTaxRateDraft"
            },
            "shippingMethodName": {
              "title": "shippingMethodName",
              "type": "string"
            },
            "shippingRate": {
              "title": "shippingRate",
              "$ref": "#/definitions/ShippingRateDraft"
            },
            "taxCategory": {
              "title": "taxCategory",
              "$ref": "#/definitions/TaxCategoryReference"
            }
          },
          "required": [
            "shippingMethodName",
            "shippingRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-custom-shippingmethod"
    },
    "CartSetCustomTypeAction": {
      "title": "CartSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "089eaa2e-b54b-42d7-811e-23e180fe8dcc",
          "typeId": "type"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart"
    },
    "CartSetCustomerEmailAction": {
      "title": "CartSetCustomerEmailAction",
      "example": {
        "action": "setCustomerEmail",
        "email": "foo@bar.com"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "email": {
              "title": "email",
              "type": "string"
            }
          },
          "required": [
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-email"
    },
    "CartSetCustomerGroupAction": {
      "title": "CartSetCustomerGroupAction",
      "example": {
        "action": "setCustomerGroup",
        "customerGroup": {
          "typeId": "customer-group",
          "id": "0c2eaad4-833c-43c1-98a4-5d03f57e9329"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customerGroup": {
              "title": "customerGroup",
              "$ref": "#/definitions/CustomerGroupReference"
            }
          },
          "required": [
            "customerGroup"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart"
    },
    "CartSetCustomerIdAction": {
      "title": "CartSetCustomerIdAction",
      "example": {
        "action": "setCustomerId",
        "customerId": "0c2eaad4-833c-43c1-98a4-5d03f57e9329"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "customerId": {
              "title": "customerId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-id"
    },
    "CartSetDeleteDaysAfterLastModificationAction": {
      "title": "CartSetDeleteDaysAfterLastModificationAction",
      "example": {
        "action": "setDeleteDaysAfterLastModification",
        "deleteDaysAfterLastModification": 90
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "deleteDaysAfterLastModification": {
              "title": "deleteDaysAfterLastModification",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-deletedaysafterlastmodification-beta"
    },
    "CartSetLineItemCustomFieldAction": {
      "title": "CartSetLineItemCustomFieldAction",
      "example": {
        "action": "setLineItemCustomField",
        "lineItemId": "{{lineItemId}}",
        "name": "myCustomFieldName",
        "value": "myNewValue"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-customfield"
    },
    "CartSetLineItemCustomTypeAction": {
      "title": "CartSetLineItemCustomTypeAction",
      "example": {
        "action": "setLineItemCustomType",
        "lineItemId": "{{lineItemId}}",
        "type": {
          "id": "96a0e2f6-1369-4359-ad9e-99132482f214",
          "typeId": "type"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-custom-type"
    },
    "CartSetLineItemPriceAction": {
      "title": "CartSetLineItemPriceAction",
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalPrice": {
              "title": "externalPrice",
              "$ref": "#/definitions/Money"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-totalprice"
    },
    "CartSetLineItemTaxAmountAction": {
      "title": "CartSetLineItemTaxAmountAction",
      "example": {
        "action": "setLineItemTaxAmount",
        "lineItemId": "{{lineItemId}}",
        "externalTaxAmount": {
          "totalGross": {
            "centAmount": 2000000,
            "currencyCode": "EUR"
          },
          "taxRate": {
            "name": "myTaxRate",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTaxAmount": {
              "title": "externalTaxAmount",
              "$ref": "#/definitions/ExternalTaxAmountDraft"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxamount"
    },
    "CartSetLineItemTaxRateAction": {
      "title": "CartSetLineItemTaxRateAction",
      "example": {
        "action": "setLineItemTaxRate",
        "lineItemId": "{{lineItemId}}",
        "externalTaxRate": {
          "name": "myTaxRate",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTaxRate": {
              "title": "externalTaxRate",
              "$ref": "#/definitions/ExternalTaxRateDraft"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxrate"
    },
    "CartSetLineItemTotalPriceAction": {
      "title": "CartSetLineItemTotalPriceAction",
      "example": {
        "action": "setLineItemTotalPrice",
        "lineItemId": "{{lineItemId}}",
        "externalTotalPrice": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4200
          },
          "totalPrice": {
            "currencyCode": "EUR",
            "centAmount": 4200
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTotalPrice": {
              "title": "externalTotalPrice",
              "$ref": "#/definitions/ExternalLineItemTotalPrice"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-totalprice"
    },
    "CartSetLocaleAction": {
      "title": "CartSetLocaleAction",
      "example": {
        "action": "setLocale",
        "locale": "de-DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "locale": {
              "title": "locale",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart"
    },
    "CartSetShippingAddressAction": {
      "title": "CartSetShippingAddressAction",
      "example": {
        "action": "setShippingAddress",
        "address": {
          "firstName": "Max",
          "lastName": "Mustermann",
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-address"
    },
    "CartSetShippingMethodAction": {
      "title": "CartSetShippingMethodAction",
      "example": {
        "action": "setShippingMethod",
        "shippingMethod": {
          "id": "5fb8a475-9fb7-4f65-a08c-4a26c26c56b8",
          "typeId": "shipping-method"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "shippingMethod": {
              "title": "shippingMethod",
              "$ref": "#/definitions/ShippingMethodReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod"
    },
    "CartSetShippingMethodTaxAmountAction": {
      "title": "CartSetShippingMethodTaxAmountAction",
      "example": {
        "action": "setShippingMethodTaxAmount",
        "externalTaxAmount": {
          "totalGross": {
            "centAmount": 2000000,
            "currencyCode": "EUR"
          },
          "taxRate": {
            "name": "myTaxRate",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTaxAmount": {
              "title": "externalTaxAmount",
              "$ref": "#/definitions/ExternalTaxAmountDraft"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxamount"
    },
    "CartSetShippingMethodTaxRateAction": {
      "title": "CartSetShippingMethodTaxRateAction",
      "example": {
        "action": "setShippingMethodTaxRate",
        "externalTaxRate": {
          "name": "myTaxRate",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "externalTaxRate": {
              "title": "externalTaxRate",
              "$ref": "#/definitions/ExternalTaxRateDraft"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxrate"
    },
    "CartSetShippingRateInputAction": {
      "title": "CartSetShippingRateInputAction",
      "example": {
        "action": "setShippingRateInput",
        "shippingRateInput": {
          "type": "Classification",
          "key": "small"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "shippingRateInput": {
              "title": "shippingRateInput",
              "$ref": "#/definitions/ShippingRateInputDraft"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingrateinput"
    },
    "CartState": {
      "title": "CartState",
      "enum": [
        "Active",
        "Merged",
        "Ordered"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartstate"
    },
    "CartUpdate": {
      "title": "CartUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart"
    },
    "CartUpdateAction": {
      "title": "CartUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Cart"
    },
    "ClassificationShippingRateInput": {
      "title": "ClassificationShippingRateInput",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInput"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "label": {
              "title": "label",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "key",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinput"
    },
    "ClassificationShippingRateInputDraft": {
      "title": "ClassificationShippingRateInputDraft",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputDraft"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinputdraft"
    },
    "CustomLineItem": {
      "title": "CustomLineItem",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "money": {
          "title": "money",
          "$ref": "#/definitions/TypedMoney"
        },
        "taxedPrice": {
          "title": "taxedPrice",
          "$ref": "#/definitions/TaxedItemPrice"
        },
        "totalPrice": {
          "title": "totalPrice",
          "$ref": "#/definitions/TypedMoney"
        },
        "slug": {
          "title": "slug",
          "type": "string"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "state": {
          "title": "state",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemState"
          }
        },
        "taxCategory": {
          "title": "taxCategory",
          "$ref": "#/definitions/TaxCategoryReference"
        },
        "taxRate": {
          "title": "taxRate",
          "$ref": "#/definitions/TaxRate"
        },
        "discountedPricePerQuantity": {
          "title": "discountedPricePerQuantity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
          }
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        }
      },
      "required": [
        "id",
        "name",
        "money",
        "totalPrice",
        "slug",
        "quantity",
        "state",
        "discountedPricePerQuantity"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitem"
    },
    "CustomLineItemDraft": {
      "title": "CustomLineItemDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "money": {
          "title": "money",
          "$ref": "#/definitions/Money"
        },
        "slug": {
          "title": "slug",
          "type": "string"
        },
        "taxCategory": {
          "title": "taxCategory",
          "$ref": "#/definitions/TaxCategoryReference"
        },
        "externalTaxRate": {
          "title": "externalTaxRate",
          "$ref": "#/definitions/ExternalTaxRateDraft"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        }
      },
      "required": [
        "name",
        "quantity",
        "money",
        "slug"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitemdraft"
    },
    "DiscountCodeInfo": {
      "title": "DiscountCodeInfo",
      "type": "object",
      "properties": {
        "discountCode": {
          "title": "discountCode",
          "$ref": "#/definitions/DiscountCodeReference"
        },
        "state": {
          "title": "state",
          "$ref": "#/definitions/DiscountCodeState"
        }
      },
      "required": [
        "discountCode",
        "state"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodereference"
    },
    "DiscountCodeState": {
      "title": "DiscountCodeState",
      "enum": [
        "NotActive",
        "DoesNotMatchCart",
        "MatchesCart",
        "MaxApplicationReached"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodestate"
    },
    "DiscountedLineItemPortion": {
      "title": "DiscountedLineItemPortion",
      "type": "object",
      "properties": {
        "discount": {
          "title": "discount",
          "$ref": "#/definitions/CartDiscountReference"
        },
        "discountedAmount": {
          "title": "discountedAmount",
          "$ref": "#/definitions/Money"
        }
      },
      "required": [
        "discount",
        "discountedAmount"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemportion"
    },
    "DiscountedLineItemPrice": {
      "title": "DiscountedLineItemPrice",
      "type": "object",
      "properties": {
        "value": {
          "title": "value",
          "$ref": "#/definitions/TypedMoney"
        },
        "includedDiscounts": {
          "title": "includedDiscounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountedLineItemPortion"
          }
        }
      },
      "required": [
        "value",
        "includedDiscounts"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"
    },
    "DiscountedLineItemPriceForQuantity": {
      "title": "DiscountedLineItemPriceForQuantity",
      "type": "object",
      "properties": {
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "discountedPrice": {
          "title": "discountedPrice",
          "$ref": "#/definitions/DiscountedLineItemPrice"
        }
      },
      "required": [
        "quantity",
        "discountedPrice"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitempriceforquantity"
    },
    "ExternalLineItemTotalPrice": {
      "title": "ExternalLineItemTotalPrice",
      "type": "object",
      "properties": {
        "price": {
          "title": "price",
          "$ref": "#/definitions/Money"
        },
        "totalPrice": {
          "title": "totalPrice",
          "$ref": "#/definitions/Money"
        }
      },
      "required": [
        "price",
        "totalPrice"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externallineitemtotalprice"
    },
    "ExternalTaxAmountDraft": {
      "title": "ExternalTaxAmountDraft",
      "type": "object",
      "properties": {
        "totalGross": {
          "title": "totalGross",
          "$ref": "#/definitions/Money"
        },
        "taxRate": {
          "title": "taxRate",
          "$ref": "#/definitions/ExternalTaxRateDraft"
        }
      },
      "required": [
        "totalGross",
        "taxRate"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxamountdraft"
    },
    "ExternalTaxRateDraft": {
      "title": "ExternalTaxRateDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        },
        "amount": {
          "title": "amount",
          "type": "number"
        },
        "country": {
          "title": "country",
          "type": "string"
        },
        "state": {
          "title": "state",
          "type": "string"
        },
        "subRates": {
          "title": "subRates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubRate"
          }
        }
      },
      "required": [
        "name",
        "country"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxratedraft"
    },
    "InventoryMode": {
      "title": "InventoryMode",
      "enum": [
        "TrackOnly",
        "ReserveOnOrder",
        "None"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#inventorymode"
    },
    "LineItem": {
      "title": "LineItem",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "productId": {
          "title": "productId",
          "type": "string"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "productSlug": {
          "title": "productSlug",
          "$ref": "#/definitions/LocalizedString"
        },
        "productType": {
          "title": "productType",
          "$ref": "#/definitions/ProductTypeReference"
        },
        "variant": {
          "title": "variant",
          "$ref": "#/definitions/ProductVariant"
        },
        "price": {
          "title": "price",
          "$ref": "#/definitions/Price"
        },
        "taxedPrice": {
          "title": "taxedPrice",
          "$ref": "#/definitions/TaxedItemPrice"
        },
        "totalPrice": {
          "title": "totalPrice",
          "$ref": "#/definitions/Money"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "state": {
          "title": "state",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemState"
          }
        },
        "taxRate": {
          "title": "taxRate",
          "$ref": "#/definitions/TaxRate"
        },
        "supplyChannel": {
          "title": "supplyChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "distributionChannel": {
          "title": "distributionChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "discountedPricePerQuantity": {
          "title": "discountedPricePerQuantity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
          }
        },
        "priceMode": {
          "title": "priceMode",
          "$ref": "#/definitions/LineItemPriceMode"
        },
        "lineItemMode": {
          "title": "lineItemMode",
          "$ref": "#/definitions/LineItemMode"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        }
      },
      "required": [
        "id",
        "productId",
        "name",
        "productType",
        "variant",
        "price",
        "totalPrice",
        "quantity",
        "state",
        "discountedPricePerQuantity",
        "priceMode",
        "lineItemMode"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitem"
    },
    "LineItemDraft": {
      "title": "LineItemDraft",
      "type": "object",
      "properties": {
        "productId": {
          "title": "productId",
          "type": "string"
        },
        "variantId": {
          "title": "variantId",
          "format": "int64",
          "type": "number"
        },
        "sku": {
          "title": "sku",
          "type": "string"
        },
        "quantity": {
          "title": "quantity",
          "default": 1,
          "type": "number"
        },
        "supplyChannel": {
          "title": "supplyChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "distributionChannel": {
          "title": "distributionChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "externalTaxRate": {
          "title": "externalTaxRate",
          "$ref": "#/definitions/ExternalTaxRateDraft"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "externalPrice": {
          "title": "externalPrice",
          "$ref": "#/definitions/Money"
        },
        "externalTotalPrice": {
          "title": "externalTotalPrice",
          "$ref": "#/definitions/ExternalLineItemTotalPrice"
        }
      },
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitemdraft",
      "x-annotation-builder": [
        {
          "paramNames": [
            "productId",
            "variantId",
            "quantity"
          ]
        },
        {
          "paramNames": [
            "sku",
            "quantity"
          ]
        }
      ]
    },
    "LineItemMode": {
      "title": "LineItemMode",
      "enum": [
        "Standard",
        "GiftLineItem"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "LineItemPriceMode": {
      "title": "LineItemPriceMode",
      "enum": [
        "Platform",
        "ExternalTotal",
        "ExternalPrice"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "ReplicaCartDraft": {
      "title": "ReplicaCartDraft",
      "type": "object",
      "properties": {
        "reference": {
          "title": "reference",
          "$ref": "#/definitions/Reference"
        }
      },
      "required": [
        "reference"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#replicacartdraft"
    },
    "RoundingMode": {
      "title": "RoundingMode",
      "enum": [
        "HalfEven",
        "HalfUp",
        "HalfDown"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "ScoreShippingRateInput": {
      "title": "ScoreShippingRateInput",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInput"
        },
        {
          "properties": {
            "score": {
              "title": "score",
              "type": "number"
            }
          },
          "required": [
            "score"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinput"
    },
    "ScoreShippingRateInputDraft": {
      "title": "ScoreShippingRateInputDraft",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputDraft"
        },
        {
          "properties": {
            "score": {
              "title": "score",
              "type": "number"
            }
          },
          "required": [
            "score"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinputdraft"
    },
    "ShippingInfo": {
      "title": "ShippingInfo",
      "type": "object",
      "properties": {
        "shippingMethodName": {
          "title": "shippingMethodName",
          "type": "string"
        },
        "price": {
          "title": "price",
          "$ref": "#/definitions/TypedMoney"
        },
        "shippingRate": {
          "title": "shippingRate",
          "$ref": "#/definitions/ShippingRate"
        },
        "taxedPrice": {
          "title": "taxedPrice",
          "$ref": "#/definitions/TaxedItemPrice"
        },
        "taxRate": {
          "title": "taxRate",
          "$ref": "#/definitions/TaxRate"
        },
        "taxCategory": {
          "title": "taxCategory",
          "$ref": "#/definitions/TaxCategoryReference"
        },
        "shippingMethod": {
          "title": "shippingMethod",
          "$ref": "#/definitions/ShippingMethodReference"
        },
        "deliveries": {
          "title": "deliveries",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delivery"
          }
        },
        "discountedPrice": {
          "title": "discountedPrice",
          "$ref": "#/definitions/DiscountedLineItemPrice"
        },
        "shippingMethodState": {
          "title": "shippingMethodState",
          "$ref": "#/definitions/ShippingMethodState"
        }
      },
      "required": [
        "shippingMethodName",
        "price",
        "shippingRate",
        "shippingMethodState"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippinginfo"
    },
    "ShippingMethodState": {
      "title": "ShippingMethodState",
      "enum": [
        "DoesNotMatchCart",
        "MatchesCart"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingmethodstate"
    },
    "ShippingRateInput": {
      "title": "ShippingRateInput",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinput"
    },
    "ShippingRateInputDraft": {
      "title": "ShippingRateInputDraft",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinputdraft"
    },
    "TaxCalculationMode": {
      "title": "TaxCalculationMode",
      "enum": [
        "LineItemLevel",
        "UnitPriceLevel"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "TaxMode": {
      "title": "TaxMode",
      "enum": [
        "Platform",
        "External",
        "ExternalAmount",
        "Disabled"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "TaxPortion": {
      "title": "TaxPortion",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        },
        "rate": {
          "title": "rate",
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "amount": {
          "title": "amount",
          "$ref": "#/definitions/Money"
        }
      },
      "required": [
        "rate",
        "amount"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxportion"
    },
    "TaxedItemPrice": {
      "title": "TaxedItemPrice",
      "type": "object",
      "properties": {
        "totalNet": {
          "title": "totalNet",
          "$ref": "#/definitions/TypedMoney"
        },
        "totalGross": {
          "title": "totalGross",
          "$ref": "#/definitions/TypedMoney"
        }
      },
      "required": [
        "totalNet",
        "totalGross"
      ],
      "x-annotation-package": "Cart"
    },
    "TaxedPrice": {
      "title": "TaxedPrice",
      "type": "object",
      "properties": {
        "totalNet": {
          "title": "totalNet",
          "$ref": "#/definitions/Money"
        },
        "totalGross": {
          "title": "totalGross",
          "$ref": "#/definitions/Money"
        },
        "taxPortions": {
          "title": "taxPortions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxPortion"
          }
        }
      },
      "required": [
        "totalNet",
        "totalGross",
        "taxPortions"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxedprice"
    },
    "Category": {
      "title": "Category",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "ancestors": {
              "title": "ancestors",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryReference"
              }
            },
            "parent": {
              "title": "parent",
              "$ref": "#/definitions/CategoryReference"
            },
            "orderHint": {
              "title": "orderHint",
              "type": "string"
            },
            "externalId": {
              "title": "externalId",
              "type": "string"
            },
            "metaTitle": {
              "title": "metaTitle",
              "$ref": "#/definitions/LocalizedString"
            },
            "metaDescription": {
              "title": "metaDescription",
              "$ref": "#/definitions/LocalizedString"
            },
            "metaKeywords": {
              "title": "metaKeywords",
              "$ref": "#/definitions/LocalizedString"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "assets": {
              "title": "assets",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              }
            },
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "name",
            "slug",
            "ancestors"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category",
      "x-annotation-updateType": "CategoryUpdate"
    },
    "CategoryAddAssetAction": {
      "title": "CategoryAddAssetAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "asset": {
              "title": "asset",
              "$ref": "#/definitions/AssetDraft"
            },
            "position": {
              "title": "position",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "asset"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-asset"
    },
    "CategoryChangeAssetNameAction": {
      "title": "CategoryChangeAssetNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-name"
    },
    "CategoryChangeAssetOrderAction": {
      "title": "CategoryChangeAssetOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetOrder": {
              "title": "assetOrder",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "assetOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category"
    },
    "CategoryChangeNameAction": {
      "title": "CategoryChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "en": "new category name"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-name"
    },
    "CategoryChangeOrderHintAction": {
      "title": "CategoryChangeOrderHintAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "orderHint": {
              "title": "orderHint",
              "type": "string"
            }
          },
          "required": [
            "orderHint"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-orderhint"
    },
    "CategoryChangeParentAction": {
      "title": "CategoryChangeParentAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "parent": {
              "title": "parent",
              "$ref": "#/definitions/CategoryReference"
            }
          },
          "required": [
            "parent"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-parent"
    },
    "CategoryChangeSlugAction": {
      "title": "CategoryChangeSlugAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-slug"
    },
    "CategoryDraft": {
      "title": "CategoryDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "slug": {
          "title": "slug",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "parent": {
          "title": "parent",
          "$ref": "#/definitions/CategoryReference"
        },
        "orderHint": {
          "title": "orderHint",
          "type": "string"
        },
        "externalId": {
          "title": "externalId",
          "type": "string"
        },
        "metaTitle": {
          "title": "metaTitle",
          "$ref": "#/definitions/LocalizedString"
        },
        "metaDescription": {
          "title": "metaDescription",
          "$ref": "#/definitions/LocalizedString"
        },
        "metaKeywords": {
          "title": "metaKeywords",
          "$ref": "#/definitions/LocalizedString"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "assets": {
          "title": "assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDraft"
          }
        },
        "key": {
          "title": "key",
          "type": "string"
        }
      },
      "required": [
        "name",
        "slug"
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#categorydraft"
    },
    "CategoryPagedQueryResponse": {
      "title": "CategoryPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category"
    },
    "CategoryReference": {
      "title": "CategoryReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Category"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category"
    },
    "CategoryRemoveAssetAction": {
      "title": "CategoryRemoveAssetAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-asset"
    },
    "CategorySetAssetCustomFieldAction": {
      "title": "CategorySetAssetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-customfield"
    },
    "CategorySetAssetCustomTypeAction": {
      "title": "CategorySetAssetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            },
            "fields": {
              "title": "fields",
              "type": "object"
            }
          },
          "required": [
            "type",
            "fields"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-type"
    },
    "CategorySetAssetDescriptionAction": {
      "title": "CategorySetAssetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-description"
    },
    "CategorySetAssetKeyAction": {
      "title": "CategorySetAssetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            }
          },
          "required": [
            "assetId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-key"
    },
    "CategorySetAssetSourcesAction": {
      "title": "CategorySetAssetSourcesAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "sources": {
              "title": "sources",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetSource"
              }
            }
          },
          "required": [
            "sources"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-tags"
    },
    "CategorySetAssetTagsAction": {
      "title": "CategorySetAssetTagsAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "tags": {
              "title": "tags",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "tags"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-tags"
    },
    "CategorySetCustomFieldAction": {
      "title": "CategorySetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category"
    },
    "CategorySetCustomTypeAction": {
      "title": "CategorySetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            },
            "fields": {
              "title": "fields",
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Category"
    },
    "CategorySetDescriptionAction": {
      "title": "CategorySetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-description"
    },
    "CategorySetExternalIdAction": {
      "title": "CategorySetExternalIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "externalId": {
              "title": "externalId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-external-id"
    },
    "CategorySetKeyAction": {
      "title": "CategorySetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-key"
    },
    "CategorySetMetaDescriptionAction": {
      "title": "CategorySetMetaDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "metaDescription": {
              "title": "metaDescription",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "metaDescription"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-description"
    },
    "CategorySetMetaKeywordsAction": {
      "title": "CategorySetMetaKeywordsAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "metaKeywords": {
              "title": "metaKeywords",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "metaKeywords"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-keywords"
    },
    "CategorySetMetaTitleAction": {
      "title": "CategorySetMetaTitleAction",
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "metaTitle": {
              "title": "metaTitle",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "metaTitle"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-title"
    },
    "CategoryUpdate": {
      "title": "CategoryUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Category"
    },
    "CategoryUpdateAction": {
      "title": "CategoryUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Category"
    },
    "Channel": {
      "title": "Channel",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              }
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            },
            "reviewRatingStatistics": {
              "title": "reviewRatingStatistics",
              "$ref": "#/definitions/ReviewRatingStatistics"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "geoLocation": {
              "title": "geoLocation",
              "type": "object"
            }
          },
          "required": [
            "key",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel",
      "x-annotation-updateType": "ChannelUpdate"
    },
    "ChannelAddRolesAction": {
      "title": "ChannelAddRolesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              }
            }
          },
          "required": [
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#add-roles"
    },
    "ChannelChangeDescriptionAction": {
      "title": "ChannelChangeDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-description"
    },
    "ChannelChangeKeyAction": {
      "title": "ChannelChangeKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-key"
    },
    "ChannelChangeNameAction": {
      "title": "ChannelChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-name"
    },
    "ChannelDraft": {
      "title": "ChannelDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "roles": {
          "title": "roles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelRoleEnum"
          }
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "address": {
          "title": "address",
          "$ref": "#/definitions/Address"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "geoLocation": {
          "title": "geoLocation",
          "type": "object"
        }
      },
      "required": [
        "key"
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channeldraft"
    },
    "ChannelPagedQueryResponse": {
      "title": "ChannelPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Channel"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel"
    },
    "ChannelReference": {
      "title": "ChannelReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Channel"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel"
    },
    "ChannelRemoveRolesAction": {
      "title": "ChannelRemoveRolesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              }
            }
          },
          "required": [
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#remove-roles"
    },
    "ChannelRoleEnum": {
      "title": "ChannelRoleEnum",
      "enum": [
        "InventorySupply",
        "ProductDistribution",
        "OrderExport",
        "OrderImport",
        "Primary"
      ],
      "type": "string",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channelroleenum"
    },
    "ChannelSetAddressAction": {
      "title": "ChannelSetAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-address"
    },
    "ChannelSetCustomFieldAction": {
      "title": "ChannelSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel"
    },
    "ChannelSetCustomTypeAction": {
      "title": "ChannelSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            },
            "fields": {
              "title": "fields",
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel"
    },
    "ChannelSetGeolocationAction": {
      "title": "ChannelSetGeolocationAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "geoLocation": {
              "title": "geoLocation",
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel"
    },
    "ChannelSetRolesAction": {
      "title": "ChannelSetRolesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              }
            }
          },
          "required": [
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-roles"
    },
    "ChannelUpdate": {
      "title": "ChannelUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Channel"
    },
    "ChannelUpdateAction": {
      "title": "ChannelUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Channel"
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "title": {
          "title": "title",
          "type": "string"
        },
        "salutation": {
          "title": "salutation",
          "type": "string"
        },
        "firstName": {
          "title": "firstName",
          "type": "string"
        },
        "lastName": {
          "title": "lastName",
          "type": "string"
        },
        "streetName": {
          "title": "streetName",
          "type": "string"
        },
        "streetNumber": {
          "title": "streetNumber",
          "type": "string"
        },
        "additionalStreetInfo": {
          "title": "additionalStreetInfo",
          "type": "string"
        },
        "postalCode": {
          "title": "postalCode",
          "type": "string"
        },
        "city": {
          "title": "city",
          "type": "string"
        },
        "region": {
          "title": "region",
          "type": "string"
        },
        "state": {
          "title": "state",
          "type": "string"
        },
        "country": {
          "title": "country",
          "$ref": "#/definitions/CountryCode"
        },
        "company": {
          "title": "company",
          "type": "string"
        },
        "department": {
          "title": "department",
          "type": "string"
        },
        "building": {
          "title": "building",
          "type": "string"
        },
        "apartment": {
          "title": "apartment",
          "type": "string"
        },
        "pOBox": {
          "title": "pOBox",
          "type": "string"
        },
        "phone": {
          "title": "phone",
          "type": "string"
        },
        "mobile": {
          "title": "mobile",
          "type": "string"
        },
        "email": {
          "title": "email",
          "type": "string"
        },
        "fax": {
          "title": "fax",
          "type": "string"
        },
        "additionalAddressInfo": {
          "title": "additionalAddressInfo",
          "type": "string"
        },
        "externalId": {
          "title": "externalId",
          "type": "string"
        }
      },
      "required": [
        "country"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#address"
    },
    "Asset": {
      "title": "Asset",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "sources": {
          "title": "sources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetSource"
          }
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "tags": {
          "title": "tags",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        },
        "key": {
          "title": "key",
          "type": "string"
        }
      },
      "required": [
        "id",
        "sources",
        "name"
      ],
      "x-annotation-package": "Common"
    },
    "AssetDimensions": {
      "title": "AssetDimensions",
      "type": "object",
      "properties": {
        "w": {
          "title": "w",
          "type": "number"
        },
        "h": {
          "title": "h",
          "type": "number"
        }
      },
      "required": [
        "w",
        "h"
      ],
      "x-annotation-package": "Common"
    },
    "AssetDraft": {
      "title": "AssetDraft",
      "type": "object",
      "properties": {
        "sources": {
          "title": "sources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetSource"
          }
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "tags": {
          "title": "tags",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "key": {
          "title": "key",
          "type": "string"
        }
      },
      "required": [
        "sources",
        "name"
      ],
      "x-annotation-package": "Common"
    },
    "AssetSource": {
      "title": "AssetSource",
      "type": "object",
      "properties": {
        "uri": {
          "title": "uri",
          "type": "string"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "dimensions": {
          "title": "dimensions",
          "$ref": "#/definitions/AssetDimensions"
        },
        "contentType": {
          "title": "contentType",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ],
      "x-annotation-package": "Common"
    },
    "CentPrecisionMoney": {
      "title": "CentPrecisionMoney",
      "$ref": "#/definitions/TypedMoney",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "CountryCode": {
      "title": "CountryCode",
      "pattern": "^[A-Z]{2}$",
      "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n",
      "type": "string",
      "x-annotation-package": "Common"
    },
    "CurrencyCode": {
      "title": "CurrencyCode",
      "pattern": "^[A-Z]{3}$",
      "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n",
      "type": "string",
      "x-annotation-package": "Common"
    },
    "DiscountedPrice": {
      "title": "DiscountedPrice",
      "type": "object",
      "properties": {
        "value": {
          "title": "value",
          "$ref": "#/definitions/Money"
        },
        "discount": {
          "title": "discount",
          "$ref": "#/definitions/ProductDiscountReference"
        }
      },
      "required": [
        "value",
        "discount"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#discountedprice"
    },
    "GeoJson": {
      "title": "GeoJson",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        },
        "coordinates": {
          "title": "coordinates",
          "type": "array"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "x-annotation-package": "Common"
    },
    "GeoJsonPoint": {
      "title": "GeoJsonPoint",
      "$ref": "#/definitions/GeoJson",
      "x-annotation-package": "Common"
    },
    "HighPrecisionMoney": {
      "title": "HighPrecisionMoney",
      "allOf": [
        {
          "$ref": "#/definitions/TypedMoney"
        },
        {
          "properties": {
            "preciseAmount": {
              "title": "preciseAmount",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "preciseAmount"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "Image": {
      "title": "Image",
      "type": "object",
      "properties": {
        "url": {
          "title": "url",
          "type": "string"
        },
        "dimensions": {
          "title": "dimensions",
          "$ref": "#/definitions/ImageDimensions"
        },
        "label": {
          "title": "label",
          "type": "string"
        }
      },
      "required": [
        "url",
        "dimensions"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
    },
    "ImageDimensions": {
      "title": "ImageDimensions",
      "type": "object",
      "properties": {
        "w": {
          "title": "w",
          "type": "number"
        },
        "h": {
          "title": "h",
          "type": "number"
        }
      },
      "required": [
        "w",
        "h"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
    },
    "Locale": {
      "title": "Locale",
      "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
      "description": "A locale of [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).\n",
      "type": "string",
      "x-annotation-package": "Common"
    },
    "LocalizedString": {
      "title": "LocalizedString",
      "type": "object",
      "additionalProperties": {
        "title": "/^[a-z]{2}(-[A-Z]{2})?$/",
        "required": true,
        "type": "string"
      },
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#localizedstring",
      "x-annotation-asMap": {
        "key": "string",
        "value": "string"
      }
    },
    "Money": {
      "title": "Money",
      "type": "object",
      "properties": {
        "centAmount": {
          "title": "centAmount",
          "format": "int64",
          "type": "number"
        },
        "currencyCode": {
          "title": "currencyCode",
          "$ref": "#/definitions/CurrencyCode"
        }
      },
      "required": [
        "centAmount",
        "currencyCode"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "MoneyType": {
      "title": "MoneyType",
      "enum": [
        "centPrecision",
        "highPrecision"
      ],
      "type": "string",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "Price": {
      "title": "Price",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "value": {
          "title": "value",
          "$ref": "#/definitions/Money"
        },
        "country": {
          "title": "country",
          "$ref": "#/definitions/CountryCode"
        },
        "customerGroup": {
          "title": "customerGroup",
          "$ref": "#/definitions/CustomerGroupReference"
        },
        "channel": {
          "title": "channel",
          "$ref": "#/definitions/ChannelReference"
        },
        "validFrom": {
          "title": "validFrom",
          "type": "string",
          "format": "date-time"
        },
        "validUntil": {
          "title": "validUntil",
          "type": "string",
          "format": "date-time"
        },
        "discounted": {
          "title": "discounted",
          "$ref": "#/definitions/DiscountedPrice"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        },
        "tiers": {
          "title": "tiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceTier"
          }
        }
      },
      "required": [
        "value"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#price"
    },
    "PriceDraft": {
      "title": "PriceDraft",
      "type": "object",
      "properties": {
        "value": {
          "title": "value",
          "$ref": "#/definitions/Money"
        },
        "country": {
          "title": "country",
          "$ref": "#/definitions/CountryCode"
        },
        "customerGroup": {
          "title": "customerGroup",
          "$ref": "#/definitions/CustomerGroupReference"
        },
        "channel": {
          "title": "channel",
          "$ref": "#/definitions/ChannelReference"
        },
        "validFrom": {
          "title": "validFrom",
          "type": "string",
          "format": "date-time"
        },
        "validUntil": {
          "title": "validUntil",
          "type": "string",
          "format": "date-time"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "tiers": {
          "title": "tiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceTier"
          }
        }
      },
      "required": [
        "value"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#pricedraft"
    },
    "PriceTier": {
      "title": "PriceTier",
      "type": "object",
      "properties": {
        "minimumQuantity": {
          "title": "minimumQuantity",
          "format": "int64",
          "type": "number"
        },
        "value": {
          "title": "value",
          "$ref": "#/definitions/Money"
        }
      },
      "required": [
        "minimumQuantity",
        "value"
      ],
      "x-annotation-package": "Common"
    },
    "Reference": {
      "title": "Reference",
      "discriminator": "typeId",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "title": "typeId",
              "$ref": "#/definitions/ReferenceTypeId"
            }
          },
          "required": [
            "typeId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference"
    },
    "ReferenceTypeId": {
      "title": "ReferenceTypeId",
      "enum": [
        "cart",
        "cart-discount",
        "category",
        "channel",
        "customer",
        "customer-group",
        "discount-code",
        "key-value-document",
        "payment",
        "product",
        "product-type",
        "product-discount",
        "order",
        "review",
        "shopping-list",
        "shipping-method",
        "state",
        "tax-category",
        "type",
        "zone",
        "inventory-entry"
      ],
      "type": "string",
      "x-annotation-package": "Common"
    },
    "Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string",
          "x-annotation-identifier": true
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "createdAt": {
          "title": "createdAt",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedAt": {
          "title": "lastModifiedAt",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "version",
        "createdAt",
        "lastModifiedAt"
      ],
      "x-annotation-package": "Common"
    },
    "ResourceIdentifier": {
      "title": "ResourceIdentifier",
      "type": "object",
      "properties": {
        "typeId": {
          "title": "typeId",
          "$ref": "#/definitions/ReferenceTypeId"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "key": {
          "title": "key",
          "type": "string"
        }
      },
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#resourceidentifier"
    },
    "ScopedPrice": {
      "title": "ScopedPrice",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "value": {
          "title": "value",
          "$ref": "#/definitions/TypedMoney"
        },
        "currentValue": {
          "title": "currentValue",
          "$ref": "#/definitions/TypedMoney"
        },
        "country": {
          "title": "country",
          "$ref": "#/definitions/CountryCode"
        },
        "customerGroup": {
          "title": "customerGroup",
          "$ref": "#/definitions/CustomerGroupReference"
        },
        "channel": {
          "title": "channel",
          "$ref": "#/definitions/ChannelReference"
        },
        "validFrom": {
          "title": "validFrom",
          "type": "string",
          "format": "date-time"
        },
        "validUntil": {
          "title": "validUntil",
          "type": "string",
          "format": "date-time"
        },
        "discounted": {
          "title": "discounted",
          "$ref": "#/definitions/DiscountedPrice"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        }
      },
      "required": [
        "id",
        "value",
        "currentValue"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#scopedprice"
    },
    "TypedMoney": {
      "title": "TypedMoney",
      "discriminator": "type",
      "allOf": [
        {
          "$ref": "#/definitions/Money"
        },
        {
          "properties": {
            "type": {
              "title": "type",
              "$ref": "#/definitions/MoneyType"
            },
            "fractionDigits": {
              "title": "fractionDigits",
              "maximum": 12,
              "format": "int32",
              "type": "number"
            }
          },
          "required": [
            "type",
            "fractionDigits"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "CustomObject": {
      "title": "CustomObject",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "container": {
              "title": "container",
              "type": "string"
            },
            "key": {
              "title": "key",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "container",
            "key",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomObject",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#customobject"
    },
    "CustomObjectDraft": {
      "title": "CustomObjectDraft",
      "type": "object",
      "properties": {
        "container": {
          "title": "container",
          "type": "string"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "value": {
          "title": "value",
          "type": "string"
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        }
      },
      "required": [
        "container",
        "key",
        "value"
      ],
      "x-annotation-package": "CustomObject",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#create-a-customobject"
    },
    "CustomObjectPagedQueryResponse": {
      "title": "CustomObjectPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomObject"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomObject"
    },
    "CustomObjectReference": {
      "title": "CustomObjectReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/CustomObject"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomObject",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference-types"
    },
    "CustomerGroup": {
      "title": "CustomerGroup",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup",
      "x-annotation-updateType": "CustomerGroupUpdate"
    },
    "CustomerGroupChangeNameAction": {
      "title": "CustomerGroupChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerGroupUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#change-name"
    },
    "CustomerGroupDraft": {
      "title": "CustomerGroupDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "groupName": {
          "title": "groupName",
          "type": "string"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        }
      },
      "required": [
        "groupName"
      ],
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#create-a-customergroup"
    },
    "CustomerGroupPagedQueryResponse": {
      "title": "CustomerGroupPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerGroup"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomerGroup"
    },
    "CustomerGroupReference": {
      "title": "CustomerGroupReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/CustomerGroup"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup"
    },
    "CustomerGroupSetKeyAction": {
      "title": "CustomerGroupSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerGroupUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-key"
    },
    "CustomerGroupUpdate": {
      "title": "CustomerGroupUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerGroupUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "CustomerGroup"
    },
    "CustomerGroupUpdateAction": {
      "title": "CustomerGroupUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "CustomerGroup"
    },
    "AnonymousCartSignInMode": {
      "title": "AnonymousCartSignInMode",
      "enum": [
        "MergeWithExistingCustomerCart",
        "UseAsNewActiveCustomerCart"
      ],
      "type": "string",
      "x-annotation-package": "Customer"
    },
    "Customer": {
      "title": "Customer",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "customerNumber": {
              "title": "customerNumber",
              "type": "string"
            },
            "email": {
              "title": "email",
              "type": "string"
            },
            "password": {
              "title": "password",
              "type": "string"
            },
            "firstName": {
              "title": "firstName",
              "type": "string"
            },
            "lastName": {
              "title": "lastName",
              "type": "string"
            },
            "middleName": {
              "title": "middleName",
              "type": "string"
            },
            "title": {
              "title": "title",
              "type": "string"
            },
            "dateOfBirth": {
              "title": "dateOfBirth",
              "type": "string",
              "format": "date"
            },
            "companyName": {
              "title": "companyName",
              "type": "string"
            },
            "vatId": {
              "title": "vatId",
              "type": "string"
            },
            "addresses": {
              "title": "addresses",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            },
            "defaultShippingAddressId": {
              "title": "defaultShippingAddressId",
              "type": "string"
            },
            "shippingAddressIds": {
              "title": "shippingAddressIds",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultBillingAddressId": {
              "title": "defaultBillingAddressId",
              "type": "string"
            },
            "billingAddressIds": {
              "title": "billingAddressIds",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isEmailVerified": {
              "title": "isEmailVerified",
              "type": "boolean"
            },
            "externalId": {
              "title": "externalId",
              "type": "string"
            },
            "customerGroup": {
              "title": "customerGroup",
              "$ref": "#/definitions/CustomerGroupReference"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "locale": {
              "title": "locale",
              "type": "string"
            },
            "salutation": {
              "title": "salutation",
              "type": "string"
            },
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "email",
            "password",
            "addresses",
            "isEmailVerified"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer",
      "x-annotation-updateType": "CustomerUpdate"
    },
    "CustomerAddAddressAction": {
      "title": "CustomerAddAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-address"
    },
    "CustomerAddBillingAddressIdAction": {
      "title": "CustomerAddBillingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            }
          },
          "required": [
            "addressId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerAddShippingAddressIdAction": {
      "title": "CustomerAddShippingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            }
          },
          "required": [
            "addressId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerChangeAddressAction": {
      "title": "CustomerChangeAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            },
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "addressId",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-address"
    },
    "CustomerChangeEmailAction": {
      "title": "CustomerChangeEmailAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "email": {
              "title": "email",
              "type": "string"
            }
          },
          "required": [
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-email"
    },
    "CustomerChangePassword": {
      "title": "CustomerChangePassword",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "currentPassword": {
          "title": "currentPassword",
          "type": "string"
        },
        "newPassword": {
          "title": "newPassword",
          "type": "string"
        }
      },
      "required": [
        "id",
        "version",
        "currentPassword",
        "newPassword"
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerCreateEmailToken": {
      "title": "CustomerCreateEmailToken",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "ttlMinutes": {
          "title": "ttlMinutes",
          "format": "int64",
          "type": "number"
        }
      },
      "required": [
        "id",
        "ttlMinutes"
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerCreatePasswordResetToken": {
      "title": "CustomerCreatePasswordResetToken",
      "type": "object",
      "properties": {
        "email": {
          "title": "email",
          "type": "string"
        }
      },
      "required": [
        "email"
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerDraft": {
      "title": "CustomerDraft",
      "type": "object",
      "properties": {
        "customerNumber": {
          "title": "customerNumber",
          "type": "string"
        },
        "email": {
          "title": "email",
          "type": "string"
        },
        "password": {
          "title": "password",
          "type": "string"
        },
        "firstName": {
          "title": "firstName",
          "type": "string"
        },
        "lastName": {
          "title": "lastName",
          "type": "string"
        },
        "middleName": {
          "title": "middleName",
          "type": "string"
        },
        "title": {
          "title": "title",
          "type": "string"
        },
        "anonymousCartId": {
          "title": "anonymousCartId",
          "type": "string"
        },
        "anonymousId": {
          "title": "anonymousId",
          "type": "string"
        },
        "dateOfBirth": {
          "title": "dateOfBirth",
          "type": "string",
          "format": "date"
        },
        "companyName": {
          "title": "companyName",
          "type": "string"
        },
        "vatId": {
          "title": "vatId",
          "type": "string"
        },
        "addresses": {
          "title": "addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "defaultShippingAddress": {
          "title": "defaultShippingAddress",
          "format": "int64",
          "type": "number"
        },
        "shippingAddresses": {
          "title": "shippingAddresses",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "defaultBillingAddress": {
          "title": "defaultBillingAddress",
          "format": "int64",
          "type": "number"
        },
        "billingAddresses": {
          "title": "billingAddresses",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "isEmailVerified": {
          "title": "isEmailVerified",
          "type": "boolean"
        },
        "externalId": {
          "title": "externalId",
          "type": "string"
        },
        "customerGroup": {
          "title": "customerGroup",
          "$ref": "#/definitions/CustomerGroupReference"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "locale": {
          "title": "locale",
          "type": "string"
        },
        "salutation": {
          "title": "salutation",
          "type": "string"
        },
        "key": {
          "title": "key",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customerdraft"
    },
    "CustomerEmailVerify": {
      "title": "CustomerEmailVerify",
      "type": "object",
      "properties": {
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "tokenValue": {
          "title": "tokenValue",
          "type": "string"
        }
      },
      "required": [
        "tokenValue"
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerPagedQueryResponse": {
      "title": "CustomerPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerReference": {
      "title": "CustomerReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Customer"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer"
    },
    "CustomerRemoveAddressAction": {
      "title": "CustomerRemoveAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            }
          },
          "required": [
            "addressId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-address"
    },
    "CustomerRemoveBillingAddressIdAction": {
      "title": "CustomerRemoveBillingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            }
          },
          "required": [
            "addressId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerRemoveShippingAddressIdAction": {
      "title": "CustomerRemoveShippingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            }
          },
          "required": [
            "addressId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerResetPassword": {
      "title": "CustomerResetPassword",
      "type": "object",
      "properties": {
        "tokenValue": {
          "title": "tokenValue",
          "type": "string"
        },
        "newPassword": {
          "title": "newPassword",
          "type": "string"
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        }
      },
      "required": [
        "tokenValue",
        "newPassword"
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerSetCompanyNameAction": {
      "title": "CustomerSetCompanyNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "companyName": {
              "title": "companyName",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-company-name"
    },
    "CustomerSetCustomFieldAction": {
      "title": "CustomerSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerSetCustomTypeAction": {
      "title": "CustomerSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            },
            "fields": {
              "title": "fields",
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerSetCustomerGroupAction": {
      "title": "CustomerSetCustomerGroupAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "customerGroup": {
              "title": "customerGroup",
              "$ref": "#/definitions/CustomerGroupReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customergroup"
    },
    "CustomerSetCustomerNumberAction": {
      "title": "CustomerSetCustomerNumberAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "customerNumber": {
              "title": "customerNumber",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customer-number"
    },
    "CustomerSetDateOfBirthAction": {
      "title": "CustomerSetDateOfBirthAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "dateOfBirth": {
              "title": "dateOfBirth",
              "type": "string",
              "format": "date"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-date-of-birth"
    },
    "CustomerSetDefaultBillingAddressAction": {
      "title": "CustomerSetDefaultBillingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-billing-address"
    },
    "CustomerSetDefaultShippingAddressAction": {
      "title": "CustomerSetDefaultShippingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "addressId": {
              "title": "addressId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-shipping-address"
    },
    "CustomerSetExternalIdAction": {
      "title": "CustomerSetExternalIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "externalId": {
              "title": "externalId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-external-id"
    },
    "CustomerSetFirstNameAction": {
      "title": "CustomerSetFirstNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "firstName": {
              "title": "firstName",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-first-name"
    },
    "CustomerSetKeyAction": {
      "title": "CustomerSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-key"
    },
    "CustomerSetLastNameAction": {
      "title": "CustomerSetLastNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "lastName": {
              "title": "lastName",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-last-name"
    },
    "CustomerSetLocaleAction": {
      "title": "CustomerSetLocaleAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "locale": {
              "title": "locale",
              "$ref": "#/definitions/Locale"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerSetMiddleNameAction": {
      "title": "CustomerSetMiddleNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "middleName": {
              "title": "middleName",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-middle-name"
    },
    "CustomerSetSalutationAction": {
      "title": "CustomerSetSalutationAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "salutation": {
              "title": "salutation",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-salutation"
    },
    "CustomerSetTitleAction": {
      "title": "CustomerSetTitleAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "title": {
              "title": "title",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-title"
    },
    "CustomerSetVatIdAction": {
      "title": "CustomerSetVatIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "vatId": {
              "title": "vatId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-vat-id"
    },
    "CustomerSignInResult": {
      "title": "CustomerSignInResult",
      "type": "object",
      "properties": {
        "customer": {
          "title": "customer",
          "$ref": "#/definitions/Customer"
        },
        "cart": {
          "title": "cart",
          "type": "object"
        }
      },
      "required": [
        "customer"
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customersigninresult"
    },
    "CustomerSignin": {
      "title": "CustomerSignin",
      "type": "object",
      "properties": {
        "email": {
          "title": "email",
          "type": "string"
        },
        "password": {
          "title": "password",
          "type": "string"
        },
        "anonymousCartId": {
          "title": "anonymousCartId",
          "type": "string"
        },
        "anonymousCartSignInMode": {
          "title": "anonymousCartSignInMode",
          "$ref": "#/definitions/AnonymousCartSignInMode"
        },
        "anonymousId": {
          "title": "anonymousId",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerToken": {
      "title": "CustomerToken",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedAt": {
          "title": "lastModifiedAt",
          "type": "string",
          "format": "date-time"
        },
        "customerId": {
          "title": "customerId",
          "type": "string"
        },
        "expiresAt": {
          "title": "expiresAt",
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "title": "value",
          "type": "string"
        }
      },
      "required": [
        "id",
        "createdAt",
        "customerId",
        "expiresAt",
        "value"
      ],
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customertoken"
    },
    "CustomerUpdate": {
      "title": "CustomerUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Customer"
    },
    "CustomerUpdateAction": {
      "title": "CustomerUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Customer"
    },
    "DiscountCode": {
      "title": "DiscountCode",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "code": {
              "title": "code",
              "type": "string"
            },
            "cartDiscounts": {
              "title": "cartDiscounts",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountReference"
              }
            },
            "cartPredicate": {
              "title": "cartPredicate",
              "type": "string"
            },
            "isActive": {
              "title": "isActive",
              "type": "boolean"
            },
            "references": {
              "title": "references",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "maxApplications": {
              "title": "maxApplications",
              "format": "int64",
              "type": "number"
            },
            "maxApplicationsPerCustomer": {
              "title": "maxApplicationsPerCustomer",
              "format": "int64",
              "type": "number"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "groups": {
              "title": "groups",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "validFrom": {
              "title": "validFrom",
              "type": "string",
              "format": "date-time"
            },
            "validUntil": {
              "title": "validUntil",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "code",
            "cartDiscounts",
            "isActive",
            "references"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode",
      "x-annotation-updateType": "DiscountCodeUpdate"
    },
    "DiscountCodeChangeCartDiscountsAction": {
      "title": "DiscountCodeChangeCartDiscountsAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "cartDiscounts": {
              "title": "cartDiscounts",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            }
          },
          "required": [
            "cartDiscounts"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-cartdiscounts"
    },
    "DiscountCodeChangeGroupsAction": {
      "title": "DiscountCodeChangeGroupsAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "groups": {
              "title": "groups",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "groups"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-groups"
    },
    "DiscountCodeChangeIsActiveAction": {
      "title": "DiscountCodeChangeIsActiveAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "isActive": {
              "title": "isActive",
              "type": "boolean"
            }
          },
          "required": [
            "isActive"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-isactive"
    },
    "DiscountCodeDraft": {
      "title": "DiscountCodeDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "code": {
          "title": "code",
          "type": "string"
        },
        "cartDiscounts": {
          "title": "cartDiscounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartDiscountReference"
          }
        },
        "cartPredicate": {
          "title": "cartPredicate",
          "type": "string"
        },
        "isActive": {
          "title": "isActive",
          "type": "boolean"
        },
        "maxApplications": {
          "title": "maxApplications",
          "format": "int64",
          "type": "number"
        },
        "maxApplicationsPerCustomer": {
          "title": "maxApplicationsPerCustomer",
          "format": "int64",
          "type": "number"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        },
        "groups": {
          "title": "groups",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validFrom": {
          "title": "validFrom",
          "type": "string",
          "format": "date-time"
        },
        "validUntil": {
          "title": "validUntil",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "code",
        "cartDiscounts"
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcodedraft"
    },
    "DiscountCodePagedQueryResponse": {
      "title": "DiscountCodePagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCode"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode"
    },
    "DiscountCodeReference": {
      "title": "DiscountCodeReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode"
    },
    "DiscountCodeSetCartPredicateAction": {
      "title": "DiscountCodeSetCartPredicateAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "cartPredicate": {
              "title": "cartPredicate",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-cart-predicate"
    },
    "DiscountCodeSetDescriptionAction": {
      "title": "DiscountCodeSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-description"
    },
    "DiscountCodeSetMaxApplicationsAction": {
      "title": "DiscountCodeSetMaxApplicationsAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "maxApplications": {
              "title": "maxApplications",
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications"
    },
    "DiscountCodeSetMaxApplicationsPerCustomerAction": {
      "title": "DiscountCodeSetMaxApplicationsPerCustomerAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "maxApplicationsPerCustomer": {
              "title": "maxApplicationsPerCustomer",
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications-per-customer"
    },
    "DiscountCodeSetNameAction": {
      "title": "DiscountCodeSetNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-name"
    },
    "DiscountCodeSetValidFromAction": {
      "title": "DiscountCodeSetValidFromAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "validFrom": {
              "title": "validFrom",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validfrom"
    },
    "DiscountCodeSetValidUntilAction": {
      "title": "DiscountCodeSetValidUntilAction",
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "validUntil": {
              "title": "validUntil",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validuntil"
    },
    "DiscountCodeUpdate": {
      "title": "DiscountCodeUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCodeUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "DiscountCode"
    },
    "DiscountCodeUpdateAction": {
      "title": "DiscountCodeUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "DiscountCode"
    },
    "AccessDeniedError": {
      "title": "AccessDeniedError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "ConcurrentModificationError": {
      "title": "ConcurrentModificationError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "currentVersion": {
              "title": "currentVersion",
              "format": "int64",
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "DiscountCodeNonApplicableError": {
      "title": "DiscountCodeNonApplicableError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "DuplicateAttributeValueError": {
      "title": "DuplicateAttributeValueError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "attribute": {
              "title": "attribute",
              "$ref": "#/definitions/Attribute"
            }
          },
          "required": [
            "attribute"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "DuplicateAttributeValuesError": {
      "title": "DuplicateAttributeValuesError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "attributes": {
              "title": "attributes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          },
          "required": [
            "attributes"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "DuplicateFieldError": {
      "title": "DuplicateFieldError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "field": {
              "title": "field",
              "type": "string"
            },
            "duplicateValue": {
              "title": "duplicateValue",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "DuplicatePriceScopeError": {
      "title": "DuplicatePriceScopeError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "conflictingPrices": {
              "title": "conflictingPrices",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              }
            }
          },
          "required": [
            "conflictingPrices"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "DuplicateVariantValuesError": {
      "title": "DuplicateVariantValuesError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "variantValues": {
              "title": "variantValues",
              "$ref": "#/definitions/VariantValues"
            }
          },
          "required": [
            "variantValues"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "ErrorObject": {
      "title": "ErrorObject",
      "discriminator": "code",
      "type": "object",
      "properties": {
        "code": {
          "title": "code",
          "type": "string"
        },
        "message": {
          "title": "message",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "x-annotation-package": "Error"
    },
    "ErrorResponse": {
      "title": "ErrorResponse",
      "type": "object",
      "properties": {
        "statusCode": {
          "title": "statusCode",
          "type": "integer"
        },
        "message": {
          "title": "message",
          "type": "string"
        },
        "error": {
          "title": "error",
          "type": "string"
        },
        "error_description": {
          "title": "error_description",
          "type": "string"
        },
        "errors": {
          "title": "errors",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "statusCode",
        "message"
      ],
      "x-annotation-package": "Error"
    },
    "InsufficientScopeError": {
      "title": "InsufficientScopeError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "InvalidCredentialsError": {
      "title": "InvalidCredentialsError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "InvalidCurrentPasswordError": {
      "title": "InvalidCurrentPasswordError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "InvalidFieldError": {
      "title": "InvalidFieldError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "field": {
              "title": "field",
              "type": "string"
            },
            "invalidValue": {
              "title": "invalidValue",
              "type": "string"
            },
            "allowedValues": {
              "title": "allowedValues",
              "type": "array"
            }
          },
          "required": [
            "field",
            "invalidValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "InvalidOperationError": {
      "title": "InvalidOperationError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "InvalidSubjectError": {
      "title": "InvalidSubjectError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "InvalidTokenError": {
      "title": "InvalidTokenError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "OutOfStockError": {
      "title": "OutOfStockError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "lineItems": {
              "title": "lineItems",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "skus": {
              "title": "skus",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "lineItems",
            "skus"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "PriceChangedError": {
      "title": "PriceChangedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "lineItems": {
              "title": "lineItems",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "shipping": {
              "title": "shipping",
              "type": "boolean"
            }
          },
          "required": [
            "lineItems",
            "shipping"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "RequiredFieldError": {
      "title": "RequiredFieldError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "field": {
              "title": "field",
              "type": "string"
            }
          },
          "required": [
            "field"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Error"
    },
    "ResourceNotFoundError": {
      "title": "ResourceNotFoundError",
      "$ref": "#/definitions/ErrorObject",
      "x-annotation-package": "Error"
    },
    "VariantValues": {
      "title": "VariantValues",
      "type": "object",
      "properties": {
        "sku": {
          "title": "sku",
          "type": "string"
        },
        "prices": {
          "title": "prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "attributes": {
          "title": "attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        }
      },
      "required": [
        "prices",
        "attributes"
      ],
      "x-annotation-package": "Error"
    },
    "AzureFunctionsAuthentication": {
      "title": "AzureFunctionsAuthentication",
      "allOf": [
        {
          "$ref": "#/definitions/HttpDestinationAuthentication"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension"
    },
    "Extension": {
      "title": "Extension",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "destination": {
              "title": "destination",
              "$ref": "#/definitions/ExtensionDestination"
            },
            "triggers": {
              "title": "triggers",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionTrigger"
              }
            }
          },
          "required": [
            "destination",
            "triggers"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension",
      "x-annotation-updateType": "ExtensionUpdate"
    },
    "ExtensionAction": {
      "title": "ExtensionAction",
      "enum": [
        "Create",
        "Update"
      ],
      "type": "string",
      "x-annotation-package": "Extension"
    },
    "ExtensionChangeDestinationAction": {
      "title": "ExtensionChangeDestinationAction",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUpdateAction"
        },
        {
          "properties": {
            "destination": {
              "title": "destination",
              "$ref": "#/definitions/ExtensionDestination"
            }
          },
          "required": [
            "destination"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionChangeTriggersAction": {
      "title": "ExtensionChangeTriggersAction",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUpdateAction"
        },
        {
          "properties": {
            "messages": {
              "title": "messages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionTrigger"
              }
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionDestination": {
      "title": "ExtensionDestination",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionDraft": {
      "title": "ExtensionDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "destination": {
          "title": "destination",
          "$ref": "#/definitions/ExtensionDestination"
        },
        "triggers": {
          "title": "triggers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionTrigger"
          }
        }
      },
      "required": [
        "destination",
        "triggers"
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionHttpDestination": {
      "title": "ExtensionHttpDestination",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionDestination"
        },
        {
          "properties": {
            "url": {
              "title": "url",
              "type": "string"
            },
            "authentication": {
              "title": "authentication",
              "$ref": "#/definitions/HttpDestinationAuthentication"
            }
          },
          "required": [
            "url"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionInput": {
      "title": "ExtensionInput",
      "type": "object",
      "properties": {
        "action": {
          "title": "action",
          "$ref": "#/definitions/ExtensionAction"
        },
        "resource": {
          "title": "resource",
          "$ref": "#/definitions/Reference"
        }
      },
      "required": [
        "action",
        "resource"
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionPagedQueryResponse": {
      "title": "ExtensionPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Extension"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionResourceTypeId": {
      "title": "ExtensionResourceTypeId",
      "enum": [
        "cart",
        "order",
        "payment",
        "customer"
      ],
      "type": "string",
      "x-annotation-package": "Extension"
    },
    "ExtensionSetKeyAction": {
      "title": "ExtensionSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionTrigger": {
      "title": "ExtensionTrigger",
      "type": "object",
      "properties": {
        "resourceTypeId": {
          "title": "resourceTypeId",
          "$ref": "#/definitions/ExtensionResourceTypeId"
        },
        "actions": {
          "title": "actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionAction"
          }
        }
      },
      "required": [
        "resourceTypeId",
        "actions"
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionUpdate": {
      "title": "ExtensionUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionUpdateAction": {
      "title": "ExtensionUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Extension"
    },
    "HttpDestinationAuthentication": {
      "title": "HttpDestinationAuthentication",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Extension"
    },
    "InventoryAddQuantityAction": {
      "title": "InventoryAddQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "quantity": {
              "title": "quantity",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#add-quantity"
    },
    "InventoryChangeQuantityAction": {
      "title": "InventoryChangeQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "quantity": {
              "title": "quantity",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#change-quantity"
    },
    "InventoryEntry": {
      "title": "InventoryEntry",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "supplyChannel": {
              "title": "supplyChannel",
              "$ref": "#/definitions/ChannelReference"
            },
            "quantityOnStock": {
              "title": "quantityOnStock",
              "format": "int64",
              "type": "number"
            },
            "availableQuantity": {
              "title": "availableQuantity",
              "format": "int64",
              "type": "number"
            },
            "restockableInDays": {
              "title": "restockableInDays",
              "format": "int64",
              "type": "number"
            },
            "expectedDelivery": {
              "title": "expectedDelivery",
              "type": "string",
              "format": "date-time"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            }
          },
          "required": [
            "sku",
            "quantityOnStock",
            "availableQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentry",
      "x-annotation-updateType": "InventoryEntryUpdate"
    },
    "InventoryEntryDraft": {
      "title": "InventoryEntryDraft",
      "type": "object",
      "properties": {
        "sku": {
          "title": "sku",
          "type": "string"
        },
        "supplyChannel": {
          "title": "supplyChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "quantityOnStock": {
          "title": "quantityOnStock",
          "format": "int64",
          "type": "number"
        },
        "restockableInDays": {
          "title": "restockableInDays",
          "format": "int64",
          "type": "number"
        },
        "expectedDelivery": {
          "title": "expectedDelivery",
          "type": "string",
          "format": "date-time"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        }
      },
      "required": [
        "sku",
        "quantityOnStock"
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentrydraft"
    },
    "InventoryEntryReference": {
      "title": "InventoryEntryReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/InventoryEntry"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory"
    },
    "InventoryEntryUpdate": {
      "title": "InventoryEntryUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryEntryUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory"
    },
    "InventoryEntryUpdateAction": {
      "title": "InventoryEntryUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Inventory"
    },
    "InventoryPagedQueryResponse": {
      "title": "InventoryPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryEntry"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory"
    },
    "InventoryRemoveQuantityAction": {
      "title": "InventoryRemoveQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "quantity": {
              "title": "quantity",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#remove-quantity"
    },
    "InventorySetCustomFieldAction": {
      "title": "InventorySetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory"
    },
    "InventorySetCustomTypeAction": {
      "title": "InventorySetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            },
            "fields": {
              "title": "fields",
              "type": "object"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory"
    },
    "InventorySetExpectedDeliveryAction": {
      "title": "InventorySetExpectedDeliveryAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "expectedDelivery": {
              "title": "expectedDelivery",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-expecteddelivery"
    },
    "InventorySetRestockableInDaysAction": {
      "title": "InventorySetRestockableInDaysAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "restockableInDays": {
              "title": "restockableInDays",
              "format": "int64",
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-restockableindays"
    },
    "InventorySetSupplyChannelAction": {
      "title": "InventorySetSupplyChannelAction",
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "supplyChannel": {
              "title": "supplyChannel",
              "$ref": "#/definitions/ChannelReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-supplychannel"
    },
    "MyCartDraft": {
      "title": "MyCartDraft",
      "type": "object",
      "properties": {
        "currency": {
          "title": "currency",
          "$ref": "#/definitions/CurrencyCode"
        },
        "customerEmail": {
          "title": "customerEmail",
          "type": "string"
        },
        "country": {
          "title": "country",
          "type": "string"
        },
        "inventoryMode": {
          "title": "inventoryMode",
          "$ref": "#/definitions/InventoryMode"
        },
        "lineItems": {
          "title": "lineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyLineItemDraft"
          }
        },
        "shippingAddress": {
          "title": "shippingAddress",
          "$ref": "#/definitions/Address"
        },
        "billingAddress": {
          "title": "billingAddress",
          "$ref": "#/definitions/Address"
        },
        "shippingMethod": {
          "title": "shippingMethod",
          "$ref": "#/definitions/ShippingMethodReference"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "locale": {
          "title": "locale",
          "type": "string"
        },
        "taxMode": {
          "title": "taxMode",
          "$ref": "#/definitions/TaxMode"
        },
        "deleteDaysAfterLastModification": {
          "title": "deleteDaysAfterLastModification",
          "format": "int64",
          "type": "number"
        }
      },
      "required": [
        "currency"
      ],
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mycartdraft"
    },
    "MyCustomerDraft": {
      "title": "MyCustomerDraft",
      "type": "object",
      "properties": {
        "email": {
          "title": "email",
          "type": "string"
        },
        "password": {
          "title": "password",
          "type": "string"
        },
        "firstName": {
          "title": "firstName",
          "type": "string"
        },
        "lastName": {
          "title": "lastName",
          "type": "string"
        },
        "middleName": {
          "title": "middleName",
          "type": "string"
        },
        "title": {
          "title": "title",
          "type": "string"
        },
        "dateOfBirth": {
          "title": "dateOfBirth",
          "type": "string",
          "format": "date"
        },
        "companyName": {
          "title": "companyName",
          "type": "string"
        },
        "vatId": {
          "title": "vatId",
          "type": "string"
        },
        "addresses": {
          "title": "addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "defaultShippingAddress": {
          "title": "defaultShippingAddress",
          "format": "int64",
          "type": "number"
        },
        "defaultBillingAddress": {
          "title": "defaultBillingAddress",
          "format": "int64",
          "type": "number"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        },
        "locale": {
          "title": "locale",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#mycustomerdraft"
    },
    "MyLineItemDraft": {
      "title": "MyLineItemDraft",
      "type": "object",
      "properties": {
        "productId": {
          "title": "productId",
          "type": "string"
        },
        "variantId": {
          "title": "variantId",
          "format": "int64",
          "type": "number"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "supplyChannel": {
          "title": "supplyChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "distributionChannel": {
          "title": "distributionChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        }
      },
      "required": [
        "productId",
        "variantId",
        "quantity"
      ],
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mylineitemdraft"
    },
    "MyOrderFromCartDraft": {
      "title": "MyOrderFromCartDraft",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        }
      },
      "required": [
        "id",
        "version"
      ],
      "x-annotation-package": "Me"
    },
    "CategoryCreatedMessage": {
      "title": "CategoryCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "category": {
              "title": "category",
              "$ref": "#/definitions/Category"
            }
          },
          "required": [
            "category"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categorycreated-message"
    },
    "CategorySlugChangedMessage": {
      "title": "CategorySlugChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categoryslugchanged-message"
    },
    "CustomLineItemStateTransitionMessage": {
      "title": "CustomLineItemStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "transitionDate": {
              "title": "transitionDate",
              "type": "string",
              "format": "date-time"
            },
            "quantity": {
              "title": "quantity",
              "format": "int64",
              "type": "number"
            },
            "fromState": {
              "title": "fromState",
              "$ref": "#/definitions/StateReference"
            },
            "toState": {
              "title": "toState",
              "$ref": "#/definitions/StateReference"
            }
          },
          "required": [
            "customLineItemId",
            "transitionDate",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customlineitemstatetransition-message"
    },
    "CustomerAddressAddedMessage": {
      "title": "CustomerAddressAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressadded-message"
    },
    "CustomerAddressChangedMessage": {
      "title": "CustomerAddressChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddresschanged-message"
    },
    "CustomerAddressRemovedMessage": {
      "title": "CustomerAddressRemovedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressremoved-message"
    },
    "CustomerCompanyNameSetMessage": {
      "title": "CustomerCompanyNameSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "companyName": {
              "title": "companyName",
              "type": "string"
            }
          },
          "required": [
            "companyName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercompanynameset-message"
    },
    "CustomerCreatedMessage": {
      "title": "CustomerCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "customer": {
              "title": "customer",
              "$ref": "#/definitions/Customer"
            }
          },
          "required": [
            "customer"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercreated-message"
    },
    "CustomerDateOfBirthSetMessage": {
      "title": "CustomerDateOfBirthSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "dateOfBirth": {
              "title": "dateOfBirth",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "dateOfBirth"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerdateofbirthset-message"
    },
    "CustomerEmailChangedMessage": {
      "title": "CustomerEmailChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "email": {
              "title": "email",
              "type": "string"
            }
          },
          "required": [
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailchanged-message"
    },
    "CustomerEmailVerifiedMessage": {
      "title": "CustomerEmailVerifiedMessage",
      "$ref": "#/definitions/Message",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailverified-message"
    },
    "CustomerGroupSetMessage": {
      "title": "CustomerGroupSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "customerGroup": {
              "title": "customerGroup",
              "$ref": "#/definitions/CustomerGroupReference"
            }
          },
          "required": [
            "customerGroup"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customergroupset-message"
    },
    "DeliveryAddedMessage": {
      "title": "DeliveryAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "delivery": {
              "title": "delivery",
              "$ref": "#/definitions/Delivery"
            }
          },
          "required": [
            "delivery"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryadded-message"
    },
    "DeliveryAddressSetMessage": {
      "title": "DeliveryAddressSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddressset-message"
    },
    "DeliveryItemsUpdatedMessage": {
      "title": "DeliveryItemsUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "items": {
              "title": "items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              }
            }
          },
          "required": [
            "deliveryId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "DeliveryRemovedMessage": {
      "title": "DeliveryRemovedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "delivery": {
              "title": "delivery",
              "$ref": "#/definitions/Delivery"
            }
          },
          "required": [
            "delivery"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "InventoryEntryDeletedMessage": {
      "title": "InventoryEntryDeletedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "supplyChannel": {
              "title": "supplyChannel",
              "$ref": "#/definitions/ChannelReference"
            }
          },
          "required": [
            "sku",
            "supplyChannel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrydeleted-message"
    },
    "LineItemStateTransitionMessage": {
      "title": "LineItemStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "transitionDate": {
              "title": "transitionDate",
              "type": "string",
              "format": "date-time"
            },
            "quantity": {
              "title": "quantity",
              "format": "int64",
              "type": "number"
            },
            "fromState": {
              "title": "fromState",
              "$ref": "#/definitions/StateReference"
            },
            "toState": {
              "title": "toState",
              "$ref": "#/definitions/StateReference"
            }
          },
          "required": [
            "lineItemId",
            "transitionDate",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#lineitemstatetransition-message"
    },
    "Message": {
      "title": "Message",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "createdAt": {
          "title": "createdAt",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedAt": {
          "title": "lastModifiedAt",
          "type": "string",
          "format": "date-time"
        },
        "sequenceNumber": {
          "title": "sequenceNumber",
          "format": "int64",
          "type": "number"
        },
        "resource": {
          "title": "resource",
          "$ref": "#/definitions/Reference"
        },
        "resourceVersion": {
          "title": "resourceVersion",
          "format": "int64",
          "type": "number"
        },
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "id",
        "version",
        "createdAt",
        "lastModifiedAt",
        "sequenceNumber",
        "resource",
        "resourceVersion",
        "type"
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#message"
    },
    "MessageConfiguration": {
      "title": "MessageConfiguration",
      "type": "object",
      "properties": {
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "x-annotation-package": "Message"
    },
    "MessagePagedQueryResponse": {
      "title": "MessagePagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Message"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "OrderBillingAddressSetMessage": {
      "title": "OrderBillingAddressSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderbillingaddressset-message"
    },
    "OrderCreatedMessage": {
      "title": "OrderCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "order": {
              "title": "order",
              "$ref": "#/definitions/Order"
            }
          },
          "required": [
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreated-message"
    },
    "OrderCustomerEmailSetMessage": {
      "title": "OrderCustomerEmailSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "email": {
              "title": "email",
              "type": "string"
            }
          },
          "required": [
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercustomeremailset-message"
    },
    "OrderImportedMessage": {
      "title": "OrderImportedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "order": {
              "title": "order",
              "$ref": "#/definitions/Order"
            }
          },
          "required": [
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderimported-message"
    },
    "OrderPaymentChangedMessage": {
      "title": "OrderPaymentChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "paymentState": {
              "title": "paymentState",
              "type": "string"
            }
          },
          "required": [
            "paymentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderpaymentstatechanged-message"
    },
    "OrderReturnInfoAddedMessage": {
      "title": "OrderReturnInfoAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "returnInfo": {
              "title": "returnInfo",
              "$ref": "#/definitions/ReturnInfo"
            }
          },
          "required": [
            "returnInfo"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "OrderReturnShipmentStateChangedMessage": {
      "title": "OrderReturnShipmentStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "returnItemId": {
              "title": "returnItemId",
              "type": "string"
            },
            "returnShipmentState": {
              "title": "returnShipmentState",
              "$ref": "#/definitions/ReturnShipmentState"
            }
          },
          "required": [
            "returnItemId",
            "returnShipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "OrderShipmentStateChangedMessage": {
      "title": "OrderShipmentStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "shipmentState": {
              "title": "shipmentState",
              "$ref": "#/definitions/ShipmentState"
            }
          },
          "required": [
            "shipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "OrderShippingAddressSetMessage": {
      "title": "OrderShippingAddressSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordershippingaddressset-message"
    },
    "OrderStateChangedMessage": {
      "title": "OrderStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "orderState": {
              "title": "orderState",
              "type": "string"
            }
          },
          "required": [
            "orderState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatechanged-message"
    },
    "OrderStateTransitionMessage": {
      "title": "OrderStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "required": [
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatetransition-message"
    },
    "ParcelAddedToDeliveryMessage": {
      "title": "ParcelAddedToDeliveryMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "delivery": {
              "title": "delivery",
              "$ref": "#/definitions/Delivery"
            },
            "parcel": {
              "title": "parcel",
              "$ref": "#/definitions/Parcel"
            }
          },
          "required": [
            "delivery",
            "parcel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#parceladdedtodelivery-message"
    },
    "ParcelItemsUpdatedMessage": {
      "title": "ParcelItemsUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "parcelId": {
              "title": "parcelId",
              "type": "string"
            },
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "items": {
              "title": "items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              }
            }
          },
          "required": [
            "parcelId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "ParcelMeasurementsUpdatedMessage": {
      "title": "ParcelMeasurementsUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "parcelId": {
              "title": "parcelId",
              "type": "string"
            },
            "measurements": {
              "title": "measurements",
              "$ref": "#/definitions/ParcelMeasurements"
            }
          },
          "required": [
            "deliveryId",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "ParcelRemovedFromDeliveryMessage": {
      "title": "ParcelRemovedFromDeliveryMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "parcel": {
              "title": "parcel",
              "$ref": "#/definitions/Parcel"
            }
          },
          "required": [
            "deliveryId",
            "parcel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "ParcelTrackingDataUpdatedMessage": {
      "title": "ParcelTrackingDataUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "parcelId": {
              "title": "parcelId",
              "type": "string"
            },
            "trackingData": {
              "title": "trackingData",
              "$ref": "#/definitions/TrackingData"
            }
          },
          "required": [
            "deliveryId",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message"
    },
    "PaymentCreatedMessage": {
      "title": "PaymentCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "payment": {
              "title": "payment",
              "$ref": "#/definitions/Payment"
            }
          },
          "required": [
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentcreated-message"
    },
    "PaymentInteractionAddedMessage": {
      "title": "PaymentInteractionAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "interaction": {
              "title": "interaction",
              "$ref": "#/definitions/CustomFields"
            }
          },
          "required": [
            "interaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentinteractionadded-message"
    },
    "PaymentStatusInterfaceCodeSetMessage": {
      "title": "PaymentStatusInterfaceCodeSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "paymentId": {
              "title": "paymentId",
              "type": "string"
            },
            "interfaceCode": {
              "title": "interfaceCode",
              "type": "string"
            }
          },
          "required": [
            "paymentId",
            "interfaceCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusinterfacecodeset-message"
    },
    "PaymentStatusStateTransitionMessage": {
      "title": "PaymentStatusStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "required": [
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusstatetransition-message"
    },
    "PaymentTransactionAddedMessage": {
      "title": "PaymentTransactionAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "transaction": {
              "title": "transaction",
              "$ref": "#/definitions/Transaction"
            }
          },
          "required": [
            "transaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionadded-message"
    },
    "PaymentTransactionStateChangedMessage": {
      "title": "PaymentTransactionStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "transactionId": {
              "title": "transactionId",
              "type": "string"
            },
            "state": {
              "title": "state",
              "$ref": "#/definitions/TransactionState"
            }
          },
          "required": [
            "transactionId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionstatechanged-message"
    },
    "ProductCreatedMessage": {
      "title": "ProductCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "productProjection": {
              "title": "productProjection",
              "$ref": "#/definitions/ProductProjection"
            }
          },
          "required": [
            "productProjection"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productcreated-message"
    },
    "ProductDeletedMessage": {
      "title": "ProductDeletedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "removedImageUrls": {
              "title": "removedImageUrls",
              "type": "array"
            },
            "currentProjection": {
              "title": "currentProjection",
              "$ref": "#/definitions/ProductProjection"
            }
          },
          "required": [
            "removedImageUrls",
            "currentProjection"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productdeleted-message"
    },
    "ProductImageAddedMessage": {
      "title": "ProductImageAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "variantId": {
              "title": "variantId",
              "format": "int64",
              "type": "number"
            },
            "image": {
              "title": "image",
              "$ref": "#/definitions/Image"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "variantId",
            "image",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productimageadded-message"
    },
    "ProductPublishedMessage": {
      "title": "ProductPublishedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "removedImageUrls": {
              "title": "removedImageUrls",
              "type": "array"
            },
            "productProjection": {
              "title": "productProjection",
              "$ref": "#/definitions/ProductProjection"
            },
            "scope": {
              "title": "scope",
              "$ref": "#/definitions/ProductPublishScope"
            }
          },
          "required": [
            "removedImageUrls",
            "productProjection",
            "scope"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productpublished-message"
    },
    "ProductRevertedStagedChangesMessage": {
      "title": "ProductRevertedStagedChangesMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "removedImageUrls": {
              "title": "removedImageUrls",
              "type": "array"
            }
          },
          "required": [
            "removedImageUrls"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productrevertedstagedchanges-message"
    },
    "ProductSlugChangedMessage": {
      "title": "ProductSlugChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productslugchanged-message"
    },
    "ProductStateTransitionMessage": {
      "title": "ProductStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "required": [
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productstatetransition-message"
    },
    "ProductUnpublishedMessage": {
      "title": "ProductUnpublishedMessage",
      "$ref": "#/definitions/Message",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productunpublished-message"
    },
    "ProductVariantDeletedMessage": {
      "title": "ProductVariantDeletedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "removedImageUrls": {
              "title": "removedImageUrls",
              "type": "array"
            },
            "variant": {
              "title": "variant",
              "$ref": "#/definitions/ProductVariant"
            }
          },
          "required": [
            "removedImageUrls",
            "variant"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantdeleted-message"
    },
    "ReviewCreatedMessage": {
      "title": "ReviewCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "review": {
              "title": "review",
              "$ref": "#/definitions/Review"
            }
          },
          "required": [
            "review"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewcreated-message"
    },
    "ReviewRatingSetMessage": {
      "title": "ReviewRatingSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "oldRating": {
              "title": "oldRating",
              "type": "number"
            },
            "newRating": {
              "title": "newRating",
              "type": "number"
            },
            "includedInStatistics": {
              "title": "includedInStatistics",
              "type": "boolean"
            },
            "target": {
              "title": "target",
              "$ref": "#/definitions/Reference"
            }
          },
          "required": [
            "oldRating",
            "newRating",
            "includedInStatistics",
            "target"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewratingset-message"
    },
    "ReviewStateTransitionMessage": {
      "title": "ReviewStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "oldState": {
              "title": "oldState",
              "$ref": "#/definitions/StateReference"
            },
            "newState": {
              "title": "newState",
              "$ref": "#/definitions/StateReference"
            },
            "oldIncludedInStatistics": {
              "title": "oldIncludedInStatistics",
              "type": "boolean"
            },
            "newIncludedInStatistics": {
              "title": "newIncludedInStatistics",
              "type": "boolean"
            },
            "target": {
              "title": "target",
              "$ref": "#/definitions/Reference"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "required": [
            "oldState",
            "newState",
            "oldIncludedInStatistics",
            "newIncludedInStatistics",
            "target",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewstatetransition-message"
    },
    "Delivery": {
      "title": "Delivery",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "type": "string",
          "format": "date-time"
        },
        "items": {
          "title": "items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryItem"
          }
        },
        "parcels": {
          "title": "parcels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parcel"
          }
        },
        "address": {
          "title": "address",
          "$ref": "#/definitions/Address"
        }
      },
      "required": [
        "id",
        "createdAt",
        "items",
        "parcels"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#delivery"
    },
    "DeliveryItem": {
      "title": "DeliveryItem",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        }
      },
      "required": [
        "id",
        "quantity"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#deliveryitem"
    },
    "ItemState": {
      "title": "ItemState",
      "type": "object",
      "properties": {
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "state": {
          "title": "state",
          "$ref": "#/definitions/StateReference"
        }
      },
      "required": [
        "quantity",
        "state"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#itemstate"
    },
    "LineItemImportDraft": {
      "title": "LineItemImportDraft",
      "type": "object",
      "properties": {
        "productId": {
          "title": "productId",
          "type": "string"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "variant": {
          "title": "variant",
          "$ref": "#/definitions/ProductVariantImportDraft"
        },
        "price": {
          "title": "price",
          "$ref": "#/definitions/Price"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "state": {
          "title": "state",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemState"
          }
        },
        "supplyChannel": {
          "title": "supplyChannel",
          "$ref": "#/definitions/ChannelReference"
        },
        "taxRate": {
          "title": "taxRate",
          "$ref": "#/definitions/TaxRate"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        }
      },
      "required": [
        "name",
        "variant",
        "price",
        "quantity"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#lineitemimportdraft"
    },
    "Order": {
      "title": "Order",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "completedAt": {
              "title": "completedAt",
              "type": "string",
              "format": "date-time"
            },
            "orderNumber": {
              "title": "orderNumber",
              "type": "string"
            },
            "customerId": {
              "title": "customerId",
              "type": "string"
            },
            "customerEmail": {
              "title": "customerEmail",
              "type": "string"
            },
            "anonymousId": {
              "title": "anonymousId",
              "type": "string"
            },
            "lineItems": {
              "title": "lineItems",
              "type": "array",
              "items": {
                "$ref": "#/definitions/LineItem"
              }
            },
            "customLineItems": {
              "title": "customLineItems",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomLineItem"
              }
            },
            "totalPrice": {
              "title": "totalPrice",
              "$ref": "#/definitions/Money"
            },
            "taxedPrice": {
              "title": "taxedPrice",
              "$ref": "#/definitions/TaxedPrice"
            },
            "shippingAddress": {
              "title": "shippingAddress",
              "$ref": "#/definitions/Address"
            },
            "billingAddress": {
              "title": "billingAddress",
              "$ref": "#/definitions/Address"
            },
            "taxMode": {
              "title": "taxMode",
              "$ref": "#/definitions/TaxMode"
            },
            "taxRoundingMode": {
              "title": "taxRoundingMode",
              "$ref": "#/definitions/RoundingMode"
            },
            "customerGroup": {
              "title": "customerGroup",
              "$ref": "#/definitions/CustomerGroupReference"
            },
            "country": {
              "title": "country",
              "type": "string"
            },
            "orderState": {
              "title": "orderState",
              "$ref": "#/definitions/OrderState"
            },
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "shipmentState": {
              "title": "shipmentState",
              "$ref": "#/definitions/ShipmentState"
            },
            "paymentState": {
              "title": "paymentState",
              "$ref": "#/definitions/PaymentState"
            },
            "shippingInfo": {
              "title": "shippingInfo",
              "$ref": "#/definitions/ShippingInfo"
            },
            "syncInfo": {
              "title": "syncInfo",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SyncInfo"
              }
            },
            "returnInfo": {
              "title": "returnInfo",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnInfo"
              }
            },
            "discountCodes": {
              "title": "discountCodes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCodeInfo"
              }
            },
            "lastMessageSequenceNumber": {
              "title": "lastMessageSequenceNumber",
              "format": "int64",
              "type": "number"
            },
            "cart": {
              "title": "cart",
              "$ref": "#/definitions/CartReference"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "paymentInfo": {
              "title": "paymentInfo",
              "$ref": "#/definitions/PaymentInfo"
            },
            "locale": {
              "title": "locale",
              "type": "string"
            },
            "inventoryMode": {
              "title": "inventoryMode",
              "$ref": "#/definitions/InventoryMode"
            },
            "origin": {
              "title": "origin",
              "$ref": "#/definitions/CartOrigin"
            },
            "taxCalculationMode": {
              "title": "taxCalculationMode",
              "$ref": "#/definitions/TaxCalculationMode"
            },
            "shippingRateInput": {
              "title": "shippingRateInput",
              "$ref": "#/definitions/ShippingRateInput"
            }
          },
          "required": [
            "lineItems",
            "customLineItems",
            "totalPrice",
            "orderState",
            "syncInfo",
            "lastMessageSequenceNumber",
            "origin"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order",
      "x-annotation-updateType": "OrderUpdate"
    },
    "OrderAddDeliveryAction": {
      "title": "OrderAddDeliveryAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "items": {
              "title": "items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              }
            },
            "parcels": {
              "title": "parcels",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Parcel"
              }
            },
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "items",
            "parcels"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-delivery"
    },
    "OrderAddParcelToDeliveryAction": {
      "title": "OrderAddParcelToDeliveryAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "measurements": {
              "title": "measurements",
              "$ref": "#/definitions/ParcelMeasurements"
            },
            "trackingData": {
              "title": "trackingData",
              "$ref": "#/definitions/TrackingData"
            },
            "items": {
              "title": "items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              }
            }
          },
          "required": [
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-parcel"
    },
    "OrderAddPaymentAction": {
      "title": "OrderAddPaymentAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "payment": {
              "title": "payment",
              "$ref": "#/definitions/PaymentReference"
            }
          },
          "required": [
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-payment"
    },
    "OrderAddReturnInfoAction": {
      "title": "OrderAddReturnInfoAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "items": {
              "title": "items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnItemDraft"
              }
            },
            "returnDate": {
              "title": "returnDate",
              "type": "string",
              "format": "date-time"
            },
            "returnTrackingId": {
              "title": "returnTrackingId",
              "type": "string"
            }
          },
          "required": [
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#addreturninfo"
    },
    "OrderChangeOrderStateAction": {
      "title": "OrderChangeOrderStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "orderState": {
              "title": "orderState",
              "$ref": "#/definitions/OrderState"
            }
          },
          "required": [
            "orderState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-orderstate"
    },
    "OrderChangePaymentStateAction": {
      "title": "OrderChangePaymentStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "paymentState": {
              "title": "paymentState",
              "$ref": "#/definitions/PaymentState"
            }
          },
          "required": [
            "paymentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-paymentstate"
    },
    "OrderChangeShipmentStateAction": {
      "title": "OrderChangeShipmentStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "shipmentState": {
              "title": "shipmentState",
              "$ref": "#/definitions/ShipmentState"
            }
          },
          "required": [
            "shipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-shipmentstate"
    },
    "OrderFromCartDraft": {
      "title": "OrderFromCartDraft",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "orderNumber": {
          "title": "orderNumber",
          "type": "string"
        },
        "paymentState": {
          "title": "paymentState",
          "$ref": "#/definitions/PaymentState"
        }
      },
      "required": [
        "id",
        "version"
      ],
      "x-annotation-package": "Order"
    },
    "OrderImportCustomLineItemStateAction": {
      "title": "OrderImportCustomLineItemStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "state": {
              "title": "state",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemState"
              }
            }
          },
          "required": [
            "customLineItemId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-customlineitems"
    },
    "OrderImportDraft": {
      "title": "OrderImportDraft",
      "type": "object",
      "properties": {
        "orderNumber": {
          "title": "orderNumber",
          "type": "string"
        },
        "customerId": {
          "title": "customerId",
          "type": "string"
        },
        "customerEmail": {
          "title": "customerEmail",
          "type": "string"
        },
        "lineItems": {
          "title": "lineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemImportDraft"
          }
        },
        "customLineItems": {
          "title": "customLineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomLineItemDraft"
          }
        },
        "totalPrice": {
          "title": "totalPrice",
          "$ref": "#/definitions/Money"
        },
        "taxedPrice": {
          "title": "taxedPrice",
          "$ref": "#/definitions/TaxedPrice"
        },
        "shippingAddress": {
          "title": "shippingAddress",
          "$ref": "#/definitions/Address"
        },
        "billingAddress": {
          "title": "billingAddress",
          "$ref": "#/definitions/Address"
        },
        "customerGroup": {
          "title": "customerGroup",
          "$ref": "#/definitions/CustomerGroupReference"
        },
        "country": {
          "title": "country",
          "type": "string"
        },
        "orderState": {
          "title": "orderState",
          "$ref": "#/definitions/OrderState"
        },
        "shipmentState": {
          "title": "shipmentState",
          "$ref": "#/definitions/ShipmentState"
        },
        "paymentState": {
          "title": "paymentState",
          "$ref": "#/definitions/PaymentState"
        },
        "shippingInfo": {
          "title": "shippingInfo",
          "$ref": "#/definitions/ShippingInfo"
        },
        "completedAt": {
          "title": "completedAt",
          "type": "string",
          "format": "date-time"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        },
        "inventoryMode": {
          "title": "inventoryMode",
          "$ref": "#/definitions/InventoryMode"
        },
        "taxRoundingMode": {
          "title": "taxRoundingMode",
          "$ref": "#/definitions/RoundingMode"
        }
      },
      "required": [
        "totalPrice"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#orderimportdraft"
    },
    "OrderImportLineItemStateAction": {
      "title": "OrderImportLineItemStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "state": {
              "title": "state",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemState"
              }
            }
          },
          "required": [
            "lineItemId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-lineitems"
    },
    "OrderPagedQueryResponse": {
      "title": "OrderPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderReference": {
      "title": "OrderReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Order"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order"
    },
    "OrderRemoveDeliveryAction": {
      "title": "OrderRemoveDeliveryAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            }
          },
          "required": [
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderRemoveParcelFromDeliveryAction": {
      "title": "OrderRemoveParcelFromDeliveryAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "parcelId": {
              "title": "parcelId",
              "type": "string"
            }
          },
          "required": [
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderRemovePaymentAction": {
      "title": "OrderRemovePaymentAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "payment": {
              "title": "payment",
              "$ref": "#/definitions/PaymentReference"
            }
          },
          "required": [
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-payment"
    },
    "OrderSetBillingAddressAction": {
      "title": "OrderSetBillingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetCustomFieldAction": {
      "title": "OrderSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetCustomLineItemCustomFieldAction": {
      "title": "OrderSetCustomLineItemCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "customLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetCustomLineItemCustomTypeAction": {
      "title": "OrderSetCustomLineItemCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "required": [
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetCustomTypeAction": {
      "title": "OrderSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetCustomerEmailAction": {
      "title": "OrderSetCustomerEmailAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "email": {
              "title": "email",
              "type": "string"
            }
          },
          "required": [
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetDeliveryAddressAction": {
      "title": "OrderSetDeliveryAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "required": [
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetDeliveryItemsAction": {
      "title": "OrderSetDeliveryItemsAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "deliveryId": {
              "title": "deliveryId",
              "type": "string"
            },
            "items": {
              "title": "items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              }
            }
          },
          "required": [
            "deliveryId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetLineItemCustomFieldAction": {
      "title": "OrderSetLineItemCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetLineItemCustomTypeAction": {
      "title": "OrderSetLineItemCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetLocaleAction": {
      "title": "OrderSetLocaleAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "locale": {
              "title": "locale",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetOrderNumberAction": {
      "title": "OrderSetOrderNumberAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "orderNumber": {
              "title": "orderNumber",
              "type": "string"
            }
          },
          "required": [
            "orderNumber"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-order-number"
    },
    "OrderSetParcelItemsAction": {
      "title": "OrderSetParcelItemsAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "parcelId": {
              "title": "parcelId",
              "type": "string"
            },
            "items": {
              "title": "items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              }
            }
          },
          "required": [
            "parcelId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetParcelMeasurementsAction": {
      "title": "OrderSetParcelMeasurementsAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "parcelId": {
              "title": "parcelId",
              "type": "string"
            },
            "measurements": {
              "title": "measurements",
              "$ref": "#/definitions/ParcelMeasurements"
            }
          },
          "required": [
            "parcelId",
            "measurements"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetParcelTrackingDataAction": {
      "title": "OrderSetParcelTrackingDataAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "parcelId": {
              "title": "parcelId",
              "type": "string"
            },
            "trackingData": {
              "title": "trackingData",
              "$ref": "#/definitions/TrackingData"
            }
          },
          "required": [
            "parcelId",
            "trackingData"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderSetReturnPaymentStateAction": {
      "title": "OrderSetReturnPaymentStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "paymentState": {
              "title": "paymentState",
              "$ref": "#/definitions/ReturnPaymentState"
            },
            "returnItemId": {
              "title": "returnItemId",
              "type": "string"
            }
          },
          "required": [
            "paymentState",
            "returnItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnpaymentstate"
    },
    "OrderSetReturnShipmentStateAction": {
      "title": "OrderSetReturnShipmentStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "returnItemId": {
              "title": "returnItemId",
              "type": "string"
            },
            "shipmentState": {
              "title": "shipmentState",
              "$ref": "#/definitions/ReturnShipmentState"
            }
          },
          "required": [
            "returnItemId",
            "shipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnshipmentstate"
    },
    "OrderSetShippingAddressAction": {
      "title": "OrderSetShippingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "address": {
              "title": "address",
              "$ref": "#/definitions/Address"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderState": {
      "title": "OrderState",
      "enum": [
        "Open",
        "Confirmed",
        "Complete",
        "Cancelled"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#orderstate"
    },
    "OrderTransitionCustomLineItemStateAction": {
      "title": "OrderTransitionCustomLineItemStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "actualTransitionDate": {
              "title": "actualTransitionDate",
              "type": "string",
              "format": "date-time"
            },
            "customLineItemId": {
              "title": "customLineItemId",
              "type": "string"
            },
            "fromState": {
              "title": "fromState",
              "$ref": "#/definitions/StateReference"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "toState": {
              "title": "toState",
              "$ref": "#/definitions/StateReference"
            }
          },
          "required": [
            "customLineItemId",
            "fromState",
            "quantity",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-customlineitem-according-to-allowed-transitions"
    },
    "OrderTransitionLineItemStateAction": {
      "title": "OrderTransitionLineItemStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "actualTransitionDate": {
              "title": "actualTransitionDate",
              "type": "string",
              "format": "date-time"
            },
            "fromState": {
              "title": "fromState",
              "$ref": "#/definitions/StateReference"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "toState": {
              "title": "toState",
              "$ref": "#/definitions/StateReference"
            }
          },
          "required": [
            "fromState",
            "lineItemId",
            "quantity",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-lineitem-according-to-allowed-transitions"
    },
    "OrderTransitionStateAction": {
      "title": "OrderTransitionStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/ResourceIdentifier"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#transition-state"
    },
    "OrderUpdate": {
      "title": "OrderUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order"
    },
    "OrderUpdateAction": {
      "title": "OrderUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Order"
    },
    "OrderUpdateSyncInfoAction": {
      "title": "OrderUpdateSyncInfoAction",
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "channel": {
              "title": "channel",
              "$ref": "#/definitions/ChannelReference"
            },
            "externalId": {
              "title": "externalId",
              "type": "string"
            },
            "syncedAt": {
              "title": "syncedAt",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "channel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#update-syncinfo"
    },
    "Parcel": {
      "title": "Parcel",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "type": "string",
          "format": "date-time"
        },
        "measurements": {
          "title": "measurements",
          "$ref": "#/definitions/ParcelMeasurements"
        },
        "trackingData": {
          "title": "trackingData",
          "$ref": "#/definitions/TrackingData"
        },
        "items": {
          "title": "items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryItem"
          }
        }
      },
      "required": [
        "id",
        "createdAt"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcel"
    },
    "ParcelMeasurements": {
      "title": "ParcelMeasurements",
      "type": "object",
      "properties": {
        "heightInMillimeter": {
          "title": "heightInMillimeter",
          "type": "number"
        },
        "lengthInMillimeter": {
          "title": "lengthInMillimeter",
          "type": "number"
        },
        "widthInMillimeter": {
          "title": "widthInMillimeter",
          "type": "number"
        },
        "weightInGram": {
          "title": "weightInGram",
          "type": "number"
        }
      },
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcelmeasurements"
    },
    "PaymentInfo": {
      "title": "PaymentInfo",
      "type": "object",
      "properties": {
        "payments": {
          "title": "payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentReference"
          }
        }
      },
      "required": [
        "payments"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentinfo"
    },
    "PaymentState": {
      "title": "PaymentState",
      "enum": [
        "BalanceDue",
        "Failed",
        "Pending",
        "CreditOwed",
        "Paid"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentstate"
    },
    "ProductVariantImportDraft": {
      "title": "ProductVariantImportDraft",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "format": "int64",
          "type": "number"
        },
        "sku": {
          "title": "sku",
          "type": "string"
        },
        "prices": {
          "title": "prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "attributes": {
          "title": "attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "images": {
          "title": "images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      },
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#productvariantimportdraft"
    },
    "ReturnInfo": {
      "title": "ReturnInfo",
      "type": "object",
      "properties": {
        "items": {
          "title": "items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnItem"
          }
        },
        "returnTrackingId": {
          "title": "returnTrackingId",
          "type": "string"
        },
        "returnDate": {
          "title": "returnDate",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "items"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returninfo"
    },
    "ReturnItem": {
      "title": "ReturnItem",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "quantity": {
          "title": "quantity",
          "format": "int64",
          "type": "number"
        },
        "lineItemId": {
          "title": "lineItemId",
          "type": "string"
        },
        "comment": {
          "title": "comment",
          "type": "string"
        },
        "shipmentState": {
          "title": "shipmentState",
          "$ref": "#/definitions/ReturnShipmentState"
        },
        "paymentState": {
          "title": "paymentState",
          "$ref": "#/definitions/ReturnPaymentState"
        },
        "lastModifiedAt": {
          "title": "lastModifiedAt",
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "title": "createdAt",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "quantity",
        "lineItemId",
        "shipmentState",
        "paymentState",
        "lastModifiedAt",
        "createdAt"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem"
    },
    "ReturnItemDraft": {
      "title": "ReturnItemDraft",
      "type": "object",
      "properties": {
        "quantity": {
          "title": "quantity",
          "format": "int64",
          "type": "number"
        },
        "lineItemId": {
          "title": "lineItemId",
          "type": "string"
        },
        "comment": {
          "title": "comment",
          "type": "string"
        },
        "shipmentState": {
          "title": "shipmentState",
          "$ref": "#/definitions/ReturnShipmentState"
        }
      },
      "required": [
        "quantity",
        "lineItemId",
        "shipmentState"
      ],
      "x-annotation-package": "Order"
    },
    "ReturnPaymentState": {
      "title": "ReturnPaymentState",
      "enum": [
        "NonRefundable",
        "Initial",
        "Refunded",
        "NotRefunded"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnpaymentstate"
    },
    "ReturnShipmentState": {
      "title": "ReturnShipmentState",
      "enum": [
        "Advised",
        "Returned",
        "BackInStock",
        "Unusable"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnshipmentstate"
    },
    "ShipmentState": {
      "title": "ShipmentState",
      "enum": [
        "Shipped",
        "Ready",
        "Pending",
        "Delayed",
        "Partial",
        "Backorder"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#shipmentstate"
    },
    "SyncInfo": {
      "title": "SyncInfo",
      "type": "object",
      "properties": {
        "channel": {
          "title": "channel",
          "$ref": "#/definitions/ChannelReference"
        },
        "externalId": {
          "title": "externalId",
          "type": "string"
        },
        "syncedAt": {
          "title": "syncedAt",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "channel",
        "syncedAt"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#syncinfo"
    },
    "TrackingData": {
      "title": "TrackingData",
      "type": "object",
      "properties": {
        "trackingId": {
          "title": "trackingId",
          "type": "string"
        },
        "carrier": {
          "title": "carrier",
          "type": "string"
        },
        "provider": {
          "title": "provider",
          "type": "string"
        },
        "providerTransaction": {
          "title": "providerTransaction",
          "type": "string"
        },
        "isReturn": {
          "title": "isReturn",
          "type": "boolean"
        }
      },
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#trackingdata"
    },
    "Payment": {
      "title": "Payment",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "customer": {
              "title": "customer",
              "$ref": "#/definitions/CustomerReference"
            },
            "externalId": {
              "title": "externalId",
              "type": "string"
            },
            "interfaceId": {
              "title": "interfaceId",
              "type": "string"
            },
            "amountPlanned": {
              "title": "amountPlanned",
              "$ref": "#/definitions/TypedMoney"
            },
            "amountAuthorized": {
              "title": "amountAuthorized",
              "$ref": "#/definitions/TypedMoney"
            },
            "authorizedUntil": {
              "title": "authorizedUntil",
              "type": "string"
            },
            "amountPaid": {
              "title": "amountPaid",
              "$ref": "#/definitions/TypedMoney"
            },
            "amountRefunded": {
              "title": "amountRefunded",
              "$ref": "#/definitions/TypedMoney"
            },
            "paymentMethodInfo": {
              "title": "paymentMethodInfo",
              "$ref": "#/definitions/PaymentMethodInfo"
            },
            "paymentStatus": {
              "title": "paymentStatus",
              "$ref": "#/definitions/PaymentStatus"
            },
            "transactions": {
              "title": "transactions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            },
            "interfaceInteractions": {
              "title": "interfaceInteractions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFields"
              }
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "amountPlanned",
            "paymentMethodInfo",
            "paymentStatus",
            "transactions",
            "interfaceInteractions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment",
      "x-annotation-updateType": "PaymentUpdate"
    },
    "PaymentAddInterfaceInteractionAction": {
      "title": "PaymentAddInterfaceInteractionAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-interfaceinteraction"
    },
    "PaymentAddTransactionAction": {
      "title": "PaymentAddTransactionAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "transaction": {
              "title": "transaction",
              "$ref": "#/definitions/TransactionDraft"
            }
          },
          "required": [
            "transaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-transaction"
    },
    "PaymentChangeAmountPlannedAction": {
      "title": "PaymentChangeAmountPlannedAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "amount": {
              "title": "amount",
              "$ref": "#/definitions/Money"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-amountplanned"
    },
    "PaymentChangeTransactionInteractionIdAction": {
      "title": "PaymentChangeTransactionInteractionIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "interactionId": {
              "title": "interactionId",
              "type": "string"
            },
            "transactionId": {
              "title": "transactionId",
              "type": "string"
            }
          },
          "required": [
            "interactionId",
            "transactionId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactioninteractionid"
    },
    "PaymentChangeTransactionStateAction": {
      "title": "PaymentChangeTransactionStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/TransactionState"
            },
            "transactionId": {
              "title": "transactionId",
              "type": "string"
            }
          },
          "required": [
            "state",
            "transactionId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactionstate"
    },
    "PaymentChangeTransactionTimestampAction": {
      "title": "PaymentChangeTransactionTimestampAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "timestamp": {
              "title": "timestamp",
              "type": "string",
              "format": "date-time"
            },
            "transactionId": {
              "title": "transactionId",
              "type": "string"
            }
          },
          "required": [
            "timestamp",
            "transactionId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactiontimestamp"
    },
    "PaymentDraft": {
      "title": "PaymentDraft",
      "type": "object",
      "properties": {
        "customer": {
          "title": "customer",
          "$ref": "#/definitions/CustomerReference"
        },
        "externalId": {
          "title": "externalId",
          "type": "string"
        },
        "interfaceId": {
          "title": "interfaceId",
          "type": "string"
        },
        "amountPlanned": {
          "title": "amountPlanned",
          "$ref": "#/definitions/Money"
        },
        "amountAuthorized": {
          "title": "amountAuthorized",
          "$ref": "#/definitions/Money"
        },
        "authorizedUntil": {
          "title": "authorizedUntil",
          "type": "string"
        },
        "amountPaid": {
          "title": "amountPaid",
          "$ref": "#/definitions/Money"
        },
        "amountRefunded": {
          "title": "amountRefunded",
          "$ref": "#/definitions/Money"
        },
        "paymentMethodInfo": {
          "title": "paymentMethodInfo",
          "$ref": "#/definitions/PaymentMethodInfo"
        },
        "paymentStatus": {
          "title": "paymentStatus",
          "$ref": "#/definitions/PaymentStatus"
        },
        "transactions": {
          "title": "transactions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionDraft"
          }
        },
        "interfaceInteractions": {
          "title": "interfaceInteractions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldsDraft"
          }
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "key": {
          "title": "key",
          "type": "string"
        }
      },
      "required": [
        "amountPlanned"
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentdraft"
    },
    "PaymentMethodInfo": {
      "title": "PaymentMethodInfo",
      "type": "object",
      "properties": {
        "paymentInterface": {
          "title": "paymentInterface",
          "type": "string"
        },
        "method": {
          "title": "method",
          "type": "string"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        }
      },
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentmethodinfo"
    },
    "PaymentPagedQueryResponse": {
      "title": "PaymentPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Payment"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment"
    },
    "PaymentReference": {
      "title": "PaymentReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Payment"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment"
    },
    "PaymentSetAmountPaidAction": {
      "title": "PaymentSetAmountPaidAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "amount": {
              "title": "amount",
              "$ref": "#/definitions/Money"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountpaid"
    },
    "PaymentSetAmountRefundedAction": {
      "title": "PaymentSetAmountRefundedAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "amount": {
              "title": "amount",
              "$ref": "#/definitions/Money"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountrefunded"
    },
    "PaymentSetAuthorizationAction": {
      "title": "PaymentSetAuthorizationAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "amount": {
              "title": "amount",
              "$ref": "#/definitions/Money"
            },
            "until": {
              "title": "until",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-authorization"
    },
    "PaymentSetCustomFieldAction": {
      "title": "PaymentSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customfield"
    },
    "PaymentSetCustomTypeAction": {
      "title": "PaymentSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-custom-type"
    },
    "PaymentSetCustomerAction": {
      "title": "PaymentSetCustomerAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "customer": {
              "title": "customer",
              "$ref": "#/definitions/CustomerReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customer"
    },
    "PaymentSetExternalIdAction": {
      "title": "PaymentSetExternalIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "externalId": {
              "title": "externalId",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-externalid"
    },
    "PaymentSetInterfaceIdAction": {
      "title": "PaymentSetInterfaceIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "interfaceId": {
              "title": "interfaceId",
              "type": "string"
            }
          },
          "required": [
            "interfaceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-interfaceid"
    },
    "PaymentSetKeyAction": {
      "title": "PaymentSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-key"
    },
    "PaymentSetMethodInfoInterfaceAction": {
      "title": "PaymentSetMethodInfoInterfaceAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "interface": {
              "title": "interface",
              "type": "string"
            }
          },
          "required": [
            "interface"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfointerface"
    },
    "PaymentSetMethodInfoMethodAction": {
      "title": "PaymentSetMethodInfoMethodAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "method": {
              "title": "method",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfomethod"
    },
    "PaymentSetMethodInfoNameAction": {
      "title": "PaymentSetMethodInfoNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfoname"
    },
    "PaymentSetStatusInterfaceCodeAction": {
      "title": "PaymentSetStatusInterfaceCodeAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "interfaceCode": {
              "title": "interfaceCode",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacecode"
    },
    "PaymentSetStatusInterfaceTextAction": {
      "title": "PaymentSetStatusInterfaceTextAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "interfaceText": {
              "title": "interfaceText",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacetext"
    },
    "PaymentStatus": {
      "title": "PaymentStatus",
      "type": "object",
      "properties": {
        "interfaceCode": {
          "title": "interfaceCode",
          "type": "string"
        },
        "interfaceText": {
          "title": "interfaceText",
          "type": "string"
        },
        "state": {
          "title": "state",
          "$ref": "#/definitions/StateReference"
        }
      },
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentstatus"
    },
    "PaymentTransitionStateAction": {
      "title": "PaymentTransitionStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transition-state"
    },
    "PaymentUpdate": {
      "title": "PaymentUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Payment"
    },
    "PaymentUpdateAction": {
      "title": "PaymentUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Payment"
    },
    "Transaction": {
      "title": "Transaction",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "timestamp": {
          "title": "timestamp",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "title": "type",
          "$ref": "#/definitions/TransactionType"
        },
        "amount": {
          "title": "amount",
          "$ref": "#/definitions/TypedMoney"
        },
        "interactionId": {
          "title": "interactionId",
          "type": "string"
        },
        "state": {
          "title": "state",
          "$ref": "#/definitions/TransactionState"
        }
      },
      "required": [
        "id",
        "type",
        "amount"
      ],
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transaction"
    },
    "TransactionDraft": {
      "title": "TransactionDraft",
      "type": "object",
      "properties": {
        "timestamp": {
          "title": "timestamp",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "title": "type",
          "$ref": "#/definitions/TransactionType"
        },
        "amount": {
          "title": "amount",
          "$ref": "#/definitions/Money"
        },
        "interactionId": {
          "title": "interactionId",
          "type": "string"
        },
        "state": {
          "title": "state",
          "$ref": "#/definitions/TransactionState"
        }
      },
      "required": [
        "type",
        "amount"
      ],
      "x-annotation-package": "Payment"
    },
    "TransactionState": {
      "title": "TransactionState",
      "enum": [
        "Pending",
        "Success",
        "Failure"
      ],
      "type": "string",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactionstate"
    },
    "TransactionType": {
      "title": "TransactionType",
      "enum": [
        "Authorization",
        "CancelAuthorization",
        "Charge",
        "Refund",
        "Chargeback"
      ],
      "type": "string",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactiontype"
    },
    "ProductDiscount": {
      "title": "ProductDiscount",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "value": {
              "title": "value",
              "$ref": "#/definitions/ProductDiscountValue"
            },
            "predicate": {
              "title": "predicate",
              "type": "string"
            },
            "sortOrder": {
              "title": "sortOrder",
              "type": "string"
            },
            "isActive": {
              "title": "isActive",
              "type": "boolean"
            },
            "references": {
              "title": "references",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              }
            },
            "validFrom": {
              "title": "validFrom",
              "type": "string",
              "format": "date-time"
            },
            "validUntil": {
              "title": "validUntil",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "name",
            "value",
            "predicate",
            "sortOrder",
            "isActive",
            "references"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount",
      "x-annotation-updateType": "ProductDiscountUpdate"
    },
    "ProductDiscountChangeIsActiveAction": {
      "title": "ProductDiscountChangeIsActiveAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "isActive": {
              "title": "isActive",
              "type": "boolean"
            }
          },
          "required": [
            "isActive"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-is-active"
    },
    "ProductDiscountChangeNameAction": {
      "title": "ProductDiscountChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-name"
    },
    "ProductDiscountChangePredicateAction": {
      "title": "ProductDiscountChangePredicateAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "predicate": {
              "title": "predicate",
              "type": "string"
            }
          },
          "required": [
            "predicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-predicate"
    },
    "ProductDiscountChangeSortOrderAction": {
      "title": "ProductDiscountChangeSortOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "sortOrder": {
              "title": "sortOrder",
              "type": "string"
            }
          },
          "required": [
            "sortOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-sort-order"
    },
    "ProductDiscountChangeValueAction": {
      "title": "ProductDiscountChangeValueAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "value": {
              "title": "value",
              "$ref": "#/definitions/ProductDiscountValue"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-value"
    },
    "ProductDiscountDraft": {
      "title": "ProductDiscountDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "value": {
          "title": "value",
          "$ref": "#/definitions/ProductDiscountValue"
        },
        "predicate": {
          "title": "predicate",
          "type": "string"
        },
        "sortOrder": {
          "title": "sortOrder",
          "type": "string"
        },
        "isActive": {
          "title": "isActive",
          "type": "boolean"
        },
        "validFrom": {
          "title": "validFrom",
          "type": "string",
          "format": "date-time"
        },
        "validUntil": {
          "title": "validUntil",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name",
        "value",
        "predicate",
        "sortOrder",
        "isActive"
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountdraft"
    },
    "ProductDiscountMatchQuery": {
      "title": "ProductDiscountMatchQuery",
      "type": "object",
      "properties": {
        "productId": {
          "title": "productId",
          "type": "string"
        },
        "variantId": {
          "title": "variantId",
          "format": "int32",
          "type": "number"
        },
        "staged": {
          "title": "staged",
          "type": "boolean"
        },
        "price": {
          "title": "price",
          "$ref": "#/definitions/Price"
        }
      },
      "required": [
        "productId",
        "variantId",
        "staged",
        "price"
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#get-matching-productdiscount"
    },
    "ProductDiscountPagedQueryResponse": {
      "title": "ProductDiscountPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductDiscount"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountReference": {
      "title": "ProductDiscountReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/ProductDiscount"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount"
    },
    "ProductDiscountSetDescriptionAction": {
      "title": "ProductDiscountSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-description"
    },
    "ProductDiscountSetValidFromAction": {
      "title": "ProductDiscountSetValidFromAction",
      "example": {
        "action": "setValidFrom",
        "validFrom": "2017-01-11T15:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "validFrom": {
              "title": "validFrom",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-from"
    },
    "ProductDiscountSetValidUntilAction": {
      "title": "ProductDiscountSetValidUntilAction",
      "example": {
        "action": "setValidFrom",
        "validFrom": "2017-01-11T15:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "validUntil": {
              "title": "validUntil",
              "type": "string",
              "format": "date-time"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-until"
    },
    "ProductDiscountUpdate": {
      "title": "ProductDiscountUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductDiscountUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountUpdateAction": {
      "title": "ProductDiscountUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValue": {
      "title": "ProductDiscountValue",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountvalue"
    },
    "ProductDiscountValueAbsolute": {
      "title": "ProductDiscountValueAbsolute",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValue"
        },
        {
          "properties": {
            "money": {
              "title": "money",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Money"
              }
            }
          },
          "required": [
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValueExternal": {
      "title": "ProductDiscountValueExternal",
      "$ref": "#/definitions/ProductDiscountValue",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValueRelative": {
      "title": "ProductDiscountValueRelative",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValue"
        },
        {
          "properties": {
            "permyriad": {
              "title": "permyriad",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "permyriad"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductDiscount"
    },
    "AttributeBooleanType": {
      "title": "AttributeBooleanType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#booleantype"
    },
    "AttributeConstraintEnum": {
      "title": "AttributeConstraintEnum",
      "enum": [
        "None",
        "Unique",
        "CombinationUnique",
        "SameForAll"
      ],
      "type": "string",
      "x-annotation-package": "ProductType"
    },
    "AttributeDateTimeType": {
      "title": "AttributeDateTimeType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetimetype"
    },
    "AttributeDateType": {
      "title": "AttributeDateType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetype"
    },
    "AttributeDefinition": {
      "title": "AttributeDefinition",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "object"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "label": {
          "title": "label",
          "$ref": "#/definitions/LocalizedString"
        },
        "isRequired": {
          "title": "isRequired",
          "type": "boolean"
        },
        "attributeConstraint": {
          "title": "attributeConstraint",
          "$ref": "#/definitions/AttributeConstraintEnum"
        },
        "inputTip": {
          "title": "inputTip",
          "$ref": "#/definitions/LocalizedString"
        },
        "inputHint": {
          "title": "inputHint",
          "$ref": "#/definitions/TextInputHint"
        },
        "isSearchable": {
          "title": "isSearchable",
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "name",
        "label",
        "isRequired",
        "attributeConstraint",
        "inputHint",
        "isSearchable"
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributedefinition"
    },
    "AttributeDefinitionDraft": {
      "title": "AttributeDefinitionDraft",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "object"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "label": {
          "title": "label",
          "$ref": "#/definitions/LocalizedString"
        },
        "isRequired": {
          "title": "isRequired",
          "type": "boolean"
        },
        "attributeConstraint": {
          "title": "attributeConstraint",
          "$ref": "#/definitions/AttributeConstraintEnum"
        },
        "inputTip": {
          "title": "inputTip",
          "$ref": "#/definitions/LocalizedString"
        },
        "inputHint": {
          "title": "inputHint",
          "$ref": "#/definitions/TextInputHint"
        },
        "isSearchable": {
          "title": "isSearchable",
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "name",
        "label",
        "isRequired"
      ],
      "x-annotation-package": "ProductType"
    },
    "AttributeEnumType": {
      "title": "AttributeEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "values": {
              "title": "values",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributePlainEnumValue"
              }
            }
          },
          "required": [
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#enumtype"
    },
    "AttributeLocalizableTextType": {
      "title": "AttributeLocalizableTextType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizabletexttype"
    },
    "AttributeLocalizedEnumType": {
      "title": "AttributeLocalizedEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "values": {
              "title": "values",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeLocalizedEnumValue"
              }
            }
          },
          "required": [
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizableenumtype"
    },
    "AttributeLocalizedEnumValue": {
      "title": "AttributeLocalizedEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "label": {
          "title": "label",
          "$ref": "#/definitions/LocalizedString"
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizedenumvalue"
    },
    "AttributeMoneyType": {
      "title": "AttributeMoneyType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#moneytype"
    },
    "AttributeNestedType": {
      "title": "AttributeNestedType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "typeReference": {
              "title": "typeReference",
              "$ref": "#/definitions/ProductTypeReference"
            }
          },
          "required": [
            "typeReference"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#nestedtype"
    },
    "AttributeNumberType": {
      "title": "AttributeNumberType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#numbertype"
    },
    "AttributePlainEnumValue": {
      "title": "AttributePlainEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "label": {
          "title": "label",
          "type": "string"
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#plainenumvalue"
    },
    "AttributeReferenceType": {
      "title": "AttributeReferenceType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "referenceTypeId": {
              "title": "referenceTypeId",
              "$ref": "#/definitions/ReferenceTypeId"
            }
          },
          "required": [
            "referenceTypeId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#referencetype"
    },
    "AttributeSetType": {
      "title": "AttributeSetType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "elementType": {
              "title": "elementType",
              "$ref": "#/definitions/AttributeType"
            }
          },
          "required": [
            "elementType"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#settype"
    },
    "AttributeTextType": {
      "title": "AttributeTextType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#texttype"
    },
    "AttributeTimeType": {
      "title": "AttributeTimeType",
      "$ref": "#/definitions/AttributeType",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#timetype"
    },
    "AttributeType": {
      "title": "AttributeType",
      "discriminator": "name",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributetype"
    },
    "ProductType": {
      "title": "ProductType",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "description": {
              "title": "description",
              "type": "string"
            },
            "attributes": {
              "title": "attributes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeDefinition"
              }
            }
          },
          "required": [
            "name",
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype",
      "x-annotation-updateType": "ProductTypeUpdate"
    },
    "ProductTypeAddAttributeDefinitionAction": {
      "title": "ProductTypeAddAttributeDefinitionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attribute": {
              "title": "attribute",
              "$ref": "#/definitions/AttributeDefinitionDraft"
            }
          },
          "required": [
            "attribute"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-attributedefinition"
    },
    "ProductTypeAddLocalizedEnumValueAction": {
      "title": "ProductTypeAddLocalizedEnumValueAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "value": {
              "title": "value",
              "$ref": "#/definitions/AttributeLocalizedEnumValue"
            }
          },
          "required": [
            "attributeName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-localizableenumvalue-to-attributedefinition"
    },
    "ProductTypeAddPlainEnumValueAction": {
      "title": "ProductTypeAddPlainEnumValueAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "value": {
              "title": "value",
              "$ref": "#/definitions/AttributePlainEnumValue"
            }
          },
          "required": [
            "attributeName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-plainenumvalue-to-attributedefinition"
    },
    "ProductTypeChangeAttributeConstraintAction": {
      "title": "ProductTypeChangeAttributeConstraintAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "newValue": {
              "title": "newValue",
              "$ref": "#/definitions/AttributeConstraintEnum"
            }
          },
          "required": [
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributeconstraint"
    },
    "ProductTypeChangeAttributeNameAction": {
      "title": "ProductTypeChangeAttributeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "newAttributeName": {
              "title": "newAttributeName",
              "type": "string"
            }
          },
          "required": [
            "attributeName",
            "newAttributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-name"
    },
    "ProductTypeChangeAttributeOrderAction": {
      "title": "ProductTypeChangeAttributeOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributes": {
              "title": "attributes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeDefinitionDraft"
              }
            }
          },
          "required": [
            "attributes"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-attributedefinitions"
    },
    "ProductTypeChangeDescriptionAction": {
      "title": "ProductTypeChangeDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "type": "string"
            }
          },
          "required": [
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-description"
    },
    "ProductTypeChangeEnumKeyAction": {
      "title": "ProductTypeChangeEnumKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "key": {
              "title": "key",
              "type": "string"
            },
            "newKey": {
              "title": "newKey",
              "type": "string"
            }
          },
          "required": [
            "attributeName",
            "key",
            "newKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-key-of-an-enumvalue"
    },
    "ProductTypeChangeInputHintAction": {
      "title": "ProductTypeChangeInputHintAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "newValue": {
              "title": "newValue",
              "type": "string"
            }
          },
          "required": [
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-inputhint"
    },
    "ProductTypeChangeIsSearchableAction": {
      "title": "ProductTypeChangeIsSearchableAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "isSearchable": {
              "title": "isSearchable",
              "type": "boolean"
            }
          },
          "required": [
            "attributeName",
            "isSearchable"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-issearchable"
    },
    "ProductTypeChangeLabelAction": {
      "title": "ProductTypeChangeLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "label": {
              "title": "label",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "attributeName",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-label"
    },
    "ProductTypeChangeLocalizedEnumValueLabelAction": {
      "title": "ProductTypeChangeLocalizedEnumValueLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "newValue": {
              "title": "newValue",
              "$ref": "#/definitions/AttributeLocalizedEnumValue"
            }
          },
          "required": [
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType"
    },
    "ProductTypeChangeLocalizedEnumValueOrderAction": {
      "title": "ProductTypeChangeLocalizedEnumValueOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "values": {
              "title": "values",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeLocalizedEnumValue"
              }
            }
          },
          "required": [
            "attributeName",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-localizedenumvalues"
    },
    "ProductTypeChangeNameAction": {
      "title": "ProductTypeChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-name"
    },
    "ProductTypeChangePlainEnumValueLabelAction": {
      "title": "ProductTypeChangePlainEnumValueLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "newValue": {
              "title": "newValue",
              "$ref": "#/definitions/AttributePlainEnumValue"
            }
          },
          "required": [
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType"
    },
    "ProductTypeChangePlainEnumValueOrderAction": {
      "title": "ProductTypeChangePlainEnumValueOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "values": {
              "title": "values",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributePlainEnumValue"
              }
            }
          },
          "required": [
            "attributeName",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-enumvalues"
    },
    "ProductTypeDraft": {
      "title": "ProductTypeDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "attributes": {
          "title": "attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeDefinitionDraft"
          }
        }
      },
      "required": [
        "name",
        "description"
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttypedraft"
    },
    "ProductTypePagedQueryResponse": {
      "title": "ProductTypePagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType"
    },
    "ProductTypeReference": {
      "title": "ProductTypeReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/ProductType"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype"
    },
    "ProductTypeRemoveAttributeDefinitionAction": {
      "title": "ProductTypeRemoveAttributeDefinitionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-attributedefinition"
    },
    "ProductTypeRemoveEnumValuesAction": {
      "title": "ProductTypeRemoveEnumValuesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "keys": {
              "title": "keys",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "attributeName",
            "keys"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-enumvalues-from-attributedefinition"
    },
    "ProductTypeSetInputTipAction": {
      "title": "ProductTypeSetInputTipAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "attributeName": {
              "title": "attributeName",
              "type": "string"
            },
            "inputTip": {
              "title": "inputTip",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "attributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-attributedefinition-inputtip"
    },
    "ProductTypeSetKeyAction": {
      "title": "ProductTypeSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-key"
    },
    "ProductTypeUpdate": {
      "title": "ProductTypeUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductTypeUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ProductType"
    },
    "ProductTypeUpdateAction": {
      "title": "ProductTypeUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "ProductType"
    },
    "TextInputHint": {
      "title": "TextInputHint",
      "enum": [
        "SingleLine",
        "MultiLine"
      ],
      "type": "string",
      "x-annotation-package": "ProductType"
    },
    "Attribute": {
      "title": "Attribute",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string",
          "x-annotation-identifier": true,
          "x-annotation-elementIdentifier": true
        },
        "value": {
          "title": "value",
          "type": "object"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#attribute"
    },
    "CategoryOrderHints": {
      "title": "CategoryOrderHints",
      "type": "object",
      "additionalProperties": {
        "title": "/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/",
        "required": true,
        "type": "string"
      },
      "x-annotation-package": "Product",
      "x-annotation-asMap": {
        "key": "string",
        "value": "string"
      }
    },
    "CustomTokenizer": {
      "title": "CustomTokenizer",
      "allOf": [
        {
          "$ref": "#/definitions/SuggestTokenizer"
        },
        {
          "properties": {
            "inputs": {
              "title": "inputs",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "inputs"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "FacetResult": {
      "title": "FacetResult",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "$ref": "#/definitions/FacetTypes"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Product"
    },
    "FacetResultRange": {
      "title": "FacetResultRange",
      "type": "object",
      "properties": {
        "from": {
          "title": "from",
          "type": "number"
        },
        "fromStr": {
          "title": "fromStr",
          "type": "string"
        },
        "to": {
          "title": "to",
          "type": "number"
        },
        "toStr": {
          "title": "toStr",
          "type": "string"
        },
        "count": {
          "title": "count",
          "format": "int64",
          "type": "number"
        },
        "productCount": {
          "title": "productCount",
          "format": "int64",
          "type": "number"
        },
        "total": {
          "title": "total",
          "format": "int64",
          "type": "number"
        },
        "min": {
          "title": "min",
          "type": "number"
        },
        "max": {
          "title": "max",
          "type": "number"
        },
        "mean": {
          "title": "mean",
          "type": "number"
        }
      },
      "required": [
        "from",
        "fromStr",
        "to",
        "toStr",
        "count",
        "total",
        "min",
        "max",
        "mean"
      ],
      "x-annotation-package": "Product"
    },
    "FacetResultTerm": {
      "title": "FacetResultTerm",
      "type": "object",
      "properties": {
        "term": {
          "title": "term",
          "type": "string"
        },
        "count": {
          "title": "count",
          "format": "int64",
          "type": "number"
        },
        "productCount": {
          "title": "productCount",
          "format": "int64",
          "type": "number"
        }
      },
      "required": [
        "term",
        "count"
      ],
      "x-annotation-package": "Product"
    },
    "FacetResults": {
      "title": "FacetResults",
      "type": "object",
      "additionalProperties": {
        "title": "/^[a-z].*$/",
        "required": true,
        "type": "object"
      },
      "x-annotation-package": "Product"
    },
    "FacetTypes": {
      "title": "FacetTypes",
      "enum": [
        "terms",
        "range",
        "filter"
      ],
      "type": "string",
      "x-annotation-package": "Product"
    },
    "FilteredFacetResult": {
      "title": "FilteredFacetResult",
      "allOf": [
        {
          "$ref": "#/definitions/FacetResult"
        },
        {
          "properties": {
            "count": {
              "title": "count",
              "format": "int64",
              "type": "number"
            },
            "productCount": {
              "title": "productCount",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "count"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "Product": {
      "title": "Product",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "productType": {
              "title": "productType",
              "$ref": "#/definitions/ProductTypeReference"
            },
            "masterData": {
              "title": "masterData",
              "$ref": "#/definitions/ProductCatalogData"
            },
            "taxCategory": {
              "title": "taxCategory",
              "$ref": "#/definitions/TaxCategoryReference"
            },
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "reviewRatingStatistics": {
              "title": "reviewRatingStatistics",
              "$ref": "#/definitions/ReviewRatingStatistics"
            }
          },
          "required": [
            "productType",
            "masterData"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product",
      "x-annotation-updateType": "ProductUpdate"
    },
    "ProductAddAssetAction": {
      "title": "ProductAddAssetAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "asset": {
              "title": "asset",
              "$ref": "#/definitions/AssetDraft"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            },
            "position": {
              "title": "position",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "asset",
            "position"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-asset"
    },
    "ProductAddExternalImageAction": {
      "title": "ProductAddExternalImageAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "image": {
              "title": "image",
              "$ref": "#/definitions/Image"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "image"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-external-image"
    },
    "ProductAddPriceAction": {
      "title": "ProductAddPriceAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "price": {
              "title": "price",
              "$ref": "#/definitions/PriceDraft"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "price"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-price"
    },
    "ProductAddToCategoryAction": {
      "title": "ProductAddToCategoryAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "category": {
              "title": "category",
              "$ref": "#/definitions/CategoryReference"
            },
            "orderHint": {
              "title": "orderHint",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "category"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-to-category"
    },
    "ProductAddVariantAction": {
      "title": "ProductAddVariantAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "attributes": {
              "title": "attributes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            },
            "images": {
              "title": "images",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              }
            },
            "key": {
              "title": "key",
              "type": "string"
            },
            "prices": {
              "title": "prices",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceDraft"
              }
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "attributes",
            "prices"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-productvariant"
    },
    "ProductCatalogData": {
      "title": "ProductCatalogData",
      "type": "object",
      "properties": {
        "published": {
          "title": "published",
          "type": "boolean"
        },
        "current": {
          "title": "current",
          "$ref": "#/definitions/ProductData"
        },
        "staged": {
          "title": "staged",
          "$ref": "#/definitions/ProductData"
        },
        "hasStagedChanges": {
          "title": "hasStagedChanges",
          "type": "boolean"
        }
      },
      "required": [
        "published",
        "current",
        "staged",
        "hasStagedChanges"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productcatalogdata"
    },
    "ProductChangeAssetNameAction": {
      "title": "ProductChangeAssetNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-name"
    },
    "ProductChangeAssetOrderAction": {
      "title": "ProductChangeAssetOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "assetOrder": {
              "title": "assetOrder",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "assetOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductChangeMasterVariantAction": {
      "title": "ProductChangeMasterVariantAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-master-variant"
    },
    "ProductChangeNameAction": {
      "title": "ProductChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-name"
    },
    "ProductChangePriceAction": {
      "title": "ProductChangePriceAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "price": {
              "title": "price",
              "$ref": "#/definitions/PriceDraft"
            },
            "priceId": {
              "title": "priceId",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "price",
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-price"
    },
    "ProductChangeSlugAction": {
      "title": "ProductChangeSlugAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-slug"
    },
    "ProductData": {
      "title": "ProductData",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "categories": {
          "title": "categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryReference"
          }
        },
        "categoryOrderHints": {
          "title": "categoryOrderHints",
          "$ref": "#/definitions/CategoryOrderHints"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "slug": {
          "title": "slug",
          "$ref": "#/definitions/LocalizedString"
        },
        "metaTitle": {
          "title": "metaTitle",
          "$ref": "#/definitions/LocalizedString"
        },
        "metaDescription": {
          "title": "metaDescription",
          "$ref": "#/definitions/LocalizedString"
        },
        "metaKeywords": {
          "title": "metaKeywords",
          "$ref": "#/definitions/LocalizedString"
        },
        "masterVariant": {
          "title": "masterVariant",
          "$ref": "#/definitions/ProductVariant"
        },
        "variants": {
          "title": "variants",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariant"
          }
        },
        "searchKeywords": {
          "title": "searchKeywords",
          "$ref": "#/definitions/SearchKeywords"
        }
      },
      "required": [
        "name",
        "categories",
        "slug",
        "masterVariant",
        "variants",
        "searchKeywords"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdata"
    },
    "ProductDraft": {
      "title": "ProductDraft",
      "type": "object",
      "properties": {
        "productType": {
          "title": "productType",
          "$ref": "#/definitions/ProductTypeReference"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "slug": {
          "title": "slug",
          "$ref": "#/definitions/LocalizedString"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "categories": {
          "title": "categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryReference"
          }
        },
        "categoryOrderHints": {
          "title": "categoryOrderHints",
          "$ref": "#/definitions/CategoryOrderHints"
        },
        "metaTitle": {
          "title": "metaTitle",
          "$ref": "#/definitions/LocalizedString"
        },
        "metaDescription": {
          "title": "metaDescription",
          "$ref": "#/definitions/LocalizedString"
        },
        "metaKeywords": {
          "title": "metaKeywords",
          "$ref": "#/definitions/LocalizedString"
        },
        "masterVariant": {
          "title": "masterVariant",
          "$ref": "#/definitions/ProductVariantDraft"
        },
        "variants": {
          "title": "variants",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariantDraft"
          }
        },
        "taxCategory": {
          "title": "taxCategory",
          "$ref": "#/definitions/TaxCategoryReference"
        },
        "searchKeywords": {
          "title": "searchKeywords",
          "$ref": "#/definitions/SearchKeywords"
        },
        "state": {
          "title": "state",
          "$ref": "#/definitions/StateReference"
        },
        "publish": {
          "title": "publish",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "slug"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdraft"
    },
    "ProductLegacySetSkuAction": {
      "title": "ProductLegacySetSkuAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            }
          },
          "required": [
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductMoveImageToPositionAction": {
      "title": "ProductMoveImageToPositionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "imageUrl": {
              "title": "imageUrl",
              "type": "string"
            },
            "position": {
              "title": "position",
              "type": "integer"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "imageUrl",
            "position"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#move-image-to-position"
    },
    "ProductPagedQueryResponse": {
      "title": "ProductPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductProjection": {
      "title": "ProductProjection",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "productType": {
              "title": "productType",
              "$ref": "#/definitions/ProductTypeReference"
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            },
            "categories": {
              "title": "categories",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryReference"
              }
            },
            "categoryOrderHints": {
              "title": "categoryOrderHints",
              "$ref": "#/definitions/CategoryOrderHints"
            },
            "metaTitle": {
              "title": "metaTitle",
              "$ref": "#/definitions/LocalizedString"
            },
            "metaDescription": {
              "title": "metaDescription",
              "$ref": "#/definitions/LocalizedString"
            },
            "metaKeywords": {
              "title": "metaKeywords",
              "$ref": "#/definitions/LocalizedString"
            },
            "searchKeywords": {
              "title": "searchKeywords",
              "$ref": "#/definitions/SearchKeywords"
            },
            "hasStagedChanges": {
              "title": "hasStagedChanges",
              "type": "boolean"
            },
            "published": {
              "title": "published",
              "type": "boolean"
            },
            "masterVariant": {
              "title": "masterVariant",
              "$ref": "#/definitions/ProductVariant"
            },
            "variants": {
              "title": "variants",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductVariant"
              }
            },
            "taxCategory": {
              "title": "taxCategory",
              "$ref": "#/definitions/TaxCategoryReference"
            },
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "reviewRatingStatistics": {
              "title": "reviewRatingStatistics",
              "$ref": "#/definitions/ReviewRatingStatistics"
            }
          },
          "required": [
            "productType",
            "name",
            "slug",
            "categories",
            "masterVariant",
            "variants"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productProjections.html#productprojection"
    },
    "ProductProjectionPagedQueryResponse": {
      "title": "ProductProjectionPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductProjection"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductProjectionPagedSearchResponse": {
      "title": "ProductProjectionPagedSearchResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductProjection"
              }
            },
            "facets": {
              "title": "facets",
              "$ref": "#/definitions/FacetResults"
            }
          },
          "required": [
            "results",
            "facets"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductPublishAction": {
      "title": "ProductPublishAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "scope": {
              "title": "scope",
              "$ref": "#/definitions/ProductPublishScope"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#publish"
    },
    "ProductPublishScope": {
      "title": "ProductPublishScope",
      "enum": [
        "All",
        "Prices"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
    },
    "ProductReference": {
      "title": "ProductReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Product"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product"
    },
    "ProductRemoveAssetAction": {
      "title": "ProductRemoveAssetAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-asset"
    },
    "ProductRemoveFromCategoryAction": {
      "title": "ProductRemoveFromCategoryAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "category": {
              "title": "category",
              "$ref": "#/definitions/CategoryReference"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "category"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-from-category"
    },
    "ProductRemoveImageAction": {
      "title": "ProductRemoveImageAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "imageUrl": {
              "title": "imageUrl",
              "type": "string"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "imageUrl"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-image"
    },
    "ProductRemovePriceAction": {
      "title": "ProductRemovePriceAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "priceId": {
              "title": "priceId",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-price"
    },
    "ProductRemoveVariantAction": {
      "title": "ProductRemoveVariantAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "id": {
              "title": "id",
              "type": "integer"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-productvariant"
    },
    "ProductRevertStagedChangesAction": {
      "title": "ProductRevertStagedChangesAction",
      "$ref": "#/definitions/ProductUpdateAction",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-changes"
    },
    "ProductRevertStagedVariantChangesAction": {
      "title": "ProductRevertStagedVariantChangesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "variantId": {
              "title": "variantId",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-variant-changes"
    },
    "ProductSetAssetCustomFieldAction": {
      "title": "ProductSetAssetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            },
            "value": {
              "title": "value",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-customfield"
    },
    "ProductSetAssetCustomTypeAction": {
      "title": "ProductSetAssetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-type"
    },
    "ProductSetAssetDescriptionAction": {
      "title": "ProductSetAssetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-description"
    },
    "ProductSetAssetKeyAction": {
      "title": "ProductSetAssetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            }
          },
          "required": [
            "assetId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-key"
    },
    "ProductSetAssetSourcesAction": {
      "title": "ProductSetAssetSourcesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            },
            "sources": {
              "title": "sources",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetSource"
              }
            }
          },
          "required": [
            "sources"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-sources"
    },
    "ProductSetAssetTagsAction": {
      "title": "ProductSetAssetTagsAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "assetKey": {
              "title": "assetKey",
              "type": "string"
            },
            "assetId": {
              "title": "assetId",
              "type": "string"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "tags": {
              "title": "tags",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-tags"
    },
    "ProductSetAttributeAction": {
      "title": "ProductSetAttributeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute"
    },
    "ProductSetAttributeInAllVariantsAction": {
      "title": "ProductSetAttributeInAllVariantsAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute-in-all-variants"
    },
    "ProductSetCategoryOrderHintAction": {
      "title": "ProductSetCategoryOrderHintAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "categoryId": {
              "title": "categoryId",
              "type": "string"
            },
            "orderHint": {
              "title": "orderHint",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "categoryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-category-order-hint"
    },
    "ProductSetDescriptionAction": {
      "title": "ProductSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-description"
    },
    "ProductSetDiscountedPriceAction": {
      "title": "ProductSetDiscountedPriceAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "discounted": {
              "title": "discounted",
              "$ref": "#/definitions/DiscountedPrice"
            },
            "priceId": {
              "title": "priceId",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-discounted-price"
    },
    "ProductSetKeyAction": {
      "title": "ProductSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-key"
    },
    "ProductSetMetaDescriptionAction": {
      "title": "ProductSetMetaDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "metaDescription": {
              "title": "metaDescription",
              "$ref": "#/definitions/LocalizedString"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-description"
    },
    "ProductSetMetaKeywordsAction": {
      "title": "ProductSetMetaKeywordsAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "metaKeywords": {
              "title": "metaKeywords",
              "$ref": "#/definitions/LocalizedString"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-keywords"
    },
    "ProductSetMetaTitleAction": {
      "title": "ProductSetMetaTitleAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "metaTitle": {
              "title": "metaTitle",
              "$ref": "#/definitions/LocalizedString"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-title"
    },
    "ProductSetPricesAction": {
      "title": "ProductSetPricesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "prices": {
              "title": "prices",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceDraft"
              }
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "prices"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-prices"
    },
    "ProductSetProductPriceCustomFieldAction": {
      "title": "ProductSetProductPriceCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "priceId": {
              "title": "priceId",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name",
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductSetProductPriceCustomTypeAction": {
      "title": "ProductSetProductPriceCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "priceId": {
              "title": "priceId",
              "type": "string"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "required": [
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductSetProductVariantKeyAction": {
      "title": "ProductSetProductVariantKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-productvariant-key"
    },
    "ProductSetSearchKeywordsAction": {
      "title": "ProductSetSearchKeywordsAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "searchKeywords": {
              "title": "searchKeywords",
              "$ref": "#/definitions/SearchKeywords"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "searchKeywords"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-searchkeywords"
    },
    "ProductSetSkuAction": {
      "title": "ProductSetSkuAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "type": "integer"
            },
            "staged": {
              "title": "staged",
              "type": "boolean"
            }
          },
          "required": [
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-sku"
    },
    "ProductSetTaxCategoryAction": {
      "title": "ProductSetTaxCategoryAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "taxCategory": {
              "title": "taxCategory",
              "$ref": "#/definitions/TaxCategoryReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-taxcategory"
    },
    "ProductTransitionStateAction": {
      "title": "ProductTransitionStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/State"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#transition-state"
    },
    "ProductUnpublishAction": {
      "title": "ProductUnpublishAction",
      "$ref": "#/definitions/ProductUpdateAction",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#unpublish"
    },
    "ProductUpdate": {
      "title": "ProductUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "ProductUpdateAction": {
      "title": "ProductUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Product"
    },
    "ProductVariant": {
      "title": "ProductVariant",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "format": "int64",
          "type": "number"
        },
        "sku": {
          "title": "sku",
          "type": "string"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "prices": {
          "title": "prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "attributes": {
          "title": "attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "price": {
          "title": "price",
          "$ref": "#/definitions/Price"
        },
        "images": {
          "title": "images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "assets": {
          "title": "assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "availability": {
          "title": "availability",
          "$ref": "#/definitions/ProductVariantAvailability"
        },
        "isMatchingVariant": {
          "title": "isMatchingVariant",
          "type": "boolean"
        },
        "scopedPrice": {
          "title": "scopedPrice",
          "$ref": "#/definitions/ScopedPrice"
        },
        "scopedPriceDiscounted": {
          "title": "scopedPriceDiscounted",
          "type": "boolean"
        }
      },
      "required": [
        "id"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariant"
    },
    "ProductVariantAvailability": {
      "title": "ProductVariantAvailability",
      "type": "object",
      "properties": {
        "isOnStock": {
          "title": "isOnStock",
          "type": "boolean"
        },
        "restockableInDays": {
          "title": "restockableInDays",
          "format": "int64",
          "type": "number"
        },
        "availableQuantity": {
          "title": "availableQuantity",
          "format": "int64",
          "type": "number"
        },
        "channels": {
          "title": "channels",
          "$ref": "#/definitions/ProductVariantChannelAvailabilityMap"
        }
      },
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantavailability"
    },
    "ProductVariantChannelAvailability": {
      "title": "ProductVariantChannelAvailability",
      "type": "object",
      "properties": {
        "isOnStock": {
          "title": "isOnStock",
          "type": "boolean"
        },
        "restockableInDays": {
          "title": "restockableInDays",
          "format": "int64",
          "type": "number"
        },
        "availableQuantity": {
          "title": "availableQuantity",
          "format": "int64",
          "type": "number"
        }
      },
      "x-annotation-package": "Product"
    },
    "ProductVariantChannelAvailabilityMap": {
      "title": "ProductVariantChannelAvailabilityMap",
      "type": "object",
      "additionalProperties": {
        "title": "//",
        "required": true,
        "$ref": "#/definitions/ProductVariantChannelAvailability"
      },
      "x-annotation-package": "Product"
    },
    "ProductVariantDraft": {
      "title": "ProductVariantDraft",
      "type": "object",
      "properties": {
        "sku": {
          "title": "sku",
          "type": "string"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "prices": {
          "title": "prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceDraft"
          }
        },
        "attributes": {
          "title": "attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "images": {
          "title": "images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "assets": {
          "title": "assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDraft"
          }
        }
      },
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantdraft"
    },
    "RangeFacetResult": {
      "title": "RangeFacetResult",
      "allOf": [
        {
          "$ref": "#/definitions/FacetResult"
        },
        {
          "properties": {
            "ranges": {
              "title": "ranges",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FacetResultRange"
              }
            }
          },
          "required": [
            "ranges"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "SearchKeyword": {
      "title": "SearchKeyword",
      "type": "object",
      "properties": {
        "text": {
          "title": "text",
          "type": "string"
        },
        "suggestTokenizer": {
          "title": "suggestTokenizer",
          "type": "object"
        }
      },
      "required": [
        "text"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeyword"
    },
    "SearchKeywords": {
      "title": "SearchKeywords",
      "type": "object",
      "additionalProperties": {
        "title": "/^[a-z]{2}(-[A-Z]{2})?$/",
        "required": true,
        "type": "array",
        "items": {
          "$ref": "#/definitions/SearchKeyword"
        }
      },
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeywords"
    },
    "SuggestTokenizer": {
      "title": "SuggestTokenizer",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "enum": [
            "whitespace",
            "custom"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product-search-keywords-suggest-examples"
    },
    "Suggestion": {
      "title": "Suggestion",
      "type": "object",
      "properties": {
        "text": {
          "title": "text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestion"
    },
    "SuggestionResult": {
      "title": "SuggestionResult",
      "type": "object",
      "additionalProperties": {
        "title": "/searchKeywords.[a-z]{2}(-[A-Z]{2})?/",
        "required": true,
        "type": "array",
        "items": {
          "$ref": "#/definitions/Suggestion"
        }
      },
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestionresult"
    },
    "TermFacetResult": {
      "title": "TermFacetResult",
      "allOf": [
        {
          "$ref": "#/definitions/FacetResult"
        },
        {
          "properties": {
            "dataType": {
              "title": "dataType",
              "$ref": "#/definitions/TermFacetResultType"
            },
            "missing": {
              "title": "missing",
              "format": "int64",
              "type": "number"
            },
            "total": {
              "title": "total",
              "format": "int64",
              "type": "number"
            },
            "other": {
              "title": "other",
              "format": "int64",
              "type": "number"
            },
            "terms": {
              "title": "terms",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FacetResultTerm"
              }
            }
          },
          "required": [
            "dataType",
            "missing",
            "total",
            "other",
            "terms"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Product"
    },
    "TermFacetResultType": {
      "title": "TermFacetResultType",
      "enum": [
        "text",
        "date",
        "time",
        "datetime",
        "boolean",
        "number"
      ],
      "type": "string",
      "x-annotation-package": "Product"
    },
    "WhitespaceTokenizer": {
      "title": "WhitespaceTokenizer",
      "$ref": "#/definitions/SuggestTokenizer",
      "x-annotation-package": "Product"
    },
    "CartClassificationType": {
      "title": "CartClassificationType",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputType"
        },
        {
          "properties": {
            "values": {
              "title": "values",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldLocalizedEnumValue"
              }
            }
          },
          "required": [
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartclassification"
    },
    "CartScoreType": {
      "title": "CartScoreType",
      "$ref": "#/definitions/ShippingRateInputType",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartscore"
    },
    "CartValueType": {
      "title": "CartValueType",
      "$ref": "#/definitions/ShippingRateInputType",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartvalue"
    },
    "Project": {
      "title": "Project",
      "type": "object",
      "properties": {
        "version": {
          "title": "version",
          "format": "int64",
          "type": "number"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "countries": {
          "title": "countries",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryCode"
          }
        },
        "currencies": {
          "title": "currencies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyCode"
          }
        },
        "languages": {
          "title": "languages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          }
        },
        "createdAt": {
          "title": "createdAt",
          "type": "string",
          "format": "date-time"
        },
        "trialUntil": {
          "title": "trialUntil",
          "type": "string",
          "format": "date-time"
        },
        "messages": {
          "title": "messages",
          "$ref": "#/definitions/MessageConfiguration"
        },
        "shippingRateInputType": {
          "title": "shippingRateInputType",
          "$ref": "#/definitions/ShippingRateInputType"
        }
      },
      "required": [
        "version",
        "key",
        "name",
        "countries",
        "currencies",
        "languages",
        "createdAt",
        "messages"
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#project",
      "x-annotation-updateType": "ProjectUpdate"
    },
    "ProjectChangeCountriesAction": {
      "title": "ProjectChangeCountriesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "countries": {
              "title": "countries",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryCode"
              }
            }
          },
          "required": [
            "countries"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-countries"
    },
    "ProjectChangeCurrenciesAction": {
      "title": "ProjectChangeCurrenciesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "currencies": {
              "title": "currencies",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyCode"
              }
            }
          },
          "required": [
            "currencies"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-currencies"
    },
    "ProjectChangeLanguagesAction": {
      "title": "ProjectChangeLanguagesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "languages": {
              "title": "languages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Locale"
              }
            }
          },
          "required": [
            "languages"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-languages"
    },
    "ProjectChangeMessagesEnabledAction": {
      "title": "ProjectChangeMessagesEnabledAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "messagesEnabled": {
              "title": "messagesEnabled",
              "type": "boolean"
            }
          },
          "required": [
            "messagesEnabled"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-messages-enabled"
    },
    "ProjectChangeNameAction": {
      "title": "ProjectChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-name"
    },
    "ProjectSetShippingRateInputTypeAction": {
      "title": "ProjectSetShippingRateInputTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "shippingRateInputType": {
              "title": "shippingRateInputType",
              "$ref": "#/definitions/ShippingRateInputType"
            }
          },
          "required": [
            "shippingRateInputType"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#set-shippingrateinputtype"
    },
    "ProjectUpdate": {
      "title": "ProjectUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Project"
    },
    "ProjectUpdateAction": {
      "title": "ProjectUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Project"
    },
    "ShippingRateInputType": {
      "title": "ShippingRateInputType",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "$ref": "#/definitions/ShippingRateTierType"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#shippingrateinputtype"
    },
    "Review": {
      "title": "Review",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "uniquenessValue": {
              "title": "uniquenessValue",
              "type": "string"
            },
            "locale": {
              "title": "locale",
              "type": "string"
            },
            "authorName": {
              "title": "authorName",
              "type": "string"
            },
            "title": {
              "title": "title",
              "type": "string"
            },
            "text": {
              "title": "text",
              "type": "string"
            },
            "target": {
              "title": "target",
              "type": "object"
            },
            "includedInStatistics": {
              "title": "includedInStatistics",
              "type": "boolean"
            },
            "rating": {
              "title": "rating",
              "minimum": -100,
              "maximum": 100,
              "format": "int8",
              "type": "number"
            },
            "state": {
              "title": "state",
              "$ref": "#/definitions/StateReference"
            },
            "customer": {
              "title": "customer",
              "$ref": "#/definitions/CustomerReference"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            }
          },
          "required": [
            "includedInStatistics"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#review",
      "x-annotation-updateType": "ReviewUpdate"
    },
    "ReviewDraft": {
      "title": "ReviewDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "uniquenessValue": {
          "title": "uniquenessValue",
          "type": "string"
        },
        "locale": {
          "title": "locale",
          "type": "string"
        },
        "authorName": {
          "title": "authorName",
          "type": "string"
        },
        "title": {
          "title": "title",
          "type": "string"
        },
        "text": {
          "title": "text",
          "type": "string"
        },
        "target": {
          "title": "target",
          "type": "object"
        },
        "state": {
          "title": "state",
          "type": "object"
        },
        "rating": {
          "title": "rating",
          "minimum": -100,
          "maximum": 100,
          "format": "int8",
          "type": "number"
        },
        "customer": {
          "title": "customer",
          "$ref": "#/definitions/CustomerReference"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        }
      },
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewdraft"
    },
    "ReviewPagedQueryResponse": {
      "title": "ReviewPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Review"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Review"
    },
    "ReviewRatingStatistics": {
      "title": "ReviewRatingStatistics",
      "type": "object",
      "properties": {
        "averageRating": {
          "title": "averageRating",
          "type": "number"
        },
        "highestRating": {
          "title": "highestRating",
          "type": "number"
        },
        "lowestRating": {
          "title": "lowestRating",
          "type": "number"
        },
        "count": {
          "title": "count",
          "type": "integer"
        },
        "ratingsDistribution": {
          "title": "ratingsDistribution",
          "type": "object"
        }
      },
      "required": [
        "averageRating",
        "highestRating",
        "lowestRating",
        "count",
        "ratingsDistribution"
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewratingstatistics"
    },
    "ReviewReference": {
      "title": "ReviewReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Review"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review"
    },
    "ReviewSetAuthorNameAction": {
      "title": "ReviewSetAuthorNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "authorName": {
              "title": "authorName",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-author-name"
    },
    "ReviewSetCustomFieldAction": {
      "title": "ReviewSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Review"
    },
    "ReviewSetCustomTypeAction": {
      "title": "ReviewSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/ResourceIdentifier"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review"
    },
    "ReviewSetCustomerAction": {
      "title": "ReviewSetCustomerAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "customer": {
              "title": "customer",
              "$ref": "#/definitions/ResourceIdentifier"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-customer"
    },
    "ReviewSetKeyAction": {
      "title": "ReviewSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-key"
    },
    "ReviewSetLocaleAction": {
      "title": "ReviewSetLocaleAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "locale": {
              "title": "locale",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-locale"
    },
    "ReviewSetRatingAction": {
      "title": "ReviewSetRatingAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "rating": {
              "title": "rating",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-rating"
    },
    "ReviewSetTargetAction": {
      "title": "ReviewSetTargetAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "target": {
              "title": "target",
              "$ref": "#/definitions/ResourceIdentifier"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-target"
    },
    "ReviewSetTextAction": {
      "title": "ReviewSetTextAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "text": {
              "title": "text",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-text"
    },
    "ReviewSetTitleAction": {
      "title": "ReviewSetTitleAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "title": {
              "title": "title",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-title"
    },
    "ReviewTransitionStateAction": {
      "title": "ReviewTransitionStateAction",
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "state": {
              "title": "state",
              "$ref": "#/definitions/ResourceIdentifier"
            },
            "force": {
              "title": "force",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#transition-state"
    },
    "ReviewUpdate": {
      "title": "ReviewUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReviewUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Review"
    },
    "ReviewUpdateAction": {
      "title": "ReviewUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Review"
    },
    "CartClassificationTier": {
      "title": "CartClassificationTier",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRatePriceTier"
        },
        {
          "properties": {
            "value": {
              "title": "value",
              "type": "string"
            },
            "price": {
              "title": "price",
              "$ref": "#/definitions/Money"
            },
            "isMatching": {
              "title": "isMatching",
              "type": "boolean"
            }
          },
          "required": [
            "value",
            "price"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartclassification"
    },
    "CartScoreTier": {
      "title": "CartScoreTier",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRatePriceTier"
        },
        {
          "properties": {
            "score": {
              "title": "score",
              "type": "string"
            },
            "price": {
              "title": "price",
              "$ref": "#/definitions/Money"
            },
            "priceFunction": {
              "title": "priceFunction",
              "$ref": "#/definitions/PriceFunction"
            },
            "isMatching": {
              "title": "isMatching",
              "type": "boolean"
            }
          },
          "required": [
            "score"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartscore-with-fixed-price"
    },
    "CartValueTier": {
      "title": "CartValueTier",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRatePriceTier"
        },
        {
          "properties": {
            "minimumCentAmount": {
              "title": "minimumCentAmount",
              "format": "int64",
              "type": "integer"
            },
            "price": {
              "title": "price",
              "$ref": "#/definitions/Money"
            },
            "isMatching": {
              "title": "isMatching",
              "type": "boolean"
            }
          },
          "required": [
            "minimumCentAmount",
            "price"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartvalue"
    },
    "PriceFunction": {
      "title": "PriceFunction",
      "type": "object",
      "properties": {
        "currencyCode": {
          "title": "currencyCode",
          "$ref": "#/definitions/CurrencyCode"
        },
        "function": {
          "title": "function",
          "type": "string"
        }
      },
      "required": [
        "currencyCode",
        "function"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#pricefunction"
    },
    "ShippingMethod": {
      "title": "ShippingMethod",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "description": {
              "title": "description",
              "type": "string"
            },
            "taxCategory": {
              "title": "taxCategory",
              "$ref": "#/definitions/TaxCategoryReference"
            },
            "zoneRates": {
              "title": "zoneRates",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ZoneRate"
              }
            },
            "isDefault": {
              "title": "isDefault",
              "type": "boolean"
            },
            "predicate": {
              "title": "predicate",
              "type": "string"
            }
          },
          "required": [
            "name",
            "taxCategory",
            "zoneRates",
            "isDefault"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod",
      "x-annotation-updateType": "ShippingMethodUpdate"
    },
    "ShippingMethodAddShippingRateAction": {
      "title": "ShippingMethodAddShippingRateAction",
      "example": {
        "action": "addShippingRate",
        "zone": {
          "typeId": "zone",
          "id": "668e5783-73c8-4f2d-91f4-3c90b872c700"
        },
        "shippingRate": {
          "price": {
            "currencyCode": "USD",
            "centAmount": 299
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "shippingRate": {
              "title": "shippingRate",
              "$ref": "#/definitions/ShippingRateDraft"
            },
            "zone": {
              "title": "zone",
              "$ref": "#/definitions/ZoneReference"
            }
          },
          "required": [
            "shippingRate",
            "zone"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-shippingrate"
    },
    "ShippingMethodAddZoneAction": {
      "title": "ShippingMethodAddZoneAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "zone": {
              "title": "zone",
              "$ref": "#/definitions/ZoneReference"
            }
          },
          "required": [
            "zone"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-zone"
    },
    "ShippingMethodChangeIsDefaultAction": {
      "title": "ShippingMethodChangeIsDefaultAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "isDefault": {
              "title": "isDefault",
              "type": "boolean"
            }
          },
          "required": [
            "isDefault"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-isdefault"
    },
    "ShippingMethodChangeNameAction": {
      "title": "ShippingMethodChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-name"
    },
    "ShippingMethodChangeTaxCategoryAction": {
      "title": "ShippingMethodChangeTaxCategoryAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "taxCategory": {
              "title": "taxCategory",
              "$ref": "#/definitions/TaxCategoryReference"
            }
          },
          "required": [
            "taxCategory"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-taxcategory"
    },
    "ShippingMethodDraft": {
      "title": "ShippingMethodDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "taxCategory": {
          "title": "taxCategory",
          "$ref": "#/definitions/TaxCategoryReference"
        },
        "zoneRates": {
          "title": "zoneRates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneRateDraft"
          }
        },
        "isDefault": {
          "title": "isDefault",
          "type": "boolean"
        },
        "predicate": {
          "title": "predicate",
          "type": "string"
        }
      },
      "required": [
        "name",
        "taxCategory",
        "zoneRates",
        "isDefault"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethoddraft"
    },
    "ShippingMethodPagedQueryResponse": {
      "title": "ShippingMethodPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingMethod"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod"
    },
    "ShippingMethodReference": {
      "title": "ShippingMethodReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/ShippingMethod"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod"
    },
    "ShippingMethodRemoveShippingRateAction": {
      "title": "ShippingMethodRemoveShippingRateAction",
      "example": {
        "action": "removeShippingRate",
        "zone": {
          "typeId": "zone",
          "id": "668e5783-73c8-4f2d-91f4-3c90b872c700"
        },
        "shippingRate": {
          "price": {
            "currencyCode": "USD",
            "centAmount": 299
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "shippingRate": {
              "title": "shippingRate",
              "$ref": "#/definitions/ShippingRateDraft"
            },
            "zone": {
              "title": "zone",
              "$ref": "#/definitions/ZoneReference"
            }
          },
          "required": [
            "shippingRate",
            "zone"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-shippingrate"
    },
    "ShippingMethodRemoveZoneAction": {
      "title": "ShippingMethodRemoveZoneAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "zone": {
              "title": "zone",
              "$ref": "#/definitions/ZoneReference"
            }
          },
          "required": [
            "zone"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-zone"
    },
    "ShippingMethodSetDescriptionAction": {
      "title": "ShippingMethodSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-description"
    },
    "ShippingMethodSetKeyAction": {
      "title": "ShippingMethodSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-key"
    },
    "ShippingMethodSetPredicateAction": {
      "title": "ShippingMethodSetPredicateAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "predicate": {
              "title": "predicate",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-predicate"
    },
    "ShippingMethodUpdate": {
      "title": "ShippingMethodUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingMethodUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShippingMethod"
    },
    "ShippingMethodUpdateAction": {
      "title": "ShippingMethodUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "ShippingMethod"
    },
    "ShippingRate": {
      "title": "ShippingRate",
      "type": "object",
      "properties": {
        "price": {
          "title": "price",
          "$ref": "#/definitions/TypedMoney"
        },
        "freeAbove": {
          "title": "freeAbove",
          "$ref": "#/definitions/TypedMoney"
        },
        "isMatching": {
          "title": "isMatching",
          "type": "boolean"
        },
        "tiers": {
          "title": "tiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRatePriceTier"
          }
        }
      },
      "required": [
        "price",
        "tiers"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
    },
    "ShippingRateDraft": {
      "title": "ShippingRateDraft",
      "type": "object",
      "properties": {
        "price": {
          "title": "price",
          "$ref": "#/definitions/Money"
        },
        "freeAbove": {
          "title": "freeAbove",
          "$ref": "#/definitions/Money"
        },
        "tiers": {
          "title": "tiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRatePriceTier"
          }
        }
      },
      "required": [
        "price"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratedraft"
    },
    "ShippingRatePriceTier": {
      "title": "ShippingRatePriceTier",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "$ref": "#/definitions/ShippingRateTierType"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
    },
    "ShippingRateTierType": {
      "title": "ShippingRateTierType",
      "enum": [
        "CartValue",
        "CartClassification",
        "CartScore"
      ],
      "type": "string",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratepricetier"
    },
    "ZoneRate": {
      "title": "ZoneRate",
      "type": "object",
      "properties": {
        "zone": {
          "title": "zone",
          "$ref": "#/definitions/ZoneReference"
        },
        "shippingRates": {
          "title": "shippingRates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRate"
          }
        }
      },
      "required": [
        "zone",
        "shippingRates"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zonerate"
    },
    "ZoneRateDraft": {
      "title": "ZoneRateDraft",
      "type": "object",
      "properties": {
        "zone": {
          "title": "zone",
          "$ref": "#/definitions/ZoneReference"
        },
        "shippingRates": {
          "title": "shippingRates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRateDraft"
          }
        }
      },
      "required": [
        "zone",
        "shippingRates"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zoneratedraft"
    },
    "ShoppingList": {
      "title": "ShoppingList",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFields"
            },
            "customer": {
              "title": "customer",
              "$ref": "#/definitions/CustomerReference"
            },
            "deleteDaysAfterLastModification": {
              "title": "deleteDaysAfterLastModification",
              "format": "int64",
              "type": "number"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "key": {
              "title": "key",
              "type": "string"
            },
            "lineItems": {
              "title": "lineItems",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShoppingListLineItem"
              }
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            },
            "textLineItems": {
              "title": "textLineItems",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TextLineItem"
              }
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingList",
      "x-annotation-updateType": "ShoppingListUpdate"
    },
    "ShoppingListAddLineItemAction": {
      "title": "ShoppingListAddLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "addedAt": {
              "title": "addedAt",
              "type": "string",
              "format": "date-time"
            },
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFieldsDraft"
            },
            "sku": {
              "title": "sku",
              "type": "string"
            },
            "productId": {
              "title": "productId",
              "type": "string"
            },
            "variantId": {
              "title": "variantId",
              "format": "int64",
              "type": "number"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-lineitem"
    },
    "ShoppingListAddTextLineItemAction": {
      "title": "ShoppingListAddTextLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "custom": {
              "title": "custom",
              "$ref": "#/definitions/CustomFieldsDraft"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "addedAt": {
              "title": "addedAt",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-textlineitem"
    },
    "ShoppingListChangeLineItemQuantityAction": {
      "title": "ShoppingListChangeLineItemQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            }
          },
          "required": [
            "lineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitem-quantity"
    },
    "ShoppingListChangeLineItemsOrderAction": {
      "title": "ShoppingListChangeLineItemsOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "lineItemOrder": {
              "title": "lineItemOrder",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "lineItemOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitems-order"
    },
    "ShoppingListChangeNameAction": {
      "title": "ShoppingListChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-name"
    },
    "ShoppingListChangeTextLineItemNameAction": {
      "title": "ShoppingListChangeTextLineItemNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "textLineItemId": {
              "title": "textLineItemId",
              "type": "string"
            }
          },
          "required": [
            "name",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-name"
    },
    "ShoppingListChangeTextLineItemQuantityAction": {
      "title": "ShoppingListChangeTextLineItemQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "textLineItemId": {
              "title": "textLineItemId",
              "type": "string"
            }
          },
          "required": [
            "quantity",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-quantity"
    },
    "ShoppingListChangeTextLineItemsOrderAction": {
      "title": "ShoppingListChangeTextLineItemsOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "textLineItemOrder": {
              "title": "textLineItemOrder",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "textLineItemOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitems-order"
    },
    "ShoppingListDraft": {
      "title": "ShoppingListDraft",
      "type": "object",
      "properties": {
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "customer": {
          "title": "customer",
          "$ref": "#/definitions/CustomerReference"
        },
        "deleteDaysAfterLastModification": {
          "title": "deleteDaysAfterLastModification",
          "format": "int64",
          "type": "number"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "lineItems": {
          "title": "lineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingListLineItemDraft"
          }
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "slug": {
          "title": "slug",
          "$ref": "#/definitions/LocalizedString"
        },
        "textLineItems": {
          "title": "textLineItems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextLineItemDraft"
          }
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingListDraft"
    },
    "ShoppingListLineItem": {
      "title": "ShoppingListLineItem",
      "type": "object",
      "properties": {
        "addedAt": {
          "title": "addedAt",
          "type": "string",
          "format": "date-time"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        },
        "deactivatedAt": {
          "title": "deactivatedAt",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "productId": {
          "title": "productId",
          "type": "string"
        },
        "productSlug": {
          "title": "productSlug",
          "$ref": "#/definitions/LocalizedString"
        },
        "productType": {
          "title": "productType",
          "$ref": "#/definitions/ProductTypeReference"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "variant": {
          "title": "variant",
          "$ref": "#/definitions/ProductVariant"
        },
        "variantId": {
          "title": "variantId",
          "format": "int64",
          "type": "number"
        }
      },
      "required": [
        "addedAt",
        "id",
        "name",
        "productId",
        "productType",
        "quantity"
      ],
      "x-annotation-package": "ShoppingList"
    },
    "ShoppingListLineItemDraft": {
      "title": "ShoppingListLineItemDraft",
      "type": "object",
      "properties": {
        "addedAt": {
          "title": "addedAt",
          "type": "string",
          "format": "date-time"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "sku": {
          "title": "sku",
          "type": "string"
        },
        "productId": {
          "title": "productId",
          "type": "string"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        },
        "variantId": {
          "title": "variantId",
          "format": "int64",
          "type": "number"
        }
      },
      "x-annotation-package": "ShoppingList"
    },
    "ShoppingListPagedQueryResponse": {
      "title": "ShoppingListPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShoppingList"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList"
    },
    "ShoppingListReference": {
      "title": "ShoppingListReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/ShoppingList"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shopping-lists.html#shopping-list"
    },
    "ShoppingListRemoveLineItemAction": {
      "title": "ShoppingListRemoveLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "quantity": {
              "title": "quantity",
              "type": "number"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-lineitem"
    },
    "ShoppingListRemoveTextLineItemAction": {
      "title": "ShoppingListRemoveTextLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "quantity": {
              "title": "quantity",
              "type": "number"
            },
            "textLineItemId": {
              "title": "textLineItemId",
              "type": "string"
            }
          },
          "required": [
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-textlineitem"
    },
    "ShoppingListSetCustomFieldAction": {
      "title": "ShoppingListSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customField"
    },
    "ShoppingListSetCustomTypeAction": {
      "title": "ShoppingListSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customType"
    },
    "ShoppingListSetCustomerAction": {
      "title": "ShoppingListSetCustomerAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "customer": {
              "title": "customer",
              "$ref": "#/definitions/Customer"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customer"
    },
    "ShoppingListSetDeleteDaysAfterLastModificationAction": {
      "title": "ShoppingListSetDeleteDaysAfterLastModificationAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "deleteDaysAfterLastModification": {
              "title": "deleteDaysAfterLastModification",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-deletedaysafterlastmodification"
    },
    "ShoppingListSetDescriptionAction": {
      "title": "ShoppingListSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-description"
    },
    "ShoppingListSetKeyAction": {
      "title": "ShoppingListSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-key"
    },
    "ShoppingListSetLineItemCustomFieldAction": {
      "title": "ShoppingListSetLineItemCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-customfield"
    },
    "ShoppingListSetLineItemCustomTypeAction": {
      "title": "ShoppingListSetLineItemCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "lineItemId": {
              "title": "lineItemId",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "required": [
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-custom-type"
    },
    "ShoppingListSetSlugAction": {
      "title": "ShoppingListSetSlugAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "slug": {
              "title": "slug",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-slug"
    },
    "ShoppingListSetTextLineItemCustomFieldAction": {
      "title": "ShoppingListSetTextLineItemCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "textLineItemId": {
              "title": "textLineItemId",
              "type": "string"
            },
            "value": {
              "title": "value",
              "type": "string"
            }
          },
          "required": [
            "name",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-customfield"
    },
    "ShoppingListSetTextLineItemCustomTypeAction": {
      "title": "ShoppingListSetTextLineItemCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "fields": {
              "title": "fields",
              "type": "string"
            },
            "textLineItemId": {
              "title": "textLineItemId",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/TypeReference"
            }
          },
          "required": [
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-custom-type"
    },
    "ShoppingListSetTextLineItemDescriptionAction": {
      "title": "ShoppingListSetTextLineItemDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "textLineItemId": {
              "title": "textLineItemId",
              "type": "string"
            }
          },
          "required": [
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-description"
    },
    "ShoppingListUpdate": {
      "title": "ShoppingListUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShoppingListUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "ShoppingList"
    },
    "ShoppingListUpdateAction": {
      "title": "ShoppingListUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "ShoppingList"
    },
    "TextLineItem": {
      "title": "TextLineItem",
      "type": "object",
      "properties": {
        "addedAt": {
          "title": "addedAt",
          "type": "string",
          "format": "date-time"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFields"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        }
      },
      "required": [
        "addedAt",
        "id",
        "name",
        "quantity"
      ],
      "x-annotation-package": "ShoppingList"
    },
    "TextLineItemDraft": {
      "title": "TextLineItemDraft",
      "type": "object",
      "properties": {
        "addedAt": {
          "title": "addedAt",
          "type": "string",
          "format": "date-time"
        },
        "custom": {
          "title": "custom",
          "$ref": "#/definitions/CustomFieldsDraft"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "quantity": {
          "title": "quantity",
          "type": "number"
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-package": "ShoppingList"
    },
    "State": {
      "title": "State",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "type": {
              "title": "type",
              "$ref": "#/definitions/StateTypeEnum"
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "initial": {
              "title": "initial",
              "type": "boolean"
            },
            "builtIn": {
              "title": "builtIn",
              "type": "boolean"
            },
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              }
            },
            "transitions": {
              "title": "transitions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateReference"
              }
            }
          },
          "required": [
            "key",
            "type",
            "initial",
            "builtIn"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state",
      "x-annotation-updateType": "StateUpdate"
    },
    "StateAddRolesAction": {
      "title": "StateAddRolesAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              }
            }
          },
          "required": [
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#add-state-roles"
    },
    "StateChangeInitialAction": {
      "title": "StateChangeInitialAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "initial": {
              "title": "initial",
              "type": "boolean"
            }
          },
          "required": [
            "initial"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-initial-state"
    },
    "StateChangeKeyAction": {
      "title": "StateChangeKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-key"
    },
    "StateChangeTypeAction": {
      "title": "StateChangeTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "type": {
              "title": "type",
              "$ref": "#/definitions/StateTypeEnum"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-type"
    },
    "StateDraft": {
      "title": "StateDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "type": {
          "title": "type",
          "$ref": "#/definitions/StateTypeEnum"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "initial": {
          "title": "initial",
          "type": "boolean"
        },
        "roles": {
          "title": "roles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRoleEnum"
          }
        },
        "transitions": {
          "title": "transitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateReference"
          }
        }
      },
      "required": [
        "key",
        "type"
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#statedraft"
    },
    "StatePagedQueryResponse": {
      "title": "StatePagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/State"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State"
    },
    "StateReference": {
      "title": "StateReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/State"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state"
    },
    "StateRemoveRolesAction": {
      "title": "StateRemoveRolesAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              }
            }
          },
          "required": [
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#remove-state-roles"
    },
    "StateRoleEnum": {
      "title": "StateRoleEnum",
      "enum": [
        "ReviewIncludedInStatistics"
      ],
      "type": "string",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#staterole"
    },
    "StateSetDescriptionAction": {
      "title": "StateSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-description"
    },
    "StateSetNameAction": {
      "title": "StateSetNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-name"
    },
    "StateSetRolesAction": {
      "title": "StateSetRolesAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "roles": {
              "title": "roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              }
            }
          },
          "required": [
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-roles"
    },
    "StateSetTransitionsAction": {
      "title": "StateSetTransitionsAction",
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "transitions": {
              "title": "transitions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateReference"
              }
            }
          },
          "required": [
            "transitions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-transitions"
    },
    "StateTypeEnum": {
      "title": "StateTypeEnum",
      "enum": [
        "OrderState",
        "LineItemState",
        "ProductState",
        "ReviewState",
        "PaymentState"
      ],
      "type": "string",
      "x-annotation-package": "State"
    },
    "StateUpdate": {
      "title": "StateUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "State"
    },
    "StateUpdateAction": {
      "title": "StateUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "State"
    },
    "AzureServiceBusDestination": {
      "title": "AzureServiceBusDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "connectionString": {
              "title": "connectionString",
              "type": "string"
            }
          },
          "required": [
            "connectionString"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "ChangeSubscription": {
      "title": "ChangeSubscription",
      "type": "object",
      "properties": {
        "resourceTypeId": {
          "title": "resourceTypeId",
          "type": "string"
        }
      },
      "required": [
        "resourceTypeId"
      ],
      "x-annotation-package": "Subscription"
    },
    "Destination": {
      "title": "Destination",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Subscription"
    },
    "IronMqDestination": {
      "title": "IronMqDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "uri": {
              "title": "uri",
              "type": "string"
            }
          },
          "required": [
            "uri"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "MessageDelivery": {
      "title": "MessageDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "id": {
              "title": "id",
              "type": "string"
            },
            "version": {
              "title": "version",
              "format": "int64",
              "type": "number"
            },
            "createdAt": {
              "title": "createdAt",
              "type": "string",
              "format": "date-time"
            },
            "lastModifiedAt": {
              "title": "lastModifiedAt",
              "type": "string",
              "format": "date-time"
            },
            "sequenceNumber": {
              "title": "sequenceNumber",
              "format": "int64",
              "type": "number"
            },
            "resourceVersion": {
              "title": "resourceVersion",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resourceVersion"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#message-subscription-payload"
    },
    "MessageSubscription": {
      "title": "MessageSubscription",
      "type": "object",
      "properties": {
        "resourceTypeId": {
          "title": "resourceTypeId",
          "type": "string"
        },
        "types": {
          "title": "types",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resourceTypeId"
      ],
      "x-annotation-package": "Subscription"
    },
    "ResourceCreatedDelivery": {
      "title": "ResourceCreatedDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "version": {
              "title": "version",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "version"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcecreated-payload"
    },
    "ResourceDeletedDelivery": {
      "title": "ResourceDeletedDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "version": {
              "title": "version",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "version"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcedeleted-payload"
    },
    "ResourceUpdatedDelivery": {
      "title": "ResourceUpdatedDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "version": {
              "title": "version",
              "format": "int64",
              "type": "number"
            },
            "oldVersion": {
              "title": "oldVersion",
              "format": "int64",
              "type": "number"
            }
          },
          "required": [
            "version",
            "oldVersion"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourceupdated-payload"
    },
    "SnsDestination": {
      "title": "SnsDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "accessKey": {
              "title": "accessKey",
              "type": "string"
            },
            "accessSecret": {
              "title": "accessSecret",
              "type": "string"
            },
            "topicArn": {
              "title": "topicArn",
              "type": "string"
            }
          },
          "required": [
            "accessKey",
            "accessSecret",
            "topicArn"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "SqsDestination": {
      "title": "SqsDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "accessKey": {
              "title": "accessKey",
              "type": "string"
            },
            "accessSecret": {
              "title": "accessSecret",
              "type": "string"
            },
            "queueURL": {
              "title": "queueURL",
              "type": "string"
            },
            "region": {
              "title": "region",
              "type": "string"
            }
          },
          "required": [
            "accessKey",
            "accessSecret",
            "queueURL",
            "region"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "Subscription": {
      "title": "Subscription",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "changes": {
              "title": "changes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeSubscription"
              }
            },
            "destination": {
              "title": "destination",
              "$ref": "#/definitions/Destination"
            },
            "key": {
              "title": "key",
              "type": "string"
            },
            "messages": {
              "title": "messages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSubscription"
              }
            }
          },
          "required": [
            "changes",
            "destination",
            "messages"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscription",
      "x-annotation-updateType": "SubscriptionUpdate"
    },
    "SubscriptionDelivery": {
      "title": "SubscriptionDelivery",
      "discriminator": "notificationType",
      "type": "object",
      "properties": {
        "projectKey": {
          "title": "projectKey",
          "type": "string"
        },
        "notificationType": {
          "title": "notificationType",
          "type": "string"
        },
        "resource": {
          "title": "resource",
          "$ref": "#/definitions/Reference"
        }
      },
      "required": [
        "projectKey",
        "notificationType",
        "resource"
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#delivery"
    },
    "SubscriptionDraft": {
      "title": "SubscriptionDraft",
      "type": "object",
      "properties": {
        "changes": {
          "title": "changes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangeSubscription"
          }
        },
        "destination": {
          "title": "destination",
          "$ref": "#/definitions/Destination"
        },
        "key": {
          "title": "key",
          "type": "string"
        },
        "messages": {
          "title": "messages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageSubscription"
          }
        }
      },
      "required": [
        "destination"
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscriptiondraft"
    },
    "SubscriptionPagedQueryResponse": {
      "title": "SubscriptionPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "SubscriptionSetChangesAction": {
      "title": "SubscriptionSetChangesAction",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionUpdateAction"
        },
        {
          "properties": {
            "changes": {
              "title": "changes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeSubscription"
              }
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "SubscriptionSetKeyAction": {
      "title": "SubscriptionSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "SubscriptionSetMessagesAction": {
      "title": "SubscriptionSetMessagesAction",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionUpdateAction"
        },
        {
          "properties": {
            "messages": {
              "title": "messages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSubscription"
              }
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "SubscriptionUpdate": {
      "title": "SubscriptionUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubscriptionUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Subscription"
    },
    "SubscriptionUpdateAction": {
      "title": "SubscriptionUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Subscription"
    },
    "SubRate": {
      "title": "SubRate",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        },
        "amount": {
          "title": "amount",
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        }
      },
      "required": [
        "name",
        "amount"
      ],
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#subrate"
    },
    "TaxCategory": {
      "title": "TaxCategory",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "description": {
              "title": "description",
              "type": "string"
            },
            "rates": {
              "title": "rates",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxRate"
              }
            },
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "name",
            "rates"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory",
      "x-annotation-updateType": "TaxCategoryUpdate"
    },
    "TaxCategoryAddTaxRateAction": {
      "title": "TaxCategoryAddTaxRateAction",
      "example": {
        "action": "addTaxRate",
        "taxRate": {
          "name": "TaxRateName",
          "amount": 0.3,
          "includedInPrice": true,
          "country": "DE",
          "state": "state"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "taxRate": {
              "title": "taxRate",
              "$ref": "#/definitions/TaxRateDraft"
            }
          },
          "required": [
            "taxRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategoryChangeNameAction": {
      "title": "TaxCategoryChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategoryDraft": {
      "title": "TaxCategoryDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "rates": {
          "title": "rates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRateDraft"
          }
        },
        "key": {
          "title": "key",
          "type": "string"
        }
      },
      "required": [
        "name",
        "rates"
      ],
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategorydraft"
    },
    "TaxCategoryPagedQueryResponse": {
      "title": "TaxCategoryPagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCategory"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategoryReference": {
      "title": "TaxCategoryReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory"
    },
    "TaxCategoryRemoveTaxRateAction": {
      "title": "TaxCategoryRemoveTaxRateAction",
      "example": {
        "action": "removeTaxRate",
        "taxRateId": "{{taxRateID}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "taxRateId": {
              "title": "taxRateId",
              "type": "string"
            }
          },
          "required": [
            "taxRateId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategoryReplaceTaxRateAction": {
      "title": "TaxCategoryReplaceTaxRateAction",
      "example": {
        "action": "replaceTaxRate",
        "taxRateId": "{{taxRateID}}",
        "taxRate": {
          "name": "TaxRateName",
          "amount": 0.4,
          "includedInPrice": true,
          "country": "DE",
          "state": "state"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "taxRateId": {
              "title": "taxRateId",
              "type": "string"
            },
            "taxRate": {
              "title": "taxRate",
              "$ref": "#/definitions/TaxRateDraft"
            }
          },
          "required": [
            "taxRateId",
            "taxRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategorySetDescriptionAction": {
      "title": "TaxCategorySetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategorySetKeyAction": {
      "title": "TaxCategorySetKeyAction",
      "example": {
        "action": "setKey",
        "key": "new Key"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategoryUpdate": {
      "title": "TaxCategoryUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCategoryUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "TaxCategory"
    },
    "TaxCategoryUpdateAction": {
      "title": "TaxCategoryUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "TaxCategory"
    },
    "TaxRate": {
      "title": "TaxRate",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "amount": {
          "title": "amount",
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "includedInPrice": {
          "title": "includedInPrice",
          "type": "boolean"
        },
        "country": {
          "title": "country",
          "$ref": "#/definitions/CountryCode"
        },
        "state": {
          "title": "state",
          "type": "string"
        },
        "subRates": {
          "title": "subRates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubRate"
          }
        }
      },
      "required": [
        "name",
        "amount",
        "includedInPrice",
        "country"
      ],
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxrate"
    },
    "TaxRateDraft": {
      "title": "TaxRateDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        },
        "amount": {
          "title": "amount",
          "minimum": 0,
          "maximum": 1,
          "type": "number"
        },
        "includedInPrice": {
          "title": "includedInPrice",
          "type": "boolean"
        },
        "country": {
          "title": "country",
          "$ref": "#/definitions/CountryCode"
        },
        "state": {
          "title": "state",
          "type": "string"
        },
        "subRates": {
          "title": "subRates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubRate"
          }
        }
      },
      "required": [
        "name",
        "includedInPrice",
        "country"
      ],
      "x-annotation-package": "TaxCategory"
    },
    "CustomFieldBooleanType": {
      "title": "CustomFieldBooleanType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#booleantype"
    },
    "CustomFieldDateTimeType": {
      "title": "CustomFieldDateTimeType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetimetype"
    },
    "CustomFieldDateType": {
      "title": "CustomFieldDateType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetype"
    },
    "CustomFieldEnumType": {
      "title": "CustomFieldEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "values": {
              "title": "values",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldEnumValue"
              }
            }
          },
          "required": [
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#enumtype"
    },
    "CustomFieldEnumValue": {
      "title": "CustomFieldEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "label": {
          "title": "label",
          "type": "string"
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-package": "Type"
    },
    "CustomFieldLocalizedEnumType": {
      "title": "CustomFieldLocalizedEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "values": {
              "title": "values",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldLocalizedEnumValue"
              }
            }
          },
          "required": [
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedenumtype"
    },
    "CustomFieldLocalizedEnumValue": {
      "title": "CustomFieldLocalizedEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "label": {
          "title": "label",
          "$ref": "#/definitions/LocalizedString"
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-package": "Type"
    },
    "CustomFieldLocalizedStringType": {
      "title": "CustomFieldLocalizedStringType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedstringtype"
    },
    "CustomFieldMoneyType": {
      "title": "CustomFieldMoneyType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#moneytype"
    },
    "CustomFieldNumberType": {
      "title": "CustomFieldNumberType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#numbertype"
    },
    "CustomFieldReferenceType": {
      "title": "CustomFieldReferenceType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "referenceTypeId": {
              "title": "referenceTypeId",
              "$ref": "#/definitions/ReferenceTypeId"
            }
          },
          "required": [
            "referenceTypeId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#referencetype"
    },
    "CustomFieldSetType": {
      "title": "CustomFieldSetType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "elementType": {
              "title": "elementType",
              "$ref": "#/definitions/FieldType"
            }
          },
          "required": [
            "elementType"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#settype"
    },
    "CustomFieldStringType": {
      "title": "CustomFieldStringType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#stringtype"
    },
    "CustomFieldTimeType": {
      "title": "CustomFieldTimeType",
      "$ref": "#/definitions/FieldType",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#timetype"
    },
    "CustomFields": {
      "title": "CustomFields",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "$ref": "#/definitions/TypeReference"
        },
        "fields": {
          "title": "fields",
          "$ref": "#/definitions/FieldContainer"
        }
      },
      "required": [
        "type",
        "fields"
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#custom"
    },
    "CustomFieldsDraft": {
      "title": "CustomFieldsDraft",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "object"
        },
        "fields": {
          "title": "fields",
          "$ref": "#/definitions/FieldContainer"
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfieldsdraft"
    },
    "FieldContainer": {
      "title": "FieldContainer",
      "type": "object",
      "additionalProperties": {
        "title": "//",
        "required": true,
        "type": "string"
      },
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfields",
      "x-annotation-asMap": {
        "key": "string",
        "value": "any"
      }
    },
    "FieldDefinition": {
      "title": "FieldDefinition",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "object"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "label": {
          "title": "label",
          "$ref": "#/definitions/LocalizedString"
        },
        "required": {
          "title": "required",
          "type": "boolean"
        },
        "inputHint": {
          "title": "inputHint",
          "type": "string"
        }
      },
      "required": [
        "type",
        "name",
        "label",
        "required"
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fielddefinition"
    },
    "FieldType": {
      "title": "FieldType",
      "discriminator": "name",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fieldtype"
    },
    "ResourceTypeId": {
      "title": "ResourceTypeId",
      "enum": [
        "asset",
        "category",
        "channel",
        "customer",
        "order",
        "inventory-entry",
        "line-item",
        "custom-line-item",
        "product-price",
        "payment",
        "payment-interface-interaction",
        "review",
        "shopping-list",
        "shopping-list-text-line-item",
        "discount-code",
        "cart-discount",
        "customer-group"
      ],
      "type": "string",
      "x-annotation-package": "Type"
    },
    "Type": {
      "title": "Type",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            },
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            },
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            },
            "resourceTypeIds": {
              "title": "resourceTypeIds",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceTypeId"
              }
            },
            "fieldDefinitions": {
              "title": "fieldDefinitions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FieldDefinition"
              }
            }
          },
          "required": [
            "key",
            "name",
            "resourceTypeIds",
            "fieldDefinitions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type",
      "x-annotation-updateType": "TypeUpdate"
    },
    "TypeAddEnumValueAction": {
      "title": "TypeAddEnumValueAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldName": {
              "title": "fieldName",
              "type": "string"
            },
            "value": {
              "title": "value",
              "$ref": "#/definitions/CustomFieldEnumValue"
            }
          },
          "required": [
            "fieldName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-enumvalue-to-fielddefinition"
    },
    "TypeAddFieldDefinitionAction": {
      "title": "TypeAddFieldDefinitionAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldDefinition": {
              "title": "fieldDefinition",
              "$ref": "#/definitions/FieldDefinition"
            }
          },
          "required": [
            "fieldDefinition"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-fielddefinition"
    },
    "TypeAddLocalizedEnumValueAction": {
      "title": "TypeAddLocalizedEnumValueAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldName": {
              "title": "fieldName",
              "type": "string"
            },
            "value": {
              "title": "value",
              "$ref": "#/definitions/CustomFieldLocalizedEnumValue"
            }
          },
          "required": [
            "fieldName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-localizedenumvalue-to-fielddefinition"
    },
    "TypeChangeEnumValueOrderAction": {
      "title": "TypeChangeEnumValueOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldName": {
              "title": "fieldName",
              "type": "string"
            },
            "keys": {
              "title": "keys",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "fieldName",
            "keys"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-enumvalues"
    },
    "TypeChangeFieldDefinitionLabelAction": {
      "title": "TypeChangeFieldDefinitionLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldName": {
              "title": "fieldName",
              "type": "string"
            },
            "label": {
              "title": "label",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "fieldName",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type"
    },
    "TypeChangeFieldDefinitionOrderAction": {
      "title": "TypeChangeFieldDefinitionOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldNames": {
              "title": "fieldNames",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "fieldNames"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-fielddefinitions"
    },
    "TypeChangeKeyAction": {
      "title": "TypeChangeKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "key": {
              "title": "key",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-key"
    },
    "TypeChangeLabelAction": {
      "title": "TypeChangeLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldName": {
              "title": "fieldName",
              "type": "string"
            },
            "label": {
              "title": "label",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "fieldName",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-label"
    },
    "TypeChangeLocalizedEnumValueOrderAction": {
      "title": "TypeChangeLocalizedEnumValueOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldName": {
              "title": "fieldName",
              "type": "string"
            },
            "keys": {
              "title": "keys",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "fieldName",
            "keys"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-localizedenumvalues"
    },
    "TypeChangeNameAction": {
      "title": "TypeChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-name"
    },
    "TypeDraft": {
      "title": "TypeDraft",
      "type": "object",
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "name": {
          "title": "name",
          "$ref": "#/definitions/LocalizedString"
        },
        "description": {
          "title": "description",
          "$ref": "#/definitions/LocalizedString"
        },
        "resourceTypeIds": {
          "title": "resourceTypeIds",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeId"
          }
        },
        "fieldDefinitions": {
          "title": "fieldDefinitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDefinition"
          }
        }
      },
      "required": [
        "key",
        "name",
        "resourceTypeIds"
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#typedraft"
    },
    "TypePagedQueryResponse": {
      "title": "TypePagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Type"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type"
    },
    "TypeReference": {
      "title": "TypeReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Type"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type"
    },
    "TypeRemoveFieldDefinitionAction": {
      "title": "TypeRemoveFieldDefinitionAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "fieldName": {
              "title": "fieldName",
              "type": "string"
            }
          },
          "required": [
            "fieldName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#remove-fielddefinition"
    },
    "TypeSetDescriptionAction": {
      "title": "TypeSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "$ref": "#/definitions/LocalizedString"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#set-description"
    },
    "TypeUpdate": {
      "title": "TypeUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Type"
    },
    "TypeUpdateAction": {
      "title": "TypeUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Type"
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "country": {
          "title": "country",
          "$ref": "#/definitions/CountryCode"
        },
        "state": {
          "title": "state",
          "type": "string"
        }
      },
      "required": [
        "country"
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#location"
    },
    "Zone": {
      "title": "Zone",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            },
            "description": {
              "title": "description",
              "type": "string"
            },
            "locations": {
              "title": "locations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          },
          "required": [
            "name",
            "locations"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone",
      "x-annotation-updateType": "ZoneUpdate"
    },
    "ZoneAddLocationAction": {
      "title": "ZoneAddLocationAction",
      "example": {
        "action": "addLocation",
        "location": {
          "country": "AT",
          "state": ""
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "location": {
              "title": "location",
              "$ref": "#/definitions/Location"
            }
          },
          "required": [
            "location"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#add-location"
    },
    "ZoneChangeNameAction": {
      "title": "ZoneChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "name": {
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#change-name"
    },
    "ZoneDraft": {
      "title": "ZoneDraft",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "locations": {
          "title": "locations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          }
        }
      },
      "required": [
        "name",
        "locations"
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zonedraft"
    },
    "ZonePagedQueryResponse": {
      "title": "ZonePagedQueryResponse",
      "allOf": [
        {
          "$ref": "#/definitions/PagedQueryResponse"
        },
        {
          "properties": {
            "results": {
              "title": "results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Zone"
              }
            }
          },
          "required": [
            "results"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone"
    },
    "ZoneReference": {
      "title": "ZoneReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "obj": {
              "title": "obj",
              "$ref": "#/definitions/Zone"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone"
    },
    "ZoneRemoveLocationAction": {
      "title": "ZoneRemoveLocationAction",
      "example": {
        "action": "removeLocation",
        "location": {
          "country": "AT",
          "state": ""
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "location": {
              "title": "location",
              "$ref": "#/definitions/Location"
            }
          },
          "required": [
            "location"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#remove-location"
    },
    "ZoneSetDescriptionAction": {
      "title": "ZoneSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "description": {
              "title": "description",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#set-description"
    },
    "ZoneUpdate": {
      "title": "ZoneUpdate",
      "allOf": [
        {
          "$ref": "#/definitions/Update"
        },
        {
          "properties": {
            "actions": {
              "title": "actions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ZoneUpdateAction"
              }
            }
          },
          "required": [
            "actions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-package": "Zone"
    },
    "ZoneUpdateAction": {
      "title": "ZoneUpdateAction",
      "discriminator": "action",
      "$ref": "#/definitions/UpdateAction",
      "x-annotation-package": "Zone"
    }
  },
  "parameters": {
    "trait:expandable:expand": {
      "type": "string",
      "in": "query",
      "name": "expand"
    },
    "trait:paging:limit": {
      "description": "Number of results returned",
      "type": "number",
      "in": "query",
      "name": "limit"
    },
    "trait:paging:offset": {
      "description": "Number of results skipped",
      "type": "number",
      "in": "query",
      "name": "offset"
    },
    "trait:paging:withTotal": {
      "description": "Calculate total number of results",
      "type": "boolean",
      "in": "query",
      "name": "withTotal"
    },
    "trait:versioned:version": {
      "required": true,
      "description": "Last seen version of the resource",
      "type": "number",
      "in": "query",
      "name": "version"
    },
    "trait:priceSelecting:priceCurrency": {
      "type": "string",
      "in": "query",
      "name": "priceCurrency"
    },
    "trait:priceSelecting:priceCountry": {
      "type": "string",
      "in": "query",
      "name": "priceCountry"
    },
    "trait:priceSelecting:priceCustomerGroup": {
      "type": "string",
      "in": "query",
      "name": "priceCustomerGroup"
    },
    "trait:priceSelecting:priceChannel": {
      "type": "string",
      "in": "query",
      "name": "priceChannel"
    }
  },
  "responses": {
    "trait:errorable:400": {
      "description": "## Bad Request\n\nA 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.\nBad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or\na parameter that references another resource that does not exist. Clients need to resolve the problems mentioned\nin the response before re-sending the request.\n\nThe following general error codes can appear in responses with the HTTP status code `400`:\n\n* `InvalidInput`\n  Invalid input has been sent to the service.\n  The client application should validate the input according to the constraints described in the error message\n  before sending the request.\n\n* `InvalidOperation`\n  The resource(s) involved in the request are not in a valid state for the operation. The client application\n  should validate the constraints described in the error message before sending the request.\n\n* `InvalidField`\n  A field has an invalid value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n  * `invalidValue` - *\n    The invalid value.\n  * `allowedValues` - Array of * - Optional\n    A fixed set of allowed values for the field, if any.\n\n* `RequiredField`\n  A required field is missing a value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n\n* `DuplicateField`\n  A value for a field conflicts with an existing duplicate value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n  * `duplicateValue` - *\n    The offending duplicate value.\n",
      "examples": {
        "application/json": {
          "statusCode": 409,
          "message": "Version mismatch. Concurrent modification.",
          "errors": [
            {
              "code": "ConcurrentModification",
              "message": "Version mismatch. Concurrent modification."
            }
          ]
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "trait:errorable:404": {
      "description": "## Not Found\n\nA 404 indicates that the addressed resource was not found / does not exist.\n\nThe following general error codes can appear in responses with the HTTP status code `404`:\n\n* `ResourceNotFound`\n  The resource addressed by the request URL does not exist.\n",
      "examples": {
        "application/json": {
          "statusCode": 409,
          "message": "Version mismatch. Concurrent modification.",
          "errors": [
            {
              "code": "ConcurrentModification",
              "message": "Version mismatch. Concurrent modification."
            }
          ]
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "trait:errorable:500": {
      "description": "## Internal Server Error\n\nA 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent\nrequests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs\nto be reported and resolved.\n\nThe following general error codes can appear in responses with the HTTP status code `500`:\n\n* `General`\n  A server-side problem occurred that is not further specified.\n  These errors [should be reported](http://support.sphere.io/){:target=\"_blank\"}.\n",
      "examples": {
        "application/json": {
          "statusCode": 409,
          "message": "Version mismatch. Concurrent modification.",
          "errors": [
            {
              "code": "ConcurrentModification",
              "message": "Version mismatch. Concurrent modification."
            }
          ]
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "trait:errorable:503": {
      "description": "## Service Unavailable\n\nThe following general error codes can appear in responses with the HTTP status code `503`:\n\n* `OverCapacity`\n  The service is having trouble handling the load. The client application should retry the request with\n  exponential backoff up to a point where further delay is unacceptable.\n\n* `PendingOperation`\n  A previous conflicting operation is still pending and needs to finish before the request can succeed.\n  The client application should retry the request with exponential backoff up to a point where further delay\n  is unaceptable. If these errors persist, [should be reported](http://support.sphere.io/){:target=\"_blank\"}.\n",
      "examples": {
        "application/json": {
          "statusCode": 409,
          "message": "Version mismatch. Concurrent modification.",
          "errors": [
            {
              "code": "ConcurrentModification",
              "message": "Version mismatch. Concurrent modification."
            }
          ]
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "trait:deprecatable:200": {
      "description": "",
      "headers": {
        "X-DEPRECATION-NOTICE": {
          "description": "As the SPHERE.IO platform evolves, some features are superseded by better implementations and should not\nbe used anymore. The goal of our deprecation process is to communicate at runtime with users if they happen\nto use such deprecated feature. To achieve this in a non breaking fashion SPHERE.IO uses an additionnal\ncustom HTTP header called \"X-DEPRECATION-NOTICE\" with a specific message relative to the deprecation.\n",
          "type": "string",
          "displayName": "X-DEPRECATION-NOTICE"
        }
      }
    },
    "trait:conflicting:409": {
      "description": "## Conflict\n\nA 409 indicates that the resource targeted by the request (with the intention to modify or delete the resource),\nwas modified since the last time the client has requested it. As a reaction, the client will usually want to\nrequest the newest version of the resource to see what has changed and may then decide to apply the same or other\nchanges to the new version, or discard his changes entirely.\n\nConflicts indicate a concurrent modification and usually occur on versioned resources, for which the client has\nto include the version of the resource whenever he intends to apply modifications to it.\n\nThe following general error codes can appear in responses with the HTTP status code `409`:\n\n* `ConcurrentModification`\n  The request conflicts with the current state of the involved resource(s).\n  Typically, the request attempts to modify a resource that is out of date,\n  i.e. that has been modified by another client since the last time it was retrieved.\n  The client application should resolve the conflict (with or without involving the end-user)\n  before retrying the request.\n",
      "examples": {
        "application/json": {
          "statusCode": 409,
          "message": "Version mismatch. Concurrent modification.",
          "errors": [
            {
              "code": "ConcurrentModification",
              "message": "Version mismatch. Concurrent modification."
            }
          ]
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "paths": {
    "/{projectKey}": {
      "post": {
        "description": "Update project",
        "operationId": "POST_projectKey",
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "version": 1,
                "key": "test-project",
                "name": "Some project name",
                "countries": [
                  "DE",
                  "US"
                ],
                "currencies": [
                  "EUR"
                ],
                "languages": [
                  "en"
                ],
                "createdAt": "2013-11-01T15:14:34.325Z",
                "trialUntil": "2013-11-01T15:14:34.325Z",
                "messages": {
                  "enabled": false
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ProjectUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "The Endpoint is responding a limited set of information about settings and configuration of the project.\n",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey",
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "version": 1,
                "key": "test-project",
                "name": "Some project name",
                "countries": [
                  "DE",
                  "US"
                ],
                "currencies": [
                  "EUR"
                ],
                "languages": [
                  "en"
                ],
                "createdAt": "2013-11-01T15:14:34.325Z",
                "trialUntil": "2013-11-01T15:14:34.325Z",
                "messages": {
                  "enabled": false
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Project"
    },
    "/{projectKey}/carts": {
      "get": {
        "description": "Query carts",
        "operationId": "GET_projectKey-carts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "customerId"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Cart",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-carts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "type": "Cart",
                "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                "version": 5,
                "createdAt": "2015-09-22T15:36:17.510Z",
                "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                "lineItems": [
                  {
                    "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "name": {
                      "en": "SAPPHIRE"
                    },
                    "productType": {
                      "typeId": "product-type",
                      "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                      "version": 8
                    },
                    "productSlug": {
                      "en": "sapphire1421832124423"
                    },
                    "variant": {
                      "id": 1,
                      "sku": "sku_SAPPHIRE_variant1_1421832124423",
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 2800
                          },
                          "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                        }
                      ],
                      "images": [
                        {
                          "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                          "dimensions": {
                            "w": 1400,
                            "h": 1400
                          }
                        }
                      ],
                      "attributes": [],
                      "assets": []
                    },
                    "price": {
                      "value": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 2800
                      },
                      "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                    },
                    "quantity": 2,
                    "discountedPricePerQuantity": [],
                    "state": [
                      {
                        "quantity": 2,
                        "state": {
                          "typeId": "state",
                          "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                        }
                      }
                    ],
                    "priceMode": "Platform",
                    "lineItemMode": "Standard",
                    "totalPrice": {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "EUR",
                      "centAmount": 5600
                    }
                  }
                ],
                "cartState": "Active",
                "totalPrice": {
                  "type": "centPrecision",
                  "fractionDigits": 2,
                  "currencyCode": "EUR",
                  "centAmount": 5600
                },
                "customLineItems": [],
                "discountCodes": [],
                "inventoryMode": "None",
                "taxMode": "Platform",
                "taxRoundingMode": "HalfEven",
                "refusedGifts": [],
                "origin": "Customer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "currency": "EUR"
              },
              "$ref": "#/definitions/CartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Cart",
      "x-annotation-deleteable": "Cart",
      "x-annotation-createable": "CartDraft"
    },
    "/{projectKey}/carts/{ID}": {
      "post": {
        "description": "Update Cart by ID",
        "operationId": "POST_projectKey-carts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "$ref": "#/definitions/CartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Cart by ID",
        "operationId": "GET_projectKey-carts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Cart by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-carts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/carts/replicate": {
      "post": {
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-carts-replicate",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "type": "Cart",
                "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                "version": 5,
                "createdAt": "2015-09-22T15:36:17.510Z",
                "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                "lineItems": [
                  {
                    "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "name": {
                      "en": "SAPPHIRE"
                    },
                    "productType": {
                      "typeId": "product-type",
                      "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                      "version": 8
                    },
                    "productSlug": {
                      "en": "sapphire1421832124423"
                    },
                    "variant": {
                      "id": 1,
                      "sku": "sku_SAPPHIRE_variant1_1421832124423",
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 2800
                          },
                          "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                        }
                      ],
                      "images": [
                        {
                          "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                          "dimensions": {
                            "w": 1400,
                            "h": 1400
                          }
                        }
                      ],
                      "attributes": [],
                      "assets": []
                    },
                    "price": {
                      "value": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 2800
                      },
                      "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                    },
                    "quantity": 2,
                    "discountedPricePerQuantity": [],
                    "state": [
                      {
                        "quantity": 2,
                        "state": {
                          "typeId": "state",
                          "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                        }
                      }
                    ],
                    "priceMode": "Platform",
                    "lineItemMode": "Standard",
                    "totalPrice": {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "EUR",
                      "centAmount": 5600
                    }
                  }
                ],
                "cartState": "Active",
                "totalPrice": {
                  "type": "centPrecision",
                  "fractionDigits": 2,
                  "currencyCode": "EUR",
                  "centAmount": 5600
                },
                "customLineItems": [],
                "discountCodes": [],
                "inventoryMode": "None",
                "taxMode": "Platform",
                "taxRoundingMode": "HalfEven",
                "refusedGifts": [],
                "origin": "Customer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/ReplicaCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/cart-discounts": {
      "get": {
        "description": "Query cart-discounts",
        "operationId": "GET_projectKey-cart-discounts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create CartDiscount",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-cart-discounts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                "version": 1,
                "createdAt": "1970-01-01T00:00:00.001Z",
                "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                "name": {
                  "en": "Summer Sale"
                },
                "value": {
                  "type": "relative",
                  "permyriad": 1000
                },
                "cartPredicate": "1=1",
                "target": {
                  "type": "lineItems",
                  "predicate": "1=1"
                },
                "sortOrder": "0.1",
                "isActive": true,
                "requiresDiscountCode": false,
                "references": [],
                "stackingMode": "Stacking"
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "name": {
                  "en": "Summer Sale"
                },
                "value": {
                  "type": "relative",
                  "permyriad": 1000
                },
                "cartPredicate": "1=1",
                "target": {
                  "type": "lineItems",
                  "predicate": "1=1"
                },
                "sortOrder": "0.1",
                "isActive": true,
                "requiresDiscountCode": false
              },
              "$ref": "#/definitions/CartDiscountDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "CartDiscount",
      "x-annotation-deleteable": "CartDiscount",
      "x-annotation-createable": "CartDiscountDraft"
    },
    "/{projectKey}/cart-discounts/{ID}": {
      "post": {
        "description": "Update CartDiscount by ID",
        "operationId": "POST_projectKey-cart-discounts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "relative",
                      "permyriad": 1000
                    }
                  }
                ]
              },
              "$ref": "#/definitions/CartDiscountUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get CartDiscount by ID",
        "operationId": "GET_projectKey-cart-discounts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete CartDiscount by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-cart-discounts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/categories": {
      "get": {
        "description": "Query categories",
        "operationId": "GET_projectKey-categories",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Category",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-categories",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                "version": 1,
                "name": {
                  "en": "Hats"
                },
                "slug": {
                  "en": "hats"
                },
                "parent": {
                  "typeId": "category",
                  "id": "123456"
                },
                "ancestors": [],
                "orderHint": "0.000013833188755841543727840",
                "createdAt": "1970-01-01T00:00:00.001Z",
                "lastModifiedAt": "1970-01-01T00:00:00.001Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "name": {
                  "en": "Top hat"
                },
                "slug": {
                  "en": "top-hat"
                },
                "orderHint": "0.1"
              },
              "$ref": "#/definitions/CategoryDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Category",
      "x-annotation-deleteable": "Category",
      "x-annotation-createable": "CategoryDraft"
    },
    "/{projectKey}/categories/key={key}": {
      "post": {
        "description": "Update Category by key",
        "operationId": "POST_projectKey-categories-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/CategoryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Category by key",
        "operationId": "GET_projectKey-categories-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Category by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-categories-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/categories/{ID}": {
      "post": {
        "description": "Update Category by ID",
        "operationId": "POST_projectKey-categories-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/CategoryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Category by ID",
        "operationId": "GET_projectKey-categories-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Category by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-categories-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/channels": {
      "get": {
        "description": "Query channels",
        "operationId": "GET_projectKey-channels",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Channel",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-channels",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                "key": "commercetools",
                "version": 1,
                "roles": [
                  "InventorySupply"
                ],
                "createdAt": "2015-05-28T09:48:35.023Z",
                "lastModifiedAt": "2015-05-28T09:48:35.023Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "key": "commercetools",
                "roles": [
                  "InventorySupply"
                ]
              },
              "$ref": "#/definitions/ChannelDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Channel",
      "x-annotation-deleteable": "Channel",
      "x-annotation-createable": "ChannelDraft"
    },
    "/{projectKey}/channels/{ID}": {
      "post": {
        "description": "Update Channel by ID",
        "operationId": "POST_projectKey-channels-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/ChannelUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Channel by ID",
        "operationId": "GET_projectKey-channels-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Channel by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-channels-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/customers": {
      "get": {
        "description": "Query customers",
        "operationId": "GET_projectKey-customers",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "token"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Customer",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-customers",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "customer": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "email": "<random>@example.com",
                "firstName": "John",
                "lastName": "Doe",
                "password": "secret123"
              },
              "$ref": "#/definitions/CustomerDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Customer",
      "x-annotation-deleteable": "Customer",
      "x-annotation-createable": "CustomerDraft"
    },
    "/{projectKey}/customers/{ID}": {
      "post": {
        "description": "Update Customer by ID",
        "operationId": "POST_projectKey-customers-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/CustomerUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Customer by ID",
        "operationId": "GET_projectKey-customers-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Customer by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-customers-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/customers/password-token={passwordToken}": {
      "get": {
        "description": "Get Customer by passwordToken",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-customers-password-token=passwordToken",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "passwordToken",
          "description": "passwordToken"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withPasswordToken"
    },
    "/{projectKey}/customers/email-token={emailToken}": {
      "get": {
        "description": "Get Customer by emailToken",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-customers-email-token=emailToken",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "emailToken",
          "description": "emailToken"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withEmailToken"
    },
    "/{projectKey}/customers/email-token": {
      "post": {
        "description": "Create a Token for verifying the Customer's Email",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-customers-email-token",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/CustomerCreateEmailToken"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/email": {
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/email/confirm": {
      "post": {
        "description": "Verifies customer's email using a token.",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-customers-email-confirm",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/CustomerEmailVerify"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/password": {
      "post": {
        "description": "Change a customers password",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-customers-password",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/CustomerChangePassword"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/password/reset": {
      "post": {
        "description": "Set a new password using a token.",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-customers-password-reset",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/CustomerResetPassword"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/password-token": {
      "post": {
        "description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.\n",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-customers-password-token",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerToken"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/CustomerCreatePasswordResetToken"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customer-groups": {
      "get": {
        "description": "Query customer-groups",
        "operationId": "GET_projectKey-customer-groups",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create CustomerGroup",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-customer-groups",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "aef9cf41-94ad-4794-8122-62d308900430",
                "version": 2,
                "name": "Webshop user",
                "createdAt": "2017-01-10T06:51:25.896Z",
                "lastModifiedAt": "2017-01-10T06:51:25.946Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "groupName": "Webshop user"
              },
              "$ref": "#/definitions/CustomerGroupDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "CustomerGroup",
      "x-annotation-deleteable": "CustomerGroup",
      "x-annotation-createable": "CustomerGroupDraft"
    },
    "/{projectKey}/customer-groups/key={key}": {
      "post": {
        "description": "Update CustomerGroup by key",
        "operationId": "POST_projectKey-customer-groups-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "$ref": "#/definitions/CustomerGroupUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get CustomerGroup by key",
        "operationId": "GET_projectKey-customer-groups-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete CustomerGroup by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-customer-groups-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/customer-groups/{ID}": {
      "post": {
        "description": "Update CustomerGroup by ID",
        "operationId": "POST_projectKey-customer-groups-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "$ref": "#/definitions/CustomerGroupUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get CustomerGroup by ID",
        "operationId": "GET_projectKey-customer-groups-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete CustomerGroup by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-customer-groups-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/discount-codes": {
      "get": {
        "description": "Query discount-codes",
        "operationId": "GET_projectKey-discount-codes",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create DiscountCode",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-discount-codes",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                "version": 2,
                "code": "SAVE10",
                "name": {
                  "en": "Save10"
                },
                "cartDiscounts": [
                  {
                    "typeId": "cart-discount",
                    "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                  }
                ],
                "isActive": true,
                "cartPredicate": "1=1",
                "references": [],
                "createdAt": "2015-09-15T09:02:29.323Z",
                "lastModifiedAt": "2015-09-15T09:04:06.910Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/DiscountCode"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "code": "SAVE10",
                "name": {
                  "en": "Save10"
                },
                "cartDiscounts": [
                  {
                    "typeId": "cart-discount",
                    "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                  }
                ],
                "isActive": true,
                "cartPredicate": "1=1"
              },
              "$ref": "#/definitions/DiscountCodeDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "DiscountCode",
      "x-annotation-deleteable": "DiscountCode",
      "x-annotation-createable": "DiscountCodeDraft"
    },
    "/{projectKey}/discount-codes/{ID}": {
      "post": {
        "description": "Update DiscountCode by ID",
        "operationId": "POST_projectKey-discount-codes-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/DiscountCodeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get DiscountCode by ID",
        "operationId": "GET_projectKey-discount-codes-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete DiscountCode by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-discount-codes-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/inventory": {
      "get": {
        "description": "Query inventory",
        "operationId": "GET_projectKey-inventory",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create InventoryEntry",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-inventory",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                "version": 1,
                "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                "quantityOnStock": 4,
                "availableQuantity": 4,
                "createdAt": "2015-03-11T13:36:20.720Z",
                "lastModifiedAt": "2015-03-11T13:36:20.720Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/InventoryEntry"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                "quantityOnStock": 4,
                "availableQuantity": 4
              },
              "$ref": "#/definitions/InventoryEntryDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "InventoryEntry",
      "x-annotation-deleteable": "InventoryEntry",
      "x-annotation-createable": "InventoryEntryDraft"
    },
    "/{projectKey}/inventory/{ID}": {
      "post": {
        "description": "Update InventoryEntry by ID",
        "operationId": "POST_projectKey-inventory-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addQuantity",
                    "quantity": 4
                  }
                ]
              },
              "$ref": "#/definitions/InventoryEntryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get InventoryEntry by ID",
        "operationId": "GET_projectKey-inventory-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete InventoryEntry by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-inventory-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/orders": {
      "get": {
        "description": "Query orders",
        "operationId": "GET_projectKey-orders",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Order",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-orders",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "type": "Order",
                "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                "version": 1,
                "createdAt": "2017-01-04T19:54:49.797Z",
                "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                "totalPrice": {
                  "type": "centPrecision",
                  "fractionDigits": 2,
                  "currencyCode": "EUR",
                  "centAmount": 1000
                },
                "orderState": "Open",
                "syncInfo": [],
                "returnInfo": [],
                "taxMode": "External",
                "inventoryMode": "None",
                "taxRoundingMode": "HalfEven",
                "lineItems": [
                  {
                    "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                    "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                    "name": {
                      "en": "MyProduct"
                    },
                    "productType": {
                      "typeId": "product-type",
                      "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                      "version": 21
                    },
                    "productSlug": {
                      "de": "neues-produkt-slug-1234678",
                      "en": "new-product-slug-12345678"
                    },
                    "variant": {
                      "id": 1,
                      "sku": "some-sku-123",
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 1000
                          },
                          "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                        }
                      ],
                      "images": [],
                      "attributes": [
                        {
                          "name": "text",
                          "value": "attribute-value"
                        },
                        {
                          "name": "enum",
                          "value": {
                            "key": "test",
                            "label": "test"
                          }
                        }
                      ],
                      "assets": []
                    },
                    "price": {
                      "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                      "value": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      }
                    },
                    "quantity": 1,
                    "discountedPricePerQuantity": [],
                    "taxRate": {
                      "name": "Bla",
                      "amount": 0.1,
                      "includedInPrice": false,
                      "country": "DE",
                      "subRates": []
                    },
                    "state": [
                      {
                        "quantity": 1,
                        "state": {
                          "typeId": "state",
                          "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                        }
                      }
                    ],
                    "priceMode": "Platform",
                    "lineItemMode": "Standard",
                    "totalPrice": {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "EUR",
                      "centAmount": 1000
                    },
                    "taxedPrice": {
                      "totalNet": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "totalGross": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1100
                      }
                    }
                  }
                ],
                "customLineItems": [],
                "discountCodes": [],
                "lastMessageSequenceNumber": 1,
                "origin": "Customer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "$ref": "#/definitions/OrderFromCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Order",
      "x-annotation-deleteable": "Order",
      "x-annotation-createable": "OrderFromCartDraft"
    },
    "/{projectKey}/orders/order-number={orderNumber}": {
      "post": {
        "description": "Update Order by orderNumber",
        "operationId": "POST_projectKey-orders-order-number=orderNumber",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "$ref": "#/definitions/OrderUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Order by orderNumber",
        "operationId": "GET_projectKey-orders-order-number=orderNumber",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Order by orderNumber",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-orders-order-number=orderNumber",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "orderNumber",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withOrderNumber"
    },
    "/{projectKey}/orders/{ID}": {
      "post": {
        "description": "Update Order by ID",
        "operationId": "POST_projectKey-orders-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "$ref": "#/definitions/OrderUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Order by ID",
        "operationId": "GET_projectKey-orders-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Order by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-orders-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/orders/import": {
      "post": {
        "description": "Create an Order by Import",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-orders-import",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "type": "Order",
                "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                "version": 1,
                "createdAt": "2017-01-04T19:54:49.797Z",
                "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                "totalPrice": {
                  "type": "centPrecision",
                  "fractionDigits": 2,
                  "currencyCode": "EUR",
                  "centAmount": 1000
                },
                "orderState": "Open",
                "syncInfo": [],
                "returnInfo": [],
                "taxMode": "External",
                "inventoryMode": "None",
                "taxRoundingMode": "HalfEven",
                "lineItems": [
                  {
                    "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                    "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                    "name": {
                      "en": "MyProduct"
                    },
                    "productType": {
                      "typeId": "product-type",
                      "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                      "version": 21
                    },
                    "productSlug": {
                      "de": "neues-produkt-slug-1234678",
                      "en": "new-product-slug-12345678"
                    },
                    "variant": {
                      "id": 1,
                      "sku": "some-sku-123",
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 1000
                          },
                          "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                        }
                      ],
                      "images": [],
                      "attributes": [
                        {
                          "name": "text",
                          "value": "attribute-value"
                        },
                        {
                          "name": "enum",
                          "value": {
                            "key": "test",
                            "label": "test"
                          }
                        }
                      ],
                      "assets": []
                    },
                    "price": {
                      "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                      "value": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      }
                    },
                    "quantity": 1,
                    "discountedPricePerQuantity": [],
                    "taxRate": {
                      "name": "Bla",
                      "amount": 0.1,
                      "includedInPrice": false,
                      "country": "DE",
                      "subRates": []
                    },
                    "state": [
                      {
                        "quantity": 1,
                        "state": {
                          "typeId": "state",
                          "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                        }
                      }
                    ],
                    "priceMode": "Platform",
                    "lineItemMode": "Standard",
                    "totalPrice": {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "EUR",
                      "centAmount": 1000
                    },
                    "taxedPrice": {
                      "totalNet": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "totalGross": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1100
                      }
                    }
                  }
                ],
                "customLineItems": [],
                "discountCodes": [],
                "lastMessageSequenceNumber": 1,
                "origin": "Customer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "orderNumber": "100000001",
                "totalPrice": {
                  "centAmount": 1000,
                  "currencyCode": "EUR"
                }
              },
              "$ref": "#/definitions/OrderImportDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/products": {
      "get": {
        "description": "Query products",
        "operationId": "GET_projectKey-products",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Product",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-products",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                "version": 2,
                "masterData": {
                  "current": {
                    "categories": [
                      {
                        "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                        "typeId": "category"
                      }
                    ],
                    "description": {
                      "en": "Sample description"
                    },
                    "masterVariant": {
                      "attributes": [],
                      "id": 1,
                      "images": [
                        {
                          "dimensions": {
                            "h": 1400,
                            "w": 1400
                          },
                          "url": "https://sphere.io/cli/data/253245821_1.jpg"
                        }
                      ],
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "centAmount": 10000,
                            "currencyCode": "EUR"
                          },
                          "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                        }
                      ],
                      "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                    },
                    "name": {
                      "en": "MB PREMIUM TECH T"
                    },
                    "slug": {
                      "en": "mb-premium-tech-t1369226795424"
                    },
                    "variants": [],
                    "searchKeywords": {}
                  },
                  "hasStagedChanges": false,
                  "published": true,
                  "staged": {
                    "categories": [
                      {
                        "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                        "typeId": "category"
                      }
                    ],
                    "description": {
                      "en": "Sample description"
                    },
                    "masterVariant": {
                      "attributes": [],
                      "id": 1,
                      "images": [
                        {
                          "dimensions": {
                            "h": 1400,
                            "w": 1400
                          },
                          "url": "https://sphere.io/cli/data/253245821_1.jpg"
                        }
                      ],
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "centAmount": 10000,
                            "currencyCode": "EUR"
                          },
                          "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                        }
                      ],
                      "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                    },
                    "name": {
                      "en": "MB PREMIUM TECH T"
                    },
                    "slug": {
                      "en": "mb-premium-tech-t1369226795424"
                    },
                    "variants": [],
                    "searchKeywords": {}
                  }
                },
                "productType": {
                  "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                  "typeId": "product-type"
                },
                "taxCategory": {
                  "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                  "typeId": "tax-category"
                },
                "createdAt": "1970-01-01T00:00:00.001Z",
                "lastModifiedAt": "1970-01-01T00:00:00.001Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "categories": [
                  {
                    "typeId": "category",
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919"
                  }
                ],
                "name": {
                  "en": "Some Product"
                },
                "slug": {
                  "en": "product_slug_<random-uuid>"
                },
                "masterVariant": {
                  "sku": "SKU-1",
                  "prices": [
                    {
                      "value": {
                        "currencyCode": "EUR",
                        "centAmount": 4200
                      }
                    }
                  ],
                  "images": [
                    {
                      "url": "http://my.custom.cdn.net/master.png",
                      "label": "Master Image",
                      "dimensions": {
                        "w": 303,
                        "h": 197
                      }
                    }
                  ]
                },
                "variants": [
                  {
                    "images": [
                      {
                        "url": "http://my.custom.cdn.net/variant.png",
                        "label": "Variant Image",
                        "dimensions": {
                          "w": 303,
                          "h": 197
                        }
                      }
                    ]
                  }
                ]
              },
              "$ref": "#/definitions/ProductDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Product",
      "x-annotation-deleteable": "Product",
      "x-annotation-createable": "ProductDraft"
    },
    "/{projectKey}/products/key={key}": {
      "post": {
        "description": "Update Product by key",
        "operationId": "POST_projectKey-products-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 2,
                "actions": [
                  {
                    "action": "setDescription",
                    "description": {
                      "en": "The best product ever!"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/ProductUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Product by key",
        "operationId": "GET_projectKey-products-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Product by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-products-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          },
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/products/{ID}": {
      "post": {
        "description": "Update Product by ID",
        "operationId": "POST_projectKey-products-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 2,
                "actions": [
                  {
                    "action": "setDescription",
                    "description": {
                      "en": "The best product ever!"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/ProductUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Product by ID",
        "operationId": "GET_projectKey-products-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Product by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-products-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          },
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/products/{ID}/images": {
      "post": {
        "description": "Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.\n",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-products-ID-images",
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                "version": 2,
                "masterData": {
                  "current": {
                    "categories": [
                      {
                        "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                        "typeId": "category"
                      }
                    ],
                    "description": {
                      "en": "Sample description"
                    },
                    "masterVariant": {
                      "attributes": [],
                      "id": 1,
                      "images": [
                        {
                          "dimensions": {
                            "h": 1400,
                            "w": 1400
                          },
                          "url": "https://sphere.io/cli/data/253245821_1.jpg"
                        }
                      ],
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "centAmount": 10000,
                            "currencyCode": "EUR"
                          },
                          "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                        }
                      ],
                      "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                    },
                    "name": {
                      "en": "MB PREMIUM TECH T"
                    },
                    "slug": {
                      "en": "mb-premium-tech-t1369226795424"
                    },
                    "variants": [],
                    "searchKeywords": {}
                  },
                  "hasStagedChanges": false,
                  "published": true,
                  "staged": {
                    "categories": [
                      {
                        "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                        "typeId": "category"
                      }
                    ],
                    "description": {
                      "en": "Sample description"
                    },
                    "masterVariant": {
                      "attributes": [],
                      "id": 1,
                      "images": [
                        {
                          "dimensions": {
                            "h": 1400,
                            "w": 1400
                          },
                          "url": "https://sphere.io/cli/data/253245821_1.jpg"
                        }
                      ],
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "centAmount": 10000,
                            "currencyCode": "EUR"
                          },
                          "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                        }
                      ],
                      "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                    },
                    "name": {
                      "en": "MB PREMIUM TECH T"
                    },
                    "slug": {
                      "en": "mb-premium-tech-t1369226795424"
                    },
                    "variants": [],
                    "searchKeywords": {}
                  }
                },
                "productType": {
                  "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                  "typeId": "product-type"
                },
                "taxCategory": {
                  "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                  "typeId": "tax-category"
                },
                "createdAt": "1970-01-01T00:00:00.001Z",
                "lastModifiedAt": "1970-01-01T00:00:00.001Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "enum": [
              "image/jpeg",
              "image/png",
              "image/gif"
            ],
            "type": "string",
            "in": "header",
            "name": "Content-Type"
          },
          {
            "schema": {
              "title": "application/json",
              "type": "string"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "filename"
          },
          {
            "type": "number",
            "in": "query",
            "name": "variant"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sku"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "staged"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/payments": {
      "get": {
        "description": "Query payments",
        "operationId": "GET_projectKey-payments",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Payment",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-payments",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                "version": 1,
                "externalId": "123456",
                "interfaceId": "789011",
                "amountPlanned": {
                  "type": "centPrecision",
                  "fractionDigits": 2,
                  "currencyCode": "USD",
                  "centAmount": 1000
                },
                "paymentMethodInfo": {
                  "paymentInterface": "STRIPE",
                  "method": "CREDIT_CARD",
                  "name": {
                    "en": "Credit Card"
                  }
                },
                "paymentStatus": {},
                "transactions": [
                  {
                    "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                    "timestamp": "2015-10-20T08:54:24.000Z",
                    "type": "Charge",
                    "amount": {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "USD",
                      "centAmount": 1000
                    },
                    "state": "Pending"
                  }
                ],
                "interfaceInteractions": [],
                "createdAt": "2015-10-20T08:54:11.480Z",
                "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                "lastMessageSequenceNumber": 1
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "externalId": "123456",
                "interfaceId": "789011",
                "amountPlanned": {
                  "currencyCode": "USD",
                  "centAmount": 1000
                },
                "paymentMethodInfo": {
                  "paymentInterface": "STRIPE",
                  "method": "CREDIT_CARD",
                  "name": {
                    "en": "Credit Card"
                  }
                },
                "transactions": [
                  {
                    "timestamp": "2015-10-20T08:54:24.000Z",
                    "type": "Charge",
                    "amount": {
                      "currencyCode": "USD",
                      "centAmount": 1000
                    },
                    "state": "Pending"
                  }
                ]
              },
              "$ref": "#/definitions/PaymentDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Payment",
      "x-annotation-deleteable": "Payment",
      "x-annotation-createable": "PaymentDraft"
    },
    "/{projectKey}/payments/key={key}": {
      "post": {
        "description": "Update Payment by key",
        "operationId": "POST_projectKey-payments-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setInterfaceId",
                    "interfaceId": "12334567890123456"
                  }
                ]
              },
              "$ref": "#/definitions/PaymentUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Payment by key",
        "operationId": "GET_projectKey-payments-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Payment by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-payments-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/payments/{ID}": {
      "post": {
        "description": "Update Payment by ID",
        "operationId": "POST_projectKey-payments-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setInterfaceId",
                    "interfaceId": "12334567890123456"
                  }
                ]
              },
              "$ref": "#/definitions/PaymentUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Payment by ID",
        "operationId": "GET_projectKey-payments-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Payment by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-payments-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-discounts": {
      "get": {
        "description": "Query product-discounts",
        "operationId": "GET_projectKey-product-discounts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create ProductDiscount",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-product-discounts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                "version": 2,
                "value": {
                  "type": "absolute",
                  "money": [
                    {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "EUR",
                      "centAmount": 100
                    }
                  ]
                },
                "predicate": "1=1",
                "name": {
                  "en": "test-discount1"
                },
                "description": {
                  "en": "test-discount1"
                },
                "isActive": false,
                "sortOrder": "0.9534",
                "references": [],
                "createdAt": "2016-02-24T09:44:57.858Z",
                "lastModifiedAt": "2016-02-24T09:44:57.939Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "value": {
                  "type": "absolute",
                  "money": [
                    {
                      "currencyCode": "EUR",
                      "centAmount": 100
                    }
                  ]
                },
                "predicate": "1=1",
                "name": {
                  "en": "test-discount1"
                },
                "description": {
                  "en": "test-discount1"
                },
                "isActive": false,
                "sortOrder": "0.9534"
              },
              "$ref": "#/definitions/ProductDiscountDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ProductDiscount",
      "x-annotation-deleteable": "ProductDiscount",
      "x-annotation-createable": "ProductDiscountDraft"
    },
    "/{projectKey}/product-discounts/{ID}": {
      "post": {
        "description": "Update ProductDiscount by ID",
        "operationId": "POST_projectKey-product-discounts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "absolute",
                      "money": [
                        {
                          "currencyCode": "EUR",
                          "centAmount": 100
                        }
                      ]
                    }
                  }
                ]
              },
              "$ref": "#/definitions/ProductDiscountUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get ProductDiscount by ID",
        "operationId": "GET_projectKey-product-discounts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete ProductDiscount by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-product-discounts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-discounts/matching": {
      "post": {
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-product-discounts-matching",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "productId": "123456",
                "variantId": 1,
                "staged": false,
                "price": {
                  "value": {
                    "centAmount": 100,
                    "currencyCode": "EUR"
                  }
                }
              },
              "$ref": "#/definitions/ProductDiscountMatchQuery"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-types": {
      "get": {
        "description": "Query product-types",
        "operationId": "GET_projectKey-product-types",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create ProductType",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-product-types",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                "version": 1,
                "name": "test_product_type",
                "description": "Test product type.",
                "attributes": [
                  {
                    "type": {
                      "name": "text"
                    },
                    "isSearchable": false,
                    "inputHint": "SingleLine",
                    "name": "size",
                    "label": {
                      "en": "The right size is important."
                    },
                    "isRequired": false,
                    "attributeConstraint": "CombinationUnique"
                  }
                ],
                "createdAt": "1970-01-01T00:00:00.001Z",
                "lastModifiedAt": "1970-01-01T00:00:00.001Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "name": "test_product_type",
                "description": "Test product type.",
                "attributes": [
                  {
                    "type": {
                      "name": "text"
                    },
                    "isSearchable": false,
                    "inputHint": "SingleLine",
                    "name": "size",
                    "label": {
                      "en": "The right size is important."
                    },
                    "isRequired": false,
                    "attributeConstraint": "CombinationUnique"
                  }
                ]
              },
              "$ref": "#/definitions/ProductTypeDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ProductType",
      "x-annotation-deleteable": "ProductType",
      "x-annotation-createable": "ProductTypeDraft"
    },
    "/{projectKey}/product-types/key={key}": {
      "post": {
        "description": "Update ProductType by key",
        "operationId": "POST_projectKey-product-types-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "new-product-type-name"
                  }
                ]
              },
              "$ref": "#/definitions/ProductTypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get ProductType by key",
        "operationId": "GET_projectKey-product-types-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete ProductType by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-product-types-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/product-types/{ID}": {
      "post": {
        "description": "Update ProductType by ID",
        "operationId": "POST_projectKey-product-types-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "new-product-type-name"
                  }
                ]
              },
              "$ref": "#/definitions/ProductTypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get ProductType by ID",
        "operationId": "GET_projectKey-product-types-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete ProductType by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-product-types-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/shipping-methods": {
      "get": {
        "description": "Query shipping-methods",
        "operationId": "GET_projectKey-shipping-methods",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "description": "Get ShippingMethods for a Cart",
            "type": "string",
            "in": "query",
            "name": "cartId"
          },
          {
            "description": "Get ShippingMethods for a Location",
            "type": "string",
            "in": "query",
            "name": "country"
          },
          {
            "description": "Get ShippingMethods for a Location",
            "type": "string",
            "in": "query",
            "name": "state"
          },
          {
            "description": "Get ShippingMethods for a Location",
            "type": "string",
            "in": "query",
            "name": "currency"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create ShippingMethod",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-shipping-methods",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                "version": 3,
                "name": "DHL",
                "description": "Standard delivery",
                "taxCategory": {
                  "typeId": "tax-category",
                  "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                },
                "zoneRates": [
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 570
                        },
                        "tiers": []
                      }
                    ]
                  },
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "USD",
                          "centAmount": 990
                        },
                        "tiers": []
                      }
                    ]
                  }
                ],
                "isDefault": false,
                "createdAt": "2015-01-21T09:22:04.320Z",
                "lastModifiedAt": "2016-02-24T13:36:56.748Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "name": "DHL",
                "description": "Standard delivery",
                "taxCategory": {
                  "typeId": "tax-category",
                  "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                },
                "zoneRates": [
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "currencyCode": "EUR",
                          "centAmount": 570
                        }
                      }
                    ]
                  },
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "currencyCode": "USD",
                          "centAmount": 990
                        }
                      }
                    ]
                  }
                ],
                "isDefault": false
              },
              "$ref": "#/definitions/ShippingMethodDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ShippingMethod",
      "x-annotation-deleteable": "ShippingMethod",
      "x-annotation-createable": "ShippingMethodDraft"
    },
    "/{projectKey}/shipping-methods/key={key}": {
      "post": {
        "description": "Update ShippingMethod by key",
        "operationId": "POST_projectKey-shipping-methods-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "$ref": "#/definitions/ShippingMethodUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get ShippingMethod by key",
        "operationId": "GET_projectKey-shipping-methods-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete ShippingMethod by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-shipping-methods-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/shipping-methods/{ID}": {
      "post": {
        "description": "Update ShippingMethod by ID",
        "operationId": "POST_projectKey-shipping-methods-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "$ref": "#/definitions/ShippingMethodUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get ShippingMethod by ID",
        "operationId": "GET_projectKey-shipping-methods-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete ShippingMethod by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-shipping-methods-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/reviews": {
      "get": {
        "description": "Query reviews",
        "operationId": "GET_projectKey-reviews",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Review",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-reviews",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                "version": 1,
                "includedInStatistics": true,
                "authorName": "John Doe",
                "title": "Incredible",
                "text": "Best product ever",
                "rating": 5,
                "target": {
                  "typeId": "product",
                  "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                },
                "customer": {
                  "typeId": "customer",
                  "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                },
                "custom": {
                  "type": {
                    "typeId": "type",
                    "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                  },
                  "fields": {
                    "authorMail": "john.doe@example.com"
                  }
                },
                "createdAt": "2016-10-20T06:48:53.829Z",
                "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                "lastMessageSequenceNumber": 1
              }
            },
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "authorName": "John Doe",
                "title": "Incredible",
                "text": "Best product ever",
                "rating": 5,
                "target": {
                  "typeId": "product",
                  "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                }
              },
              "$ref": "#/definitions/ReviewDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Review",
      "x-annotation-deleteable": "Review",
      "x-annotation-createable": "ReviewDraft"
    },
    "/{projectKey}/reviews/key={key}": {
      "post": {
        "description": "Update Review by key",
        "operationId": "POST_projectKey-reviews-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setAuthorName",
                    "authorName": "John Doe"
                  }
                ]
              },
              "$ref": "#/definitions/ReviewUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Review by key",
        "operationId": "GET_projectKey-reviews-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Review by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-reviews-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/reviews/{ID}": {
      "post": {
        "description": "Update Review by ID",
        "operationId": "POST_projectKey-reviews-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setAuthorName",
                    "authorName": "John Doe"
                  }
                ]
              },
              "$ref": "#/definitions/ReviewUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Review by ID",
        "operationId": "GET_projectKey-reviews-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Review by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-reviews-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/shopping-lists": {
      "get": {
        "description": "Query shopping-lists",
        "operationId": "GET_projectKey-shopping-lists",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create ShoppingList",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-shopping-lists",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                "version": 1,
                "name": {
                  "en": "test"
                },
                "key": "test",
                "lineItems": [],
                "textLineItems": [],
                "createdAt": "2017-03-30T11:49:40.904Z",
                "lastModifiedAt": "2017-03-30T11:49:40.904Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "name": {
                  "en": "test"
                },
                "key": "test"
              },
              "$ref": "#/definitions/ShoppingListDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ShoppingList",
      "x-annotation-deleteable": "ShoppingList",
      "x-annotation-createable": "ShoppingListDraft"
    },
    "/{projectKey}/shopping-lists/key={key}": {
      "post": {
        "description": "Update ShoppingList by key",
        "operationId": "POST_projectKey-shopping-lists-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/ShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get ShoppingList by key",
        "operationId": "GET_projectKey-shopping-lists-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete ShoppingList by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-shopping-lists-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/shopping-lists/{ID}": {
      "post": {
        "description": "Update ShoppingList by ID",
        "operationId": "POST_projectKey-shopping-lists-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/ShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get ShoppingList by ID",
        "operationId": "GET_projectKey-shopping-lists-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete ShoppingList by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-shopping-lists-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/states": {
      "get": {
        "description": "Query states",
        "operationId": "GET_projectKey-states",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create State",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-states",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 1,
                "key": "Initial",
                "type": "LineItemState",
                "roles": [],
                "name": {
                  "en": "Initial"
                },
                "description": {
                  "en": "Initial is the first that (custom) line item gets after it's creation"
                },
                "builtIn": true,
                "initial": true,
                "createdAt": "2015-01-21T09:22:03.906Z",
                "lastModifiedAt": "2015-01-21T09:22:03.906Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/State"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "key": "test-state",
                "type": "ProductState",
                "roles": [],
                "initial": true
              },
              "$ref": "#/definitions/StateDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "State",
      "x-annotation-deleteable": "State",
      "x-annotation-createable": "StateDraft"
    },
    "/{projectKey}/states/{ID}": {
      "post": {
        "description": "Update State by ID",
        "operationId": "POST_projectKey-states-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/StateUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get State by ID",
        "operationId": "GET_projectKey-states-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete State by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-states-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/subscriptions": {
      "get": {
        "description": "Query subscriptions",
        "operationId": "GET_projectKey-subscriptions",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Subscription",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-subscriptions",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                "version": 1,
                "destination": {
                  "type": "IronMQ",
                  "uri": "https://queue-uri"
                },
                "messages": [
                  {
                    "resourceTypeId": "product",
                    "types": []
                  }
                ],
                "changes": [],
                "createdAt": "2017-01-25T14:14:22.417Z",
                "key": "test-queue",
                "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                "lastMessageSequenceNumber": 0
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "destination": {
                  "type": "IronMQ",
                  "uri": "https://queue-uri"
                },
                "messages": [
                  {
                    "resourceTypeId": "product",
                    "types": []
                  }
                ],
                "key": "test-queue"
              },
              "$ref": "#/definitions/SubscriptionDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Subscription",
      "x-annotation-deleteable": "Subscription",
      "x-annotation-createable": "SubscriptionDraft"
    },
    "/{projectKey}/subscriptions/key={key}": {
      "post": {
        "description": "Update Subscription by key",
        "operationId": "POST_projectKey-subscriptions-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "queue-key"
                  }
                ]
              },
              "$ref": "#/definitions/SubscriptionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Subscription by key",
        "operationId": "GET_projectKey-subscriptions-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Subscription by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-subscriptions-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/subscriptions/{ID}": {
      "post": {
        "description": "Update Subscription by ID",
        "operationId": "POST_projectKey-subscriptions-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "queue-key"
                  }
                ]
              },
              "$ref": "#/definitions/SubscriptionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Subscription by ID",
        "operationId": "GET_projectKey-subscriptions-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Subscription by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-subscriptions-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/tax-categories": {
      "get": {
        "description": "Query tax-categories",
        "operationId": "GET_projectKey-tax-categories",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create TaxCategory",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-tax-categories",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                "version": 1,
                "name": "test-tax-category",
                "rates": [
                  {
                    "name": "test-tax-category",
                    "amount": 0.2,
                    "includedInPrice": true,
                    "country": "DE",
                    "id": "vWTk7VjT",
                    "subRates": []
                  }
                ],
                "createdAt": "2016-02-24T15:33:40.811Z",
                "lastModifiedAt": "2016-02-24T15:33:40.811Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "name": "test-tax-category",
                "rates": [
                  {
                    "name": "test-tax-category",
                    "amount": 0.2,
                    "includedInPrice": true,
                    "country": "DE"
                  }
                ]
              },
              "$ref": "#/definitions/TaxCategoryDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "TaxCategory",
      "x-annotation-deleteable": "TaxCategory",
      "x-annotation-createable": "TaxCategoryDraft"
    },
    "/{projectKey}/tax-categories/{ID}": {
      "post": {
        "description": "Update TaxCategory by ID",
        "operationId": "POST_projectKey-tax-categories-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "$ref": "#/definitions/TaxCategoryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get TaxCategory by ID",
        "operationId": "GET_projectKey-tax-categories-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete TaxCategory by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-tax-categories-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/types": {
      "get": {
        "description": "Query types",
        "operationId": "GET_projectKey-types",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Type",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-types",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                "version": 1,
                "key": "lineitemtype",
                "name": {
                  "en": "lineitem"
                },
                "description": {
                  "en": "description"
                },
                "resourceTypeIds": [
                  "line-item"
                ],
                "fieldDefinitions": [
                  {
                    "name": "offer_name",
                    "label": {
                      "en": "offer_name"
                    },
                    "required": false,
                    "type": {
                      "name": "String"
                    },
                    "inputHint": "SingleLine"
                  }
                ],
                "createdAt": "2015-10-07T06:56:19.217Z",
                "lastModifiedAt": "2015-10-07T06:56:19.217Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/Type"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "key": "lineitemtype",
                "name": {
                  "en": "lineitem"
                },
                "description": {
                  "en": "description"
                },
                "resourceTypeIds": [
                  "line-item"
                ],
                "fieldDefinitions": [
                  {
                    "name": "offer_name",
                    "label": {
                      "en": "offer_name"
                    },
                    "required": false,
                    "type": {
                      "name": "String"
                    },
                    "inputHint": "SingleLine"
                  }
                ]
              },
              "$ref": "#/definitions/TypeDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Type",
      "x-annotation-deleteable": "Type",
      "x-annotation-createable": "TypeDraft"
    },
    "/{projectKey}/types/key={key}": {
      "post": {
        "description": "Update Type by key",
        "operationId": "POST_projectKey-types-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/TypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Type by key",
        "operationId": "GET_projectKey-types-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Type by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-types-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/types/{ID}": {
      "post": {
        "description": "Update Type by ID",
        "operationId": "POST_projectKey-types-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/TypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Type by ID",
        "operationId": "GET_projectKey-types-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Type by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-types-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/zones": {
      "get": {
        "description": "Query zones",
        "operationId": "GET_projectKey-zones",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Zone",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-zones",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                "version": 1,
                "name": "US",
                "locations": [
                  {
                    "country": "US"
                  }
                ],
                "createdAt": "2015-01-21T09:22:04.275Z",
                "lastModifiedAt": "2015-01-21T09:22:04.275Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "name": "US",
                "locations": [
                  {
                    "country": "US"
                  }
                ]
              },
              "$ref": "#/definitions/ZoneDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Zone",
      "x-annotation-deleteable": "Zone",
      "x-annotation-createable": "ZoneDraft"
    },
    "/{projectKey}/zones/{ID}": {
      "post": {
        "description": "Update Zone by ID",
        "operationId": "POST_projectKey-zones-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "$ref": "#/definitions/ZoneUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Zone by ID",
        "operationId": "GET_projectKey-zones-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Zone by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-zones-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/extensions": {
      "get": {
        "description": "Query extensions",
        "operationId": "GET_projectKey-extensions",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create Extension",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-extensions",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                "version": 1,
                "createdAt": "2017-01-25T14:14:22.417Z",
                "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                "destination": {
                  "type": "HTTP",
                  "url": "https://example.azurewebsites.net/api/extension",
                  "authentication": {
                    "type": "AzureFunctions",
                    "key": "some-azure-function-code"
                  }
                },
                "triggers": [
                  {
                    "resourceTypeId": "cart",
                    "actions": [
                      "Create",
                      "Update"
                    ]
                  }
                ],
                "key": "my-extension"
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "destination": {
                  "type": "HTTP",
                  "url": "https://example.azurewebsites.net/api/extension",
                  "authentication": {
                    "type": "AzureFunctions",
                    "key": "some-azure-function-code"
                  }
                },
                "triggers": [
                  {
                    "resourceTypeId": "cart",
                    "actions": [
                      "Create",
                      "Update"
                    ]
                  }
                ],
                "key": "my-extension"
              },
              "$ref": "#/definitions/ExtensionDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Extension",
      "x-annotation-deleteable": "Extension",
      "x-annotation-createable": "ExtensionDraft"
    },
    "/{projectKey}/extensions/key={key}": {
      "post": {
        "description": "Update Extension by key",
        "operationId": "POST_projectKey-extensions-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "my-new-extension-key"
                  }
                ]
              },
              "$ref": "#/definitions/ExtensionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Extension by key",
        "operationId": "GET_projectKey-extensions-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Extension by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-extensions-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "key",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/extensions/{ID}": {
      "post": {
        "description": "Update Extension by ID",
        "operationId": "POST_projectKey-extensions-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "my-new-extension-key"
                  }
                ]
              },
              "$ref": "#/definitions/ExtensionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Get Extension by ID",
        "operationId": "GET_projectKey-extensions-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete Extension by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-extensions-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "in": "path",
          "name": "ID",
          "required": true
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/custom-objects": {
      "get": {
        "description": "Query custom-objects",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-custom-objects",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create CustomObject",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-custom-objects",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                "version": 2,
                "container": "test-container",
                "key": "test-key",
                "value": "test-value",
                "createdAt": "2016-02-18T10:36:29.468Z",
                "lastModifiedAt": "2016-02-18T10:36:29.571Z"
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomObject"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "container": "test-container",
                "key": "test-key",
                "value": "test-value"
              },
              "$ref": "#/definitions/CustomObjectDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/custom-objects/{container}/{key}": {
      "get": {
        "description": "Get CustomObject by key",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-custom-objects-container-key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "description": "Delete CustomObject by key",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-custom-objects-container-key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "container",
          "description": "container"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "description": "key"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withContainerAndKey"
    },
    "/{projectKey}/custom-objects/{ID}": {
      "get": {
        "description": "Get CustomObject by container",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-custom-objects-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "description": "Delete CustomObject by container",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-custom-objects-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "description": "ID"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/graphql": {
      "post": {
        "description": "Execute a GraphQL query",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-graphql",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "consumes": [
          "application/graphql"
        ],
        "parameters": [
          {
            "schema": {
              "title": "application/graphql",
              "example": "query Sphere {\n    products(limit: 1) {\n        ...StagedProduct,\n        ...CurrentProduct\n    }\n}\n\nfragment Product on ProductData {\n    skus, name(locale: \"en\")\n}\n\nfragment StagedProduct on ProductQueryResult {\n    results {\n        id, masterData { staged { ...Product } }\n    }\n}\n\nfragment CurrentProduct on ProductQueryResult {\n    results {\n        id, masterData { current { ...Product } }\n    }\n}\n",
              "type": "string"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/login": {
      "post": {
        "description": "Authenticate Customer (Sign In)",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-login",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "customer": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/CustomerSignin"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/messages": {
      "get": {
        "description": "Query messages",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-messages",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/messages/{ID}": {
      "get": {
        "description": "Get Message by ID",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-messages-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "description": "ID"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-projections": {
      "get": {
        "description": "Query product-projections",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-product-projections",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where",
            "hasParams": true
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort",
            "hasParams": true
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-projections/search": {
      "post": {
        "description": "Search Product Projection",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-product-projections-search",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "get": {
        "description": "Search Product Projection",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-product-projections-search",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "type": "boolean",
            "in": "query",
            "name": "fuzzy"
          },
          {
            "description": "Provide explicitly the fuzzy level desired if fuzzy is enabled. This value can not be higher than the one\nchosen by the platform by default.\n",
            "type": "number",
            "in": "query",
            "name": "fuzzyLevel"
          },
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter.facets"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter.query"
          },
          {
            "type": "string",
            "in": "query",
            "name": "facet"
          },
          {
            "type": "string",
            "in": "query",
            "name": "/text\\.[a-z]{2}(-[A-Z]{2})?/",
            "x-annotation-placeholderParam": {
              "paramName": "text",
              "template": "text.<locale>",
              "placeholder": "locale"
            }
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-projections/suggest": {
      "get": {
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-product-projections-suggest",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "type": "boolean",
            "in": "query",
            "name": "fuzzy"
          },
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged"
          },
          {
            "type": "string",
            "in": "query",
            "name": "/searchKeywords\\.[a-z]{2}(-[A-Z]{2})?/",
            "x-annotation-placeholderParam": {
              "paramName": "searchKeywords",
              "template": "searchKeywords.<locale>",
              "placeholder": "locale"
            }
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-projections/key={key}": {
      "get": {
        "description": "Get ProductProjection by key",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-product-projections-key=key",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "description": "key"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/product-projections/{ID}": {
      "get": {
        "description": "Get ProductProjection by ID",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-product-projections-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCurrency"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCountry"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceCustomerGroup"
          },
          {
            "$ref": "#/parameters/trait:priceSelecting:priceChannel"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "description": "ID"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/me": {
      "get": {
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-me",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "description": "Create a customer",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "$ref": "#/definitions/Update"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete a Customer",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-me",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/email": {
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/email/confirm": {
      "post": {
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-email-confirm",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/password": {
      "post": {
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-password",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "type": "string"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/password/reset": {
      "post": {
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-password-reset",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/signup": {
      "post": {
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-signup",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "$ref": "#/definitions/MyCustomerDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/login": {
      "post": {
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-login",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "type": "string"
            },
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/active-cart": {
      "get": {
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-me-active-cart",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/carts": {
      "get": {
        "description": "Query carts",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-me-carts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "description": "Create Cart",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-carts",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "type": "Cart",
                "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                "version": 5,
                "createdAt": "2015-09-22T15:36:17.510Z",
                "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                "lineItems": [
                  {
                    "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "name": {
                      "en": "SAPPHIRE"
                    },
                    "productType": {
                      "typeId": "product-type",
                      "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                      "version": 8
                    },
                    "productSlug": {
                      "en": "sapphire1421832124423"
                    },
                    "variant": {
                      "id": 1,
                      "sku": "sku_SAPPHIRE_variant1_1421832124423",
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 2800
                          },
                          "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                        }
                      ],
                      "images": [
                        {
                          "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                          "dimensions": {
                            "w": 1400,
                            "h": 1400
                          }
                        }
                      ],
                      "attributes": [],
                      "assets": []
                    },
                    "price": {
                      "value": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 2800
                      },
                      "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                    },
                    "quantity": 2,
                    "discountedPricePerQuantity": [],
                    "state": [
                      {
                        "quantity": 2,
                        "state": {
                          "typeId": "state",
                          "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                        }
                      }
                    ],
                    "priceMode": "Platform",
                    "lineItemMode": "Standard",
                    "totalPrice": {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "EUR",
                      "centAmount": 5600
                    }
                  }
                ],
                "cartState": "Active",
                "totalPrice": {
                  "type": "centPrecision",
                  "fractionDigits": 2,
                  "currencyCode": "EUR",
                  "centAmount": 5600
                },
                "customLineItems": [],
                "discountCodes": [],
                "inventoryMode": "None",
                "taxMode": "Platform",
                "taxRoundingMode": "HalfEven",
                "refusedGifts": [],
                "origin": "Customer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "currency": "EUR"
              },
              "$ref": "#/definitions/MyCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/carts/{ID}": {
      "get": {
        "description": "Get Cart by ID",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-me-carts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "description": "Update Cart by ID",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-carts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "$ref": "#/definitions/Update"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "description": "Delete Cart by ID",
        "schemes": [
          "https"
        ],
        "operationId": "DELETE_projectKey-me-carts-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:versioned:version"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "description": "ID"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/me/orders": {
      "get": {
        "description": "Query orders",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-me-orders",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "type": "string",
            "in": "query",
            "name": "where"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "type": "string",
            "in": "query",
            "name": "sort"
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          },
          {
            "$ref": "#/parameters/trait:paging:limit"
          },
          {
            "$ref": "#/parameters/trait:paging:offset"
          },
          {
            "$ref": "#/parameters/trait:paging:withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "description": "Create Order",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-orders",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "type": "Order",
                "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                "version": 1,
                "createdAt": "2017-01-04T19:54:49.797Z",
                "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                "totalPrice": {
                  "type": "centPrecision",
                  "fractionDigits": 2,
                  "currencyCode": "EUR",
                  "centAmount": 1000
                },
                "orderState": "Open",
                "syncInfo": [],
                "returnInfo": [],
                "taxMode": "External",
                "inventoryMode": "None",
                "taxRoundingMode": "HalfEven",
                "lineItems": [
                  {
                    "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                    "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                    "name": {
                      "en": "MyProduct"
                    },
                    "productType": {
                      "typeId": "product-type",
                      "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                      "version": 21
                    },
                    "productSlug": {
                      "de": "neues-produkt-slug-1234678",
                      "en": "new-product-slug-12345678"
                    },
                    "variant": {
                      "id": 1,
                      "sku": "some-sku-123",
                      "prices": [
                        {
                          "value": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 1000
                          },
                          "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                        }
                      ],
                      "images": [],
                      "attributes": [
                        {
                          "name": "text",
                          "value": "attribute-value"
                        },
                        {
                          "name": "enum",
                          "value": {
                            "key": "test",
                            "label": "test"
                          }
                        }
                      ],
                      "assets": []
                    },
                    "price": {
                      "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                      "value": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      }
                    },
                    "quantity": 1,
                    "discountedPricePerQuantity": [],
                    "taxRate": {
                      "name": "Bla",
                      "amount": 0.1,
                      "includedInPrice": false,
                      "country": "DE",
                      "subRates": []
                    },
                    "state": [
                      {
                        "quantity": 1,
                        "state": {
                          "typeId": "state",
                          "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                        }
                      }
                    ],
                    "priceMode": "Platform",
                    "lineItemMode": "Standard",
                    "totalPrice": {
                      "type": "centPrecision",
                      "fractionDigits": 2,
                      "currencyCode": "EUR",
                      "centAmount": 1000
                    },
                    "taxedPrice": {
                      "totalNet": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "totalGross": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1100
                      }
                    }
                  }
                ],
                "customLineItems": [],
                "discountCodes": [],
                "lastMessageSequenceNumber": 1,
                "origin": "Customer"
              }
            },
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "$ref": "#/definitions/MyOrderFromCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/orders/{ID}": {
      "get": {
        "description": "Get Order by ID",
        "schemes": [
          "https"
        ],
        "operationId": "GET_projectKey-me-orders-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "description": "Update Order by ID",
        "schemes": [
          "https"
        ],
        "operationId": "POST_projectKey-me-orders-ID",
        "responses": {
          "200": {
            "$ref": "#/responses/trait:deprecatable:200"
          },
          "400": {
            "$ref": "#/responses/trait:errorable:400"
          },
          "404": {
            "$ref": "#/responses/trait:errorable:404"
          },
          "409": {
            "$ref": "#/responses/trait:conflicting:409"
          },
          "500": {
            "$ref": "#/responses/trait:errorable:500"
          },
          "503": {
            "$ref": "#/responses/trait:errorable:503"
          }
        },
        "parameters": [
          {
            "schema": {
              "title": "application/json",
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "$ref": "#/definitions/Update"
            },
            "in": "body",
            "name": "body",
            "required": true
          },
          {
            "$ref": "#/parameters/trait:expandable:expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "description": "ID"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    }
  }
}