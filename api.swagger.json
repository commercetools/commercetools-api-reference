{
  "swagger": "2.0",
  "info": {
    "title": "Commercetools",
    "version": ""
  },
  "host": "api.europe-west1.gcp.commercetools.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oauth_2_0": {
      "description": "HTTP API authorization uses [OAuth2](http://tools.ietf.org/html/rfc6750).\n\nClients must obtain an access token from the auth service using one of\nthe authorization flows described below, before they are able to make authorized requests\nto other commercetools services. On successful completion of an authorization flow,\na client will be given an `access_token`, which they need to include in requests\nto authorized service endpoints via the HTTP `Authorization` header like this:\n",
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://auth.europe-west1.gcp.commercetools.com/oauth/token",
      "scopes": {
        "manage_project:{projectKey}": "",
        "manage_products:{projectKey}": "",
        "view_products:{projectKey}": "",
        "manage_orders:{projectKey}": "",
        "manage_orders:{projectKey}:{storeKey}": "",
        "view_orders:{projectKey}": "",
        "view_orders:{projectKey}:{storeKey}": "",
        "manage_customers:{projectKey}": "",
        "view_customers:{projectKey}": "",
        "manage_payments:{projectKey}": "",
        "view_payments:{projectKey}": "",
        "manage_subscriptions:{projectKey}": "",
        "manage_extensions:{projectKey}": "",
        "manage_types:{projectKey}": "",
        "view_types:{projectKey}": "",
        "view_shopping_lists:{projectKey}": "",
        "manage_shopping_lists:{projectKey}": "",
        "manage_my_orders:{projectKey}": "",
        "manage_my_orders:{projectKey}:{storeKey}": "",
        "manage_my_profile:{projectKey}": "",
        "view_project_settings:{projectKey}": "",
        "view_published_products:{projectKey}": "",
        "manage_cart_discounts:{projectKey}": "",
        "view_cart_discounts:{projectKey}": "",
        "manage_customer_groups:{projectKey}": "",
        "view_customer_groups:{projectKey}": "",
        "view_shipping_methods:{projectKey}": "",
        "manage_shipping_methods:{projectKey}": "",
        "manage_tax_categories:{projectKey}": "",
        "view_tax_categories:{projectKey}": "",
        "manage_categories:{projectKey}": "",
        "view_categories:{projectKey}": ""
      }
    }
  },
  "definitions": {
    "AccessDeniedError": {
      "title": "AccessDeniedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "access_denied"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "Address": {
      "title": "Address",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAddress"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "title": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "salutation": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "firstName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lastName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "streetName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "streetNumber": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "additionalStreetInfo": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "postalCode": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "city": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "region": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "country": {
              "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
              "$ref": "#/definitions/CountryCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "company": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "department": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "building": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "apartment": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "pOBox": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "phone": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "mobile": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fax": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "additionalAddressInfo": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "country"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#address"
    },
    "AddressDraft": {
      "title": "AddressDraft",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAddress"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "title": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "salutation": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "firstName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lastName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "streetName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "streetNumber": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "additionalStreetInfo": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "postalCode": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "city": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "region": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "country": {
              "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
              "$ref": "#/definitions/CountryCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "company": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "department": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "building": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "apartment": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "pOBox": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "phone": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "mobile": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fax": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "additionalAddressInfo": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "country"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#address"
    },
    "AnonymousCartSignInMode": {
      "title": "AnonymousCartSignInMode",
      "enum": [
        "MergeWithExistingCustomerCart",
        "UseAsNewActiveCustomerCart"
      ],
      "type": "string",
      "x-annotation-package": "Customer"
    },
    "AnonymousIdAlreadyInUseError": {
      "title": "AnonymousIdAlreadyInUseError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "AnonymousIdAlreadyInUse"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ApiClient": {
      "title": "ApiClient",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of the API client.\nThis is the OAuth2 `client_id` and can be used to obtain a token.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "scope": {
          "description": "A whitespace separated list of the OAuth scopes.\nThis is the OAuth2 `scope` and can be used to obtain a token.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "lastUsedAt": {
          "description": "The last day this API Client was used to obtain a token.",
          "type": "string",
          "format": "date",
          "x-annotation-builtinType": "date-only",
          "x-annotation-inherited": false
        },
        "deleteAt": {
          "format": "date-time",
          "description": "If set, the client will be deleted on (or shortly after) this point in time.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "secret": {
          "description": "The secret is only shown once in the response of creating the API Client.\nThis is the OAuth2 `client_secret` and can be used to obtain a token.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "name",
        "scope"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ApiClient",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-apiClients.html#apiclient"
    },
    "ApiClientDraft": {
      "title": "ApiClientDraft",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "scope": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterCreation": {
          "format": "int64",
          "description": "If set, the client will be deleted after the specified amount of days.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "scope"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ApiClient",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-apiClients.html#apiclientdraft"
    },
    "ApiClientPagedQueryResponse": {
      "title": "ApiClientPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiClient"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ApiClient",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<ApiClient>"
    },
    "Asset": {
      "title": "Asset",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetSource"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "sources",
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "AssetDimensions": {
      "title": "AssetDimensions",
      "type": "object",
      "properties": {
        "w": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "h": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "w",
        "h"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "AssetDraft": {
      "title": "AssetDraft",
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetSource"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "sources",
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "AssetSource": {
      "title": "AssetSource",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "dimensions": {
          "$ref": "#/definitions/AssetDimensions",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "contentType": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "uri"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "Attribute": {
      "title": "Attribute",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-identifier": true,
          "x-annotation-elementIdentifier": true,
          "x-annotation-inherited": false
        },
        "value": {
          "description": "A valid JSON value, based on an AttributeDefinition.",
          "type": "string",
          "x-annotation-builtinType": "any",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#attribute"
    },
    "AttributeBooleanType": {
      "title": "AttributeBooleanType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "boolean"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#booleantype"
    },
    "AttributeConstraintEnum": {
      "title": "AttributeConstraintEnum",
      "enum": [
        "None",
        "Unique",
        "CombinationUnique",
        "SameForAll"
      ],
      "type": "string",
      "x-annotation-package": "ProductType"
    },
    "AttributeConstraintEnumDraft": {
      "title": "AttributeConstraintEnumDraft",
      "enum": [
        "None"
      ],
      "type": "string",
      "x-annotation-package": "ProductType"
    },
    "AttributeDateTimeType": {
      "title": "AttributeDateTimeType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "datetime"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetimetype"
    },
    "AttributeDateType": {
      "title": "AttributeDateType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "date"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetype"
    },
    "AttributeDefinition": {
      "title": "AttributeDefinition",
      "type": "object",
      "properties": {
        "type": {
          "description": "Describes the type of the attribute.",
          "$ref": "#/definitions/AttributeType",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The unique name of the attribute used in the API.\nThe name must be between two and 256 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (`_`) and the hyphen-minus (`-`).\nWhen using the same `name` for an attribute in two or more product types all fields of the AttributeDefinition of this attribute need to be the same across the product types, otherwise an AttributeDefinitionAlreadyExists error code will be returned.\nAn exception to this are the values of an `enum` or `lenum` type and sets thereof.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "label": {
          "description": "A human-readable label for the attribute.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "isRequired": {
          "description": "Whether the attribute is required to have a value.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "attributeConstraint": {
          "description": "Describes how an attribute or a set of attributes should be validated across all variants of a product.",
          "$ref": "#/definitions/AttributeConstraintEnum",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "inputTip": {
          "description": "Additional information about the attribute that aids content managers when setting product details.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "inputHint": {
          "description": "Provides a visual representation type for this attribute.\nonly relevant for text-based attribute types\nlike TextType and LocalizableTextType.",
          "$ref": "#/definitions/TextInputHint",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "isSearchable": {
          "description": "Whether the attribute's values should generally be enabled in product search.\nThis determines whether the value is stored in products for matching terms in the context of full-text search queries  and can be used in facets & filters as part of product search queries.\nThe exact features that are enabled/disabled with this flag depend on the concrete attribute type and are described there.\nThe max size of a searchable field is **restricted to 10922 characters**.\nThis constraint is enforced at both product creation and product update.\nIf the length of the input exceeds the maximum size an InvalidField error is returned.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type",
        "name",
        "label",
        "isRequired",
        "attributeConstraint",
        "inputHint",
        "isSearchable"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributedefinition"
    },
    "AttributeDefinitionAlreadyExistsError": {
      "title": "AttributeDefinitionAlreadyExistsError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "AttributeDefinitionAlreadyExists"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "conflictingProductTypeId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "conflictingProductTypeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "conflictingAttributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "conflictingProductTypeId",
            "conflictingProductTypeName",
            "conflictingAttributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "AttributeDefinitionDraft": {
      "title": "AttributeDefinitionDraft",
      "type": "object",
      "properties": {
        "type": {
          "description": "Describes the type of the attribute.",
          "$ref": "#/definitions/AttributeType",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The unique name of the attribute used in the API.\nThe name must be between two and 256 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (`_`) and the hyphen-minus (`-`).\nWhen using the same `name` for an attribute in two or more product types all fields of the AttributeDefinition of this attribute need to be the same across the product types.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "label": {
          "description": "A human-readable label for the attribute.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "isRequired": {
          "description": "Whether the attribute is required to have a value.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "attributeConstraint": {
          "description": "Describes how an attribute or a set of attributes should be validated across all variants of a product.",
          "$ref": "#/definitions/AttributeConstraintEnum",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "inputTip": {
          "description": "Additional information about the attribute that aids content managers when setting product details.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "inputHint": {
          "description": "Provides a visual representation type for this attribute.\nonly relevant for text-based attribute types like TextType and LocalizableTextType.",
          "$ref": "#/definitions/TextInputHint",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "isSearchable": {
          "description": "Whether the attribute's values should generally be enabled in product search.\nThis determines whether the value is stored in products for matching terms in the context of full-text search queries and can be used in facets & filters as part of product search queries.\nThe exact features that are enabled/disabled with this flag depend on the concrete attribute type and are described there.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type",
        "name",
        "label",
        "isRequired"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType"
    },
    "AttributeDefinitionTypeConflictError": {
      "title": "AttributeDefinitionTypeConflictError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "AttributeDefinitionTypeConflict"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "conflictingProductTypeId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "conflictingProductTypeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "conflictingAttributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "conflictingProductTypeId",
            "conflictingProductTypeName",
            "conflictingAttributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "AttributeEnumType": {
      "title": "AttributeEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "enum"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributePlainEnumValue"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#enumtype"
    },
    "AttributeLocalizableTextType": {
      "title": "AttributeLocalizableTextType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "ltext"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizabletexttype"
    },
    "AttributeLocalizedEnumType": {
      "title": "AttributeLocalizedEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "lenum"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeLocalizedEnumValue"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizableenumtype"
    },
    "AttributeLocalizedEnumValue": {
      "title": "AttributeLocalizedEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "label": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizedenumvalue"
    },
    "AttributeMoneyType": {
      "title": "AttributeMoneyType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "money"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#moneytype"
    },
    "AttributeNameDoesNotExistError": {
      "title": "AttributeNameDoesNotExistError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "AttributeNameDoesNotExist"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "invalidAttributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "invalidAttributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "AttributeNestedType": {
      "title": "AttributeNestedType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "nested"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "typeReference": {
              "$ref": "#/definitions/ProductTypeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "typeReference"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#nestedtype"
    },
    "AttributeNumberType": {
      "title": "AttributeNumberType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "number"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#numbertype"
    },
    "AttributePlainEnumValue": {
      "title": "AttributePlainEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "label": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#plainenumvalue"
    },
    "AttributeReferenceType": {
      "title": "AttributeReferenceType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "reference"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "referenceTypeId": {
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "referenceTypeId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#referencetype"
    },
    "AttributeSetType": {
      "title": "AttributeSetType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "set"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "elementType": {
              "$ref": "#/definitions/AttributeType",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "elementType"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#settype"
    },
    "AttributeTextType": {
      "title": "AttributeTextType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "text"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#texttype"
    },
    "AttributeTimeType": {
      "title": "AttributeTimeType",
      "allOf": [
        {
          "$ref": "#/definitions/AttributeType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "time"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#timetype"
    },
    "AttributeType": {
      "title": "AttributeType",
      "discriminator": "name",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "AttributeBooleanType",
        "AttributeDateTimeType",
        "AttributeDateType",
        "AttributeEnumType",
        "AttributeLocalizableTextType",
        "AttributeLocalizedEnumType",
        "AttributeMoneyType",
        "AttributeNestedType",
        "AttributeNumberType",
        "AttributeReferenceType",
        "AttributeSetType",
        "AttributeTextType",
        "AttributeTimeType"
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributetype"
    },
    "AzureEventGridDestination": {
      "title": "AzureEventGridDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "EventGrid"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "uri": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "accessKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "uri",
            "accessKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "AzureServiceBusDestination": {
      "title": "AzureServiceBusDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "AzureServiceBus"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "connectionString": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "connectionString"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "BaseAddress": {
      "title": "BaseAddress",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "title": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "salutation": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "firstName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lastName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "streetName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "streetNumber": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "additionalStreetInfo": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "postalCode": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "city": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "region": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "company": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "department": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "building": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "apartment": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "pOBox": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "phone": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "mobile": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "email": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "fax": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "additionalAddressInfo": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "externalId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "country"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "Address",
        "AddressDraft"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#address"
    },
    "BaseResource": {
      "title": "BaseResource",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "version",
        "createdAt",
        "lastModifiedAt"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "Cart",
        "CartDiscount",
        "Category",
        "Channel",
        "CustomObject",
        "Customer",
        "CustomerGroup",
        "DiscountCode",
        "Extension",
        "InventoryEntry",
        "Message",
        "Order",
        "OrderEdit",
        "Payment",
        "Product",
        "ProductDiscount",
        "ProductProjection",
        "ProductType",
        "Review",
        "ShippingMethod",
        "ShoppingList",
        "State",
        "Store",
        "Subscription",
        "TaxCategory",
        "Type",
        "Zone"
      ],
      "x-annotation-package": "Common",
      "x-annotation-abstract": true
    },
    "Cart": {
      "title": "Cart",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the cart.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the cart.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier of the cart.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "customerId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "customerEmail": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "anonymousId": {
              "description": "Identifies carts and orders belonging to an anonymous session (the customer has not signed up/in yet).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "store": {
              "$ref": "#/definitions/StoreKeyReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "lineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "customLineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomLineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "totalPrice": {
              "description": "The sum of all `totalPrice` fields of the `lineItems` and `customLineItems`, as well as the `price` field of `shippingInfo` (if it exists).\n`totalPrice` may or may not include the taxes: it depends on the taxRate.includedInPrice property of each price.",
              "$ref": "#/definitions/TypedMoney",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxedPrice": {
              "description": "Not set until the shipping address is set.\nWill be set automatically in the `Platform` TaxMode.\nFor the `External` tax mode it will be set  as soon as the external tax rates for all line items, custom line items, and shipping in the cart are set.",
              "$ref": "#/definitions/TaxedPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "cartState": {
              "$ref": "#/definitions/CartState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingAddress": {
              "description": "The shipping address is used to determine the eligible shipping methods and rates as well as the tax rate of the line items.",
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "billingAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "inventoryMode": {
              "$ref": "#/definitions/InventoryMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxMode": {
              "$ref": "#/definitions/TaxMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxRoundingMode": {
              "description": "When calculating taxes for `taxedPrice`, the selected mode is used for rounding.",
              "$ref": "#/definitions/RoundingMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxCalculationMode": {
              "description": "When calculating taxes for `taxedPrice`, the selected mode is used for calculating the price with `LineItemLevel` (horizontally) or `UnitPriceLevel` (vertically) calculation mode.",
              "$ref": "#/definitions/TaxCalculationMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "customerGroup": {
              "description": "Set automatically when the customer is set and the customer is a member of a customer group.\nUsed for product variant\nprice selection.",
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "country": {
              "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nUsed for product variant price selection.",
              "$ref": "#/definitions/CountryCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingInfo": {
              "description": "Set automatically once the ShippingMethod is set.",
              "$ref": "#/definitions/ShippingInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "discountCodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCodeInfo"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "paymentInfo": {
              "$ref": "#/definitions/PaymentInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "deleteDaysAfterLastModification": {
              "format": "int",
              "description": "The cart will be deleted automatically if it hasn't been modified for the specified amount of days and it is in the `Active` CartState.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "refusedGifts": {
              "description": "Automatically filled when a line item with LineItemMode `GiftLineItem` is removed from the cart.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "origin": {
              "description": "The origin field indicates how this cart was created.\nThe value `Customer` indicates, that the cart was created by the customer.",
              "$ref": "#/definitions/CartOrigin",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingRateInput": {
              "description": "The shippingRateInput is used as an input to select a ShippingRatePriceTier.",
              "$ref": "#/definitions/ShippingRateInput",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "itemShippingAddresses": {
              "description": "Contains addresses for carts with multiple shipping addresses.\nLine items reference these addresses under their `shippingDetails`.\nThe addresses captured here are not used to determine eligible shipping methods or the applicable tax rate.\nOnly the cart's `shippingAddress` is used for this.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "lineItems",
            "customLineItems",
            "totalPrice",
            "cartState",
            "taxMode",
            "taxRoundingMode",
            "taxCalculationMode",
            "refusedGifts",
            "origin"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart",
      "x-annotation-updateType": "CartUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Cart>"
    },
    "CartAddCustomLineItemAction": {
      "title": "CartAddCustomLineItemAction",
      "example": {
        "action": "addCustomLineItem",
        "name": {
          "en": "Name EN",
          "de": "Name DE"
        },
        "quantity": 1,
        "money": {
          "currencyCode": "EUR",
          "centAmount": 4200
        },
        "slug": "mySlug",
        "taxCategory": {
          "typeId": "tax-category",
          "id": "{{category-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addCustomLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "slug": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "money",
            "name",
            "quantity",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-customlineitem"
    },
    "CartAddDiscountCodeAction": {
      "title": "CartAddDiscountCodeAction",
      "example": {
        "action": "addDiscountCode",
        "code": "mydiscountcode"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addDiscountCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "code": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "code"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-discountcode"
    },
    "CartAddItemShippingAddressAction": {
      "title": "CartAddItemShippingAddressAction",
      "example": {
        "action": "addItemShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-itemshippingaddress"
    },
    "CartAddLineItemAction": {
      "title": "CartAddLineItemAction",
      "example": {
        "action": "addLineItem",
        "productId": "{{product-id}}",
        "variantId": 2,
        "quantity": 1,
        "supplyChannel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        },
        "distributionChannel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        },
        "externalTaxRate": {
          "name": "StandardExternalTaxRate",
          "amount": 0.19,
          "country": "DE",
          "state": "Bavaria"
        },
        "shippingDetails": {
          "targets": [
            {
              "addressKey": "AddressKeyStringFromAddress",
              "quantity": 2
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "productId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-lineitem"
    },
    "CartAddPaymentAction": {
      "title": "CartAddPaymentAction",
      "example": {
        "action": "addPayment",
        "payment": {
          "id": "{{payment-id}}",
          "typeId": "payment"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addPayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-payment"
    },
    "CartAddShoppingListAction": {
      "title": "CartAddShoppingListAction",
      "example": {
        "action": "addShoppingList",
        "shoppingList": {
          "id": "{{shopping-list-id}}",
          "typeId": "shopping-list"
        },
        "supplyChannel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        },
        "distributionChannel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addShoppingList"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shoppingList": {
              "$ref": "#/definitions/ShoppingListResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "shoppingList"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-shopping-list"
    },
    "CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction": {
      "title": "CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction",
      "example": {
        "action": "applyDeltaToCustomLineItemShippingDetailsTargets",
        "customLineItemId": "{{lineItemId}}",
        "targetsDelta": [
          {
            "addressKey": "addressKeyString",
            "quantity": 1
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "applyDeltaToCustomLineItemShippingDetailsTargets"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "targetsDelta": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemShippingTarget"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "targetsDelta"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#apply-deltatocustomlineitemshippingdetailstargets"
    },
    "CartApplyDeltaToLineItemShippingDetailsTargetsAction": {
      "title": "CartApplyDeltaToLineItemShippingDetailsTargetsAction",
      "example": {
        "action": "applyDeltaToLineItemShippingDetailsTargets",
        "lineItemId": "{{lineItemId}}",
        "targetsDelta": [
          {
            "addressKey": "addressKeyString",
            "quantity": 1
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "applyDeltaToLineItemShippingDetailsTargets"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "targetsDelta": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemShippingTarget"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "targetsDelta"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#apply-deltatolineitemshippingdetailstargets"
    },
    "CartChangeCustomLineItemMoneyAction": {
      "title": "CartChangeCustomLineItemMoneyAction",
      "example": {
        "action": "changeCustomLineItemMoney",
        "customLineItemId": "{{customLineItemId}}",
        "money": {
          "currencyCode": "EUR",
          "centAmount": 4200
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCustomLineItemMoney"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "money": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-money"
    },
    "CartChangeCustomLineItemQuantityAction": {
      "title": "CartChangeCustomLineItemQuantityAction",
      "example": {
        "action": "changeCustomLineItemQuantity",
        "customLineItemId": "{{lineItemId}}",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCustomLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-quantity"
    },
    "CartChangeLineItemQuantityAction": {
      "title": "CartChangeLineItemQuantityAction",
      "example": {
        "action": "changeLineItemQuantity",
        "lineItemId": "{{lineItemId}}",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-lineitem-quantity"
    },
    "CartChangeTaxCalculationModeAction": {
      "title": "CartChangeTaxCalculationModeAction",
      "example": {
        "action": "changeTaxCalculationMode",
        "taxCalculationMode": "LineItemLevel"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxCalculationMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxCalculationMode": {
              "$ref": "#/definitions/TaxCalculationMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxCalculationMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-taxcalculationmode"
    },
    "CartChangeTaxModeAction": {
      "title": "CartChangeTaxModeAction",
      "example": {
        "action": "changeTaxMode",
        "taxMode": "Platform"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxMode": {
              "$ref": "#/definitions/TaxMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-taxmode"
    },
    "CartChangeTaxRoundingModeAction": {
      "title": "CartChangeTaxRoundingModeAction",
      "example": {
        "action": "changeTaxRoundingMode",
        "taxRoundingMode": "HalfUp"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxRoundingMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxRoundingMode": {
              "$ref": "#/definitions/RoundingMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxRoundingMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-tax-roundingmode"
    },
    "CartClassificationTier": {
      "title": "CartClassificationTier",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRatePriceTier"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CartClassification"
              ],
              "$ref": "#/definitions/ShippingRateTierType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "price": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "isMatching": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "value",
            "price"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartclassification"
    },
    "CartClassificationType": {
      "title": "CartClassificationType",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputType"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CartClassification"
              ],
              "$ref": "#/definitions/ShippingRateTierType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldLocalizedEnumValue"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartclassification"
    },
    "CartDiscount": {
      "title": "CartDiscount",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the cart discount.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the cart discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for a cart discount.\nMust be unique across a project.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/CartDiscountValueDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "cartPredicate": {
              "description": "A valid Cart predicate.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "target": {
              "description": "Empty when the `value` has type `giftLineItem`, otherwise a CartDiscountTarget is set.",
              "$ref": "#/definitions/CartDiscountTarget",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "sortOrder": {
              "description": "The string must contain a number between 0 and 1.\nAll matching cart discounts are applied to a cart in the order defined by this field.\nA discount with greater sort order is prioritized higher than a discount with lower sort order.\nThe sort order is unambiguous among all cart discounts.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "isActive": {
              "description": "Only active discount can be applied to the cart.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "validFrom": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validUntil": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "requiresDiscountCode": {
              "description": "States whether the discount can only be used in a connection with a DiscountCode.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "references": {
              "description": "The platform will generate this array from the predicate.\nIt contains the references of all the resources that are addressed in the predicate.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "stackingMode": {
              "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.",
              "$ref": "#/definitions/StackingMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name",
            "value",
            "cartPredicate",
            "sortOrder",
            "isActive",
            "requiresDiscountCode",
            "references",
            "stackingMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount",
      "x-annotation-updateType": "CartDiscountUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<CartDiscount>"
    },
    "CartDiscountChangeCartPredicateAction": {
      "title": "CartDiscountChangeCartPredicateAction",
      "example": {
        "action": "changeCartPredicate",
        "cartPredicate": "cartPredicateString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCartPredicate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "cartPredicate": {
              "description": "A valid Cart predicate.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "cartPredicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-cart-predicate"
    },
    "CartDiscountChangeIsActiveAction": {
      "title": "CartDiscountChangeIsActiveAction",
      "example": {
        "action": "changeIsActive",
        "isActive": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeIsActive"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "isActive": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "isActive"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-isactive"
    },
    "CartDiscountChangeNameAction": {
      "title": "CartDiscountChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "en": "NewNameEN",
          "de": "NewNameDE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-name"
    },
    "CartDiscountChangeRequiresDiscountCodeAction": {
      "title": "CartDiscountChangeRequiresDiscountCodeAction",
      "example": {
        "action": "changeRequiresDiscountCode",
        "requiresDiscountCode": true
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeRequiresDiscountCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "requiresDiscountCode": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "requiresDiscountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-requires-discountcode"
    },
    "CartDiscountChangeSortOrderAction": {
      "title": "CartDiscountChangeSortOrderAction",
      "example": {
        "action": "changeSortOrder",
        "sortOrder": "0.2"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeSortOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sortOrder": {
              "description": "The string must contain a number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "sortOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-sort-order"
    },
    "CartDiscountChangeStackingModeAction": {
      "title": "CartDiscountChangeStackingModeAction",
      "example": {
        "action": "changeStackingMode",
        "stackingMode": "Stacking"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeStackingMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "stackingMode": {
              "$ref": "#/definitions/StackingMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "stackingMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-stacking-mode"
    },
    "CartDiscountChangeTargetAction": {
      "title": "CartDiscountChangeTargetAction",
      "example": {
        "action": "changeTarget",
        "target": {
          "type": "lineItems",
          "predicate": "sku = \"myOtherSKU\""
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTarget"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "target": {
              "$ref": "#/definitions/CartDiscountTarget",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "target"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-target"
    },
    "CartDiscountChangeValueAction": {
      "title": "CartDiscountChangeValueAction",
      "example": {
        "action": "changeValue",
        "value": {
          "type": "absolute",
          "money": [
            {
              "currencyCode": "EUR",
              "centAmount": 40099
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeValue"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "value": {
              "$ref": "#/definitions/CartDiscountValueDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-value"
    },
    "CartDiscountCustomLineItemsTarget": {
      "title": "CartDiscountCustomLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "customLineItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "predicate": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "predicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountDraft": {
      "title": "CartDiscountDraft",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier for a cart discount.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "value": {
          "$ref": "#/definitions/CartDiscountValueDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "cartPredicate": {
          "description": "A valid Cart predicate.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "target": {
          "description": "Must not be set when the `value` has type `giftLineItem`, otherwise a CartDiscountTarget must be set.",
          "$ref": "#/definitions/CartDiscountTarget",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "sortOrder": {
          "description": "The string must contain a number between 0 and 1.\nA discount with greater sort order is prioritized higher than a discount with lower sort order.\nThe sort order must be unambiguous among all cart discounts.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "isActive": {
          "description": "Only active discount can be applied to the cart.\nDefaults to `true`.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "validFrom": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "validUntil": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "requiresDiscountCode": {
          "description": "States whether the discount can only be used in a connection with a DiscountCode.\nDefaults to `false`.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "stackingMode": {
          "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.",
          "$ref": "#/definitions/StackingMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "value",
        "cartPredicate",
        "sortOrder",
        "requiresDiscountCode"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
    },
    "CartDiscountLineItemsTarget": {
      "title": "CartDiscountLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "lineItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "predicate": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "predicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountPagedQueryResponse": {
      "title": "CartDiscountPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartDiscount"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<CartDiscount>"
    },
    "CartDiscountReference": {
      "title": "CartDiscountReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "cart-discount"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
    },
    "CartDiscountResourceIdentifier": {
      "title": "CartDiscountResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "cart-discount"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
    },
    "CartDiscountSetCustomFieldAction": {
      "title": "CartDiscountSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "description": "If `value` is absent or `null`, this field will be removed if it exists.\nTrying to remove a field that does not exist will fail with an `InvalidOperation` error.\nIf `value` is provided, set the `value` of the field defined by the `name`.\nThe FieldDefinition determines the format for the `value` to be provided.",
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-customfield"
    },
    "CartDiscountSetCustomTypeAction": {
      "title": "CartDiscountSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If absent, the custom type and any existing CustomFields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
              "type": "object",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-custom-type"
    },
    "CartDiscountSetDescriptionAction": {
      "title": "CartDiscountSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "en": "New Description EN",
          "de": "New Description DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "description": "If the `description` parameter is not included, the field will be emptied.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-description"
    },
    "CartDiscountSetKeyAction": {
      "title": "CartDiscountSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-key"
    },
    "CartDiscountSetValidFromAction": {
      "title": "CartDiscountSetValidFromAction",
      "example": {
        "action": "setValidFrom",
        "validFrom": "2017-10-15T15:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidFrom"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validFrom": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-from"
    },
    "CartDiscountSetValidFromAndUntilAction": {
      "title": "CartDiscountSetValidFromAndUntilAction",
      "example": {
        "action": "setValidFromAndUntil",
        "validFrom": "2017-10-15T15:00:00.000Z",
        "validUntil": "2017-10-15T15:05:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidFromAndUntil"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validFrom": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validUntil": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-from-and-until"
    },
    "CartDiscountSetValidUntilAction": {
      "title": "CartDiscountSetValidUntilAction",
      "example": {
        "action": "setValidUntil",
        "validUntil": "2017-10-15T20:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidUntil"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validUntil": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-until"
    },
    "CartDiscountShippingCostTarget": {
      "title": "CartDiscountShippingCostTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "shipping"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountTarget": {
      "title": "CartDiscountTarget",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartDiscountCustomLineItemsTarget",
        "CartDiscountLineItemsTarget",
        "CartDiscountShippingCostTarget",
        "MultiBuyCustomLineItemsTarget",
        "MultiBuyLineItemsTarget"
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscounttarget"
    },
    "CartDiscountUpdate": {
      "title": "CartDiscountUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartDiscountUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<CartDiscountUpdate, CartDiscountUpdateAction>"
    },
    "CartDiscountUpdateAction": {
      "title": "CartDiscountUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartDiscountChangeCartPredicateAction",
        "CartDiscountChangeIsActiveAction",
        "CartDiscountChangeNameAction",
        "CartDiscountChangeRequiresDiscountCodeAction",
        "CartDiscountChangeSortOrderAction",
        "CartDiscountChangeStackingModeAction",
        "CartDiscountChangeTargetAction",
        "CartDiscountChangeValueAction",
        "CartDiscountSetCustomFieldAction",
        "CartDiscountSetCustomTypeAction",
        "CartDiscountSetDescriptionAction",
        "CartDiscountSetKeyAction",
        "CartDiscountSetValidFromAction",
        "CartDiscountSetValidFromAndUntilAction",
        "CartDiscountSetValidUntilAction"
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<CartDiscountUpdateAction>"
    },
    "CartDiscountValue": {
      "title": "CartDiscountValue",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartDiscountValueAbsolute",
        "CartDiscountValueFixed",
        "CartDiscountValueGiftLineItem",
        "CartDiscountValueRelative"
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscountvalue"
    },
    "CartDiscountValueAbsolute": {
      "title": "CartDiscountValueAbsolute",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValue"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "absolute"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypedMoney"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueAbsoluteDraft": {
      "title": "CartDiscountValueAbsoluteDraft",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValueDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "absolute"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Money"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueDraft": {
      "title": "CartDiscountValueDraft",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartDiscountValueAbsoluteDraft",
        "CartDiscountValueFixedDraft",
        "CartDiscountValueGiftLineItemDraft",
        "CartDiscountValueRelativeDraft"
      ],
      "x-annotation-package": "CartDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscountvalue"
    },
    "CartDiscountValueFixed": {
      "title": "CartDiscountValueFixed",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValue"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "fixed"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypedMoney"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueFixedDraft": {
      "title": "CartDiscountValueFixedDraft",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValueDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "fixed"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Money"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueGiftLineItem": {
      "title": "CartDiscountValueGiftLineItem",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValue"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "giftLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "product": {
              "$ref": "#/definitions/ProductReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "description": "The channel must have the role `InventorySupply`",
              "$ref": "#/definitions/ChannelReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "description": "The channel must have the role `ProductDistribution`",
              "$ref": "#/definitions/ChannelReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "product",
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueGiftLineItemDraft": {
      "title": "CartDiscountValueGiftLineItemDraft",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValueDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "giftLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "product": {
              "$ref": "#/definitions/ProductResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "description": "The channel must have the role `InventorySupply`",
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "description": "The channel must have the role `ProductDistribution`",
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "product",
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueRelative": {
      "title": "CartDiscountValueRelative",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValue"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "relative"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "permyriad": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "permyriad"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDiscountValueRelativeDraft": {
      "title": "CartDiscountValueRelativeDraft",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountValueDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "relative"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "permyriad": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "permyriad"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "CartDraft": {
      "title": "CartDraft",
      "type": "object",
      "properties": {
        "currency": {
          "description": "A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
          "$ref": "#/definitions/CurrencyCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier of the cart.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerId": {
          "description": "Id of an existing Customer.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerEmail": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerGroup": {
          "description": "Will be set automatically when the `customerId` is set and the customer is a member of a customer group.\nCan be set explicitly when no `customerId` is present.",
          "$ref": "#/definitions/CustomerGroupResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "anonymousId": {
          "description": "Assigns the new cart to an anonymous session (the customer has not signed up/in yet).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "store": {
          "description": "Assigns the new cart to the store.\nThe store assignment can not be modified.",
          "$ref": "#/definitions/StoreResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "inventoryMode": {
          "description": "Default inventory mode is `None`.",
          "$ref": "#/definitions/InventoryMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "taxMode": {
          "description": "The default tax mode is `Platform`.",
          "$ref": "#/definitions/TaxMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "taxRoundingMode": {
          "description": "The default tax rounding mode is `HalfEven`.",
          "$ref": "#/definitions/RoundingMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "taxCalculationMode": {
          "description": "The default tax calculation mode is `LineItemLevel`.",
          "$ref": "#/definitions/TaxCalculationMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "customLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomLineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "shippingAddress": {
          "description": "The shipping address is used to determine the eligible shipping methods and rates as well as the tax rate of the line items.",
          "$ref": "#/definitions/BaseAddress",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "billingAddress": {
          "$ref": "#/definitions/BaseAddress",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingMethod": {
          "$ref": "#/definitions/ShippingMethodResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "externalTaxRateForShippingMethod": {
          "description": "An external tax rate can be set for the `shippingMethod` if the cart has the `External` TaxMode.",
          "$ref": "#/definitions/ExternalTaxRateDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "locale": {
          "description": "Must be one of the languages supported for this project",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterLastModification": {
          "format": "int64",
          "description": "The cart will be deleted automatically if it hasn't been modified for the specified amount of days and it is in the `Active` CartState.\nIf a ChangeSubscription for carts exists, a `ResourceDeleted` notification will be sent.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "origin": {
          "description": "The default origin is `Customer`.",
          "$ref": "#/definitions/CartOrigin",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "shippingRateInput": {
          "description": "The shippingRateInput is used as an input to select a ShippingRatePriceTier.\nBased on the definition of ShippingRateInputType.\nIf CartClassification is defined, it must be ClassificationShippingRateInput.\nIf CartScore is defined, it must be ScoreShippingRateInput.\nOtherwise it can not bet set.",
          "$ref": "#/definitions/ShippingRateInputDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "itemShippingAddresses": {
          "description": "Contains addresses for carts with multiple shipping addresses.\nEach address must contain a key which is unique in this cart.\nLine items will use these keys to reference the addresses under their `shippingDetails`.\nThe addresses captured here are not used to determine eligible shipping methods or the applicable tax rate.\nOnly the cart's `shippingAddress` is used for this.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseAddress"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "discountCodes": {
          "description": "The code of existing DiscountCodes.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "currency"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartdraft"
    },
    "CartOrigin": {
      "title": "CartOrigin",
      "enum": [
        "Customer",
        "Merchant"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
    },
    "CartPagedQueryResponse": {
      "title": "CartPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cart"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Cart>"
    },
    "CartRecalculateAction": {
      "title": "CartRecalculateAction",
      "example": {
        "action": "recalculate",
        "updateProductData": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "recalculate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "updateProductData": {
              "description": "If set to `true`, the line item product data (`name`, `variant` and `productType`) will also be updated.\nIf set to `false`,\nonly the prices and tax rates of the line item will be updated.\nThe updated price of a line item may not correspond to a price in `variant.prices` anymore.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#recalculate"
    },
    "CartReference": {
      "title": "CartReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "cart"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart"
    },
    "CartRemoveCustomLineItemAction": {
      "title": "CartRemoveCustomLineItemAction",
      "example": {
        "action": "removeCustomLineItem",
        "customLineItemId": "{{customLineItemId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeCustomLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-customlineitem"
    },
    "CartRemoveDiscountCodeAction": {
      "title": "CartRemoveDiscountCodeAction",
      "example": {
        "action": "removeDiscountCode",
        "discountCode": {
          "typeId": "discount-code",
          "id": "{{discount-code-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeDiscountCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-discountcode"
    },
    "CartRemoveItemShippingAddressAction": {
      "title": "CartRemoveItemShippingAddressAction",
      "example": {
        "action": "removeItemShippingAddress",
        "addressKey": "{{addressKey}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-itemshippingaddress"
    },
    "CartRemoveLineItemAction": {
      "title": "CartRemoveLineItemAction",
      "example": {
        "action": "removeLineItem",
        "lineItemId": "{{lineItemId}}",
        "quantity": 1,
        "externalPrice": {
          "currencyCode": "EUR",
          "centAmount": 4000
        },
        "shippingDetailsToRemove": {
          "targets": [
            {
              "addressKey": "AddressKeyStringFromAddress",
              "quantity": 2
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingDetailsToRemove": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-lineitem"
    },
    "CartRemovePaymentAction": {
      "title": "CartRemovePaymentAction",
      "example": {
        "action": "removePayment",
        "payment": {
          "id": "{{payment-id}}",
          "typeId": "payment"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removePayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-payment"
    },
    "CartResourceIdentifier": {
      "title": "CartResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "cart"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart"
    },
    "CartScoreTier": {
      "title": "CartScoreTier",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRatePriceTier"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CartScore"
              ],
              "$ref": "#/definitions/ShippingRateTierType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "score": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "price": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "priceFunction": {
              "$ref": "#/definitions/PriceFunction",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "isMatching": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "score"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartscore-with-fixed-price"
    },
    "CartScoreType": {
      "title": "CartScoreType",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputType"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CartScore"
              ],
              "$ref": "#/definitions/ShippingRateTierType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartscore"
    },
    "CartSetAnonymousIdAction": {
      "title": "CartSetAnonymousIdAction",
      "example": {
        "action": "setAnonymousId",
        "anonymousId": "idString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAnonymousId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "anonymousId": {
              "description": "If not set, any existing anonymous ID will be removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-anonymous-id"
    },
    "CartSetBillingAddressAction": {
      "title": "CartSetBillingAddressAction",
      "example": {
        "action": "setBillingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-billing-address"
    },
    "CartSetBillingAddressCustomFieldAction": {
      "title": "CartSetBillingAddressCustomFieldAction",
      "example": {
        "action": "setBillingAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-billing-address-customfield"
    },
    "CartSetBillingAddressCustomTypeAction": {
      "title": "CartSetBillingAddressCustomTypeAction",
      "example": {
        "action": "setShippingAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-billing-address-custom-type"
    },
    "CartSetCartTotalTaxAction": {
      "title": "CartSetCartTotalTaxAction",
      "example": {
        "action": "setCartTotalTax",
        "externalTotalGross": {
          "currencyCode": "EUR",
          "centAmount": 10000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCartTotalTax"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalTotalGross": {
              "description": "The total gross amount of the cart (totalNet + taxes).",
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxPortions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxPortionDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "externalTotalGross"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-cart-total-tax"
    },
    "CartSetCountryAction": {
      "title": "CartSetCountryAction",
      "example": {
        "action": "setCountry",
        "country": "DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCountry"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "country": {
              "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
              "$ref": "#/definitions/CountryCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-country"
    },
    "CartSetCustomFieldAction": {
      "title": "CartSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customfield"
    },
    "CartSetCustomLineItemCustomFieldAction": {
      "title": "CartSetCustomLineItemCustomFieldAction",
      "example": {
        "action": "setCustomLineItemCustomField",
        "customLineItemId": "{{customLineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-customfield"
    },
    "CartSetCustomLineItemCustomTypeAction": {
      "title": "CartSetCustomLineItemCustomTypeAction",
      "example": {
        "action": "setCustomLineItemCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        },
        "customLineItemId": "{{customLineItemId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-custom-type"
    },
    "CartSetCustomLineItemShippingDetailsAction": {
      "title": "CartSetCustomLineItemShippingDetailsAction",
      "example": {
        "action": "setCustomLineItemShippingDetails",
        "customLineItemId": "{{lineItemId}}",
        "shippingDetails": {
          "targets": [
            {
              "addressKey": "{{addressKey}}",
              "quantity": 1
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitemshippingdetails"
    },
    "CartSetCustomLineItemTaxAmountAction": {
      "title": "CartSetCustomLineItemTaxAmountAction",
      "example": {
        "action": "setCustomLineItemTaxAmount",
        "customLineItemId": "{{customLineItemId}}",
        "externalTaxAmount": {
          "totalGross": {
            "centAmount": 2000000,
            "currencyCode": "EUR"
          },
          "taxRate": {
            "name": "myTaxRate",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemTaxAmount"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxAmount": {
              "$ref": "#/definitions/ExternalTaxAmountDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxamount"
    },
    "CartSetCustomLineItemTaxRateAction": {
      "title": "CartSetCustomLineItemTaxRateAction",
      "example": {
        "action": "setCustomLineItemTaxRate",
        "customLineItemId": "{{customLineItemId}}",
        "externalTaxRate": {
          "name": "TaxRateName",
          "country": "DE",
          "amount": 0.19
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxrate"
    },
    "CartSetCustomShippingMethodAction": {
      "title": "CartSetCustomShippingMethodAction",
      "example": {
        "action": "setCustomShippingMethod",
        "shippingMethodName": "myCustomShippingMethod",
        "shippingRate": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4200
          }
        },
        "taxCategory": {
          "id": "{{category-id}}",
          "typeId": "tax-category"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomShippingMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingMethodName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingRate": {
              "$ref": "#/definitions/ShippingRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "shippingMethodName",
            "shippingRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-custom-shipping-method"
    },
    "CartSetCustomTypeAction": {
      "title": "CartSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-custom-type"
    },
    "CartSetCustomerEmailAction": {
      "title": "CartSetCustomerEmailAction",
      "example": {
        "action": "setCustomerEmail",
        "email": "foo@bar.com"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerEmail"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-email"
    },
    "CartSetCustomerGroupAction": {
      "title": "CartSetCustomerGroupAction",
      "example": {
        "action": "setCustomerGroup",
        "customerGroup": {
          "id": "{{customer-group-id}}",
          "typeId": "customer-group"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerGroup"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-group"
    },
    "CartSetCustomerIdAction": {
      "title": "CartSetCustomerIdAction",
      "example": {
        "action": "setCustomerId",
        "customerId": "{{customer-id}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerId": {
              "description": "If set, a customer with the given ID must exist in the project.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-id"
    },
    "CartSetDeleteDaysAfterLastModificationAction": {
      "title": "CartSetDeleteDaysAfterLastModificationAction",
      "example": {
        "action": "setDeleteDaysAfterLastModification",
        "deleteDaysAfterLastModification": 90
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeleteDaysAfterLastModification"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deleteDaysAfterLastModification": {
              "format": "int",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-deletedaysafterlastmodification-beta"
    },
    "CartSetDeliveryAddressCustomFieldAction": {
      "title": "CartSetDeliveryAddressCustomFieldAction",
      "example": {
        "action": "setDeliveryAddressCustomField",
        "deliveryId": "{{delivery-id}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-delivery-address-customfield"
    },
    "CartSetDeliveryAddressCustomTypeAction": {
      "title": "CartSetDeliveryAddressCustomTypeAction",
      "example": {
        "action": "setDeliveryAddressCustomType",
        "deliveryId": "{{delivery-id}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-delivery-address-custom-type"
    },
    "CartSetItemShippingAddressCustomFieldAction": {
      "title": "CartSetItemShippingAddressCustomFieldAction",
      "example": {
        "action": "setItemShippingAddressCustomField",
        "addressKey": "{{address-key}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setItemShippingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-itemshipping-address-customfield"
    },
    "CartSetItemShippingAddressCustomTypeAction": {
      "title": "CartSetItemShippingAddressCustomTypeAction",
      "example": {
        "action": "setItemShippingAddressCustomType",
        "addressKey": "{{address-key}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setItemShippingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-itemshipping-address-custom-type"
    },
    "CartSetKeyAction": {
      "title": "CartSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "myNewKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-key"
    },
    "CartSetLineItemCustomFieldAction": {
      "title": "CartSetLineItemCustomFieldAction",
      "example": {
        "action": "setLineItemCustomField",
        "lineItemId": "{{lineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-customfield"
    },
    "CartSetLineItemCustomTypeAction": {
      "title": "CartSetLineItemCustomTypeAction",
      "example": {
        "action": "setLineItemCustomType",
        "lineItemId": "{{lineItemId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-custom-type"
    },
    "CartSetLineItemDistributionChannelAction": {
      "title": "CartSetLineItemDistributionChannelAction",
      "example": {
        "action": "setLineItemDistributionChannel",
        "lineItemId": "{{lineItemId}}",
        "distributionChannel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemDistributionChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-distributionchannel"
    },
    "CartSetLineItemPriceAction": {
      "title": "CartSetLineItemPriceAction",
      "example": {
        "action": "setLineItemPrice",
        "lineItemId": "{{lineItemId}}",
        "externalPrice": {
          "currencyCode": "EUR",
          "centAmount": 4000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemPrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-price"
    },
    "CartSetLineItemShippingDetailsAction": {
      "title": "CartSetLineItemShippingDetailsAction",
      "example": {
        "action": "setLineItemShippingDetails",
        "lineItemId": "{{lineItemId}}",
        "shippingDetails": {
          "targets": [
            {
              "addressKey": "{{addressKey}}",
              "quantity": 1
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitemshippingdetails"
    },
    "CartSetLineItemTaxAmountAction": {
      "title": "CartSetLineItemTaxAmountAction",
      "example": {
        "action": "setLineItemTaxAmount",
        "lineItemId": "{{lineItemId}}",
        "externalTaxAmount": {
          "totalGross": {
            "currencyCode": "EUR",
            "centAmount": 100
          },
          "taxRate": {
            "name": "myTaxRate",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemTaxAmount"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxAmount": {
              "$ref": "#/definitions/ExternalTaxAmountDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxamount"
    },
    "CartSetLineItemTaxRateAction": {
      "title": "CartSetLineItemTaxRateAction",
      "example": {
        "action": "setLineItemTaxRate",
        "lineItemId": "{{lineItemId}}",
        "externalTaxRate": {
          "name": "myTaxRate",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxrate"
    },
    "CartSetLineItemTotalPriceAction": {
      "title": "CartSetLineItemTotalPriceAction",
      "example": {
        "action": "setLineItemTotalPrice",
        "lineItemId": "{{lineItemId}}",
        "externalTotalPrice": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4200
          },
          "totalPrice": {
            "currencyCode": "EUR",
            "centAmount": 4200
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemTotalPrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-totalprice"
    },
    "CartSetLocaleAction": {
      "title": "CartSetLocaleAction",
      "example": {
        "action": "setLocale",
        "locale": "de-DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocale"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-locale"
    },
    "CartSetShippingAddressAction": {
      "title": "CartSetShippingAddressAction",
      "example": {
        "action": "setShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-address"
    },
    "CartSetShippingAddressCustomFieldAction": {
      "title": "CartSetShippingAddressCustomFieldAction",
      "example": {
        "action": "setShippingAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-shipping-address-customfield"
    },
    "CartSetShippingAddressCustomTypeAction": {
      "title": "CartSetShippingAddressCustomTypeAction",
      "example": {
        "action": "setShippingAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/carts#set-shipping-address-custom-type"
    },
    "CartSetShippingMethodAction": {
      "title": "CartSetShippingMethodAction",
      "example": {
        "action": "setShippingMethod",
        "shippingMethod": {
          "id": "{{shipping-method-id}}",
          "typeId": "shipping-method"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingMethod": {
              "$ref": "#/definitions/ShippingMethodResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-method"
    },
    "CartSetShippingMethodTaxAmountAction": {
      "title": "CartSetShippingMethodTaxAmountAction",
      "example": {
        "action": "setShippingMethodTaxAmount",
        "externalTaxAmount": {
          "totalGross": {
            "centAmount": 2000000,
            "currencyCode": "EUR"
          },
          "taxRate": {
            "name": "myTaxRate",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingMethodTaxAmount"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalTaxAmount": {
              "$ref": "#/definitions/ExternalTaxAmountDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxamount"
    },
    "CartSetShippingMethodTaxRateAction": {
      "title": "CartSetShippingMethodTaxRateAction",
      "example": {
        "action": "setShippingMethodTaxRate",
        "externalTaxRate": {
          "name": "myTaxRate",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingMethodTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxrate"
    },
    "CartSetShippingRateInputAction": {
      "title": "CartSetShippingRateInputAction",
      "example": {
        "action": "setShippingRateInput",
        "shippingRateInput": {
          "type": "Classification",
          "key": "shippingRateString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingRateInput"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingRateInput": {
              "description": "Based on the definition of ShippingRateInputType.\nIf CartClassification is defined, it must be ClassificationShippingRateInput.\nIf CartScore is defined, it must be ScoreShippingRateInput.\nOtherwise it can not bet set.",
              "$ref": "#/definitions/ShippingRateInputDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-rate-input"
    },
    "CartState": {
      "title": "CartState",
      "enum": [
        "Active",
        "Merged",
        "Ordered"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartstate"
    },
    "CartUpdate": {
      "title": "CartUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<CartUpdate, CartUpdateAction>"
    },
    "CartUpdateAction": {
      "title": "CartUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartAddCustomLineItemAction",
        "CartAddDiscountCodeAction",
        "CartAddItemShippingAddressAction",
        "CartAddLineItemAction",
        "CartAddPaymentAction",
        "CartAddShoppingListAction",
        "CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction",
        "CartApplyDeltaToLineItemShippingDetailsTargetsAction",
        "CartChangeCustomLineItemMoneyAction",
        "CartChangeCustomLineItemQuantityAction",
        "CartChangeLineItemQuantityAction",
        "CartChangeTaxCalculationModeAction",
        "CartChangeTaxModeAction",
        "CartChangeTaxRoundingModeAction",
        "CartRecalculateAction",
        "CartRemoveCustomLineItemAction",
        "CartRemoveDiscountCodeAction",
        "CartRemoveItemShippingAddressAction",
        "CartRemoveLineItemAction",
        "CartRemovePaymentAction",
        "CartSetAnonymousIdAction",
        "CartSetBillingAddressAction",
        "CartSetBillingAddressCustomFieldAction",
        "CartSetBillingAddressCustomTypeAction",
        "CartSetCartTotalTaxAction",
        "CartSetCountryAction",
        "CartSetCustomFieldAction",
        "CartSetCustomLineItemCustomFieldAction",
        "CartSetCustomLineItemCustomTypeAction",
        "CartSetCustomLineItemShippingDetailsAction",
        "CartSetCustomLineItemTaxAmountAction",
        "CartSetCustomLineItemTaxRateAction",
        "CartSetCustomShippingMethodAction",
        "CartSetCustomTypeAction",
        "CartSetCustomerEmailAction",
        "CartSetCustomerGroupAction",
        "CartSetCustomerIdAction",
        "CartSetDeleteDaysAfterLastModificationAction",
        "CartSetDeliveryAddressCustomFieldAction",
        "CartSetDeliveryAddressCustomTypeAction",
        "CartSetItemShippingAddressCustomFieldAction",
        "CartSetItemShippingAddressCustomTypeAction",
        "CartSetKeyAction",
        "CartSetLineItemCustomFieldAction",
        "CartSetLineItemCustomTypeAction",
        "CartSetLineItemDistributionChannelAction",
        "CartSetLineItemPriceAction",
        "CartSetLineItemShippingDetailsAction",
        "CartSetLineItemTaxAmountAction",
        "CartSetLineItemTaxRateAction",
        "CartSetLineItemTotalPriceAction",
        "CartSetLocaleAction",
        "CartSetShippingAddressAction",
        "CartSetShippingAddressCustomFieldAction",
        "CartSetShippingAddressCustomTypeAction",
        "CartSetShippingMethodAction",
        "CartSetShippingMethodTaxAmountAction",
        "CartSetShippingMethodTaxRateAction",
        "CartSetShippingRateInputAction",
        "CartUpdateItemShippingAddressAction"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<CartUpdateAction>"
    },
    "CartUpdateItemShippingAddressAction": {
      "title": "CartUpdateItemShippingAddressAction",
      "example": {
        "action": "updateItemShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "updateItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#update-itemshippingaddress"
    },
    "CartValueTier": {
      "title": "CartValueTier",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRatePriceTier"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CartValue"
              ],
              "$ref": "#/definitions/ShippingRateTierType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "minimumCentAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "price": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "isMatching": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "minimumCentAmount",
            "price"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartvalue"
    },
    "CartValueType": {
      "title": "CartValueType",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputType"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CartValue"
              ],
              "$ref": "#/definitions/ShippingRateTierType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartvalue"
    },
    "CartsConfiguration": {
      "title": "CartsConfiguration",
      "type": "object",
      "properties": {
        "countryTaxRateFallbackEnabled": {
          "description": "if country - no state tax rate fallback should be used when a shipping address state is not explicitly covered in the rates lists of all tax categories of a cart line items. Default value 'false'",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterLastModification": {
          "format": "int64",
          "description": "The default value for the deleteDaysAfterLastModification parameter of the CartDraft. Initially set to 90 for projects created after December 2019.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project"
    },
    "Category": {
      "title": "Category",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the category.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the category.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "slug": {
              "description": "human-readable identifiers usually used as deep-link URL to the related category.\nEach slug is unique across a project, but a category can have the same slug for different languages.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "ancestors": {
              "description": "Contains the parent path towards the root category.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "parent": {
              "description": "A category that is the parent of this category in the category tree.",
              "$ref": "#/definitions/CategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "orderHint": {
              "description": "An attribute as base for a custom category order in one level.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "metaTitle": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "metaDescription": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "metaKeywords": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "assets": {
              "description": "Can be used to store images, icons or movies related to this category.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the category.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name",
            "slug",
            "ancestors",
            "orderHint"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category",
      "x-annotation-updateType": "CategoryUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Category>"
    },
    "CategoryAddAssetAction": {
      "title": "CategoryAddAssetAction",
      "example": {
        "action": "addAsset",
        "asset": {
          "sources": [
            {
              "uri": "https://www.commercetools.de/ct-logo.svg",
              "key": "vector"
            }
          ],
          "name": {
            "de": "commercetools Logo",
            "en": "commercetools logo"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addAsset"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "asset": {
              "$ref": "#/definitions/AssetDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "position": {
              "format": "int32",
              "description": "When specified, the value might be `0` and should be lower than the total of the assets list.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "asset"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#add-asset"
    },
    "CategoryChangeAssetNameAction": {
      "title": "CategoryChangeAssetNameAction",
      "example": {
        "action": "changeAssetName",
        "assetId": "{{assetId}}",
        "name": {
          "de": "Mein Asset",
          "en": "My asset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAssetName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-asset-name"
    },
    "CategoryChangeAssetOrderAction": {
      "title": "CategoryChangeAssetOrderAction",
      "example": {
        "action": "changeAssetOrder",
        "assetOrder": [
          "{{assetId1}}",
          "{{assetId2}}"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAssetOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetOrder": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "assetOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-asset-order"
    },
    "CategoryChangeNameAction": {
      "title": "CategoryChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "de": "neuer Category Name",
          "en": "new category name"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-name"
    },
    "CategoryChangeOrderHintAction": {
      "title": "CategoryChangeOrderHintAction",
      "example": {
        "action": "changeOrderHint",
        "orderHint": "0.1"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeOrderHint"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "orderHint": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "orderHint"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-orderhint"
    },
    "CategoryChangeParentAction": {
      "title": "CategoryChangeParentAction",
      "example": {
        "action": "changeParent",
        "parent": {
          "typeId": "category",
          "id": "{{category-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeParent"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parent": {
              "$ref": "#/definitions/CategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parent"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-parent"
    },
    "CategoryChangeSlugAction": {
      "title": "CategoryChangeSlugAction",
      "example": {
        "action": "changeSlug",
        "slug": {
          "de": "meine-kategorie",
          "en": "my-category"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeSlug"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "slug": {
              "description": "Allowed are alphabetic, numeric, underscore (&#95;) and hyphen (&#45;) characters.\nMaximum size is {{ site.data.api-limits.slugLength }}.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-slug"
    },
    "CategoryCreatedMessage": {
      "title": "CategoryCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CategoryCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "category"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categorycreatedmessage"
    },
    "CategoryCreatedMessagePayload": {
      "title": "CategoryCreatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CategoryCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "category"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categorycreatedmessage"
    },
    "CategoryDraft": {
      "title": "CategoryDraft",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "slug": {
          "description": "human-readable identifier usually used as deep-link URL to the related category.\nAllowed are alphabetic, numeric, underscore (`_`) and hyphen (`-`) characters.\nMaximum size is 256.\n**Must be unique across a project!** The same category can have the same slug for different languages.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "parent": {
          "description": "A category that is the parent of this category in the category tree.\nThe parent can be set by its ID or by its key.",
          "$ref": "#/definitions/CategoryResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "orderHint": {
          "description": "An attribute as base for a custom category order in one level.\nA random value will be assigned by API if not set.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "externalId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "metaTitle": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaDescription": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaKeywords": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-defined unique identifier for the category.\nKeys can only contain alphanumeric characters (`a-Z, 0-9`), underscores and hyphens (`-, _`) and be between 2 and 256 characters.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "slug"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#categorydraft"
    },
    "CategoryOrderHints": {
      "title": "CategoryOrderHints",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "type": "string",
        "x-annotation-builtinType": "string",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-asMap": {
        "key": "string",
        "value": "string"
      }
    },
    "CategoryPagedQueryResponse": {
      "title": "CategoryPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Category>"
    },
    "CategoryReference": {
      "title": "CategoryReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "category"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category"
    },
    "CategoryRemoveAssetAction": {
      "title": "CategoryRemoveAssetAction",
      "example": {
        "action": "removeAsset",
        "assetId": "{{assetId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeAsset"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#remove-asset"
    },
    "CategoryResourceIdentifier": {
      "title": "CategoryResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "category"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category"
    },
    "CategorySetAssetCustomFieldAction": {
      "title": "CategorySetAssetCustomFieldAction",
      "example": {
        "action": "setAssetCustomField",
        "assetId": "{{assetId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-custom-field"
    },
    "CategorySetAssetCustomTypeAction": {
      "title": "CategorySetAssetCustomTypeAction",
      "example": {
        "action": "setAssetCustomType",
        "assetId": "{{assetId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "If set, the custom fields are set to this new value.",
              "type": "object",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-custom-type"
    },
    "CategorySetAssetDescriptionAction": {
      "title": "CategorySetAssetDescriptionAction",
      "example": {
        "action": "setAssetDescription",
        "assetId": "{{assetId}}",
        "description": {
          "de": "Dies ist eine Asset-Beschreibung",
          "en": "This is an asset description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-description"
    },
    "CategorySetAssetKeyAction": {
      "title": "CategorySetAssetKeyAction",
      "example": {
        "action": "setAssetKey",
        "assetId": "{{assetId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "description": "User-defined identifier for the asset.\nIf left blank or set to `null`, the asset key is unset/removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "assetId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-key"
    },
    "CategorySetAssetSourcesAction": {
      "title": "CategorySetAssetSourcesAction",
      "example": {
        "action": "setAssetSources",
        "assetId": "{{assetId}}",
        "sources": [
          {
            "uri": "https://www.commercetools.de/ct-logo.svg",
            "key": "vector"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetSources"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "sources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetSource"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "sources"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-sources"
    },
    "CategorySetAssetTagsAction": {
      "title": "CategorySetAssetTagsAction",
      "example": {
        "action": "setAssetTags",
        "assetId": "{{assetId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetTags"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-tags"
    },
    "CategorySetCustomFieldAction": {
      "title": "CategorySetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-customfield"
    },
    "CategorySetCustomTypeAction": {
      "title": "CategorySetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If absent, the custom type and any existing CustomFields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type. Sets the custom fields to this value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-custom-type"
    },
    "CategorySetDescriptionAction": {
      "title": "CategorySetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "de": "This is a category description",
          "en": "Dies ist eine Kategorie-Beschreibung"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-description"
    },
    "CategorySetExternalIdAction": {
      "title": "CategorySetExternalIdAction",
      "example": {
        "action": "setExternalId",
        "externalId": "externalIdString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setExternalId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalId": {
              "description": "If not defined, the external ID is unset.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-external-id"
    },
    "CategorySetKeyAction": {
      "title": "CategorySetKeyAction",
      "example": {
        "action": "setKey",
        "key": "myNewKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "User-defined unique identifier for the category.\nKeys can only contain alphanumeric characters (`a-Z, 0-9`), underscores and hyphens (`-, _`) and be between 2 and 256 characters.\nIf `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-key"
    },
    "CategorySetMetaDescriptionAction": {
      "title": "CategorySetMetaDescriptionAction",
      "example": {
        "action": "setMetaDescription",
        "metaDescription": {
          "de": "Dies ist meine MetaDecription",
          "en": "this is my meta description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMetaDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "metaDescription": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-description"
    },
    "CategorySetMetaKeywordsAction": {
      "title": "CategorySetMetaKeywordsAction",
      "example": {
        "action": "setMetaKeywords",
        "metaKeywords": {
          "de": "commercetools, genial",
          "en": "commercetools, aweseome"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMetaKeywords"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "metaKeywords": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-keywords"
    },
    "CategorySetMetaTitleAction": {
      "title": "CategorySetMetaTitleAction",
      "example": {
        "action": "setMetaTitle",
        "metaTitle": {
          "de": "Dies ist mein Meta-Title",
          "en": "This is my meta title"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMetaTitle"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "metaTitle": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-title"
    },
    "CategorySlugChangedMessage": {
      "title": "CategorySlugChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CategorySlugChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "slug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldSlug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categoryslugchangedmessage"
    },
    "CategorySlugChangedMessagePayload": {
      "title": "CategorySlugChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CategorySlugChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "slug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldSlug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categoryslugchangedmessage"
    },
    "CategoryUpdate": {
      "title": "CategoryUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Category",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<CategoryUpdate, CategoryUpdateAction>"
    },
    "CategoryUpdateAction": {
      "title": "CategoryUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CategoryAddAssetAction",
        "CategoryChangeAssetNameAction",
        "CategoryChangeAssetOrderAction",
        "CategoryChangeNameAction",
        "CategoryChangeOrderHintAction",
        "CategoryChangeParentAction",
        "CategoryChangeSlugAction",
        "CategoryRemoveAssetAction",
        "CategorySetAssetCustomFieldAction",
        "CategorySetAssetCustomTypeAction",
        "CategorySetAssetDescriptionAction",
        "CategorySetAssetKeyAction",
        "CategorySetAssetSourcesAction",
        "CategorySetAssetTagsAction",
        "CategorySetCustomFieldAction",
        "CategorySetCustomTypeAction",
        "CategorySetDescriptionAction",
        "CategorySetExternalIdAction",
        "CategorySetKeyAction",
        "CategorySetMetaDescriptionAction",
        "CategorySetMetaKeywordsAction",
        "CategorySetMetaTitleAction"
      ],
      "x-annotation-package": "Category",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<CategoryUpdateAction>"
    },
    "CentPrecisionMoney": {
      "title": "CentPrecisionMoney",
      "allOf": [
        {
          "$ref": "#/definitions/TypedMoney"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "centPrecision"
              ],
              "$ref": "#/definitions/MoneyType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fractionDigits": {
              "maximum": 12,
              "format": "int32",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "centAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "currencyCode": {
              "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
              "$ref": "#/definitions/CurrencyCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type",
            "fractionDigits",
            "centAmount",
            "currencyCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "CentPrecisionMoneyDraft": {
      "title": "CentPrecisionMoneyDraft",
      "allOf": [
        {
          "$ref": "#/definitions/TypedMoneyDraft"
        },
        {
          "properties": {
            "centAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "currencyCode": {
              "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
              "$ref": "#/definitions/CurrencyCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "centPrecision"
              ],
              "$ref": "#/definitions/MoneyType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fractionDigits": {
              "maximum": 12,
              "format": "int32",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "centAmount",
            "currencyCode",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "ChangeSubscription": {
      "title": "ChangeSubscription",
      "type": "object",
      "properties": {
        "resourceTypeId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "resourceTypeId"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "Channel": {
      "title": "Channel",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the channel.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "Any arbitrary string key that uniquely identifies this channel within the project.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "roles": {
              "description": "The roles of this channel.\nEach channel must have at least one role.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "name": {
              "description": "A human-readable name of the channel.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "description": "A human-readable description of the channel.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "address": {
              "description": "The address where this channel is located (e.g.\nif the channel is a physical store).",
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "reviewRatingStatistics": {
              "description": "Statistics about the review ratings taken into account for this channel.",
              "$ref": "#/definitions/ReviewRatingStatistics",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "geoLocation": {
              "description": "A GeoJSON geometry object encoding the geo location of the channel.",
              "$ref": "#/definitions/GeoJson",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "key",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel",
      "x-annotation-updateType": "ChannelUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Channel>"
    },
    "ChannelAddRolesAction": {
      "title": "ChannelAddRolesAction",
      "example": {
        "action": "addRoles",
        "roles": [
          "InventorySupply"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addRoles"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#add-roles"
    },
    "ChannelChangeDescriptionAction": {
      "title": "ChannelChangeDescriptionAction",
      "example": {
        "action": "changeDescription",
        "description": {
          "en": "new Description EN",
          "de": "new Description DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-description"
    },
    "ChannelChangeKeyAction": {
      "title": "ChannelChangeKeyAction",
      "example": {
        "action": "changeKey",
        "key": "myNewChannelKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-key"
    },
    "ChannelChangeNameAction": {
      "title": "ChannelChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "en": "new Channel Name EN",
          "de": "new Channel Name DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-name"
    },
    "ChannelDraft": {
      "title": "ChannelDraft",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "roles": {
          "description": "If not specified, then channel will get InventorySupply role by default",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelRoleEnum"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "address": {
          "$ref": "#/definitions/BaseAddress",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoJson",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channeldraft"
    },
    "ChannelPagedQueryResponse": {
      "title": "ChannelPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Channel>"
    },
    "ChannelReference": {
      "title": "ChannelReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "channel"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Channel",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel"
    },
    "ChannelRemoveRolesAction": {
      "title": "ChannelRemoveRolesAction",
      "example": {
        "action": "removeRoles",
        "roles": [
          "InventorySupply"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeRoles"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#remove-roles"
    },
    "ChannelResourceIdentifier": {
      "title": "ChannelResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "channel"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel"
    },
    "ChannelRoleEnum": {
      "title": "ChannelRoleEnum",
      "enum": [
        "InventorySupply",
        "ProductDistribution",
        "OrderExport",
        "OrderImport",
        "Primary"
      ],
      "type": "string",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channelroleenum"
    },
    "ChannelSetAddressAction": {
      "title": "ChannelSetAddressAction",
      "example": {
        "action": "setAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-address"
    },
    "ChannelSetAddressCustomFieldAction": {
      "title": "ChannelSetAddressCustomFieldAction",
      "example": {
        "action": "setAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/channels#set-customfield-in-address"
    },
    "ChannelSetAddressCustomTypeAction": {
      "title": "ChannelSetAddressCustomTypeAction",
      "example": {
        "action": "setAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/channels#set-customtype-in-address"
    },
    "ChannelSetCustomFieldAction": {
      "title": "ChannelSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-customfield"
    },
    "ChannelSetCustomTypeAction": {
      "title": "ChannelSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-custom-type"
    },
    "ChannelSetGeoLocationAction": {
      "title": "ChannelSetGeoLocationAction",
      "example": {
        "action": "setGeoLocation",
        "geoLocation": {
          "type": "Point",
          "coordinates": [
            48.163569,
            11.558663
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setGeoLocation"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "geoLocation": {
              "$ref": "#/definitions/GeoJson",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-geolocation"
    },
    "ChannelSetRolesAction": {
      "title": "ChannelSetRolesAction",
      "example": {
        "action": "setRoles",
        "roles": [
          "ProductDistribution",
          "Primary"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChannelUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setRoles"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-roles"
    },
    "ChannelUpdate": {
      "title": "ChannelUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Channel",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ChannelUpdate, ChannelUpdateAction>"
    },
    "ChannelUpdateAction": {
      "title": "ChannelUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ChannelAddRolesAction",
        "ChannelChangeDescriptionAction",
        "ChannelChangeKeyAction",
        "ChannelChangeNameAction",
        "ChannelRemoveRolesAction",
        "ChannelSetAddressAction",
        "ChannelSetAddressCustomFieldAction",
        "ChannelSetAddressCustomTypeAction",
        "ChannelSetCustomFieldAction",
        "ChannelSetCustomTypeAction",
        "ChannelSetGeoLocationAction",
        "ChannelSetRolesAction"
      ],
      "x-annotation-package": "Channel",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ChannelUpdateAction>"
    },
    "ClassificationShippingRateInput": {
      "title": "ClassificationShippingRateInput",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInput"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "label": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "key",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinput"
    },
    "ClassificationShippingRateInputDraft": {
      "title": "ClassificationShippingRateInputDraft",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinputdraft"
    },
    "ClientLogging": {
      "title": "ClientLogging",
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "externalUserId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customer": {
          "$ref": "#/definitions/CustomerReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "anonymousId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CreatedBy",
        "LastModifiedBy"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types#client-logging"
    },
    "ConcurrentModificationError": {
      "title": "ConcurrentModificationError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ConcurrentModification"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "currentVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "CountryCode": {
      "title": "CountryCode",
      "pattern": "^[A-Z]{2}$",
      "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
      "type": "string",
      "x-annotation-builtinType": "string",
      "x-annotation-package": "Common"
    },
    "CreatedBy": {
      "title": "CreatedBy",
      "allOf": [
        {
          "$ref": "#/definitions/ClientLogging"
        },
        {
          "properties": {
            "clientId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalUserId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customer": {
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "anonymousId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "CurrencyCode": {
      "title": "CurrencyCode",
      "pattern": "^[A-Z]{3}$",
      "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
      "type": "string",
      "x-annotation-builtinType": "string",
      "x-annotation-package": "Common"
    },
    "CustomFieldBooleanType": {
      "title": "CustomFieldBooleanType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Boolean"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#booleantype"
    },
    "CustomFieldDateTimeType": {
      "title": "CustomFieldDateTimeType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "DateTime"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetimetype"
    },
    "CustomFieldDateType": {
      "title": "CustomFieldDateType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Date"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetype"
    },
    "CustomFieldEnumType": {
      "title": "CustomFieldEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Enum"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldEnumValue"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#enumtype"
    },
    "CustomFieldEnumValue": {
      "title": "CustomFieldEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "label": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type"
    },
    "CustomFieldLocalizedEnumType": {
      "title": "CustomFieldLocalizedEnumType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "LocalizedEnum"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldLocalizedEnumValue"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedenumtype"
    },
    "CustomFieldLocalizedEnumValue": {
      "title": "CustomFieldLocalizedEnumValue",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "label": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key",
        "label"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type"
    },
    "CustomFieldLocalizedStringType": {
      "title": "CustomFieldLocalizedStringType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "LocalizedString"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedstringtype"
    },
    "CustomFieldMoneyType": {
      "title": "CustomFieldMoneyType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Money"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#moneytype"
    },
    "CustomFieldNumberType": {
      "title": "CustomFieldNumberType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Number"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#numbertype"
    },
    "CustomFieldReferenceType": {
      "title": "CustomFieldReferenceType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Reference"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "referenceTypeId": {
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "referenceTypeId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#referencetype"
    },
    "CustomFieldSetType": {
      "title": "CustomFieldSetType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Set"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "elementType": {
              "$ref": "#/definitions/FieldType",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "name",
            "elementType"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#settype"
    },
    "CustomFieldStringType": {
      "title": "CustomFieldStringType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "String"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#stringtype"
    },
    "CustomFieldTimeType": {
      "title": "CustomFieldTimeType",
      "allOf": [
        {
          "$ref": "#/definitions/FieldType"
        },
        {
          "properties": {
            "name": {
              "enum": [
                "Time"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#timetype"
    },
    "CustomFields": {
      "title": "CustomFields",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "fields": {
          "description": "A valid JSON object, based on FieldDefinition.",
          "$ref": "#/definitions/FieldContainer",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type",
        "fields"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#custom"
    },
    "CustomFieldsDraft": {
      "title": "CustomFieldsDraft",
      "type": "object",
      "properties": {
        "type": {
          "description": "The `id` or the `key` of the type to use.",
          "$ref": "#/definitions/TypeResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "fields": {
          "description": "A valid JSON object, based on the FieldDefinitions of the Type.",
          "$ref": "#/definitions/FieldContainer",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfieldsdraft"
    },
    "CustomLineItem": {
      "title": "CustomLineItem",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this CustomLineItem.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The name of this CustomLineItem.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "money": {
          "description": "The cost to add to the cart.\nThe amount can be negative.",
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxedPrice": {
          "description": "Set once the `taxRate` is set.",
          "$ref": "#/definitions/TaxedItemPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "totalPrice": {
          "description": "The total price of this custom line item.\nIf custom line item is discounted, then the `totalPrice` would be the discounted custom line item price multiplied by `quantity`.\nOtherwise a total price is just a `money` multiplied by the `quantity`.\n`totalPrice` may or may not include the taxes: it depends on the taxRate.includedInPrice property.",
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "slug": {
          "description": "A unique String in the cart to identify this CustomLineItem.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int64",
          "description": "The amount of a CustomLineItem in the cart.\nMust be a positive integer.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "state": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemState"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "taxCategory": {
          "$ref": "#/definitions/TaxCategoryReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxRate": {
          "description": "Will be set automatically in the `Platform` TaxMode once the shipping address is set is set.\nFor the `External` tax mode the tax rate has to be set explicitly with the ExternalTaxRateDraft.",
          "$ref": "#/definitions/TaxRate",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "discountedPricePerQuantity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingDetails": {
          "description": "Container for custom line item specific address(es).\nCustomLineItem fields that can be used in query predicates: `slug`, `name`, `quantity`,\n`money`, `state`, `discountedPricePerQuantity`.",
          "$ref": "#/definitions/ItemShippingDetails",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "name",
        "money",
        "totalPrice",
        "slug",
        "quantity",
        "state",
        "discountedPricePerQuantity"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitem"
    },
    "CustomLineItemDraft": {
      "title": "CustomLineItemDraft",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int64",
          "description": "The amount of a CustomLineItemin the cart.\nMust be a positive integer.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "money": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "slug": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "taxCategory": {
          "description": "The given tax category will be used to select a tax rate when a cart has the TaxMode `Platform`.",
          "$ref": "#/definitions/TaxCategoryResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "externalTaxRate": {
          "description": "An external tax rate can be set if the cart has the `External` TaxMode.",
          "$ref": "#/definitions/ExternalTaxRateDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingDetails": {
          "description": "Container for custom line item specific address(es).",
          "$ref": "#/definitions/ItemShippingDetailsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "quantity",
        "money",
        "slug"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitemdraft"
    },
    "CustomLineItemImportDraft": {
      "title": "CustomLineItemImportDraft",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int64",
          "description": "The amount of a CustomLineItem in the cart.\nMust be a positive integer.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "money": {
          "description": "The cost to add to the cart. The amount can be negative.",
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "slug": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemState"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "taxRate": {
          "$ref": "#/definitions/TaxRate",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxCategory": {
          "$ref": "#/definitions/TaxCategoryResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingDetails": {
          "$ref": "#/definitions/ItemShippingDetailsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "quantity",
        "money",
        "slug"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitemdraft"
    },
    "CustomLineItemReturnItem": {
      "title": "CustomLineItemReturnItem",
      "allOf": [
        {
          "$ref": "#/definitions/ReturnItem"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomLineItemReturnItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "comment": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shipmentState": {
              "$ref": "#/definitions/ReturnShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "paymentState": {
              "$ref": "#/definitions/ReturnPaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "quantity",
            "type",
            "shipmentState",
            "paymentState",
            "lastModifiedAt",
            "createdAt",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem"
    },
    "CustomLineItemStateTransitionMessage": {
      "title": "CustomLineItemStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomLineItemStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "transitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "customLineItemId",
            "transitionDate",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customlineitemstatetransitionmessage"
    },
    "CustomLineItemStateTransitionMessagePayload": {
      "title": "CustomLineItemStateTransitionMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomLineItemStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "transitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "customLineItemId",
            "transitionDate",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customlineitemstatetransitionmessage"
    },
    "CustomObject": {
      "title": "CustomObject",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "container": {
              "description": "A namespace to group custom objects.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "container",
            "key",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomObject",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#customobject",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<CustomObject>"
    },
    "CustomObjectDraft": {
      "title": "CustomObjectDraft",
      "type": "object",
      "properties": {
        "container": {
          "description": "A namespace to group custom objects.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "A user-defined key that is unique within the given container.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "value": {
          "type": "string",
          "x-annotation-builtinType": "any",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "container",
        "key",
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomObject",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#create-a-customobject"
    },
    "CustomObjectPagedQueryResponse": {
      "title": "CustomObjectPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomObject"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomObject",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<CustomObject>"
    },
    "CustomObjectReference": {
      "title": "CustomObjectReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "key-value-document"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/CustomObject",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomObject",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference-types"
    },
    "CustomTokenizer": {
      "title": "CustomTokenizer",
      "allOf": [
        {
          "$ref": "#/definitions/SuggestTokenizer"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "custom"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "inputs": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "inputs"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "Customer": {
      "title": "Customer",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the customer.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the customer.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "customerNumber": {
              "description": "The customer number can be used to create a more human-readable (in contrast to ID) identifier for the customer.\nIt should be unique across a project.\nOnce the field was set it cannot be changed anymore.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "email": {
              "description": "The customer's email address and the main identifier of uniqueness for a customer account.\nEmail addresses are either unique to the store they're specified for, _or_ for the entire project.\nFor more information, see Email uniquenes.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "password": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "firstName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "lastName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "middleName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "title": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "x-annotation-builtinType": "date-only",
              "x-annotation-inherited": false
            },
            "companyName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "vatId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addresses": {
              "description": "The addresses have unique IDs in the addresses list",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "defaultShippingAddressId": {
              "description": "The address ID in the addresses list",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingAddressIds": {
              "description": "The IDs from the addresses list which are used as shipping addresses",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "defaultBillingAddressId": {
              "description": "The address ID in the addresses list",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "billingAddressIds": {
              "description": "The IDs from the addresses list which are used as billing addresses",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "isEmailVerified": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "salutation": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for a customer.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "stores": {
              "description": "References to the stores the customer account is associated with.\nIf no stores are specified, the customer is a global customer, and can log in using the Password Flow for global Customers.\nIf one or more stores are specified, the customer can only log in using the Password Flow for Customers in a Store for those specific stores.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StoreKeyReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "email",
            "password",
            "addresses",
            "isEmailVerified"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer",
      "x-annotation-updateType": "CustomerUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Customer>"
    },
    "CustomerAddAddressAction": {
      "title": "CustomerAddAddressAction",
      "example": {
        "action": "addAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-address"
    },
    "CustomerAddBillingAddressIdAction": {
      "title": "CustomerAddBillingAddressIdAction",
      "example": {
        "action": "addBillingAddressId",
        "addressId": "{{addressId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addBillingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-billing-address-id"
    },
    "CustomerAddShippingAddressIdAction": {
      "title": "CustomerAddShippingAddressIdAction",
      "example": {
        "action": "addShippingAddressId",
        "addressId": "{{addressId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addShippingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-shipping-address-id"
    },
    "CustomerAddStoreAction": {
      "title": "CustomerAddStoreAction",
      "example": {
        "action": "addStore",
        "store": {
          "key": "{{store-key}}",
          "typeId": "store"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addStore"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "store"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers#add-store-beta"
    },
    "CustomerAddressAddedMessage": {
      "title": "CustomerAddressAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerAddressAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressaddedmessage"
    },
    "CustomerAddressAddedMessagePayload": {
      "title": "CustomerAddressAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerAddressAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressaddedmessage"
    },
    "CustomerAddressChangedMessage": {
      "title": "CustomerAddressChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerAddressChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddresschangedmessage"
    },
    "CustomerAddressChangedMessagePayload": {
      "title": "CustomerAddressChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerAddressChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddresschangedmessage"
    },
    "CustomerAddressRemovedMessage": {
      "title": "CustomerAddressRemovedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerAddressRemoved"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressremovedmessage"
    },
    "CustomerAddressRemovedMessagePayload": {
      "title": "CustomerAddressRemovedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerAddressRemoved"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressremovedmessage"
    },
    "CustomerChangeAddressAction": {
      "title": "CustomerChangeAddressAction",
      "example": {
        "action": "changeAddress",
        "addressId": "{{addressId}}",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-address"
    },
    "CustomerChangeEmailAction": {
      "title": "CustomerChangeEmailAction",
      "example": {
        "action": "changeEmail",
        "email": "mail@mail.com"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeEmail"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-email"
    },
    "CustomerChangePassword": {
      "title": "CustomerChangePassword",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "currentPassword": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "newPassword": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "version",
        "currentPassword",
        "newPassword"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer"
    },
    "CustomerCompanyNameSetMessage": {
      "title": "CustomerCompanyNameSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerCompanyNameSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "companyName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "companyName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercompanynamesetmessage"
    },
    "CustomerCompanyNameSetMessagePayload": {
      "title": "CustomerCompanyNameSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerCompanyNameSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "companyName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "companyName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercompanynamesetmessage"
    },
    "CustomerCreateEmailToken": {
      "title": "CustomerCreateEmailToken",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "ttlMinutes": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "ttlMinutes"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer"
    },
    "CustomerCreatePasswordResetToken": {
      "title": "CustomerCreatePasswordResetToken",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "ttlMinutes": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "email"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer"
    },
    "CustomerCreatedMessage": {
      "title": "CustomerCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "customer": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "customer"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercreatedmessage"
    },
    "CustomerCreatedMessagePayload": {
      "title": "CustomerCreatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customer": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "customer"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercreatedmessage"
    },
    "CustomerDateOfBirthSetMessage": {
      "title": "CustomerDateOfBirthSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerDateOfBirthSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "x-annotation-builtinType": "date-only",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "dateOfBirth"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerdateofbirthsetmessage"
    },
    "CustomerDateOfBirthSetMessagePayload": {
      "title": "CustomerDateOfBirthSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerDateOfBirthSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "x-annotation-builtinType": "date-only",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "dateOfBirth"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerdateofbirthsetmessage"
    },
    "CustomerDraft": {
      "title": "CustomerDraft",
      "type": "object",
      "properties": {
        "customerNumber": {
          "description": "String that uniquely identifies a customer.\nIt can be used to create more human-readable (in contrast to ID) identifier for the customer.\nIt should be **unique** across a project.\nOnce it's set it cannot be changed.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "email": {
          "description": "The customer's email address and the main identifier of uniqueness for a customer account.\nEmail addresses are either unique to the store they're specified for, _or_ for the entire project, and are case insensitive.\nFor more information, see Email uniquenes.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "password": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "firstName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lastName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "middleName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "title": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "anonymousCartId": {
          "description": "Identifies a single cart that will be assigned to the new customer account.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-markDeprecated": true,
          "x-annotation-inherited": false
        },
        "anonymousCart": {
          "description": "Identifies a single cart that will be assigned to the new customer account.",
          "$ref": "#/definitions/CartResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "anonymousId": {
          "description": "Identifies carts and orders belonging to an anonymous session that will be assigned to the new customer account.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "x-annotation-builtinType": "date-only",
          "x-annotation-inherited": false
        },
        "companyName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "vatId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "addresses": {
          "description": "Sets the ID of each address to be unique in the addresses list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseAddress"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "defaultShippingAddress": {
          "format": "int64",
          "description": "The index of the address in the addresses array.\nThe `defaultShippingAddressId` of the customer will be set to the ID of that address.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "shippingAddresses": {
          "description": "The indices of the shipping addresses in the addresses array.\nThe `shippingAddressIds` of the Customer will be set to the IDs of that addresses.",
          "type": "array",
          "items": {
            "type": "integer"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "defaultBillingAddress": {
          "format": "int64",
          "description": "The index of the address in the addresses array.\nThe `defaultBillingAddressId` of the customer will be set to the ID of that address.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "billingAddresses": {
          "description": "The indices of the billing addresses in the addresses array.\nThe `billingAddressIds` of the customer will be set to the IDs of that addresses.",
          "type": "array",
          "items": {
            "type": "integer"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "isEmailVerified": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "externalId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerGroup": {
          "$ref": "#/definitions/CustomerGroupResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "locale": {
          "description": "Must be one of the languages supported for this project",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "salutation": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier for a customer.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "stores": {
          "description": "References to the stores the customer account is associated with.\nIf no stores are specified, the customer is a global customer, and can log in using the Password Flow for global Customers.\nIf one or more stores are specified, the customer can only log in using the Password Flow for Customers in a Store for those specific stores.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoreResourceIdentifier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "email",
        "password"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customerdraft"
    },
    "CustomerEmailChangedMessage": {
      "title": "CustomerEmailChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerEmailChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailchangedmessage"
    },
    "CustomerEmailChangedMessagePayload": {
      "title": "CustomerEmailChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerEmailChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailchangedmessage"
    },
    "CustomerEmailVerifiedMessage": {
      "title": "CustomerEmailVerifiedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerEmailVerified"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailverifiedmessage"
    },
    "CustomerEmailVerifiedMessagePayload": {
      "title": "CustomerEmailVerifiedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerEmailVerified"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailverifiedmessage"
    },
    "CustomerEmailVerify": {
      "title": "CustomerEmailVerify",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "tokenValue": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "tokenValue"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer"
    },
    "CustomerGroup": {
      "title": "CustomerGroup",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the customer group.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the customer group.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the customer group.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup",
      "x-annotation-updateType": "CustomerGroupUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<CustomerGroup>"
    },
    "CustomerGroupChangeNameAction": {
      "title": "CustomerGroupChangeNameAction",
      "example": {
        "action": "changeName",
        "name": "New Name"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerGroupUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#change-name"
    },
    "CustomerGroupDraft": {
      "title": "CustomerGroupDraft",
      "type": "object",
      "properties": {
        "key": {
          "description": "User-specific unique identifier for the customer group.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "groupName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "groupName"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#create-a-customergroup"
    },
    "CustomerGroupPagedQueryResponse": {
      "title": "CustomerGroupPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerGroup"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<CustomerGroup>"
    },
    "CustomerGroupReference": {
      "title": "CustomerGroupReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "customer-group"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup"
    },
    "CustomerGroupResourceIdentifier": {
      "title": "CustomerGroupResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "customer-group"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup"
    },
    "CustomerGroupSetCustomFieldAction": {
      "title": "CustomerGroupSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerGroupUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-customfield"
    },
    "CustomerGroupSetCustomTypeAction": {
      "title": "CustomerGroupSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerGroupUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If absent, the custom type and any existing CustomFields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-custom-type"
    },
    "CustomerGroupSetKeyAction": {
      "title": "CustomerGroupSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "newKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerGroupUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "User-specific unique identifier for the customer group.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-key"
    },
    "CustomerGroupSetMessage": {
      "title": "CustomerGroupSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerGroupSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "customerGroup"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customergroupsetmessage"
    },
    "CustomerGroupSetMessagePayload": {
      "title": "CustomerGroupSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerGroupSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "customerGroup"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customergroupsetmessage"
    },
    "CustomerGroupUpdate": {
      "title": "CustomerGroupUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerGroupUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CustomerGroup",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<CustomerGroupUpdate, CustomerGroupUpdateAction>"
    },
    "CustomerGroupUpdateAction": {
      "title": "CustomerGroupUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CustomerGroupChangeNameAction",
        "CustomerGroupSetCustomFieldAction",
        "CustomerGroupSetCustomTypeAction",
        "CustomerGroupSetKeyAction"
      ],
      "x-annotation-package": "CustomerGroup",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<CustomerGroupUpdateAction>"
    },
    "CustomerPagedQueryResponse": {
      "title": "CustomerPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Customer>"
    },
    "CustomerPasswordUpdatedMessage": {
      "title": "CustomerPasswordUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "CustomerPasswordUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "reset": {
              "description": "true, if password has been updated during Customer's Password Reset workflow.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "reset"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerpasswordupdatedmessage"
    },
    "CustomerPasswordUpdatedMessagePayload": {
      "title": "CustomerPasswordUpdatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CustomerPasswordUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "reset": {
              "description": "true, if password has been updated during Customer's Password Reset workflow.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "reset"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerpasswordupdatedmessage"
    },
    "CustomerReference": {
      "title": "CustomerReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "customer"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer"
    },
    "CustomerRemoveAddressAction": {
      "title": "CustomerRemoveAddressAction",
      "example": {
        "action": "removeAddress",
        "addressId": "{{addressId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-address"
    },
    "CustomerRemoveBillingAddressIdAction": {
      "title": "CustomerRemoveBillingAddressIdAction",
      "example": {
        "action": "removeBillingAddressId",
        "addressId": "{{addressId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeBillingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-billing-address-id"
    },
    "CustomerRemoveShippingAddressIdAction": {
      "title": "CustomerRemoveShippingAddressIdAction",
      "example": {
        "action": "removeShippingAddressId",
        "addressId": "{{addressId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeShippingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-shipping-address-id"
    },
    "CustomerRemoveStoreAction": {
      "title": "CustomerRemoveStoreAction",
      "example": {
        "action": "removeStore",
        "store": {
          "key": "{{store-key}}",
          "typeId": "store"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeStore"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "store"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers#remove-store-beta"
    },
    "CustomerResetPassword": {
      "title": "CustomerResetPassword",
      "type": "object",
      "properties": {
        "tokenValue": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "newPassword": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "tokenValue",
        "newPassword"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer"
    },
    "CustomerResourceIdentifier": {
      "title": "CustomerResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "customer"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer"
    },
    "CustomerSetAddressCustomFieldAction": {
      "title": "CustomerSetAddressCustomFieldAction",
      "example": {
        "action": "setAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString",
        "addressId": "{{address-id}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/customers#set-customfield-in-address"
    },
    "CustomerSetAddressCustomTypeAction": {
      "title": "CustomerSetAddressCustomTypeAction",
      "example": {
        "action": "setAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        },
        "addressId": "{{address-id}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/customers#set-customtype-in-address"
    },
    "CustomerSetCompanyNameAction": {
      "title": "CustomerSetCompanyNameAction",
      "example": {
        "action": "setCompanyName",
        "companyName": "Company Ltd."
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCompanyName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "companyName": {
              "description": "If not defined, the company name is unset.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-company-name"
    },
    "CustomerSetCustomFieldAction": {
      "title": "CustomerSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customfield"
    },
    "CustomerSetCustomTypeAction": {
      "title": "CustomerSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-custom-type"
    },
    "CustomerSetCustomerGroupAction": {
      "title": "CustomerSetCustomerGroupAction",
      "example": {
        "action": "setCustomerGroup",
        "customerGroup": {
          "id": "{{customer-group-id}}",
          "typeId": "customer-group"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerGroup"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "description": "If not defined, the customer group is unset.",
              "$ref": "#/definitions/CustomerGroupResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customergroup"
    },
    "CustomerSetCustomerNumberAction": {
      "title": "CustomerSetCustomerNumberAction",
      "example": {
        "action": "setCustomerNumber",
        "customerNumber": "123"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerNumber"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerNumber": {
              "description": "It should be **unique** across a project.\nOnce it's set, it cannot be changed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customer-number"
    },
    "CustomerSetDateOfBirthAction": {
      "title": "CustomerSetDateOfBirthAction",
      "example": {
        "action": "setDateOfBirth",
        "dateOfBirth": "2015-10-21"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDateOfBirth"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "dateOfBirth": {
              "description": "If not defined, the date of birth is unset.",
              "type": "string",
              "format": "date",
              "x-annotation-builtinType": "date-only",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-date-of-birth"
    },
    "CustomerSetDefaultBillingAddressAction": {
      "title": "CustomerSetDefaultBillingAddressAction",
      "example": {
        "action": "setDefaultBillingAddress",
        "addressId": "{{addressId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDefaultBillingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "description": "If not defined, the customer's `defaultBillingAddress` is unset.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-billing-address"
    },
    "CustomerSetDefaultShippingAddressAction": {
      "title": "CustomerSetDefaultShippingAddressAction",
      "example": {
        "action": "setDefaultShippingAddress",
        "addressId": "{{addressId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDefaultShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "description": "If not defined, the customer's `defaultShippingAddress` is unset.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-shipping-address"
    },
    "CustomerSetExternalIdAction": {
      "title": "CustomerSetExternalIdAction",
      "example": {
        "action": "setExternalId",
        "externalId": "123"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setExternalId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalId": {
              "description": "If not defined, the external ID is unset.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-external-id"
    },
    "CustomerSetFirstNameAction": {
      "title": "CustomerSetFirstNameAction",
      "example": {
        "action": "setFirstName",
        "fistName": "Example"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setFirstName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "firstName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-first-name"
    },
    "CustomerSetKeyAction": {
      "title": "CustomerSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "newKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-key"
    },
    "CustomerSetLastNameAction": {
      "title": "CustomerSetLastNameAction",
      "example": {
        "action": "setLastName",
        "lastName": "Person"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLastName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lastName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-last-name"
    },
    "CustomerSetLocaleAction": {
      "title": "CustomerSetLocaleAction",
      "example": {
        "action": "setLocale",
        "locale": "de-DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocale"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-locale"
    },
    "CustomerSetMiddleNameAction": {
      "title": "CustomerSetMiddleNameAction",
      "example": {
        "action": "setMiddleName",
        "middleName": "middleName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMiddleName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "middleName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-middle-name"
    },
    "CustomerSetSalutationAction": {
      "title": "CustomerSetSalutationAction",
      "example": {
        "action": "setSalutation",
        "salutation": "Mr"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setSalutation"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "salutation": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-salutation"
    },
    "CustomerSetStoresAction": {
      "title": "CustomerSetStoresAction",
      "example": {
        "action": "setStores",
        "stores": [
          {
            "key": "{{store-key}}",
            "typeId": "store"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setStores"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "stores": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StoreResourceIdentifier"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers#set-stores-beta"
    },
    "CustomerSetTitleAction": {
      "title": "CustomerSetTitleAction",
      "example": {
        "action": "setTitle",
        "title": "Dr"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTitle"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "title": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-title"
    },
    "CustomerSetVatIdAction": {
      "title": "CustomerSetVatIdAction",
      "example": {
        "action": "setVatId",
        "vatId": "vatId"
      },
      "allOf": [
        {
          "$ref": "#/definitions/CustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setVatId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "vatId": {
              "description": "If not defined, the vat Id is unset.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-vat-id"
    },
    "CustomerSignInResult": {
      "title": "CustomerSignInResult",
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "cart": {
          "description": "A cart that is associated to the customer.\nEmpty if the customer does not have a cart yet.",
          "$ref": "#/definitions/Cart",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "customer"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customersigninresult"
    },
    "CustomerSignin": {
      "title": "CustomerSignin",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "password": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "anonymousCartId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "anonymousCart": {
          "$ref": "#/definitions/CartResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "anonymousCartSignInMode": {
          "$ref": "#/definitions/AnonymousCartSignInMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "anonymousId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "updateProductData": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "email",
        "password"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer"
    },
    "CustomerToken": {
      "title": "CustomerToken",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "customerId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "value": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "createdAt",
        "customerId",
        "expiresAt",
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customertoken"
    },
    "CustomerUpdate": {
      "title": "CustomerUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Customer",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<CustomerUpdate, CustomerUpdateAction>"
    },
    "CustomerUpdateAction": {
      "title": "CustomerUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CustomerAddAddressAction",
        "CustomerAddBillingAddressIdAction",
        "CustomerAddShippingAddressIdAction",
        "CustomerAddStoreAction",
        "CustomerChangeAddressAction",
        "CustomerChangeEmailAction",
        "CustomerRemoveAddressAction",
        "CustomerRemoveBillingAddressIdAction",
        "CustomerRemoveShippingAddressIdAction",
        "CustomerRemoveStoreAction",
        "CustomerSetAddressCustomFieldAction",
        "CustomerSetAddressCustomTypeAction",
        "CustomerSetCompanyNameAction",
        "CustomerSetCustomFieldAction",
        "CustomerSetCustomTypeAction",
        "CustomerSetCustomerGroupAction",
        "CustomerSetCustomerNumberAction",
        "CustomerSetDateOfBirthAction",
        "CustomerSetDefaultBillingAddressAction",
        "CustomerSetDefaultShippingAddressAction",
        "CustomerSetExternalIdAction",
        "CustomerSetFirstNameAction",
        "CustomerSetKeyAction",
        "CustomerSetLastNameAction",
        "CustomerSetLocaleAction",
        "CustomerSetMiddleNameAction",
        "CustomerSetSalutationAction",
        "CustomerSetStoresAction",
        "CustomerSetTitleAction",
        "CustomerSetVatIdAction"
      ],
      "x-annotation-package": "Customer",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<CustomerUpdateAction>"
    },
    "Delivery": {
      "title": "Delivery",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "items": {
          "description": "Items which are shipped in this delivery regardless their distribution over several parcels.\nCan also be specified individually for each Parcel.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryItem"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "parcels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parcel"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "address": {
          "$ref": "#/definitions/Address",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "createdAt",
        "items",
        "parcels"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#delivery"
    },
    "DeliveryAddedMessage": {
      "title": "DeliveryAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "DeliveryAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "delivery": {
              "$ref": "#/definitions/Delivery",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "delivery"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddedmessage"
    },
    "DeliveryAddedMessagePayload": {
      "title": "DeliveryAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "DeliveryAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "delivery": {
              "$ref": "#/definitions/Delivery",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "delivery"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddedmessage"
    },
    "DeliveryAddressSetMessage": {
      "title": "DeliveryAddressSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "DeliveryAddressSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddresssetmessage"
    },
    "DeliveryAddressSetMessagePayload": {
      "title": "DeliveryAddressSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "DeliveryAddressSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddresssetmessage"
    },
    "DeliveryCloudEventsFormat": {
      "title": "DeliveryCloudEventsFormat",
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryFormat"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "CloudEvents"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "cloudEventsVersion": {
              "enum": [
                "0.1"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "cloudEventsVersion"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#cloudevents-format-preview"
    },
    "DeliveryFormat": {
      "title": "DeliveryFormat",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "DeliveryCloudEventsFormat",
        "DeliveryPlatformFormat"
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#format"
    },
    "DeliveryItem": {
      "title": "DeliveryItem",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "quantity"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#deliveryitem"
    },
    "DeliveryItemsUpdatedMessage": {
      "title": "DeliveryItemsUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "DeliveryItemsUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "oldItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "deliveryId",
            "items",
            "oldItems"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "DeliveryItemsUpdatedMessagePayload": {
      "title": "DeliveryItemsUpdatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "DeliveryItemsUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "oldItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "deliveryId",
            "items",
            "oldItems"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "DeliveryPlatformFormat": {
      "title": "DeliveryPlatformFormat",
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryFormat"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "Platform"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#platform-format"
    },
    "DeliveryRemovedMessage": {
      "title": "DeliveryRemovedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "DeliveryRemoved"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "delivery": {
              "$ref": "#/definitions/Delivery",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "delivery"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "DeliveryRemovedMessagePayload": {
      "title": "DeliveryRemovedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "DeliveryRemoved"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "delivery": {
              "$ref": "#/definitions/Delivery",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "delivery"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "Destination": {
      "title": "Destination",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "AzureEventGridDestination",
        "AzureServiceBusDestination",
        "GoogleCloudPubSubDestination",
        "IronMqDestination",
        "SnsDestination",
        "SqsDestination"
      ],
      "x-annotation-package": "Subscription"
    },
    "DiscountCode": {
      "title": "DiscountCode",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the discount code.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "code": {
              "description": "Unique identifier of this discount code.\nThis value is added to the cart\nto enable the related cart discounts in the cart.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "cartDiscounts": {
              "description": "The referenced matching cart discounts can be applied to the cart once the DiscountCode is added.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "cartPredicate": {
              "description": "The discount code can only be applied to carts that match this predicate.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "isActive": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "references": {
              "description": "The platform will generate this array from the cart predicate.\nIt contains the references of all the resources that are addressed in the predicate.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "maxApplications": {
              "format": "int64",
              "description": "The discount code can only be applied `maxApplications` times.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "maxApplicationsPerCustomer": {
              "format": "int64",
              "description": "The discount code can only be applied `maxApplicationsPerCustomer` times per customer.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "groups": {
              "description": "The groups to which this discount code belong.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "validFrom": {
              "format": "date-time",
              "description": "The time from which the discount can be applied on a cart.\nBefore that time the code is invalid.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validUntil": {
              "format": "date-time",
              "description": "The time until the discount can be applied on a cart.\nAfter that time the code is invalid.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "code",
            "cartDiscounts",
            "isActive",
            "references",
            "groups"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode",
      "x-annotation-updateType": "DiscountCodeUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<DiscountCode>"
    },
    "DiscountCodeChangeCartDiscountsAction": {
      "title": "DiscountCodeChangeCartDiscountsAction",
      "example": {
        "action": "changeCartDiscounts",
        "cartDiscounts": [
          {
            "typeId": "cart-discount",
            "id": "{{cartDiscountId}}"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCartDiscounts"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "cartDiscounts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountResourceIdentifier"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "cartDiscounts"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-cartdiscounts"
    },
    "DiscountCodeChangeGroupsAction": {
      "title": "DiscountCodeChangeGroupsAction",
      "example": {
        "action": "changeGroups",
        "groups": [
          "groupString"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeGroups"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "groups": {
              "description": "The groups to which this discount code shall belong to.\nUse empty array to remove the code from all groups.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "groups"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-groups"
    },
    "DiscountCodeChangeIsActiveAction": {
      "title": "DiscountCodeChangeIsActiveAction",
      "example": {
        "action": "changeIsActive",
        "isActive": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeIsActive"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "isActive": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "isActive"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-isactive"
    },
    "DiscountCodeDraft": {
      "title": "DiscountCodeDraft",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "code": {
          "description": "Unique identifier of this discount code.\nThis value is added to the cart\nto enable the related cart discounts in the cart.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "cartDiscounts": {
          "description": "The referenced matching cart discounts can be applied to the cart once the discount code is added.\nThe number of cart discounts in a discount code is limited to **10**.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartDiscountResourceIdentifier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "cartPredicate": {
          "description": "The discount code can only be applied to carts that match this predicate.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "isActive": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "maxApplications": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "maxApplicationsPerCustomer": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "groups": {
          "description": "The groups to which this discount code shall belong to.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "validFrom": {
          "format": "date-time",
          "description": "The time from which the discount can be applied on a cart.\nBefore that time the code is invalid.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "validUntil": {
          "format": "date-time",
          "description": "The time until the discount can be applied on a cart.\nAfter that time the code is invalid.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "code",
        "cartDiscounts"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcodedraft"
    },
    "DiscountCodeInfo": {
      "title": "DiscountCodeInfo",
      "type": "object",
      "properties": {
        "discountCode": {
          "$ref": "#/definitions/DiscountCodeReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "state": {
          "$ref": "#/definitions/DiscountCodeState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "discountCode",
        "state"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodereference"
    },
    "DiscountCodeNonApplicableError": {
      "title": "DiscountCodeNonApplicableError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DiscountCodeNonApplicable"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "reason": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "dicountCodeId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "validFrom": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validUntil": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validityCheckTime": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "DiscountCodePagedQueryResponse": {
      "title": "DiscountCodePagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountCode"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<DiscountCode>"
    },
    "DiscountCodeReference": {
      "title": "DiscountCodeReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "discount-code"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/DiscountCode",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode"
    },
    "DiscountCodeResourceIdentifier": {
      "title": "DiscountCodeResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "discount-code"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode"
    },
    "DiscountCodeSetCartPredicateAction": {
      "title": "DiscountCodeSetCartPredicateAction",
      "example": {
        "action": "setCartPredicate",
        "cartPredicate": "lineItemCount(sku = \"mySKU\") > 1"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCartPredicate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "cartPredicate": {
              "description": "If the `cartPredicate` parameter is not included, the field will be emptied.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-cart-predicate"
    },
    "DiscountCodeSetCustomFieldAction": {
      "title": "DiscountCodeSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-customfield"
    },
    "DiscountCodeSetCustomTypeAction": {
      "title": "DiscountCodeSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If absent, the custom type and any existing CustomFields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-custom-type"
    },
    "DiscountCodeSetDescriptionAction": {
      "title": "DiscountCodeSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "en": "New Description EN",
          "de": "New Description DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "description": "If the `description` parameter is not included, the field will be emptied.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-description"
    },
    "DiscountCodeSetMaxApplicationsAction": {
      "title": "DiscountCodeSetMaxApplicationsAction",
      "example": {
        "action": "setMaxApplications",
        "maxApplications": 100
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMaxApplications"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "maxApplications": {
              "format": "int64",
              "description": "If the `maxApplications` parameter is not included, the field will be emptied.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications"
    },
    "DiscountCodeSetMaxApplicationsPerCustomerAction": {
      "title": "DiscountCodeSetMaxApplicationsPerCustomerAction",
      "example": {
        "action": "setMaxApplicationsPerCustomer",
        "maxApplicationsPerCustomer": 10
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMaxApplicationsPerCustomer"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "maxApplicationsPerCustomer": {
              "format": "int64",
              "description": "If the `maxApplicationsPerCustomer` parameter is not included, the field will be emptied.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications-per-customer"
    },
    "DiscountCodeSetNameAction": {
      "title": "DiscountCodeSetNameAction",
      "example": {
        "action": "setName",
        "name": {
          "en": "New Name EN",
          "de": "New Name DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "description": "If the `name` parameter is not included, the field will be emptied.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-name"
    },
    "DiscountCodeSetValidFromAction": {
      "title": "DiscountCodeSetValidFromAction",
      "example": {
        "action": "setValidFrom",
        "validFrom": "2001-09-11T14:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidFrom"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validFrom": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validfrom"
    },
    "DiscountCodeSetValidFromAndUntilAction": {
      "title": "DiscountCodeSetValidFromAndUntilAction",
      "example": {
        "action": "setValidFromAndUntil",
        "validFrom": "2001-09-11T14:00:00.000Z",
        "validUntil": "2001-09-11T14:05:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidFromAndUntil"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validFrom": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validUntil": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-valid-from-and-until"
    },
    "DiscountCodeSetValidUntilAction": {
      "title": "DiscountCodeSetValidUntilAction",
      "example": {
        "action": "setValidUntil",
        "validFrom": "2001-09-11T14:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/DiscountCodeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidUntil"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validUntil": {
              "format": "date-time",
              "description": "If absent, the field with the value is removed in case a value was set before.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validuntil"
    },
    "DiscountCodeState": {
      "title": "DiscountCodeState",
      "enum": [
        "NotActive",
        "DoesNotMatchCart",
        "MatchesCart",
        "MaxApplicationReached",
        "ApplicationStoppedByPreviousDiscount",
        "NotValid"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodestate"
    },
    "DiscountCodeUpdate": {
      "title": "DiscountCodeUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountCodeUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "DiscountCode",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<DiscountCodeUpdate, DiscountCodeUpdateAction>"
    },
    "DiscountCodeUpdateAction": {
      "title": "DiscountCodeUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "DiscountCodeChangeCartDiscountsAction",
        "DiscountCodeChangeGroupsAction",
        "DiscountCodeChangeIsActiveAction",
        "DiscountCodeSetCartPredicateAction",
        "DiscountCodeSetCustomFieldAction",
        "DiscountCodeSetCustomTypeAction",
        "DiscountCodeSetDescriptionAction",
        "DiscountCodeSetMaxApplicationsAction",
        "DiscountCodeSetMaxApplicationsPerCustomerAction",
        "DiscountCodeSetNameAction",
        "DiscountCodeSetValidFromAction",
        "DiscountCodeSetValidFromAndUntilAction",
        "DiscountCodeSetValidUntilAction"
      ],
      "x-annotation-package": "DiscountCode",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<DiscountCodeUpdateAction>"
    },
    "DiscountedLineItemPortion": {
      "title": "DiscountedLineItemPortion",
      "type": "object",
      "properties": {
        "discount": {
          "$ref": "#/definitions/CartDiscountReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "discountedAmount": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "discount",
        "discountedAmount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemportion"
    },
    "DiscountedLineItemPrice": {
      "title": "DiscountedLineItemPrice",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "includedDiscounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountedLineItemPortion"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "value",
        "includedDiscounts"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"
    },
    "DiscountedLineItemPriceDraft": {
      "title": "DiscountedLineItemPriceDraft",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "includedDiscounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountedLineItemPortion"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "value",
        "includedDiscounts"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"
    },
    "DiscountedLineItemPriceForQuantity": {
      "title": "DiscountedLineItemPriceForQuantity",
      "type": "object",
      "properties": {
        "quantity": {
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "discountedPrice": {
          "$ref": "#/definitions/DiscountedLineItemPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "quantity",
        "discountedPrice"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitempriceforquantity"
    },
    "DiscountedPrice": {
      "title": "DiscountedPrice",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "discount": {
          "$ref": "#/definitions/ProductDiscountReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "value",
        "discount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#discountedprice"
    },
    "DuplicateAttributeValueError": {
      "title": "DuplicateAttributeValueError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DuplicateAttributeValue"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attribute": {
              "$ref": "#/definitions/Attribute",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "attribute"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "DuplicateAttributeValuesError": {
      "title": "DuplicateAttributeValuesError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DuplicateAttributeValues"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "attributes"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "DuplicateEnumValuesError": {
      "title": "DuplicateEnumValuesError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DuplicateEnumValues"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "duplicates": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "duplicates"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "DuplicateFieldError": {
      "title": "DuplicateFieldError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DuplicateField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "field": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "duplicateValue": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            },
            "conflictingResource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "DuplicateFieldWithConflictingResourceError": {
      "title": "DuplicateFieldWithConflictingResourceError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DuplicateFieldWithConflictingResource"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "field": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "duplicateValue": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            },
            "conflictingResource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "field",
            "duplicateValue",
            "conflictingResource"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "DuplicatePriceScopeError": {
      "title": "DuplicatePriceScopeError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DuplicatePriceScope"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "conflictingPrices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "conflictingPrices"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "DuplicateVariantValuesError": {
      "title": "DuplicateVariantValuesError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "DuplicateVariantValues"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantValues": {
              "$ref": "#/definitions/VariantValues",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "variantValues"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "EditPreviewFailedError": {
      "title": "EditPreviewFailedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "EditPreviewFailed"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "result": {
              "$ref": "#/definitions/OrderEditPreviewFailure",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "result"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "EnumKeyAlreadyExistsError": {
      "title": "EnumKeyAlreadyExistsError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "EnumKeyAlreadyExists"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "conflictingEnumKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "conflictingAttributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "conflictingEnumKey",
            "conflictingAttributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "EnumKeyDoesNotExistError": {
      "title": "EnumKeyDoesNotExistError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "EnumKeyDoesNotExist"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "conflictingEnumKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "conflictingAttributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "conflictingEnumKey",
            "conflictingAttributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "EnumValueIsUsedError": {
      "title": "EnumValueIsUsedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "EnumValueIsUsed"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "EnumValuesMustMatchError": {
      "title": "EnumValuesMustMatchError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "EnumValuesMustMatch"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ErrorByExtension": {
      "title": "ErrorByExtension",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ErrorObject": {
      "title": "ErrorObject",
      "discriminator": "code",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "message": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "code",
        "message"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "AccessDeniedError",
        "AnonymousIdAlreadyInUseError",
        "AttributeDefinitionAlreadyExistsError",
        "AttributeDefinitionTypeConflictError",
        "AttributeNameDoesNotExistError",
        "ConcurrentModificationError",
        "DiscountCodeNonApplicableError",
        "DuplicateAttributeValueError",
        "DuplicateAttributeValuesError",
        "DuplicateEnumValuesError",
        "DuplicateFieldError",
        "DuplicateFieldWithConflictingResourceError",
        "DuplicatePriceScopeError",
        "DuplicateVariantValuesError",
        "EditPreviewFailedError",
        "EnumKeyAlreadyExistsError",
        "EnumKeyDoesNotExistError",
        "EnumValueIsUsedError",
        "EnumValuesMustMatchError",
        "ExtensionBadResponseError",
        "ExtensionNoResponseError",
        "ExtensionUpdateActionsFailedError",
        "ExternalOAuthFailedError",
        "FeatureRemovedError",
        "GeneralError",
        "InsufficientScopeError",
        "InternalConstraintViolatedError",
        "InvalidCredentialsError",
        "InvalidCurrentPasswordError",
        "InvalidFieldError",
        "InvalidInputError",
        "InvalidItemShippingDetailsError",
        "InvalidJsonInputError",
        "InvalidOperationError",
        "InvalidSubjectError",
        "InvalidTokenError",
        "LanguageUsedInStoresError",
        "MatchingPriceNotFoundError",
        "MaxResourceLimitExceededError",
        "MissingRoleOnChannelError",
        "MissingTaxRateForCountryError",
        "NoMatchingProductDiscountFoundError",
        "NotEnabledError",
        "ObjectNotFoundError",
        "OutOfStockError",
        "OverCapacityError",
        "PendingOperationError",
        "PriceChangedError",
        "ProjectNotConfiguredForLanguagesError",
        "QueryComplexityLimitExceededError",
        "QueryTimedOutError",
        "ReferenceExistsError",
        "ReferencedResourceNotFoundError",
        "RequiredFieldError",
        "ResourceNotFoundError",
        "ResourceSizeLimitExceededError",
        "SearchDeactivatedError",
        "SearchExecutionFailureError",
        "SearchFacetPathNotFoundError",
        "SearchIndexingInProgressError",
        "SemanticErrorError",
        "ShippingMethodDoesNotMatchCartError",
        "SyntaxErrorError",
        "WeakPasswordError"
      ],
      "x-annotation-package": "Error"
    },
    "ErrorResponse": {
      "title": "ErrorResponse",
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "message": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "error": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "error_description": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorObject"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "statusCode",
        "message"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "Extension": {
      "title": "Extension",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "destination": {
              "$ref": "#/definitions/ExtensionDestination",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "triggers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionTrigger"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "timeoutInMs": {
              "format": "int",
              "description": "The maximum time the commercetools platform waits for a response from the extension.\nIf not present, `2000` (2 seconds) is used.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "destination",
            "triggers"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html",
      "x-annotation-updateType": "ExtensionUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Extension>"
    },
    "ExtensionAWSLambdaDestination": {
      "title": "ExtensionAWSLambdaDestination",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionDestination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "AWSLambda"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "arn": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "accessKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "accessSecret": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "arn",
            "accessKey",
            "accessSecret"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension"
    },
    "ExtensionAction": {
      "title": "ExtensionAction",
      "enum": [
        "Create",
        "Update"
      ],
      "type": "string",
      "x-annotation-package": "Extension"
    },
    "ExtensionAuthorizationHeaderAuthentication": {
      "title": "ExtensionAuthorizationHeaderAuthentication",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionHttpDestinationAuthentication"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "AuthorizationHeader"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "headerValue": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "headerValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension"
    },
    "ExtensionAzureFunctionsAuthentication": {
      "title": "ExtensionAzureFunctionsAuthentication",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionHttpDestinationAuthentication"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "AzureFunctions"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension"
    },
    "ExtensionBadResponseError": {
      "title": "ExtensionBadResponseError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ExtensionBadResponse"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "localizedMessage": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "extensionExtraInfo": {
              "type": "object",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "errorByExtension": {
              "$ref": "#/definitions/ErrorByExtension",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "errorByExtension"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ExtensionChangeDestinationAction": {
      "title": "ExtensionChangeDestinationAction",
      "example": {
        "action": "changeDestination",
        "destination": {
          "type": "HTTP",
          "url": "URL-String",
          "authentication": {
            "type": "AuthorizationHeader",
            "headerValue": "valueString"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeDestination"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "destination": {
              "$ref": "#/definitions/ExtensionDestination",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "destination"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#change-destination"
    },
    "ExtensionChangeTriggersAction": {
      "title": "ExtensionChangeTriggersAction",
      "example": {
        "action": "changeTriggers",
        "triggers": [
          {
            "resourceTypeId": "cart",
            "actions": [
              "Create",
              "Update"
            ]
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTriggers"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "triggers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionTrigger"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "triggers"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#change-triggers"
    },
    "ExtensionDestination": {
      "title": "ExtensionDestination",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ExtensionAWSLambdaDestination",
        "ExtensionHttpDestination"
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionDraft": {
      "title": "ExtensionDraft",
      "type": "object",
      "properties": {
        "key": {
          "description": "User-specific unique identifier for the extension",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "destination": {
          "description": "Details where the extension can be reached",
          "$ref": "#/definitions/ExtensionDestination",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "triggers": {
          "description": "Describes what triggers the extension",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionTrigger"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "timeoutInMs": {
          "format": "int",
          "description": "The maximum time the commercetools platform waits for a response from the extension.\nThe maximum value is 2000 ms (2 seconds).\nThis limit can be increased per project after we review the performance impact.\nPlease contact Support via the [Support Portal](https://support.commercetools.com) and provide the region, project key and use case.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "destination",
        "triggers"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension"
    },
    "ExtensionHttpDestination": {
      "title": "ExtensionHttpDestination",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionDestination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "HTTP"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "url": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "authentication": {
              "$ref": "#/definitions/ExtensionHttpDestinationAuthentication",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "url"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension"
    },
    "ExtensionHttpDestinationAuthentication": {
      "title": "ExtensionHttpDestinationAuthentication",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ExtensionAuthorizationHeaderAuthentication",
        "ExtensionAzureFunctionsAuthentication"
      ],
      "x-annotation-package": "Extension"
    },
    "ExtensionInput": {
      "title": "ExtensionInput",
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/ExtensionAction",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "resource": {
          "$ref": "#/definitions/Reference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action",
        "resource"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension"
    },
    "ExtensionNoResponseError": {
      "title": "ExtensionNoResponseError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ExtensionNoResponse"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "extensionId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "extensionKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "extensionId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ExtensionPagedQueryResponse": {
      "title": "ExtensionPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Extension>"
    },
    "ExtensionResourceTypeId": {
      "title": "ExtensionResourceTypeId",
      "enum": [
        "cart",
        "order",
        "payment",
        "customer"
      ],
      "type": "string",
      "x-annotation-package": "Extension"
    },
    "ExtensionSetKeyAction": {
      "title": "ExtensionSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "keyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#set-key"
    },
    "ExtensionSetTimeoutInMsAction": {
      "title": "ExtensionSetTimeoutInMsAction",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTimeoutInMs"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "timeoutInMs": {
              "format": "int",
              "description": "The maximum time the commercetools platform waits for a response from the extension.\nThe maximum value is 2000 ms (2 seconds).\nThis limit can be increased per project after we review the performance impact.\nPlease contact Support via the support and provide the region, project key and use case.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#set-timeout-in-ms"
    },
    "ExtensionTrigger": {
      "title": "ExtensionTrigger",
      "type": "object",
      "properties": {
        "resourceTypeId": {
          "$ref": "#/definitions/ExtensionResourceTypeId",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "resourceTypeId",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension"
    },
    "ExtensionUpdate": {
      "title": "ExtensionUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Extension",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ExtensionUpdate, ExtensionUpdateAction>"
    },
    "ExtensionUpdateAction": {
      "title": "ExtensionUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ExtensionChangeDestinationAction",
        "ExtensionChangeTriggersAction",
        "ExtensionSetKeyAction",
        "ExtensionSetTimeoutInMsAction"
      ],
      "x-annotation-package": "Extension",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ExtensionUpdateAction>"
    },
    "ExtensionUpdateActionsFailedError": {
      "title": "ExtensionUpdateActionsFailedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ExtensionUpdateActionsFailed"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "localizedMessage": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "extensionExtraInfo": {
              "type": "object",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "errorByExtension": {
              "$ref": "#/definitions/ErrorByExtension",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "errorByExtension"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ExternalLineItemTotalPrice": {
      "title": "ExternalLineItemTotalPrice",
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "totalPrice": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "price",
        "totalPrice"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externallineitemtotalprice"
    },
    "ExternalOAuth": {
      "title": "ExternalOAuth",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "authorizationHeader": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "url",
        "authorizationHeader"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#externaloauth"
    },
    "ExternalOAuthFailedError": {
      "title": "ExternalOAuthFailedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ExternalOAuthFailed"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ExternalTaxAmountDraft": {
      "title": "ExternalTaxAmountDraft",
      "type": "object",
      "properties": {
        "totalGross": {
          "description": "The total gross amount of the item (totalNet + taxes).",
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxRate": {
          "$ref": "#/definitions/ExternalTaxRateDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "totalGross",
        "taxRate"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxamountdraft"
    },
    "ExternalTaxRateDraft": {
      "title": "ExternalTaxRateDraft",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amount": {
          "format": "float",
          "description": "Percentage in the range of [0..1].\nMust be supplied if no `subRates` are specified.\nIf `subRates` are specified\nthen the `amount` can be omitted or it must be the sum of the amounts of all `subRates`.",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "description": "The state in the country",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "subRates": {
          "description": "For countries (e.g.\nthe US) where the total tax is a combination of multiple taxes (e.g.\nstate and local taxes).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubRate"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "includedInPrice": {
          "description": "The default value for `includedInPrice` is FALSE.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "country"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxratedraft"
    },
    "FacetResult": {
      "title": "FacetResult",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FacetTypes",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "FilteredFacetResult",
        "RangeFacetResult",
        "TermFacetResult"
      ],
      "x-annotation-package": "Product"
    },
    "FacetResultRange": {
      "title": "FacetResultRange",
      "type": "object",
      "properties": {
        "from": {
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "fromStr": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "to": {
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "toStr": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "productCount": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "min": {
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "max": {
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "mean": {
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "from",
        "fromStr",
        "to",
        "toStr",
        "count",
        "total",
        "min",
        "max",
        "mean"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "FacetResultTerm": {
      "title": "FacetResultTerm",
      "type": "object",
      "properties": {
        "term": {
          "type": "string",
          "x-annotation-builtinType": "any",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "productCount": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "term",
        "count"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "FacetResults": {
      "title": "FacetResults",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "$ref": "#/definitions/FacetResult",
        "x-annotation-builtinType": "object",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "FacetTypes": {
      "title": "FacetTypes",
      "enum": [
        "terms",
        "range",
        "filter"
      ],
      "type": "string",
      "x-annotation-package": "Product"
    },
    "FeatureRemovedError": {
      "title": "FeatureRemovedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "FeatureRemoved"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "FieldContainer": {
      "title": "FieldContainer",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "type": "string",
        "x-annotation-builtinType": "any",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfields",
      "x-annotation-asMap": {
        "key": "string",
        "value": "any"
      }
    },
    "FieldDefinition": {
      "title": "FieldDefinition",
      "type": "object",
      "properties": {
        "type": {
          "description": "Describes the type of the field.",
          "$ref": "#/definitions/FieldType",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The name of the field.\nThe name must be between two and 36 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (`_`) and the hyphen-minus (`-`).\nThe name must be unique for a given resource type ID.\nIn case there is a field with the same name in another type it has to have the same FieldType also.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "label": {
          "description": "A human-readable label for the field.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "required": {
          "description": "Whether the field is required to have a value.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "inputHint": {
          "description": "Provides a visual representation type for this field.\nIt is only relevant for string-based field types like StringType and LocalizedStringType.",
          "$ref": "#/definitions/TypeTextInputHint",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type",
        "name",
        "label",
        "required"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fielddefinition"
    },
    "FieldType": {
      "title": "FieldType",
      "discriminator": "name",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CustomFieldBooleanType",
        "CustomFieldDateTimeType",
        "CustomFieldDateType",
        "CustomFieldEnumType",
        "CustomFieldLocalizedEnumType",
        "CustomFieldLocalizedStringType",
        "CustomFieldMoneyType",
        "CustomFieldNumberType",
        "CustomFieldReferenceType",
        "CustomFieldSetType",
        "CustomFieldStringType",
        "CustomFieldTimeType"
      ],
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fieldtype"
    },
    "FilteredFacetResult": {
      "title": "FilteredFacetResult",
      "allOf": [
        {
          "$ref": "#/definitions/FacetResult"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "filter"
              ],
              "$ref": "#/definitions/FacetTypes",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "count": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "productCount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "count"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "GeneralError": {
      "title": "GeneralError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "General"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "GeoJson": {
      "title": "GeoJson",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "GeoJsonPoint"
      ],
      "x-annotation-package": "Common"
    },
    "GeoJsonPoint": {
      "title": "GeoJsonPoint",
      "allOf": [
        {
          "$ref": "#/definitions/GeoJson"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "Point"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "GoogleCloudPubSubDestination": {
      "title": "GoogleCloudPubSubDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "GoogleCloudPubSub"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "projectId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "topic": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "projectId",
            "topic"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "GraphQLError": {
      "title": "GraphQLError",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphQLErrorLocation"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "path": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "message",
        "locations",
        "path"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "GraphQL"
    },
    "GraphQLErrorLocation": {
      "title": "GraphQLErrorLocation",
      "type": "object",
      "properties": {
        "line": {
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "column": {
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "line",
        "column"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "GraphQL"
    },
    "GraphQLRequest": {
      "title": "GraphQLRequest",
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "operationName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "variables": {
          "$ref": "#/definitions/GraphQLVariablesMap",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "query"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "GraphQL"
    },
    "GraphQLResponse": {
      "title": "GraphQLResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "x-annotation-builtinType": "any",
          "x-annotation-inherited": false
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphQLError"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "GraphQL"
    },
    "GraphQLVariablesMap": {
      "title": "GraphQLVariablesMap",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "type": "string",
        "x-annotation-builtinType": "any",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "GraphQL"
    },
    "HighPrecisionMoney": {
      "title": "HighPrecisionMoney",
      "allOf": [
        {
          "$ref": "#/definitions/TypedMoney"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "highPrecision"
              ],
              "$ref": "#/definitions/MoneyType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fractionDigits": {
              "maximum": 12,
              "format": "int32",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "centAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "currencyCode": {
              "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
              "$ref": "#/definitions/CurrencyCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "preciseAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "fractionDigits",
            "centAmount",
            "currencyCode",
            "preciseAmount"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "HighPrecisionMoneyDraft": {
      "title": "HighPrecisionMoneyDraft",
      "allOf": [
        {
          "$ref": "#/definitions/TypedMoneyDraft"
        },
        {
          "properties": {
            "centAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "currencyCode": {
              "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
              "$ref": "#/definitions/CurrencyCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "highPrecision"
              ],
              "$ref": "#/definitions/MoneyType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fractionDigits": {
              "maximum": 12,
              "format": "int32",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "preciseAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "centAmount",
            "currencyCode",
            "type",
            "preciseAmount"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "Image": {
      "title": "Image",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "dimensions": {
          "$ref": "#/definitions/ImageDimensions",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "label": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "url",
        "dimensions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
    },
    "ImageDimensions": {
      "title": "ImageDimensions",
      "type": "object",
      "properties": {
        "w": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "h": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "w",
        "h"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
    },
    "InsufficientScopeError": {
      "title": "InsufficientScopeError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "insufficient_scope"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InternalConstraintViolatedError": {
      "title": "InternalConstraintViolatedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InternalConstraintViolated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidCredentialsError": {
      "title": "InvalidCredentialsError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidCredentials"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidCurrentPasswordError": {
      "title": "InvalidCurrentPasswordError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidCurrentPassword"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidFieldError": {
      "title": "InvalidFieldError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "field": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "invalidValue": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            },
            "allowedValues": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "field",
            "invalidValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidInputError": {
      "title": "InvalidInputError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidInput"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidItemShippingDetailsError": {
      "title": "InvalidItemShippingDetailsError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "subject": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "itemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "subject",
            "itemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidJsonInputError": {
      "title": "InvalidJsonInputError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidJsonInput"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidOperationError": {
      "title": "InvalidOperationError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidOperation"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidSubjectError": {
      "title": "InvalidSubjectError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "InvalidSubject"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InvalidTokenError": {
      "title": "InvalidTokenError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "invalid_token"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "InventoryEntry": {
      "title": "InventoryEntry",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the inventory entry.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "description": "Optional connection to a particular supplier.",
              "$ref": "#/definitions/ChannelReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "quantityOnStock": {
              "format": "int64",
              "description": "Overall amount of stock.\n(available + reserved)",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "availableQuantity": {
              "format": "int64",
              "description": "Available amount of stock.\n(available means: `quantityOnStock` - reserved quantity)",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "restockableInDays": {
              "format": "int64",
              "description": "The time period in days, that tells how often this inventory entry is restocked.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "expectedDelivery": {
              "format": "date-time",
              "description": "The date and time of the next restock.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sku",
            "quantityOnStock",
            "availableQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentry",
      "x-annotation-updateType": "InventoryEntryUpdate",
      "x-annotation-actionType": "InventoryEntryUpdateAction",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<InventoryEntry>"
    },
    "InventoryEntryAddQuantityAction": {
      "title": "InventoryEntryAddQuantityAction",
      "example": {
        "action": "addQuantity",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#add-quantity"
    },
    "InventoryEntryChangeQuantityAction": {
      "title": "InventoryEntryChangeQuantityAction",
      "example": {
        "action": "changeQuantity",
        "quantity": 5
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#change-quantity"
    },
    "InventoryEntryCreatedMessage": {
      "title": "InventoryEntryCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "InventoryEntryCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "inventoryEntry": {
              "$ref": "#/definitions/InventoryEntry",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "inventoryEntry"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrycreatedmessage"
    },
    "InventoryEntryCreatedMessagePayload": {
      "title": "InventoryEntryCreatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "InventoryEntryCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "inventoryEntry": {
              "$ref": "#/definitions/InventoryEntry",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "inventoryEntry"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrycreatedmessage"
    },
    "InventoryEntryDeletedMessage": {
      "title": "InventoryEntryDeletedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "InventoryEntryDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "sku",
            "supplyChannel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrydeletedmessage"
    },
    "InventoryEntryDeletedMessagePayload": {
      "title": "InventoryEntryDeletedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "InventoryEntryDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "sku",
            "supplyChannel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrydeletedmessage"
    },
    "InventoryEntryDraft": {
      "title": "InventoryEntryDraft",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "supplyChannel": {
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantityOnStock": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "restockableInDays": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "expectedDelivery": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "sku",
        "quantityOnStock"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentrydraft"
    },
    "InventoryEntryQuantitySetMessage": {
      "title": "InventoryEntryQuantitySetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "InventoryEntryQuantitySet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "oldQuantityOnStock": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "newQuantityOnStock": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "oldAvailableQuantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "newAvailableQuantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "oldQuantityOnStock",
            "newQuantityOnStock",
            "oldAvailableQuantity",
            "newAvailableQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#inventoryentryquantitysetmessage"
    },
    "InventoryEntryQuantitySetMessagePayload": {
      "title": "InventoryEntryQuantitySetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "InventoryEntryQuantitySet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "oldQuantityOnStock": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "newQuantityOnStock": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "oldAvailableQuantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "newAvailableQuantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "oldQuantityOnStock",
            "newQuantityOnStock",
            "oldAvailableQuantity",
            "newAvailableQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#inventoryentryquantitysetmessage"
    },
    "InventoryEntryReference": {
      "title": "InventoryEntryReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "inventory-entry"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/InventoryEntry",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory"
    },
    "InventoryEntryRemoveQuantityAction": {
      "title": "InventoryEntryRemoveQuantityAction",
      "example": {
        "action": "removeQuantity",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#remove-quantity"
    },
    "InventoryEntryResourceIdentifier": {
      "title": "InventoryEntryResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "inventory-entry"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory"
    },
    "InventoryEntrySetCustomFieldAction": {
      "title": "InventoryEntrySetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-customfield"
    },
    "InventoryEntrySetCustomTypeAction": {
      "title": "InventoryEntrySetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If absent, the custom type and any existing CustomFields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-custom-type"
    },
    "InventoryEntrySetExpectedDeliveryAction": {
      "title": "InventoryEntrySetExpectedDeliveryAction",
      "example": {
        "action": "setExpectedDelivery",
        "expectedDelivery": "2015-10-21T14:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setExpectedDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "expectedDelivery": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-expecteddelivery"
    },
    "InventoryEntrySetRestockableInDaysAction": {
      "title": "InventoryEntrySetRestockableInDaysAction",
      "example": {
        "action": "setRestockableInDays",
        "restockableInDays": 7
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setRestockableInDays"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "restockableInDays": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-restockableindays"
    },
    "InventoryEntrySetSupplyChannelAction": {
      "title": "InventoryEntrySetSupplyChannelAction",
      "example": {
        "action": "setSupplyChannel",
        "supplyChannel": {
          "id": "{{supplyChannelId}}",
          "typeId": "channel"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/InventoryEntryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setSupplyChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "supplyChannel": {
              "description": "If absent, the supply channel is removed.\nThis action will fail if an entry with the combination of sku and supplyChannel already exists.",
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-supplychannel"
    },
    "InventoryEntryUpdate": {
      "title": "InventoryEntryUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryEntryUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<InventoryEntryUpdate, InventoryEntryUpdateAction>"
    },
    "InventoryEntryUpdateAction": {
      "title": "InventoryEntryUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "InventoryEntryAddQuantityAction",
        "InventoryEntryChangeQuantityAction",
        "InventoryEntryRemoveQuantityAction",
        "InventoryEntrySetCustomFieldAction",
        "InventoryEntrySetCustomTypeAction",
        "InventoryEntrySetExpectedDeliveryAction",
        "InventoryEntrySetRestockableInDaysAction",
        "InventoryEntrySetSupplyChannelAction"
      ],
      "x-annotation-package": "Inventory",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<InventoryEntryUpdateAction>"
    },
    "InventoryMode": {
      "title": "InventoryMode",
      "enum": [
        "TrackOnly",
        "ReserveOnOrder",
        "None"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#inventorymode"
    },
    "InventoryPagedQueryResponse": {
      "title": "InventoryPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryEntry"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Inventory",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<InventoryEntry>"
    },
    "IronMqDestination": {
      "title": "IronMqDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "IronMQ"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "uri": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "uri"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "ItemShippingDetails": {
      "title": "ItemShippingDetails",
      "type": "object",
      "properties": {
        "targets": {
          "description": "Used to map what sub-quantity should be shipped to which address.\nDuplicate address keys are not allowed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemShippingTarget"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "valid": {
          "description": "`true` if the quantity of the (custom) line item is equal to the sum of the sub-quantities in `targets`, `false` otherwise.\nA cart cannot be ordered when the value is `false`.\nThe error InvalidItemShippingDetails will be triggered.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "targets",
        "valid"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingdetails"
    },
    "ItemShippingDetailsDraft": {
      "title": "ItemShippingDetailsDraft",
      "type": "object",
      "properties": {
        "targets": {
          "description": "Used to capture one or more (custom) line item specific shipping addresses.\nBy specifying sub-quantities, it is possible to set multiple shipping addresses for one line item.\nA cart can have `shippingDetails` where the `targets` sum does not match the quantity of the line item or custom line item.\nFor the order creation and order updates the `targets` sum must match the quantity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemShippingTarget"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "targets"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingdetailsdraft"
    },
    "ItemShippingTarget": {
      "title": "ItemShippingTarget",
      "type": "object",
      "properties": {
        "addressKey": {
          "description": "The key of the address in the cart's `itemShippingAddresses`",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "float",
          "description": "The quantity of items that should go to the address with the specified `addressKey`.\nOnly positive values are allowed.\nUsing `0` as quantity is also possible in a draft object, but the element will not be present in the resulting ItemShippingDetails.",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "addressKey",
        "quantity"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingtarget"
    },
    "ItemState": {
      "title": "ItemState",
      "type": "object",
      "properties": {
        "quantity": {
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "state": {
          "$ref": "#/definitions/StateReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "quantity",
        "state"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#itemstate"
    },
    "KeyReference": {
      "title": "KeyReference",
      "discriminator": "typeId",
      "type": "object",
      "properties": {
        "typeId": {
          "$ref": "#/definitions/ReferenceTypeId",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "typeId",
        "key"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "StoreKeyReference"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#keyreference"
    },
    "LanguageUsedInStoresError": {
      "title": "LanguageUsedInStoresError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "LanguageUsedInStores"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "LastModifiedBy": {
      "title": "LastModifiedBy",
      "allOf": [
        {
          "$ref": "#/definitions/ClientLogging"
        },
        {
          "properties": {
            "clientId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalUserId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customer": {
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "anonymousId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "LineItem": {
      "title": "LineItem",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this LineItem.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "productId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The product name.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "productSlug": {
          "description": "The slug of a product is inserted on the fly.\nIt is always up-to-date and can therefore be used to link to the product detail page of the product.\nIt is empty if the product has been deleted.\nThe slug is also empty if the cart or order is retrieved via Reference Expansion or is a snapshot in a Message.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "productType": {
          "$ref": "#/definitions/ProductTypeReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "variant": {
          "description": "The variant data is saved when the variant is added to the cart, and not updated automatically.\nIt can manually be updated with the Recalculate update action.",
          "$ref": "#/definitions/ProductVariant",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "price": {
          "description": "The price of a line item is selected from the prices array of the product variant.\nIf the `variant` field hasn't been updated, the price may not correspond to a price in `variant.prices`.",
          "$ref": "#/definitions/Price",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxedPrice": {
          "description": "Set once the `taxRate` is set.",
          "$ref": "#/definitions/TaxedItemPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "totalPrice": {
          "description": "The total price of this line item.\nIf the line item is discounted, then the `totalPrice` is the DiscountedLineItemPriceForQuantity multiplied by `quantity`.\nOtherwise the total price is the product price multiplied by the `quantity`.\n`totalPrice` may or may not include the taxes: it depends on the taxRate.includedInPrice property.",
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int64",
          "description": "The amount of a LineItem in the cart.\nMust be a positive integer.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "addedAt": {
          "format": "date-time",
          "description": "When the line item was added to the cart. Optional for backwards\ncompatibility reasons only.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "state": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemState"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "taxRate": {
          "description": "Will be set automatically in the `Platform` TaxMode once the shipping address is set is set.\nFor the `External` tax mode the tax rate has to be set explicitly with the ExternalTaxRateDraft.",
          "$ref": "#/definitions/TaxRate",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "supplyChannel": {
          "description": "The supply channel identifies the inventory entries that should be reserved.\nThe channel has\nthe role InventorySupply.",
          "$ref": "#/definitions/ChannelReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "distributionChannel": {
          "description": "The distribution channel is used to select a ProductPrice.\nThe channel has the role ProductDistribution.",
          "$ref": "#/definitions/ChannelReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "discountedPricePerQuantity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "priceMode": {
          "$ref": "#/definitions/LineItemPriceMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lineItemMode": {
          "$ref": "#/definitions/LineItemMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingDetails": {
          "description": "Container for line item specific address(es).",
          "$ref": "#/definitions/ItemShippingDetails",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "The date when the LineItem was last modified by one of the following actions\nsetLineItemShippingDetails, addLineItem, removeLineItem, or changeLineItemQuantity.\nOptional only for backwards compatible reasons. When the LineItem is created lastModifiedAt is set to addedAt.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "productId",
        "name",
        "productType",
        "variant",
        "price",
        "totalPrice",
        "quantity",
        "state",
        "discountedPricePerQuantity",
        "priceMode",
        "lineItemMode"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitem"
    },
    "LineItemDraft": {
      "title": "LineItemDraft",
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "variantId": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "quantity": {
          "default": 1,
          "format": "int64",
          "description": "The amount of a `LineItem`in the cart.\nMust be a positive integer.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "addedAt": {
          "format": "date-time",
          "description": "When the line item was added to the cart. Optional for backwards\ncompatibility reasons only.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "supplyChannel": {
          "description": "By providing supply channel information, you can unique identify\ninventory entries that should be reserved.\nThe provided channel should have\nthe InventorySupply role.",
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "distributionChannel": {
          "description": "The channel is used to select a ProductPrice.\nThe provided channel should have the ProductDistribution role.",
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "externalTaxRate": {
          "description": "An external tax rate can be set if the cart has the `External` TaxMode.",
          "$ref": "#/definitions/ExternalTaxRateDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "externalPrice": {
          "description": "Sets the line item `price` to the given value and sets the line item `priceMode` to `ExternalPrice` LineItemPriceMode.",
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "externalTotalPrice": {
          "description": "Sets the line item `price` and `totalPrice` to the given values and sets the line item `priceMode` to `ExternalTotal` LineItemPriceMode.",
          "$ref": "#/definitions/ExternalLineItemTotalPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingDetails": {
          "description": "Container for line item specific address(es).",
          "$ref": "#/definitions/ItemShippingDetailsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitemdraft",
      "x-annotation-builder": [
        {
          "paramNames": [
            "productId",
            "variantId",
            "quantity"
          ]
        },
        {
          "paramNames": [
            "sku",
            "quantity"
          ]
        }
      ]
    },
    "LineItemImportDraft": {
      "title": "LineItemImportDraft",
      "type": "object",
      "properties": {
        "productId": {
          "description": "ID of the existing product.\nYou also need to specify the ID of the variant if this property is set or alternatively you can just specify SKU of the product variant.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The product name.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "variant": {
          "$ref": "#/definitions/ProductVariantImportDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "price": {
          "$ref": "#/definitions/PriceDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "state": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemState"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "supplyChannel": {
          "description": "Optional connection to a particular supplier.\nBy providing supply channel information, you can uniquely identify\ninventory entries that should be reserved.\nThe provided channel should have the\nInventorySupply role.",
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "distributionChannel": {
          "description": "The channel is used to select a ProductPrice.\nThe provided channel should have the ProductDistribution role.",
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxRate": {
          "$ref": "#/definitions/TaxRate",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingDetails": {
          "$ref": "#/definitions/ItemShippingDetailsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "variant",
        "price",
        "quantity"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#lineitemimportdraft"
    },
    "LineItemMode": {
      "title": "LineItemMode",
      "enum": [
        "Standard",
        "GiftLineItem"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "LineItemPriceMode": {
      "title": "LineItemPriceMode",
      "enum": [
        "Platform",
        "ExternalTotal",
        "ExternalPrice"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "LineItemReturnItem": {
      "title": "LineItemReturnItem",
      "allOf": [
        {
          "$ref": "#/definitions/ReturnItem"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "LineItemReturnItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "comment": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shipmentState": {
              "$ref": "#/definitions/ReturnShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "paymentState": {
              "$ref": "#/definitions/ReturnPaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "quantity",
            "type",
            "shipmentState",
            "paymentState",
            "lastModifiedAt",
            "createdAt",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem"
    },
    "LineItemStateTransitionMessage": {
      "title": "LineItemStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "LineItemStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "transitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "lineItemId",
            "transitionDate",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#lineitemstatetransitionmessage"
    },
    "LineItemStateTransitionMessagePayload": {
      "title": "LineItemStateTransitionMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "LineItemStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "transitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "lineItemId",
            "transitionDate",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#lineitemstatetransitionmessage"
    },
    "Locale": {
      "title": "Locale",
      "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
      "description": "A locale of [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).",
      "type": "string",
      "x-annotation-builtinType": "string",
      "x-annotation-package": "Common"
    },
    "LocalizedString": {
      "title": "LocalizedString",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "type": "string",
        "x-annotation-builtinType": "string",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#localizedstring",
      "x-annotation-asMap": {
        "key": "string",
        "value": "string"
      }
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "country": {
          "pattern": "^[A-Z]{2}$",
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "country"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#location"
    },
    "MatchingPriceNotFoundError": {
      "title": "MatchingPriceNotFoundError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "MatchingPriceNotFound"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "productId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "currency": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "country": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "channel": {
              "$ref": "#/definitions/ChannelReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "productId",
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "MaxResourceLimitExceededError": {
      "title": "MaxResourceLimitExceededError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "MaxResourceLimitExceeded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "exceededResource": {
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "exceededResource"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "Message": {
      "title": "Message",
      "discriminator": "type",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "type": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CategoryCreatedMessage",
        "CategorySlugChangedMessage",
        "CustomLineItemStateTransitionMessage",
        "CustomerAddressAddedMessage",
        "CustomerAddressChangedMessage",
        "CustomerAddressRemovedMessage",
        "CustomerCompanyNameSetMessage",
        "CustomerCreatedMessage",
        "CustomerDateOfBirthSetMessage",
        "CustomerEmailChangedMessage",
        "CustomerEmailVerifiedMessage",
        "CustomerGroupSetMessage",
        "CustomerPasswordUpdatedMessage",
        "DeliveryAddedMessage",
        "DeliveryAddressSetMessage",
        "DeliveryItemsUpdatedMessage",
        "DeliveryRemovedMessage",
        "InventoryEntryCreatedMessage",
        "InventoryEntryDeletedMessage",
        "InventoryEntryQuantitySetMessage",
        "LineItemStateTransitionMessage",
        "OrderBillingAddressSetMessage",
        "OrderCreatedMessage",
        "OrderCustomLineItemDiscountSetMessage",
        "OrderCustomerEmailSetMessage",
        "OrderCustomerGroupSetMessage",
        "OrderCustomerSetMessage",
        "OrderDeletedMessage",
        "OrderDiscountCodeAddedMessage",
        "OrderDiscountCodeRemovedMessage",
        "OrderDiscountCodeStateSetMessage",
        "OrderEditAppliedMessage",
        "OrderImportedMessage",
        "OrderLineItemAddedMessage",
        "OrderLineItemDiscountSetMessage",
        "OrderPaymentStateChangedMessage",
        "OrderReturnInfoAddedMessage",
        "OrderReturnShipmentStateChangedMessage",
        "OrderShipmentStateChangedMessage",
        "OrderShippingAddressSetMessage",
        "OrderShippingInfoSetMessage",
        "OrderShippingRateInputSetMessage",
        "OrderStateChangedMessage",
        "OrderStateTransitionMessage",
        "OrderStoreSetMessage",
        "ParcelAddedToDeliveryMessage",
        "ParcelItemsUpdatedMessage",
        "ParcelMeasurementsUpdatedMessage",
        "ParcelRemovedFromDeliveryMessage",
        "ParcelTrackingDataUpdatedMessage",
        "PaymentCreatedMessage",
        "PaymentInteractionAddedMessage",
        "PaymentStatusInterfaceCodeSetMessage",
        "PaymentStatusStateTransitionMessage",
        "PaymentTransactionAddedMessage",
        "PaymentTransactionStateChangedMessage",
        "ProductAddedToCategoryMessage",
        "ProductCreatedMessage",
        "ProductDeletedMessage",
        "ProductImageAddedMessage",
        "ProductPriceDiscountsSetMessage",
        "ProductPriceExternalDiscountSetMessage",
        "ProductPublishedMessage",
        "ProductRemovedFromCategoryMessage",
        "ProductRevertedStagedChangesMessage",
        "ProductSlugChangedMessage",
        "ProductStateTransitionMessage",
        "ProductUnpublishedMessage",
        "ProductVariantAddedMessage",
        "ProductVariantDeletedMessage",
        "ReviewCreatedMessage",
        "ReviewRatingSetMessage",
        "ReviewStateTransitionMessage"
      ],
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#message",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Message>"
    },
    "MessageConfiguration": {
      "title": "MessageConfiguration",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterCreation": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "enabled"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "MessageConfigurationDraft": {
      "title": "MessageConfigurationDraft",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterCreation": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "enabled",
        "deleteDaysAfterCreation"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "MessageDelivery": {
      "title": "MessageDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "projectKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "notificationType": {
              "enum": [
                "Message"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "payloadNotIncluded": {
              "$ref": "#/definitions/PayloadNotIncluded",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "projectKey",
            "notificationType",
            "resource",
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resourceVersion",
            "payloadNotIncluded"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#message-subscription-payload"
    },
    "MessagePagedQueryResponse": {
      "title": "MessagePagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Message>"
    },
    "MessagePayload": {
      "title": "MessagePayload",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CategoryCreatedMessagePayload",
        "CategorySlugChangedMessagePayload",
        "CustomLineItemStateTransitionMessagePayload",
        "CustomerAddressAddedMessagePayload",
        "CustomerAddressChangedMessagePayload",
        "CustomerAddressRemovedMessagePayload",
        "CustomerCompanyNameSetMessagePayload",
        "CustomerCreatedMessagePayload",
        "CustomerDateOfBirthSetMessagePayload",
        "CustomerEmailChangedMessagePayload",
        "CustomerEmailVerifiedMessagePayload",
        "CustomerGroupSetMessagePayload",
        "CustomerPasswordUpdatedMessagePayload",
        "DeliveryAddedMessagePayload",
        "DeliveryAddressSetMessagePayload",
        "DeliveryItemsUpdatedMessagePayload",
        "DeliveryRemovedMessagePayload",
        "InventoryEntryCreatedMessagePayload",
        "InventoryEntryDeletedMessagePayload",
        "InventoryEntryQuantitySetMessagePayload",
        "LineItemStateTransitionMessagePayload",
        "OrderBillingAddressSetMessagePayload",
        "OrderCreatedMessagePayload",
        "OrderCustomLineItemDiscountSetMessagePayload",
        "OrderCustomerEmailSetMessagePayload",
        "OrderCustomerGroupSetMessagePayload",
        "OrderCustomerSetMessagePayload",
        "OrderDeletedMessagePayload",
        "OrderDiscountCodeAddedMessagePayload",
        "OrderDiscountCodeRemovedMessagePayload",
        "OrderDiscountCodeStateSetMessagePayload",
        "OrderEditAppliedMessagePayload",
        "OrderImportedMessagePayload",
        "OrderLineItemAddedMessagePayload",
        "OrderLineItemDiscountSetMessagePayload",
        "OrderPaymentStateChangedMessagePayload",
        "OrderReturnInfoAddedMessagePayload",
        "OrderReturnShipmentStateChangedMessagePayload",
        "OrderShipmentStateChangedMessagePayload",
        "OrderShippingAddressSetMessagePayload",
        "OrderShippingInfoSetMessagePayload",
        "OrderShippingRateInputSetMessagePayload",
        "OrderStateChangedMessagePayload",
        "OrderStateTransitionMessagePayload",
        "OrderStoreSetMessagePayload",
        "ParcelAddedToDeliveryMessagePayload",
        "ParcelItemsUpdatedMessagePayload",
        "ParcelMeasurementsUpdatedMessagePayload",
        "ParcelRemovedFromDeliveryMessagePayload",
        "ParcelTrackingDataUpdatedMessagePayload",
        "PaymentCreatedMessagePayload",
        "PaymentInteractionAddedMessagePayload",
        "PaymentStatusInterfaceCodeSetMessagePayload",
        "PaymentStatusStateTransitionMessagePayload",
        "PaymentTransactionAddedMessagePayload",
        "PaymentTransactionStateChangedMessagePayload",
        "ProductAddedToCategoryMessagePayload",
        "ProductCreatedMessagePayload",
        "ProductDeletedMessagePayload",
        "ProductImageAddedMessagePayload",
        "ProductPriceDiscountsSetMessagePayload",
        "ProductPriceExternalDiscountSetMessagePayload",
        "ProductPublishedMessagePayload",
        "ProductRemovedFromCategoryMessagePayload",
        "ProductRevertedStagedChangesMessagePayload",
        "ProductSlugChangedMessagePayload",
        "ProductStateTransitionMessagePayload",
        "ProductUnpublishedMessagePayload",
        "ProductVariantAddedMessagePayload",
        "ProductVariantDeletedMessagePayload",
        "ReviewCreatedMessagePayload",
        "ReviewRatingSetMessagePayload",
        "ReviewStateTransitionMessagePayload",
        "ShoppingListStoreSetMessagePayload"
      ],
      "x-annotation-package": "Message"
    },
    "MessageSubscription": {
      "title": "MessageSubscription",
      "type": "object",
      "properties": {
        "resourceTypeId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "resourceTypeId"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "MissingRoleOnChannelError": {
      "title": "MissingRoleOnChannelError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "MissingRoleOnChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "channel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "missingRole": {
              "$ref": "#/definitions/ChannelRoleEnum",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "missingRole"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "MissingTaxRateForCountryError": {
      "title": "MissingTaxRateForCountryError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "MissingTaxRateForCountry"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxCategoryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "country": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "taxCategoryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "Money": {
      "title": "Money",
      "type": "object",
      "properties": {
        "centAmount": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "currencyCode": {
          "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
          "$ref": "#/definitions/CurrencyCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "centAmount",
        "currencyCode"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "TypedMoneyDraft"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#basemoney"
    },
    "MoneyType": {
      "title": "MoneyType",
      "enum": [
        "centPrecision",
        "highPrecision"
      ],
      "type": "string",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "MultiBuyCustomLineItemsTarget": {
      "title": "MultiBuyCustomLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "multiBuyCustomLineItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "predicate": {
              "description": "A valid custom line item target predicate. The discount will be applied to custom line items that are\nmatched by the predicate.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "triggerQuantity": {
              "format": "int",
              "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "discountedQuantity": {
              "format": "int",
              "description": "Quantity of line items that are discounted per application of this discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "maxOccurrence": {
              "format": "int",
              "description": "Maximum number of applications of this discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "selectionMode": {
              "$ref": "#/definitions/SelectionMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "predicate",
            "triggerQuantity",
            "discountedQuantity",
            "selectionMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "MultiBuyLineItemsTarget": {
      "title": "MultiBuyLineItemsTarget",
      "allOf": [
        {
          "$ref": "#/definitions/CartDiscountTarget"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "multiBuyLineItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "predicate": {
              "description": "A valid line item target predicate. The discount will be applied to line items that are matched by the predicate.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "triggerQuantity": {
              "format": "int",
              "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "discountedQuantity": {
              "format": "int",
              "description": "Quantity of line items that are discounted per application of this discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "maxOccurrence": {
              "format": "int",
              "description": "Maximum number of applications of this discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "selectionMode": {
              "$ref": "#/definitions/SelectionMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "predicate",
            "triggerQuantity",
            "discountedQuantity",
            "selectionMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "CartDiscount"
    },
    "MyCartAddDiscountCodeAction": {
      "title": "MyCartAddDiscountCodeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addDiscountCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "code": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "code"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-discountcode"
    },
    "MyCartAddItemShippingAddressAction": {
      "title": "MyCartAddItemShippingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-itemshippingaddress"
    },
    "MyCartAddLineItemAction": {
      "title": "MyCartAddLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "productId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "addedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-lineitem"
    },
    "MyCartAddPaymentAction": {
      "title": "MyCartAddPaymentAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addPayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-payment"
    },
    "MyCartApplyDeltaToLineItemShippingDetailsTargetsAction": {
      "title": "MyCartApplyDeltaToLineItemShippingDetailsTargetsAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "applyDeltaToLineItemShippingDetailsTargets"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "targetsDelta": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemShippingTarget"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "targetsDelta"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#apply-deltatolineitemshippingdetailstargets"
    },
    "MyCartChangeLineItemQuantityAction": {
      "title": "MyCartChangeLineItemQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#change-lineitem-quantity"
    },
    "MyCartChangeTaxModeAction": {
      "title": "MyCartChangeTaxModeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxMode": {
              "$ref": "#/definitions/TaxMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#change-taxmode"
    },
    "MyCartDraft": {
      "title": "MyCartDraft",
      "type": "object",
      "properties": {
        "currency": {
          "pattern": "^[A-Z]{3}$",
          "description": "A three-digit currency code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CurrencyCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerEmail": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "inventoryMode": {
          "description": "Default inventory mode is `None`.",
          "$ref": "#/definitions/InventoryMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyLineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "shippingAddress": {
          "$ref": "#/definitions/BaseAddress",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "billingAddress": {
          "$ref": "#/definitions/BaseAddress",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingMethod": {
          "$ref": "#/definitions/ShippingMethodResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "locale": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "taxMode": {
          "description": "The `TaxMode` `Disabled` can not be set on the My Carts endpoint.",
          "$ref": "#/definitions/TaxMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterLastModification": {
          "format": "int64",
          "description": "The cart will be deleted automatically if it hasn't been modified for the specified amount of days and it is in the `Active` CartState.\nIf a ChangeSubscription for carts exists, a `ResourceDeleted` notification will be sent.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "itemShippingAddresses": {
          "description": "Contains addresses for orders with multiple shipping addresses.\nEach address must contain a key which is unique in this cart.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseAddress"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "store": {
          "$ref": "#/definitions/StoreKeyReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "discountCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscountCodeInfo"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "currency"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mycartdraft"
    },
    "MyCartRecalculateAction": {
      "title": "MyCartRecalculateAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "recalculate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "updateProductData": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#recalculate"
    },
    "MyCartRemoveDiscountCodeAction": {
      "title": "MyCartRemoveDiscountCodeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeDiscountCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-discountcode"
    },
    "MyCartRemoveItemShippingAddressAction": {
      "title": "MyCartRemoveItemShippingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-itemshippingaddress"
    },
    "MyCartRemoveLineItemAction": {
      "title": "MyCartRemoveLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingDetailsToRemove": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-lineitem"
    },
    "MyCartRemovePaymentAction": {
      "title": "MyCartRemovePaymentAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removePayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-payment"
    },
    "MyCartSetBillingAddressAction": {
      "title": "MyCartSetBillingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-billing-address"
    },
    "MyCartSetCountryAction": {
      "title": "MyCartSetCountryAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCountry"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "country": {
              "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
              "$ref": "#/definitions/CountryCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-country"
    },
    "MyCartSetCustomFieldAction": {
      "title": "MyCartSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-customfield"
    },
    "MyCartSetCustomTypeAction": {
      "title": "MyCartSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-custom-type"
    },
    "MyCartSetCustomerEmailAction": {
      "title": "MyCartSetCustomerEmailAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerEmail"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-customer-email"
    },
    "MyCartSetDeleteDaysAfterLastModificationAction": {
      "title": "MyCartSetDeleteDaysAfterLastModificationAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeleteDaysAfterLastModification"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deleteDaysAfterLastModification": {
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-deletedaysafterlastmodification-beta"
    },
    "MyCartSetLineItemCustomFieldAction": {
      "title": "MyCartSetLineItemCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-lineitem-customfield"
    },
    "MyCartSetLineItemCustomTypeAction": {
      "title": "MyCartSetLineItemCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-lineitem-custom-type"
    },
    "MyCartSetLineItemDistributionChannelAction": {
      "title": "MyCartSetLineItemDistributionChannelAction",
      "example": {
        "action": "setLineItemDistributionChannel",
        "lineItemId": "{{lineItemId}}",
        "distributionChannel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemDistributionChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-lineitem-distributionchannel"
    },
    "MyCartSetLineItemShippingDetailsAction": {
      "title": "MyCartSetLineItemShippingDetailsAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-lineitemshippingdetails"
    },
    "MyCartSetLocaleAction": {
      "title": "MyCartSetLocaleAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocale"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-locale"
    },
    "MyCartSetShippingAddressAction": {
      "title": "MyCartSetShippingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-shipping-address"
    },
    "MyCartSetShippingMethodAction": {
      "title": "MyCartSetShippingMethodAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingMethod": {
              "$ref": "#/definitions/ShippingMethodResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-shipping-method"
    },
    "MyCartUpdate": {
      "title": "MyCartUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyCartUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<MyCartUpdate, MyCartUpdateAction>"
    },
    "MyCartUpdateAction": {
      "title": "MyCartUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "MyCartAddDiscountCodeAction",
        "MyCartAddItemShippingAddressAction",
        "MyCartAddLineItemAction",
        "MyCartAddPaymentAction",
        "MyCartApplyDeltaToLineItemShippingDetailsTargetsAction",
        "MyCartChangeLineItemQuantityAction",
        "MyCartChangeTaxModeAction",
        "MyCartRecalculateAction",
        "MyCartRemoveDiscountCodeAction",
        "MyCartRemoveItemShippingAddressAction",
        "MyCartRemoveLineItemAction",
        "MyCartRemovePaymentAction",
        "MyCartSetBillingAddressAction",
        "MyCartSetCountryAction",
        "MyCartSetCustomFieldAction",
        "MyCartSetCustomTypeAction",
        "MyCartSetCustomerEmailAction",
        "MyCartSetDeleteDaysAfterLastModificationAction",
        "MyCartSetLineItemCustomFieldAction",
        "MyCartSetLineItemCustomTypeAction",
        "MyCartSetLineItemDistributionChannelAction",
        "MyCartSetLineItemShippingDetailsAction",
        "MyCartSetLocaleAction",
        "MyCartSetShippingAddressAction",
        "MyCartSetShippingMethodAction",
        "MyCartUpdateItemShippingAddressAction"
      ],
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#update-actions",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<MyCartUpdateAction>"
    },
    "MyCartUpdateItemShippingAddressAction": {
      "title": "MyCartUpdateItemShippingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCartUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "updateItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#update-itemshippingaddress"
    },
    "MyCustomerAddAddressAction": {
      "title": "MyCustomerAddAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#add-address"
    },
    "MyCustomerAddBillingAddressIdAction": {
      "title": "MyCustomerAddBillingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addBillingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#add-billing-address-id"
    },
    "MyCustomerAddShippingAddressIdAction": {
      "title": "MyCustomerAddShippingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addShippingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#add-shipping-address-id"
    },
    "MyCustomerChangeAddressAction": {
      "title": "MyCustomerChangeAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#change-address"
    },
    "MyCustomerChangeEmailAction": {
      "title": "MyCustomerChangeEmailAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeEmail"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "email"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#change-email"
    },
    "MyCustomerDraft": {
      "title": "MyCustomerDraft",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "password": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "firstName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lastName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "middleName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "title": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "x-annotation-builtinType": "date-only",
          "x-annotation-inherited": false
        },
        "companyName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "vatId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "addresses": {
          "description": "Sets the ID of each address to be unique in the addresses list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseAddress"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "defaultShippingAddress": {
          "format": "int64",
          "description": "The index of the address in the addresses array.\nThe `defaultShippingAddressId` of the customer will be set to the ID of that address.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "defaultBillingAddress": {
          "format": "int64",
          "description": "The index of the address in the addresses array.\nThe `defaultBillingAddressId` of the customer will be set to the ID of that address.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "locale": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "stores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoreResourceIdentifier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "email",
        "password"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#mycustomerdraft"
    },
    "MyCustomerRemoveAddressAction": {
      "title": "MyCustomerRemoveAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#remove-address"
    },
    "MyCustomerRemoveBillingAddressIdAction": {
      "title": "MyCustomerRemoveBillingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeBillingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#remove-billing-address-id"
    },
    "MyCustomerRemoveShippingAddressIdAction": {
      "title": "MyCustomerRemoveShippingAddressIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeShippingAddressId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#remove-shipping-address-id"
    },
    "MyCustomerSetCompanyNameAction": {
      "title": "MyCustomerSetCompanyNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCompanyName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "companyName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-company-name"
    },
    "MyCustomerSetCustomFieldAction": {
      "title": "MyCustomerSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-customfield"
    },
    "MyCustomerSetCustomTypeAction": {
      "title": "MyCustomerSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-custom-type"
    },
    "MyCustomerSetDateOfBirthAction": {
      "title": "MyCustomerSetDateOfBirthAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDateOfBirth"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "x-annotation-builtinType": "date-only",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-date-of-birth"
    },
    "MyCustomerSetDefaultBillingAddressAction": {
      "title": "MyCustomerSetDefaultBillingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDefaultBillingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-default-billing-address"
    },
    "MyCustomerSetDefaultShippingAddressAction": {
      "title": "MyCustomerSetDefaultShippingAddressAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDefaultShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-default-shipping-address"
    },
    "MyCustomerSetFirstNameAction": {
      "title": "MyCustomerSetFirstNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setFirstName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "firstName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-first-name"
    },
    "MyCustomerSetLastNameAction": {
      "title": "MyCustomerSetLastNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLastName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lastName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-last-name"
    },
    "MyCustomerSetLocaleAction": {
      "title": "MyCustomerSetLocaleAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocale"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-locale"
    },
    "MyCustomerSetMiddleNameAction": {
      "title": "MyCustomerSetMiddleNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMiddleName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "middleName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-middle-name"
    },
    "MyCustomerSetSalutationAction": {
      "title": "MyCustomerSetSalutationAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setSalutation"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "salutation": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-salutation"
    },
    "MyCustomerSetTitleAction": {
      "title": "MyCustomerSetTitleAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTitle"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "title": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-title"
    },
    "MyCustomerSetVatIdAction": {
      "title": "MyCustomerSetVatIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyCustomerUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setVatId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "vatId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#set-vat-id"
    },
    "MyCustomerUpdate": {
      "title": "MyCustomerUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyCustomerUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<MyCustomerUpdate, MyCustomerUpdateAction>"
    },
    "MyCustomerUpdateAction": {
      "title": "MyCustomerUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "MyCustomerAddAddressAction",
        "MyCustomerAddBillingAddressIdAction",
        "MyCustomerAddShippingAddressIdAction",
        "MyCustomerChangeAddressAction",
        "MyCustomerChangeEmailAction",
        "MyCustomerRemoveAddressAction",
        "MyCustomerRemoveBillingAddressIdAction",
        "MyCustomerRemoveShippingAddressIdAction",
        "MyCustomerSetCompanyNameAction",
        "MyCustomerSetCustomFieldAction",
        "MyCustomerSetCustomTypeAction",
        "MyCustomerSetDateOfBirthAction",
        "MyCustomerSetDefaultBillingAddressAction",
        "MyCustomerSetDefaultShippingAddressAction",
        "MyCustomerSetFirstNameAction",
        "MyCustomerSetLastNameAction",
        "MyCustomerSetLocaleAction",
        "MyCustomerSetMiddleNameAction",
        "MyCustomerSetSalutationAction",
        "MyCustomerSetTitleAction",
        "MyCustomerSetVatIdAction"
      ],
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile#update-actions",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<MyCustomerUpdateAction>"
    },
    "MyLineItemDraft": {
      "title": "MyLineItemDraft",
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "variantId": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "addedAt": {
          "format": "date-time",
          "description": "When the line item was added to the cart. Optional for backwards\ncompatibility reasons only.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "supplyChannel": {
          "description": "By providing supply channel information, you can unique identify\ninventory entries that should be reserved.\nThe provided channel should have the InventorySupply role.",
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "distributionChannel": {
          "description": "The channel is used to select a ProductPrice.\nThe provided channel should have the ProductDistribution role.",
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingDetails": {
          "description": "Container for line item specific address(es).",
          "$ref": "#/definitions/ItemShippingDetailsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "quantity"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mylineitemdraft"
    },
    "MyOrderFromCartDraft": {
      "title": "MyOrderFromCartDraft",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of the cart from which an order is created.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "version"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me"
    },
    "MyPayment": {
      "title": "MyPayment",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-identifier": true,
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "customer": {
          "description": "A reference to the customer this payment belongs to.",
          "$ref": "#/definitions/CustomerReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "anonymousId": {
          "description": "Identifies payments belonging to an anonymous session (the customer has not signed up/in yet).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amountPlanned": {
          "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "paymentMethodInfo": {
          "$ref": "#/definitions/PaymentMethodInfo",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "transactions": {
          "description": "A list of financial transactions of different TransactionTypes\nwith different TransactionStates.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "version",
        "amountPlanned",
        "paymentMethodInfo",
        "transactions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#mypayment",
      "x-annotation-updateType": "MyPaymentUpdate",
      "x-annotation-actionType": "MyPaymentUpdateAction",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<MyPayment>"
    },
    "MyPaymentAddTransactionAction": {
      "title": "MyPaymentAddTransactionAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyPaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addTransaction"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transaction": {
              "$ref": "#/definitions/TransactionDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "transaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#add-transaction"
    },
    "MyPaymentChangeAmountPlannedAction": {
      "title": "MyPaymentChangeAmountPlannedAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyPaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAmountPlanned"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "amount": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "amount"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#change-amountplanned"
    },
    "MyPaymentDraft": {
      "title": "MyPaymentDraft",
      "type": "object",
      "properties": {
        "amountPlanned": {
          "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "paymentMethodInfo": {
          "$ref": "#/definitions/PaymentMethodInfo",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "transaction": {
          "description": "A list of financial transactions of the `Authorization` or `Charge`\nTransactionTypes.",
          "$ref": "#/definitions/MyTransactionDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "amountPlanned"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#mypaymentdraft"
    },
    "MyPaymentPagedQueryResponse": {
      "title": "MyPaymentPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyPayment"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<MyPayment>"
    },
    "MyPaymentSetCustomFieldAction": {
      "title": "MyPaymentSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyPaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-customfield"
    },
    "MyPaymentSetMethodInfoInterfaceAction": {
      "title": "MyPaymentSetMethodInfoInterfaceAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyPaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMethodInfoInterface"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "interface": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "interface"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-methodinfointerface"
    },
    "MyPaymentSetMethodInfoMethodAction": {
      "title": "MyPaymentSetMethodInfoMethodAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyPaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMethodInfoMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "method": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-methodinfomethod"
    },
    "MyPaymentSetMethodInfoNameAction": {
      "title": "MyPaymentSetMethodInfoNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyPaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMethodInfoName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-methodinfoname"
    },
    "MyPaymentUpdate": {
      "title": "MyPaymentUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyPaymentUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<MyPaymentUpdate, MyPaymentUpdateAction>"
    },
    "MyPaymentUpdateAction": {
      "title": "MyPaymentUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "MyPaymentAddTransactionAction",
        "MyPaymentChangeAmountPlannedAction",
        "MyPaymentSetCustomFieldAction",
        "MyPaymentSetMethodInfoInterfaceAction",
        "MyPaymentSetMethodInfoMethodAction",
        "MyPaymentSetMethodInfoNameAction"
      ],
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#update-actions",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<MyPaymentUpdateAction>"
    },
    "MyShoppingListAddLineItemAction": {
      "title": "MyShoppingListAddLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "productId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "addedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#add-lineitem"
    },
    "MyShoppingListAddTextLineItemAction": {
      "title": "MyShoppingListAddTextLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addTextLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "addedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#add-textlineitem"
    },
    "MyShoppingListChangeLineItemQuantityAction": {
      "title": "MyShoppingListChangeLineItemQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-lineitem-quantity"
    },
    "MyShoppingListChangeLineItemsOrderAction": {
      "title": "MyShoppingListChangeLineItemsOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLineItemsOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemOrder": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-lineitems-order"
    },
    "MyShoppingListChangeNameAction": {
      "title": "MyShoppingListChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-name"
    },
    "MyShoppingListChangeTextLineItemNameAction": {
      "title": "MyShoppingListChangeTextLineItemNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTextLineItemName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-textlineitem-name"
    },
    "MyShoppingListChangeTextLineItemQuantityAction": {
      "title": "MyShoppingListChangeTextLineItemQuantityAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTextLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-textlineitem-quantity"
    },
    "MyShoppingListChangeTextLineItemsOrderAction": {
      "title": "MyShoppingListChangeTextLineItemsOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTextLineItemsOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemOrder": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-textlineitems-order"
    },
    "MyShoppingListDraft": {
      "title": "MyShoppingListDraft",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingListLineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "textLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextLineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterLastModification": {
          "format": "int64",
          "description": "The shopping list will be deleted automatically if it hasn't been modified for the specified amount of days.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "store": {
          "$ref": "#/definitions/StoreResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#my-shopping-lists"
    },
    "MyShoppingListRemoveLineItemAction": {
      "title": "MyShoppingListRemoveLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#remove-lineitem"
    },
    "MyShoppingListRemoveTextLineItemAction": {
      "title": "MyShoppingListRemoveTextLineItemAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeTextLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#remove-textlineitem"
    },
    "MyShoppingListSetCustomFieldAction": {
      "title": "MyShoppingListSetCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-customfield"
    },
    "MyShoppingListSetCustomTypeAction": {
      "title": "MyShoppingListSetCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-custom-type"
    },
    "MyShoppingListSetDeleteDaysAfterLastModificationAction": {
      "title": "MyShoppingListSetDeleteDaysAfterLastModificationAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeleteDaysAfterLastModification"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deleteDaysAfterLastModification": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-deletedaysafterlastmodification"
    },
    "MyShoppingListSetDescriptionAction": {
      "title": "MyShoppingListSetDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-description"
    },
    "MyShoppingListSetLineItemCustomFieldAction": {
      "title": "MyShoppingListSetLineItemCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-lineitem-customfield"
    },
    "MyShoppingListSetLineItemCustomTypeAction": {
      "title": "MyShoppingListSetLineItemCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-lineitem-custom-type"
    },
    "MyShoppingListSetTextLineItemCustomFieldAction": {
      "title": "MyShoppingListSetTextLineItemCustomFieldAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTextLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-textlineitem-customfield"
    },
    "MyShoppingListSetTextLineItemCustomTypeAction": {
      "title": "MyShoppingListSetTextLineItemCustomTypeAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTextLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-textlineitem-custom-type"
    },
    "MyShoppingListSetTextLineItemDescriptionAction": {
      "title": "MyShoppingListSetTextLineItemDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/MyShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTextLineItemDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-textlineitem-description"
    },
    "MyShoppingListUpdate": {
      "title": "MyShoppingListUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MyShoppingListUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<MyShoppingListUpdate, MyShoppingListUpdateAction>"
    },
    "MyShoppingListUpdateAction": {
      "title": "MyShoppingListUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "MyShoppingListAddLineItemAction",
        "MyShoppingListAddTextLineItemAction",
        "MyShoppingListChangeLineItemQuantityAction",
        "MyShoppingListChangeLineItemsOrderAction",
        "MyShoppingListChangeNameAction",
        "MyShoppingListChangeTextLineItemNameAction",
        "MyShoppingListChangeTextLineItemQuantityAction",
        "MyShoppingListChangeTextLineItemsOrderAction",
        "MyShoppingListRemoveLineItemAction",
        "MyShoppingListRemoveTextLineItemAction",
        "MyShoppingListSetCustomFieldAction",
        "MyShoppingListSetCustomTypeAction",
        "MyShoppingListSetDeleteDaysAfterLastModificationAction",
        "MyShoppingListSetDescriptionAction",
        "MyShoppingListSetLineItemCustomFieldAction",
        "MyShoppingListSetLineItemCustomTypeAction",
        "MyShoppingListSetTextLineItemCustomFieldAction",
        "MyShoppingListSetTextLineItemCustomTypeAction",
        "MyShoppingListSetTextLineItemDescriptionAction"
      ],
      "x-annotation-package": "Me",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#update-actions",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<MyShoppingListUpdateAction>"
    },
    "MyTransactionDraft": {
      "title": "MyTransactionDraft",
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "The time at which the transaction took place.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "type": {
          "description": "The type of this transaction.\nOnly the `Authorization` or `Charge`\nTransactionTypes are allowed here.",
          "$ref": "#/definitions/TransactionType",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amount": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "interactionId": {
          "description": "The identifier that is used by the interface that managed the transaction (usually the PSP).\nIf a matching interaction was logged in the interfaceInteractions array,\nthe corresponding interaction should be findable with this ID.\nThe `state` is set to the `Initial` TransactionState.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type",
        "amount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Me"
    },
    "NoMatchingProductDiscountFoundError": {
      "title": "NoMatchingProductDiscountFoundError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "NoMatchingProductDiscountFound"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "NotEnabledError": {
      "title": "NotEnabledError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "NotEnabled"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ObjectNotFoundError": {
      "title": "ObjectNotFoundError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ObjectNotFound"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "Order": {
      "title": "Order",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the order.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the order.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "completedAt": {
              "format": "date-time",
              "description": "This field will only be present if it was set for Order Import",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "orderNumber": {
              "description": "String that uniquely identifies an order.\nIt can be used to create more human-readable (in contrast to ID) identifier for the order.\nIt should be unique across a project.\nOnce it's set it cannot be changed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "customerId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "customerEmail": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "anonymousId": {
              "description": "Identifies carts and orders belonging to an anonymous session (the customer has not signed up/in yet).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "store": {
              "$ref": "#/definitions/StoreKeyReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "lineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "customLineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomLineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "totalPrice": {
              "$ref": "#/definitions/TypedMoney",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxedPrice": {
              "description": "The taxes are calculated based on the shipping address.",
              "$ref": "#/definitions/TaxedPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "billingAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxMode": {
              "$ref": "#/definitions/TaxMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxRoundingMode": {
              "description": "When calculating taxes for `taxedPrice`, the selected mode is used for rouding.",
              "$ref": "#/definitions/RoundingMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "customerGroup": {
              "description": "Set when the customer is set and the customer is a member of a customer group.\nUsed for product variant price selection.",
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "country": {
              "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nUsed for product variant price selection.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "orderState": {
              "description": "One of the four predefined OrderStates.",
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "description": "This reference can point to a state in a custom workflow.",
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "paymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingInfo": {
              "description": "Set if the ShippingMethod is set.",
              "$ref": "#/definitions/ShippingInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "syncInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SyncInfo"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "returnInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnInfo"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "discountCodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCodeInfo"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "lastMessageSequenceNumber": {
              "format": "int64",
              "description": "The sequence number of the last order message produced by changes to this order.\n`0` means, that no messages were created yet.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "cart": {
              "description": "Set when this order was created from a cart.\nThe cart will have the state `Ordered`.",
              "$ref": "#/definitions/CartReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "paymentInfo": {
              "$ref": "#/definitions/PaymentInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "inventoryMode": {
              "$ref": "#/definitions/InventoryMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "origin": {
              "$ref": "#/definitions/CartOrigin",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxCalculationMode": {
              "description": "When calculating taxes for `taxedPrice`, the selected mode is used for calculating the price with LineItemLevel (horizontally) or UnitPriceLevel (vertically) calculation mode.",
              "$ref": "#/definitions/TaxCalculationMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingRateInput": {
              "description": "The shippingRateInput is used as an input to select a ShippingRatePriceTier.",
              "$ref": "#/definitions/ShippingRateInput",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "itemShippingAddresses": {
              "description": "Contains addresses for orders with multiple shipping addresses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "refusedGifts": {
              "description": "Automatically filled when a line item with LineItemMode `GiftLineItem` is removed from this order.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "lineItems",
            "customLineItems",
            "totalPrice",
            "orderState",
            "syncInfo",
            "lastMessageSequenceNumber",
            "origin",
            "refusedGifts"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "StagedOrder"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order",
      "x-annotation-updateType": "OrderUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Order>"
    },
    "OrderAddDeliveryAction": {
      "title": "OrderAddDeliveryAction",
      "example": {
        "action": "addDelivery",
        "items": [
          {
            "id": "{{lineItemId}}",
            "quantity": 1
          }
        ],
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        },
        "parcels": [
          {
            "measurements": {
              "heightInMillimeter": 11,
              "widthInMillimeter": 11
            },
            "trackingData": {
              "trackingId": "{{trackingId}}",
              "carrier": "TNT",
              "provider": "providerName",
              "providerTransaction": "{{transactionId}}",
              "isReturn": false
            }
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "parcels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParcelDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-delivery"
    },
    "OrderAddItemShippingAddressAction": {
      "title": "OrderAddItemShippingAddressAction",
      "example": {
        "action": "addItemShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-itemshippingaddress"
    },
    "OrderAddParcelToDeliveryAction": {
      "title": "OrderAddParcelToDeliveryAction",
      "example": {
        "action": "addParcelToDelivery",
        "deliveryId": "{{deliveryId}}",
        "measurements": {
          "heightInMillimeter": 11,
          "widthInMillimeter": 11
        },
        "trackingData": {
          "trackingId": "{{trackingId}}",
          "carrier": "TNT",
          "provider": "providerName",
          "providerTransaction": "{{transactionId}}",
          "isReturn": false
        },
        "items": {
          "id": "{{lineItemId}}",
          "quantity": 2
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addParcelToDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "measurements": {
              "$ref": "#/definitions/ParcelMeasurements",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "trackingData": {
              "$ref": "#/definitions/TrackingData",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-parcel"
    },
    "OrderAddPaymentAction": {
      "title": "OrderAddPaymentAction",
      "example": {
        "action": "addPayment",
        "payment": {
          "typeId": "payment",
          "id": "{{payment-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addPayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-payment"
    },
    "OrderAddReturnInfoAction": {
      "title": "OrderAddReturnInfoAction",
      "example": {
        "action": "addReturnInfo",
        "items": [
          {
            "quantity": 1,
            "lineItemId": "{{lineItemId}}",
            "shipmentState": "Returned"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addReturnInfo"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnTrackingId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnItemDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "returnDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-returninfo"
    },
    "OrderBillingAddressSetMessage": {
      "title": "OrderBillingAddressSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderBillingAddressSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderbillingaddresssetmessage"
    },
    "OrderBillingAddressSetMessagePayload": {
      "title": "OrderBillingAddressSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderBillingAddressSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderbillingaddresssetmessage"
    },
    "OrderChangeOrderStateAction": {
      "title": "OrderChangeOrderStateAction",
      "example": {
        "action": "changeOrderState",
        "orderState": "Open"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeOrderState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "orderState": {
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "orderState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-orderstate"
    },
    "OrderChangePaymentStateAction": {
      "title": "OrderChangePaymentStateAction",
      "example": {
        "action": "changePaymentState",
        "paymentState": "Failed"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changePaymentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "paymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-paymentstate"
    },
    "OrderChangeShipmentStateAction": {
      "title": "OrderChangeShipmentStateAction",
      "example": {
        "action": "changeShipmentState",
        "shipmentState": "Ready"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeShipmentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-shipmentstate"
    },
    "OrderCreatedMessage": {
      "title": "OrderCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "order": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreatedmessage"
    },
    "OrderCreatedMessagePayload": {
      "title": "OrderCreatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "order": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreatedmessage"
    },
    "OrderCustomLineItemDiscountSetMessage": {
      "title": "OrderCustomLineItemDiscountSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderCustomLineItemDiscountSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "discountedPricePerQuantity": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "taxedPrice": {
              "$ref": "#/definitions/TaxedItemPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "customLineItemId",
            "discountedPricePerQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomlineitemdiscountsetmessage"
    },
    "OrderCustomLineItemDiscountSetMessagePayload": {
      "title": "OrderCustomLineItemDiscountSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderCustomLineItemDiscountSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "discountedPricePerQuantity": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "taxedPrice": {
              "$ref": "#/definitions/TaxedItemPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "customLineItemId",
            "discountedPricePerQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomlineitemdiscountsetmessage"
    },
    "OrderCustomerEmailSetMessage": {
      "title": "OrderCustomerEmailSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderCustomerEmailSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldEmail": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercustomeremailsetmessage"
    },
    "OrderCustomerEmailSetMessagePayload": {
      "title": "OrderCustomerEmailSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderCustomerEmailSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldEmail": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercustomeremailsetmessage"
    },
    "OrderCustomerGroupSetMessage": {
      "title": "OrderCustomerGroupSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderCustomerGroupSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldCustomerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomergroupsetmessage"
    },
    "OrderCustomerGroupSetMessagePayload": {
      "title": "OrderCustomerGroupSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderCustomerGroupSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldCustomerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomergroupsetmessage"
    },
    "OrderCustomerSetMessage": {
      "title": "OrderCustomerSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderCustomerSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "customer": {
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldCustomer": {
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldCustomerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomeremailsetmessage"
    },
    "OrderCustomerSetMessagePayload": {
      "title": "OrderCustomerSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderCustomerSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customer": {
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldCustomer": {
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldCustomerGroup": {
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomeremailsetmessage"
    },
    "OrderDeletedMessage": {
      "title": "OrderDeletedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "order": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderdeletedmessage"
    },
    "OrderDeletedMessagePayload": {
      "title": "OrderDeletedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "order": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderdeletedmessage"
    },
    "OrderDiscountCodeAddedMessage": {
      "title": "OrderDiscountCodeAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderDiscountCodeAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodeaddedmessage"
    },
    "OrderDiscountCodeAddedMessagePayload": {
      "title": "OrderDiscountCodeAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderDiscountCodeAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodeaddedmessage"
    },
    "OrderDiscountCodeRemovedMessage": {
      "title": "OrderDiscountCodeRemovedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderDiscountCodeRemoved"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcoderemovedmessage"
    },
    "OrderDiscountCodeRemovedMessagePayload": {
      "title": "OrderDiscountCodeRemovedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderDiscountCodeRemoved"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcoderemovedmessage"
    },
    "OrderDiscountCodeStateSetMessage": {
      "title": "OrderDiscountCodeStateSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderDiscountCodeStateSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/DiscountCodeState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldState": {
              "$ref": "#/definitions/DiscountCodeState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "discountCode",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodestatesetmessage"
    },
    "OrderDiscountCodeStateSetMessagePayload": {
      "title": "OrderDiscountCodeStateSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderDiscountCodeStateSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/DiscountCodeState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldState": {
              "$ref": "#/definitions/DiscountCodeState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "discountCode",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodestatesetmessage"
    },
    "OrderEdit": {
      "title": "OrderEdit",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the OrderEdit.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the OrderEdit.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "Unique identifier for this edit.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "resource": {
              "description": "The order to be updated with this edit.",
              "$ref": "#/definitions/OrderReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "stagedActions": {
              "description": "The actions to apply to the Order.\nCannot be updated after the edit has been applied.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StagedOrderUpdateAction"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "result": {
              "description": "Contains a preview of the changes in case of unapplied edit.\nFor applied edits, it contains the summary of the changes.",
              "$ref": "#/definitions/OrderEditResult",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "comment": {
              "description": "This field can be used to add textual information regarding the edit.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "resource",
            "stagedActions",
            "result"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#orderedit",
      "x-annotation-updateType": "OrderEditUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<OrderEdit>"
    },
    "OrderEditAddStagedActionAction": {
      "title": "OrderEditAddStagedActionAction",
      "example": {
        "action": "addStagedAction",
        "stagedAction": {
          "action": "setCountry",
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addStagedAction"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "stagedAction": {
              "$ref": "#/definitions/StagedOrderUpdateAction",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "stagedAction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#addstagedaction"
    },
    "OrderEditApplied": {
      "title": "OrderEditApplied",
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditResult"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "Applied"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "appliedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "excerptBeforeEdit": {
              "$ref": "#/definitions/OrderExcerpt",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "excerptAfterEdit": {
              "$ref": "#/definitions/OrderExcerpt",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "appliedAt",
            "excerptBeforeEdit",
            "excerptAfterEdit"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditapplied"
    },
    "OrderEditAppliedMessage": {
      "title": "OrderEditAppliedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderEditApplied"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "edit": {
              "$ref": "#/definitions/OrderEditReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "result": {
              "$ref": "#/definitions/OrderEditApplied",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "edit",
            "result"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreatedmessage"
    },
    "OrderEditAppliedMessagePayload": {
      "title": "OrderEditAppliedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderEditApplied"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "edit": {
              "$ref": "#/definitions/OrderEditReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "result": {
              "$ref": "#/definitions/OrderEditApplied",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "edit",
            "result"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreatedmessage"
    },
    "OrderEditApply": {
      "title": "OrderEditApply",
      "type": "object",
      "properties": {
        "editVersion": {
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "resourceVersion": {
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "editVersion",
        "resourceVersion"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit"
    },
    "OrderEditDraft": {
      "title": "OrderEditDraft",
      "type": "object",
      "properties": {
        "key": {
          "description": "Unique identifier for this edit.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "resource": {
          "description": "The order to be updated with this edit.",
          "$ref": "#/definitions/OrderReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "stagedActions": {
          "description": "The actions to apply to `resource`.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StagedOrderUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "comment": {
          "description": "This field can be used to add additional textual information regarding the edit.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "dryRun": {
          "description": "When set to `true` the edit is applied on the Order without persisting it.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "resource"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditdraft"
    },
    "OrderEditNotProcessed": {
      "title": "OrderEditNotProcessed",
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditResult"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "NotProcessed"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditnotprocessed"
    },
    "OrderEditPagedQueryResponse": {
      "title": "OrderEditPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEdit"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<OrderEdit>"
    },
    "OrderEditPreviewFailure": {
      "title": "OrderEditPreviewFailure",
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditResult"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PreviewFailure"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorObject"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "errors"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditpreviewfailure"
    },
    "OrderEditPreviewSuccess": {
      "title": "OrderEditPreviewSuccess",
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditResult"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PreviewSuccess"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "preview": {
              "$ref": "#/definitions/StagedOrder",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "messagePayloads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessagePayload"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "preview",
            "messagePayloads"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditpreviewsuccess"
    },
    "OrderEditReference": {
      "title": "OrderEditReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "order-edit"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit"
    },
    "OrderEditResourceIdentifier": {
      "title": "OrderEditResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "order-edit"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit"
    },
    "OrderEditResult": {
      "title": "OrderEditResult",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "OrderEditApplied",
        "OrderEditNotProcessed",
        "OrderEditPreviewFailure",
        "OrderEditPreviewSuccess"
      ],
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditresult"
    },
    "OrderEditSetCommentAction": {
      "title": "OrderEditSetCommentAction",
      "example": {
        "action": "setComment",
        "comment": "commentString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setComment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "comment": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-comment"
    },
    "OrderEditSetCustomFieldAction": {
      "title": "OrderEditSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setcustomfield"
    },
    "OrderEditSetCustomTypeAction": {
      "title": "OrderEditSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "If set, the custom fields are set to this new value.",
              "type": "object",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setcustomtype"
    },
    "OrderEditSetKeyAction": {
      "title": "OrderEditSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "keyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setkey"
    },
    "OrderEditSetStagedActionsAction": {
      "title": "OrderEditSetStagedActionsAction",
      "example": {
        "action": "setStagedActions",
        "stagedActions": [
          {
            "action": "setCountry",
            "country": "DE"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderEditUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setStagedActions"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "stagedActions": {
              "description": "The actions to edit the `resource`.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StagedOrderUpdateAction"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "stagedActions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setstagedactions"
    },
    "OrderEditUpdate": {
      "title": "OrderEditUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEditUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "dryRun": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<OrderEditUpdate, OrderEditUpdateAction>"
    },
    "OrderEditUpdateAction": {
      "title": "OrderEditUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "OrderEditAddStagedActionAction",
        "OrderEditSetCommentAction",
        "OrderEditSetCustomFieldAction",
        "OrderEditSetCustomTypeAction",
        "OrderEditSetKeyAction",
        "OrderEditSetStagedActionsAction"
      ],
      "x-annotation-package": "OrderEdit",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<OrderEditUpdateAction>"
    },
    "OrderExcerpt": {
      "title": "OrderExcerpt",
      "type": "object",
      "properties": {
        "totalPrice": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxedPrice": {
          "$ref": "#/definitions/TaxedPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "totalPrice",
        "version"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#orderexcerpt"
    },
    "OrderFromCartDraft": {
      "title": "OrderFromCartDraft",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique id of the cart from which an order is created.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-markDeprecated": true,
          "x-annotation-inherited": false
        },
        "cart": {
          "description": "ResourceIdentifier to the Cart from which this order is created.",
          "$ref": "#/definitions/CartResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "orderNumber": {
          "description": "String that uniquely identifies an order.\nIt can be used to create more human-readable (in contrast to ID) identifier for the order.\nIt should be unique across a project.\nOnce it's set it cannot be changed.\nFor easier use on Get, Update and Delete actions we suggest assigning order numbers that match the regular expression `[a-z0-9_-]{2,36}`.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "paymentState": {
          "$ref": "#/definitions/PaymentState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "shipmentState": {
          "$ref": "#/definitions/ShipmentState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "orderState": {
          "description": "Order will be created with `Open` status by default.",
          "$ref": "#/definitions/OrderState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "$ref": "#/definitions/StateResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order"
    },
    "OrderImportCustomLineItemStateAction": {
      "title": "OrderImportCustomLineItemStateAction",
      "example": {
        "action": "importCustomLineItemState",
        "customLineItemId": "{{customLineItemId}}",
        "state": [
          {
            "quantity": 6,
            "state": {
              "typeId": "state",
              "id": "{{state-id}}"
            }
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "importCustomLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemState"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-customlineitems"
    },
    "OrderImportDraft": {
      "title": "OrderImportDraft",
      "type": "object",
      "properties": {
        "orderNumber": {
          "description": "String that unique identifies an order.\nIt can be used to create more human-readable (in contrast to ID) identifier for the order.\nIt should be unique within a project.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerId": {
          "description": "If given the customer with that ID must exist in the project.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerEmail": {
          "description": "The customer email can be used when no check against existing Customers is desired during order import.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lineItems": {
          "description": "If not given `customLineItems` must not be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemImportDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "customLineItems": {
          "description": "If not given `lineItems` must not be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomLineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "totalPrice": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxedPrice": {
          "description": "Order Import does not support calculation of taxes.\nWhen setting the draft the taxedPrice is to be provided.",
          "$ref": "#/definitions/TaxedPriceDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingAddress": {
          "$ref": "#/definitions/BaseAddress",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "billingAddress": {
          "$ref": "#/definitions/BaseAddress",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "customerGroup": {
          "description": "Set when the customer is set and the customer is a member of a customer group.\nUsed for product variant price selection.",
          "$ref": "#/definitions/CustomerGroupResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nUsed for product variant price selection.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "orderState": {
          "description": "If not given the `Open` state will be assigned by default.",
          "$ref": "#/definitions/OrderState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "shipmentState": {
          "$ref": "#/definitions/ShipmentState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "paymentState": {
          "$ref": "#/definitions/PaymentState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "shippingInfo": {
          "description": "Set if the ShippingMethod is set.",
          "$ref": "#/definitions/ShippingInfoImportDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "completedAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "inventoryMode": {
          "description": "If not given the mode `None` will be assigned by default.",
          "$ref": "#/definitions/InventoryMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "taxRoundingMode": {
          "description": "If not given the tax rounding mode `HalfEven` will be assigned by default.",
          "$ref": "#/definitions/RoundingMode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "itemShippingAddresses": {
          "description": "Contains addresses for orders with multiple shipping addresses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseAddress"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "store": {
          "$ref": "#/definitions/StoreResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "origin": {
          "description": "The default origin is `Customer`.",
          "$ref": "#/definitions/CartOrigin",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "totalPrice"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#orderimportdraft"
    },
    "OrderImportLineItemStateAction": {
      "title": "OrderImportLineItemStateAction",
      "example": {
        "action": "importLineItemState",
        "lineItemId": "{{lineItemId}}",
        "state": [
          {
            "quantity": 5,
            "state": {
              "typeId": "state",
              "id": "{{state-id}}"
            }
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "importLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemState"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-lineitems"
    },
    "OrderImportedMessage": {
      "title": "OrderImportedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderImported"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "order": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderimportedmessage"
    },
    "OrderImportedMessagePayload": {
      "title": "OrderImportedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderImported"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "order": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "order"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderimportedmessage"
    },
    "OrderLineItemAddedMessage": {
      "title": "OrderLineItemAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderLineItemAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "lineItem": {
              "$ref": "#/definitions/LineItem",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "addedQuantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "lineItem",
            "addedQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderlineitemaddedmessage"
    },
    "OrderLineItemAddedMessagePayload": {
      "title": "OrderLineItemAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderLineItemAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItem": {
              "$ref": "#/definitions/LineItem",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "addedQuantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "lineItem",
            "addedQuantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderlineitemaddedmessage"
    },
    "OrderLineItemDiscountSetMessage": {
      "title": "OrderLineItemDiscountSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderLineItemDiscountSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "discountedPricePerQuantity": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "totalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxedPrice": {
              "$ref": "#/definitions/TaxedItemPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "lineItemId",
            "discountedPricePerQuantity",
            "totalPrice"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderlineitemdiscountsetmessage"
    },
    "OrderLineItemDiscountSetMessagePayload": {
      "title": "OrderLineItemDiscountSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderLineItemDiscountSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "discountedPricePerQuantity": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountedLineItemPriceForQuantity"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "totalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxedPrice": {
              "$ref": "#/definitions/TaxedItemPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "lineItemId",
            "discountedPricePerQuantity",
            "totalPrice"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderlineitemdiscountsetmessage"
    },
    "OrderPagedQueryResponse": {
      "title": "OrderPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Order>"
    },
    "OrderPaymentStateChangedMessage": {
      "title": "OrderPaymentStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderPaymentStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "paymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldPaymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "paymentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderpaymentstatechangedmessage"
    },
    "OrderPaymentStateChangedMessagePayload": {
      "title": "OrderPaymentStateChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderPaymentStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "paymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldPaymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "paymentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderpaymentstatechangedmessage"
    },
    "OrderReference": {
      "title": "OrderReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "order"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order"
    },
    "OrderRemoveDeliveryAction": {
      "title": "OrderRemoveDeliveryAction",
      "example": {
        "action": "removeDelivery",
        "deliveryId": "{{deliveryId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-delivery"
    },
    "OrderRemoveItemShippingAddressAction": {
      "title": "OrderRemoveItemShippingAddressAction",
      "example": {
        "action": "removeItemShippingAddress",
        "addressKey": "addressKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-itemshippingaddress"
    },
    "OrderRemoveParcelFromDeliveryAction": {
      "title": "OrderRemoveParcelFromDeliveryAction",
      "example": {
        "action": "removeParcelFromDelivery",
        "parcelId": "{{parcelId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeParcelFromDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-parcel-from-delivery"
    },
    "OrderRemovePaymentAction": {
      "title": "OrderRemovePaymentAction",
      "example": {
        "action": "removePayment",
        "payment": {
          "typeId": "payment",
          "id": "{{payment-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removePayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-payment"
    },
    "OrderResourceIdentifier": {
      "title": "OrderResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "order"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order"
    },
    "OrderReturnInfoAddedMessage": {
      "title": "OrderReturnInfoAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ReturnInfoAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "returnInfo": {
              "$ref": "#/definitions/ReturnInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "returnInfo"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "OrderReturnInfoAddedMessagePayload": {
      "title": "OrderReturnInfoAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ReturnInfoAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnInfo": {
              "$ref": "#/definitions/ReturnInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "returnInfo"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "OrderReturnShipmentStateChangedMessage": {
      "title": "OrderReturnShipmentStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderReturnShipmentStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "returnItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "returnShipmentState": {
              "$ref": "#/definitions/ReturnShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "returnItemId",
            "returnShipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "OrderReturnShipmentStateChangedMessagePayload": {
      "title": "OrderReturnShipmentStateChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderReturnShipmentStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "returnShipmentState": {
              "$ref": "#/definitions/ReturnShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "returnItemId",
            "returnShipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "OrderSetBillingAddressAction": {
      "title": "OrderSetBillingAddressAction",
      "example": {
        "action": "setBillingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-billing-address"
    },
    "OrderSetBillingAddressCustomFieldAction": {
      "title": "OrderSetBillingAddressCustomFieldAction",
      "example": {
        "action": "setBillingAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-billing-address-customfield"
    },
    "OrderSetBillingAddressCustomTypeAction": {
      "title": "OrderSetBillingAddressCustomTypeAction",
      "example": {
        "action": "setShippingAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-billing-address-custom-type"
    },
    "OrderSetCustomFieldAction": {
      "title": "OrderSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customfield"
    },
    "OrderSetCustomLineItemCustomFieldAction": {
      "title": "OrderSetCustomLineItemCustomFieldAction",
      "example": {
        "action": "setCustomLineItemCustomField",
        "customLineItemId": "{{customLineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitem-customfield"
    },
    "OrderSetCustomLineItemCustomTypeAction": {
      "title": "OrderSetCustomLineItemCustomTypeAction",
      "example": {
        "action": "setCustomLineItemCustomType",
        "customLineItemId": "{{customLineItemId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitem-custom-type"
    },
    "OrderSetCustomLineItemShippingDetailsAction": {
      "title": "OrderSetCustomLineItemShippingDetailsAction",
      "example": {
        "action": "setCustomLineItemShippingDetails",
        "customLineItemId": "{{customLineItemId}}",
        "shippingDetails": {
          "targets": [
            {
              "addressKey": "{{addressKey}}",
              "quantity": 2
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitemshippingdetails"
    },
    "OrderSetCustomTypeAction": {
      "title": "OrderSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-custom-type"
    },
    "OrderSetCustomerEmailAction": {
      "title": "OrderSetCustomerEmailAction",
      "example": {
        "action": "setCustomerEmail",
        "email": "mail@mail.com"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerEmail"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customer-email"
    },
    "OrderSetCustomerIdAction": {
      "title": "OrderSetCustomerIdAction",
      "example": {
        "action": "setCustomerId",
        "customerId": "{{customer-id}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customer-id"
    },
    "OrderSetDeliveryAddressAction": {
      "title": "OrderSetDeliveryAddressAction",
      "example": {
        "action": "setDeliveryAddress",
        "deliveryId": "{{deliveryId}}",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-delivery-address"
    },
    "OrderSetDeliveryAddressCustomFieldAction": {
      "title": "OrderSetDeliveryAddressCustomFieldAction",
      "example": {
        "action": "setDeliveryAddressCustomField",
        "deliveryId": "{{delivery-id}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-delivery-address-customfield"
    },
    "OrderSetDeliveryAddressCustomTypeAction": {
      "title": "OrderSetDeliveryAddressCustomTypeAction",
      "example": {
        "action": "setDeliveryAddressCustomType",
        "deliveryId": "{{delivery-id}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-delivery-address-custom-type"
    },
    "OrderSetDeliveryItemsAction": {
      "title": "OrderSetDeliveryItemsAction",
      "example": {
        "action": "setDeliveryItems",
        "deliveryId": "{{deliveryId}}",
        "items": [
          {
            "id": "{{lineItemId}}",
            "quantity": 2
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-delivery-items"
    },
    "OrderSetItemShippingAddressCustomFieldAction": {
      "title": "OrderSetItemShippingAddressCustomFieldAction",
      "example": {
        "action": "setItemShippingAddressCustomField",
        "addressKey": "{{address-key}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setItemShippingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-itemshipping-address-customfield"
    },
    "OrderSetItemShippingAddressCustomTypeAction": {
      "title": "OrderSetItemShippingAddressCustomTypeAction",
      "example": {
        "action": "setItemShippingAddressCustomType",
        "addressKey": "{{address-key}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setItemShippingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-itemshipping-address-custom-type"
    },
    "OrderSetLineItemCustomFieldAction": {
      "title": "OrderSetLineItemCustomFieldAction",
      "example": {
        "action": "setLineItemCustomField",
        "lineItemId": "{{lineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitem-customfield"
    },
    "OrderSetLineItemCustomTypeAction": {
      "title": "OrderSetLineItemCustomTypeAction",
      "example": {
        "action": "setLineItemCustomType",
        "lineItemId": "{{lineItemId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitem-custom-type"
    },
    "OrderSetLineItemShippingDetailsAction": {
      "title": "OrderSetLineItemShippingDetailsAction",
      "example": {
        "action": "setLineItemShippingDetails",
        "lineItemId": "{{lineItemId}}",
        "shippingDetails": {
          "targets": [
            {
              "addressKey": "AddressKeyStringFromAddress",
              "quantity": 2
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitemshippingdetails"
    },
    "OrderSetLocaleAction": {
      "title": "OrderSetLocaleAction",
      "example": {
        "action": "setLocale",
        "locale": "de-DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocale"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-locale"
    },
    "OrderSetOrderNumberAction": {
      "title": "OrderSetOrderNumberAction",
      "example": {
        "action": "setOrderNumber",
        "orderNumber": "myOrderNumber"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setOrderNumber"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "orderNumber": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-order-number"
    },
    "OrderSetParcelItemsAction": {
      "title": "OrderSetParcelItemsAction",
      "example": {
        "action": "setParcelItems",
        "parcelId": "{{parcelId}}",
        "items": [
          {
            "id": "{{lineItemId}}",
            "quantity": 2
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setParcelItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-items"
    },
    "OrderSetParcelMeasurementsAction": {
      "title": "OrderSetParcelMeasurementsAction",
      "example": {
        "action": "setParcelMeasurements",
        "parcelId": "{{parcelId}}",
        "measurements": {
          "heightInMillimeter": 11,
          "lengthInMillimeter": 11
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setParcelMeasurements"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "measurements": {
              "$ref": "#/definitions/ParcelMeasurements",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-measurements"
    },
    "OrderSetParcelTrackingDataAction": {
      "title": "OrderSetParcelTrackingDataAction",
      "example": {
        "action": "setParcelTrackingData",
        "parcelId": "{{parcelId}}",
        "trackingData": {
          "trackingId": "{{trackingId}}",
          "carrier": "TNT",
          "provider": "providerName",
          "providerTransaction": "{{transactionId}}",
          "isReturn": false
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setParcelTrackingData"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "trackingData": {
              "$ref": "#/definitions/TrackingData",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-tracking-data"
    },
    "OrderSetReturnPaymentStateAction": {
      "title": "OrderSetReturnPaymentStateAction",
      "example": {
        "action": "setReturnPaymentState",
        "returnItemId": "{{returnItemId}}",
        "paymentState": "NotRefunded"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setReturnPaymentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "paymentState": {
              "$ref": "#/definitions/ReturnPaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "returnItemId",
            "paymentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnpaymentstate"
    },
    "OrderSetReturnShipmentStateAction": {
      "title": "OrderSetReturnShipmentStateAction",
      "example": {
        "action": "setReturnShipmentState",
        "returnItemId": "{{returnItemId}}",
        "shipmentState": "BackInStock"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setReturnShipmentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shipmentState": {
              "$ref": "#/definitions/ReturnShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "returnItemId",
            "shipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnshipmentstate"
    },
    "OrderSetShippingAddressAction": {
      "title": "OrderSetShippingAddressAction",
      "example": {
        "action": "setShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-shipping-address"
    },
    "OrderSetShippingAddressCustomFieldAction": {
      "title": "OrderSetShippingAddressCustomFieldAction",
      "example": {
        "action": "setShippingAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-shipping-address-customfield"
    },
    "OrderSetShippingAddressCustomTypeAction": {
      "title": "OrderSetShippingAddressCustomTypeAction",
      "example": {
        "action": "setShippingAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/orders#set-shipping-address-custom-type"
    },
    "OrderSetStoreAction": {
      "title": "OrderSetStoreAction",
      "example": {
        "action": "setStore",
        "store": {
          "key": "{{store-key}}",
          "typeId": "store"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setStore"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-store-beta"
    },
    "OrderShipmentStateChangedMessage": {
      "title": "OrderShipmentStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderShipmentStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "shipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldShipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "shipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "OrderShipmentStateChangedMessagePayload": {
      "title": "OrderShipmentStateChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderShipmentStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldShipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "shipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "OrderShippingAddressSetMessage": {
      "title": "OrderShippingAddressSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderShippingAddressSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordershippingaddresssetmessage"
    },
    "OrderShippingAddressSetMessagePayload": {
      "title": "OrderShippingAddressSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderShippingAddressSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordershippingaddresssetmessage"
    },
    "OrderShippingInfoSetMessage": {
      "title": "OrderShippingInfoSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderShippingInfoSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "shippingInfo": {
              "$ref": "#/definitions/ShippingInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldShippingInfo": {
              "$ref": "#/definitions/ShippingInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippinginfosetmessage"
    },
    "OrderShippingInfoSetMessagePayload": {
      "title": "OrderShippingInfoSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderShippingInfoSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingInfo": {
              "$ref": "#/definitions/ShippingInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldShippingInfo": {
              "$ref": "#/definitions/ShippingInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippinginfosetmessage"
    },
    "OrderShippingRateInputSetMessage": {
      "title": "OrderShippingRateInputSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderShippingRateInputSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "shippingRateInput": {
              "$ref": "#/definitions/ShippingRateInput",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldShippingRateInput": {
              "$ref": "#/definitions/ShippingRateInput",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippingrateinputsetmessage"
    },
    "OrderShippingRateInputSetMessagePayload": {
      "title": "OrderShippingRateInputSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderShippingRateInputSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingRateInput": {
              "$ref": "#/definitions/ShippingRateInput",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldShippingRateInput": {
              "$ref": "#/definitions/ShippingRateInput",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippingrateinputsetmessage"
    },
    "OrderState": {
      "title": "OrderState",
      "enum": [
        "Open",
        "Confirmed",
        "Complete",
        "Cancelled"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#orderstate"
    },
    "OrderStateChangedMessage": {
      "title": "OrderStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "orderState": {
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldOrderState": {
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "orderState",
            "oldOrderState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatechangedmessage"
    },
    "OrderStateChangedMessagePayload": {
      "title": "OrderStateChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "orderState": {
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "oldOrderState": {
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "orderState",
            "oldOrderState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatechangedmessage"
    },
    "OrderStateTransitionMessage": {
      "title": "OrderStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatetransitionmessage"
    },
    "OrderStateTransitionMessagePayload": {
      "title": "OrderStateTransitionMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatetransitionmessage"
    },
    "OrderStoreSetMessage": {
      "title": "OrderStoreSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "OrderStoreSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreKeyReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "store"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderstoresetmessage"
    },
    "OrderStoreSetMessagePayload": {
      "title": "OrderStoreSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "OrderStoreSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreKeyReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "store"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderstoresetmessage"
    },
    "OrderTransitionCustomLineItemStateAction": {
      "title": "OrderTransitionCustomLineItemStateAction",
      "example": {
        "action": "transitionCustomLineItemState",
        "customLineItemId": "{{customLineItemId}}",
        "quantity": 6,
        "fromState": {
          "typeId": "state",
          "id": "{{state-id}}"
        },
        "toState": {
          "typeId": "state",
          "id": "{{state-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionCustomLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "actualTransitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-customlineitem-according-to-allowed-transitions"
    },
    "OrderTransitionLineItemStateAction": {
      "title": "OrderTransitionLineItemStateAction",
      "example": {
        "action": "transitionLineItemState",
        "lineItemId": "{{lineItemId}}",
        "quantity": 3,
        "fromState": {
          "typeId": "state",
          "id": "{{state-id}}"
        },
        "toState": {
          "typeId": "state",
          "id": "{{state-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "actualTransitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-lineitem-according-to-allowed-transitions"
    },
    "OrderTransitionStateAction": {
      "title": "OrderTransitionStateAction",
      "example": {
        "action": "transitionState",
        "state": {
          "typeId": "state",
          "id": "{{state-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#transition-state"
    },
    "OrderUpdate": {
      "title": "OrderUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<OrderUpdate, OrderUpdateAction>"
    },
    "OrderUpdateAction": {
      "title": "OrderUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "OrderAddDeliveryAction",
        "OrderAddItemShippingAddressAction",
        "OrderAddParcelToDeliveryAction",
        "OrderAddPaymentAction",
        "OrderAddReturnInfoAction",
        "OrderChangeOrderStateAction",
        "OrderChangePaymentStateAction",
        "OrderChangeShipmentStateAction",
        "OrderImportCustomLineItemStateAction",
        "OrderImportLineItemStateAction",
        "OrderRemoveDeliveryAction",
        "OrderRemoveItemShippingAddressAction",
        "OrderRemoveParcelFromDeliveryAction",
        "OrderRemovePaymentAction",
        "OrderSetBillingAddressAction",
        "OrderSetBillingAddressCustomFieldAction",
        "OrderSetBillingAddressCustomTypeAction",
        "OrderSetCustomFieldAction",
        "OrderSetCustomLineItemCustomFieldAction",
        "OrderSetCustomLineItemCustomTypeAction",
        "OrderSetCustomLineItemShippingDetailsAction",
        "OrderSetCustomTypeAction",
        "OrderSetCustomerEmailAction",
        "OrderSetCustomerIdAction",
        "OrderSetDeliveryAddressAction",
        "OrderSetDeliveryAddressCustomFieldAction",
        "OrderSetDeliveryAddressCustomTypeAction",
        "OrderSetDeliveryItemsAction",
        "OrderSetItemShippingAddressCustomFieldAction",
        "OrderSetItemShippingAddressCustomTypeAction",
        "OrderSetLineItemCustomFieldAction",
        "OrderSetLineItemCustomTypeAction",
        "OrderSetLineItemShippingDetailsAction",
        "OrderSetLocaleAction",
        "OrderSetOrderNumberAction",
        "OrderSetParcelItemsAction",
        "OrderSetParcelMeasurementsAction",
        "OrderSetParcelTrackingDataAction",
        "OrderSetReturnPaymentStateAction",
        "OrderSetReturnShipmentStateAction",
        "OrderSetShippingAddressAction",
        "OrderSetShippingAddressCustomFieldAction",
        "OrderSetShippingAddressCustomTypeAction",
        "OrderSetStoreAction",
        "OrderTransitionCustomLineItemStateAction",
        "OrderTransitionLineItemStateAction",
        "OrderTransitionStateAction",
        "OrderUpdateItemShippingAddressAction",
        "OrderUpdateSyncInfoAction"
      ],
      "x-annotation-package": "Order",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<OrderUpdateAction>"
    },
    "OrderUpdateItemShippingAddressAction": {
      "title": "OrderUpdateItemShippingAddressAction",
      "example": {
        "action": "updateItemShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "updateItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#update-itemshippingaddress"
    },
    "OrderUpdateSyncInfoAction": {
      "title": "OrderUpdateSyncInfoAction",
      "example": {
        "action": "updateSyncInfo",
        "channel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "updateSyncInfo"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "channel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "syncedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "channel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#update-syncinfo"
    },
    "OutOfStockError": {
      "title": "OutOfStockError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "OutOfStock"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItems": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "skus": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "lineItems",
            "skus"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "OverCapacityError": {
      "title": "OverCapacityError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "OverCapacity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "PagedQueryResponse": {
      "title": "PagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseResource"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "meta": {
          "type": "object",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<BaseResource>"
    },
    "Parcel": {
      "title": "Parcel",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "measurements": {
          "$ref": "#/definitions/ParcelMeasurements",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "trackingData": {
          "$ref": "#/definitions/TrackingData",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "items": {
          "description": "The delivery items contained in this parcel.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryItem"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "createdAt"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcel"
    },
    "ParcelAddedToDeliveryMessage": {
      "title": "ParcelAddedToDeliveryMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ParcelAddedToDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "delivery": {
              "$ref": "#/definitions/Delivery",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "parcel": {
              "$ref": "#/definitions/Parcel",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "delivery",
            "parcel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#parceladdedtodeliverymessage"
    },
    "ParcelAddedToDeliveryMessagePayload": {
      "title": "ParcelAddedToDeliveryMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ParcelAddedToDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "delivery": {
              "$ref": "#/definitions/Delivery",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "parcel": {
              "$ref": "#/definitions/Parcel",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "delivery",
            "parcel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#parceladdedtodeliverymessage"
    },
    "ParcelDraft": {
      "title": "ParcelDraft",
      "type": "object",
      "properties": {
        "measurements": {
          "$ref": "#/definitions/ParcelMeasurements",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "trackingData": {
          "$ref": "#/definitions/TrackingData",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "items": {
          "description": "The delivery items contained in this parcel.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryItem"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parceldraft"
    },
    "ParcelItemsUpdatedMessage": {
      "title": "ParcelItemsUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ParcelItemsUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "oldItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "parcelId",
            "items",
            "oldItems"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "ParcelItemsUpdatedMessagePayload": {
      "title": "ParcelItemsUpdatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ParcelItemsUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "oldItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "parcelId",
            "items",
            "oldItems"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "ParcelMeasurements": {
      "title": "ParcelMeasurements",
      "type": "object",
      "properties": {
        "heightInMillimeter": {
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "lengthInMillimeter": {
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "widthInMillimeter": {
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "weightInGram": {
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcelmeasurements"
    },
    "ParcelMeasurementsUpdatedMessage": {
      "title": "ParcelMeasurementsUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ParcelMeasurementsUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "measurements": {
              "$ref": "#/definitions/ParcelMeasurements",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "deliveryId",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "ParcelMeasurementsUpdatedMessagePayload": {
      "title": "ParcelMeasurementsUpdatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ParcelMeasurementsUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "measurements": {
              "$ref": "#/definitions/ParcelMeasurements",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "deliveryId",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "ParcelRemovedFromDeliveryMessage": {
      "title": "ParcelRemovedFromDeliveryMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ParcelRemovedFromDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "parcel": {
              "$ref": "#/definitions/Parcel",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "deliveryId",
            "parcel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "ParcelRemovedFromDeliveryMessagePayload": {
      "title": "ParcelRemovedFromDeliveryMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ParcelRemovedFromDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "parcel": {
              "$ref": "#/definitions/Parcel",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "deliveryId",
            "parcel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "ParcelTrackingDataUpdatedMessage": {
      "title": "ParcelTrackingDataUpdatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ParcelTrackingDataUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "trackingData": {
              "$ref": "#/definitions/TrackingData",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "deliveryId",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "ParcelTrackingDataUpdatedMessagePayload": {
      "title": "ParcelTrackingDataUpdatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ParcelTrackingDataUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "trackingData": {
              "$ref": "#/definitions/TrackingData",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "deliveryId",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message"
    },
    "PayloadNotIncluded": {
      "title": "PayloadNotIncluded",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "payloadType": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "reason",
        "payloadType"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#payloadnotincluded"
    },
    "Payment": {
      "title": "Payment",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "customer": {
              "description": "A reference to the customer this payment belongs to.",
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "anonymousId": {
              "description": "Identifies payments belonging to an anonymous session (the customer has not signed up/in yet).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "interfaceId": {
              "description": "The identifier that is used by the interface that manages the payment (usually the PSP).\nCannot be changed once it has been set.\nThe combination of this ID and the PaymentMethodInfo `paymentInterface` must be unique.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "amountPlanned": {
              "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
              "$ref": "#/definitions/TypedMoney",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "amountAuthorized": {
              "$ref": "#/definitions/TypedMoney",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "authorizedUntil": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "amountPaid": {
              "$ref": "#/definitions/TypedMoney",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "amountRefunded": {
              "$ref": "#/definitions/TypedMoney",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "paymentMethodInfo": {
              "$ref": "#/definitions/PaymentMethodInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "paymentStatus": {
              "$ref": "#/definitions/PaymentStatus",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "transactions": {
              "description": "A list of financial transactions of different TransactionTypes with different TransactionStates.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "interfaceInteractions": {
              "description": "Interface interactions can be requests sent to the PSP, responses received from the PSP or notifications received from the PSP.\nSome interactions may result in a transaction.\nIf so, the `interactionId` in the Transaction should be set to match the ID of the PSP for the interaction.\nInteractions are managed by the PSP integration and are usually neither written nor read by the user facing frontends or other services.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFields"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the payment (max.\n256 characters).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "amountPlanned",
            "paymentMethodInfo",
            "paymentStatus",
            "transactions",
            "interfaceInteractions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment",
      "x-annotation-updateType": "PaymentUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Payment>"
    },
    "PaymentAddInterfaceInteractionAction": {
      "title": "PaymentAddInterfaceInteractionAction",
      "example": {
        "action": "addInterfaceInteraction",
        "type": {
          "typeId": "type",
          "id": "{{type-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addInterfaceInteraction"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-interfaceinteraction"
    },
    "PaymentAddTransactionAction": {
      "title": "PaymentAddTransactionAction",
      "example": {
        "action": "addTransaction",
        "transaction": {
          "type": "Authorization",
          "amount": {
            "centAmount": 4000,
            "currencyCode": "EUR"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addTransaction"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transaction": {
              "$ref": "#/definitions/TransactionDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "transaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-transaction"
    },
    "PaymentChangeAmountPlannedAction": {
      "title": "PaymentChangeAmountPlannedAction",
      "example": {
        "action": "changeAmountPlanned",
        "amount": {
          "currencyCode": "EUR",
          "centAmount": 4000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAmountPlanned"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "amount": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "amount"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-amountplanned"
    },
    "PaymentChangeTransactionInteractionIdAction": {
      "title": "PaymentChangeTransactionInteractionIdAction",
      "example": {
        "action": "changeTransactionInteractionId",
        "transactionId": "{{transactionId}}",
        "interactionId": "{{newInteractionId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTransactionInteractionId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transactionId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "interactionId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "transactionId",
            "interactionId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactioninteractionid"
    },
    "PaymentChangeTransactionStateAction": {
      "title": "PaymentChangeTransactionStateAction",
      "example": {
        "action": "changeTransactionState",
        "transactionId": "{{transactionId}}",
        "state": "Failure"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTransactionState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transactionId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/TransactionState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "transactionId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactionstate"
    },
    "PaymentChangeTransactionTimestampAction": {
      "title": "PaymentChangeTransactionTimestampAction",
      "example": {
        "action": "changeTransactionTimestamp",
        "transactionId": "{{transactionId}}",
        "timestamp": "2018-09-11T14:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTransactionTimestamp"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transactionId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "timestamp": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "transactionId",
            "timestamp"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactiontimestamp"
    },
    "PaymentCreatedMessage": {
      "title": "PaymentCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "PaymentCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentcreatedmessage"
    },
    "PaymentCreatedMessagePayload": {
      "title": "PaymentCreatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PaymentCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentcreatedmessage"
    },
    "PaymentDraft": {
      "title": "PaymentDraft",
      "type": "object",
      "properties": {
        "customer": {
          "description": "A reference to the customer this payment belongs to.",
          "$ref": "#/definitions/CustomerResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "anonymousId": {
          "description": "Identifies payments belonging to an anonymous session (the customer has not signed up/in yet).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "externalId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "interfaceId": {
          "description": "The identifier that is used by the interface that manages the payment (usually the PSP).\nCannot be changed once it has been set.\nThe combination of this ID and the PaymentMethodInfo `paymentInterface` must be unique.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amountPlanned": {
          "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "amountAuthorized": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "authorizedUntil": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amountPaid": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "amountRefunded": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "paymentMethodInfo": {
          "$ref": "#/definitions/PaymentMethodInfo",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "paymentStatus": {
          "$ref": "#/definitions/PaymentStatusDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "transactions": {
          "description": "A list of financial transactions of different TransactionTypes with different TransactionStates.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "interfaceInteractions": {
          "description": "Interface interactions can be requests send to the PSP, responses received from the PSP or notifications received from the PSP.\nSome interactions may result in a transaction.\nIf so, the `interactionId` in the Transaction should be set to match the ID of the PSP for the interaction.\nInteractions are managed by the PSP integration and are usually neither written nor read by the user facing frontends or other services.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldsDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier for the payment (max.\n256 characters).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "amountPlanned"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentdraft"
    },
    "PaymentInfo": {
      "title": "PaymentInfo",
      "type": "object",
      "properties": {
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentReference"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "payments"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentinfo"
    },
    "PaymentInteractionAddedMessage": {
      "title": "PaymentInteractionAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "PaymentInteractionAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "interaction": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "interaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentinteractionaddedmessage"
    },
    "PaymentInteractionAddedMessagePayload": {
      "title": "PaymentInteractionAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PaymentInteractionAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "interaction": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "interaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentinteractionaddedmessage"
    },
    "PaymentMethodInfo": {
      "title": "PaymentMethodInfo",
      "type": "object",
      "properties": {
        "paymentInterface": {
          "description": "The interface that handles the payment (usually a PSP).\nCannot be changed once it has been set.\nThe combination of Payment`interfaceId` and this field must be unique.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "method": {
          "description": "The payment method that is used, e.g.\ne.g.\na conventional string representing Credit Card, Cash Advance etc.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "A human-readable, localized name for the payment method, e.g.\n'Credit Card'.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentmethodinfo"
    },
    "PaymentPagedQueryResponse": {
      "title": "PaymentPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Payment>"
    },
    "PaymentReference": {
      "title": "PaymentReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "payment"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment"
    },
    "PaymentResourceIdentifier": {
      "title": "PaymentResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "payment"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment"
    },
    "PaymentSetAmountPaidAction": {
      "title": "PaymentSetAmountPaidAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAmountPaid"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "amount": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountpaid",
      "x-annotation-deprecated": true
    },
    "PaymentSetAmountRefundedAction": {
      "title": "PaymentSetAmountRefundedAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAmountRefunded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "amount": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountrefunded",
      "x-annotation-deprecated": true
    },
    "PaymentSetAnonymousIdAction": {
      "title": "PaymentSetAnonymousIdAction",
      "example": {
        "action": "setAnonymousId",
        "anonymousId": "anonymousId"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAnonymousId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "anonymousId": {
              "description": "Anonymous ID of the anonymous customer that this payment belongs to.\nIf this field is not set any existing `anonymousId` is removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-anonymousid"
    },
    "PaymentSetAuthorizationAction": {
      "title": "PaymentSetAuthorizationAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAuthorization"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "amount": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "until": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-authorization",
      "x-annotation-deprecated": true
    },
    "PaymentSetCustomFieldAction": {
      "title": "PaymentSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customfield"
    },
    "PaymentSetCustomTypeAction": {
      "title": "PaymentSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "Sets the custom fields to this value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-custom-type"
    },
    "PaymentSetCustomerAction": {
      "title": "PaymentSetCustomerAction",
      "example": {
        "action": "setCustomer",
        "customer": {
          "typeId": "customer",
          "id": "{{customer-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomer"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customer": {
              "description": "A reference to the customer this payment belongs to.",
              "$ref": "#/definitions/CustomerResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customer"
    },
    "PaymentSetExternalIdAction": {
      "title": "PaymentSetExternalIdAction",
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setExternalId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-externalid",
      "x-annotation-deprecated": true
    },
    "PaymentSetInterfaceIdAction": {
      "title": "PaymentSetInterfaceIdAction",
      "example": {
        "action": "setInterfaceId",
        "interfaceId": "InterfaceID"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setInterfaceId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "interfaceId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "interfaceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-interfaceid"
    },
    "PaymentSetKeyAction": {
      "title": "PaymentSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "String"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "User-specific unique identifier for the payment (max.\n256 characters).\nIf not provided an existing key will be removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-key"
    },
    "PaymentSetMethodInfoInterfaceAction": {
      "title": "PaymentSetMethodInfoInterfaceAction",
      "example": {
        "action": "setMethodInfoInterface",
        "interface": "MethodInfoInterfaceString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMethodInfoInterface"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "interface": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "interface"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfointerface"
    },
    "PaymentSetMethodInfoMethodAction": {
      "title": "PaymentSetMethodInfoMethodAction",
      "example": {
        "action": "setMethodInfoMethod",
        "method": "MethodInfoMethodString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMethodInfoMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "method": {
              "description": "If not provided, the method is unset.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfomethod"
    },
    "PaymentSetMethodInfoNameAction": {
      "title": "PaymentSetMethodInfoNameAction",
      "example": {
        "action": "setMethodInfoName",
        "name": {
          "de": "MethodInfoNameStringDE",
          "en": "MethodInfoNameStringEN"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMethodInfoName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "description": "If not provided, the name is unset.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfoname"
    },
    "PaymentSetStatusInterfaceCodeAction": {
      "title": "PaymentSetStatusInterfaceCodeAction",
      "example": {
        "action": "setStatusInterfaceCode",
        "interfaceCode": "InterfaceCodeString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setStatusInterfaceCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "interfaceCode": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacecode"
    },
    "PaymentSetStatusInterfaceTextAction": {
      "title": "PaymentSetStatusInterfaceTextAction",
      "example": {
        "action": "setStatusInterfaceText",
        "interfaceText": "InterfaceTextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setStatusInterfaceText"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "interfaceText": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "interfaceText"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacetext"
    },
    "PaymentState": {
      "title": "PaymentState",
      "enum": [
        "BalanceDue",
        "Failed",
        "Pending",
        "CreditOwed",
        "Paid"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentstate"
    },
    "PaymentStatus": {
      "title": "PaymentStatus",
      "type": "object",
      "properties": {
        "interfaceCode": {
          "description": "A code describing the current status returned by the interface that processes the payment.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "interfaceText": {
          "description": "A text describing the current status returned by the interface that processes the payment.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "$ref": "#/definitions/StateReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentstatus"
    },
    "PaymentStatusDraft": {
      "title": "PaymentStatusDraft",
      "type": "object",
      "properties": {
        "interfaceCode": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "interfaceText": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "$ref": "#/definitions/StateResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentstatus"
    },
    "PaymentStatusInterfaceCodeSetMessage": {
      "title": "PaymentStatusInterfaceCodeSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "PaymentStatusInterfaceCodeSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "paymentId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "interfaceCode": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "paymentId",
            "interfaceCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusinterfacecodesetmessage"
    },
    "PaymentStatusInterfaceCodeSetMessagePayload": {
      "title": "PaymentStatusInterfaceCodeSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PaymentStatusInterfaceCodeSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "paymentId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "interfaceCode": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "paymentId",
            "interfaceCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusinterfacecodesetmessage"
    },
    "PaymentStatusStateTransitionMessage": {
      "title": "PaymentStatusStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "PaymentStatusStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusstatetransitionmessage"
    },
    "PaymentStatusStateTransitionMessagePayload": {
      "title": "PaymentStatusStateTransitionMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PaymentStatusStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusstatetransitionmessage"
    },
    "PaymentTransactionAddedMessage": {
      "title": "PaymentTransactionAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "PaymentTransactionAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "transaction": {
              "$ref": "#/definitions/Transaction",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "transaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionaddedmessage"
    },
    "PaymentTransactionAddedMessagePayload": {
      "title": "PaymentTransactionAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PaymentTransactionAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transaction": {
              "$ref": "#/definitions/Transaction",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "transaction"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionaddedmessage"
    },
    "PaymentTransactionStateChangedMessage": {
      "title": "PaymentTransactionStateChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "PaymentTransactionStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "transactionId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/TransactionState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "transactionId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionstatechangedmessage"
    },
    "PaymentTransactionStateChangedMessagePayload": {
      "title": "PaymentTransactionStateChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "PaymentTransactionStateChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transactionId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/TransactionState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "transactionId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionstatechangedmessage"
    },
    "PaymentTransitionStateAction": {
      "title": "PaymentTransitionStateAction",
      "example": {
        "action": "transitionState",
        "state": {
          "typeId": "state",
          "id": "{{paymentStateId}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PaymentUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transition-state"
    },
    "PaymentUpdate": {
      "title": "PaymentUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<PaymentUpdate, PaymentUpdateAction>"
    },
    "PaymentUpdateAction": {
      "title": "PaymentUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "PaymentAddInterfaceInteractionAction",
        "PaymentAddTransactionAction",
        "PaymentChangeAmountPlannedAction",
        "PaymentChangeTransactionInteractionIdAction",
        "PaymentChangeTransactionStateAction",
        "PaymentChangeTransactionTimestampAction",
        "PaymentSetAmountPaidAction",
        "PaymentSetAmountRefundedAction",
        "PaymentSetAnonymousIdAction",
        "PaymentSetAuthorizationAction",
        "PaymentSetCustomFieldAction",
        "PaymentSetCustomTypeAction",
        "PaymentSetCustomerAction",
        "PaymentSetExternalIdAction",
        "PaymentSetInterfaceIdAction",
        "PaymentSetKeyAction",
        "PaymentSetMethodInfoInterfaceAction",
        "PaymentSetMethodInfoMethodAction",
        "PaymentSetMethodInfoNameAction",
        "PaymentSetStatusInterfaceCodeAction",
        "PaymentSetStatusInterfaceTextAction",
        "PaymentTransitionStateAction"
      ],
      "x-annotation-package": "Payment",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<PaymentUpdateAction>"
    },
    "PendingOperationError": {
      "title": "PendingOperationError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "PendingOperation"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "Price": {
      "title": "Price",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "value": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerGroup": {
          "$ref": "#/definitions/CustomerGroupReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "channel": {
          "$ref": "#/definitions/ChannelReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "validUntil": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "discounted": {
          "$ref": "#/definitions/DiscountedPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "tiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceTier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#price"
    },
    "PriceChangedError": {
      "title": "PriceChangedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "PriceChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItems": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "shipping": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "lineItems",
            "shipping"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "PriceDraft": {
      "title": "PriceDraft",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerGroup": {
          "$ref": "#/definitions/CustomerGroupResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "channel": {
          "$ref": "#/definitions/ChannelResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "validUntil": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "tiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceTierDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "discounted": {
          "$ref": "#/definitions/DiscountedPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#pricedraft"
    },
    "PriceFunction": {
      "title": "PriceFunction",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
          "$ref": "#/definitions/CurrencyCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "function": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "currencyCode",
        "function"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#pricefunction"
    },
    "PriceTier": {
      "title": "PriceTier",
      "type": "object",
      "properties": {
        "minimumQuantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "value": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "minimumQuantity",
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "PriceTierDraft": {
      "title": "PriceTierDraft",
      "type": "object",
      "properties": {
        "minimumQuantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "value": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "minimumQuantity",
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common"
    },
    "Product": {
      "title": "Product",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the product.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the product.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the product.\n*Product keys are different from product variant keys.*",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "productType": {
              "$ref": "#/definitions/ProductTypeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "masterData": {
              "description": "The product data in the master catalog.",
              "$ref": "#/definitions/ProductCatalogData",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "reviewRatingStatistics": {
              "description": "Statistics about the review ratings taken into account for this product.",
              "$ref": "#/definitions/ReviewRatingStatistics",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "productType",
            "masterData"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product",
      "x-annotation-updateType": "ProductUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Product>"
    },
    "ProductAddAssetAction": {
      "title": "ProductAddAssetAction",
      "example": {
        "action": "addAsset",
        "variantId": 1,
        "asset": {
          "sources": [
            {
              "uri": "//asset.mp4"
            }
          ],
          "name": {
            "de": "FirstAssetDE",
            "en": "FirstassetEN"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addAsset"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "asset": {
              "$ref": "#/definitions/AssetDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "position": {
              "format": "int32",
              "description": "Position of the new asset inside the existing list (from `0` to the size of the list)",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "asset"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-asset"
    },
    "ProductAddExternalImageAction": {
      "title": "ProductAddExternalImageAction",
      "example": {
        "action": "addExternalImage",
        "variantId": 1,
        "image": {
          "url": "//myimage.jpg",
          "dimensions": {
            "w": 1400,
            "h": 1400
          },
          "label": "myImage"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addExternalImage"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "image": {
              "$ref": "#/definitions/Image",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "image"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-external-image"
    },
    "ProductAddPriceAction": {
      "title": "ProductAddPriceAction",
      "example": {
        "action": "addPrice",
        "variantId": 1,
        "price": {
          "value": {
            "currencyCode": "EUR",
            "centAmount": 4000
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addPrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "price": {
              "$ref": "#/definitions/PriceDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "price"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-price"
    },
    "ProductAddToCategoryAction": {
      "title": "ProductAddToCategoryAction",
      "example": {
        "action": "addToCategory",
        "category": {
          "typeId": "category",
          "id": "{{category-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addToCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/CategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "orderHint": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "category"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-to-category"
    },
    "ProductAddVariantAction": {
      "title": "ProductAddVariantAction",
      "example": {
        "action": "addVariant",
        "key": "VariantKey",
        "sku": "VariantSKU"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addVariant"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "prices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Image"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-productvariant"
    },
    "ProductAddedToCategoryMessage": {
      "title": "ProductAddedToCategoryMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductAddedToCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/CategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "category",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productaddedtocategorymessage"
    },
    "ProductAddedToCategoryMessagePayload": {
      "title": "ProductAddedToCategoryMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductAddedToCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/CategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "category",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productaddedtocategorymessage"
    },
    "ProductCatalogData": {
      "title": "ProductCatalogData",
      "type": "object",
      "properties": {
        "published": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "current": {
          "$ref": "#/definitions/ProductData",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "staged": {
          "$ref": "#/definitions/ProductData",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "hasStagedChanges": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "published",
        "current",
        "staged",
        "hasStagedChanges"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productcatalogdata"
    },
    "ProductChangeAssetNameAction": {
      "title": "ProductChangeAssetNameAction",
      "example": {
        "action": "changeAssetName",
        "assetId": "{{assetId}}",
        "name": {
          "de": "Mein Asset",
          "en": "My asset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAssetName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-name"
    },
    "ProductChangeAssetOrderAction": {
      "title": "ProductChangeAssetOrderAction",
      "example": {
        "action": "changeAssetOrder",
        "assetOrder": [
          "{{assetId1}}",
          "{{assetId2}}"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAssetOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetOrder": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "assetOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-order"
    },
    "ProductChangeMasterVariantAction": {
      "title": "ProductChangeMasterVariantAction",
      "example": {
        "action": "changeMasterVariant",
        "variantId": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeMasterVariant"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-master-variant"
    },
    "ProductChangeNameAction": {
      "title": "ProductChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "de": "Mein neuer Produkt Name",
          "en": "My new product name"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-name"
    },
    "ProductChangePriceAction": {
      "title": "ProductChangePriceAction",
      "example": {
        "action": "changePrice",
        "priceId": "{{priceId}}",
        "price": {
          "value": {
            "currencyCode": "EUR",
            "centAmount": 4000
          }
        },
        "staged": true
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changePrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "priceId": {
              "description": "ID of the [Price](#price)",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "price": {
              "$ref": "#/definitions/PriceDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "priceId",
            "price"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-price"
    },
    "ProductChangeSlugAction": {
      "title": "ProductChangeSlugAction",
      "example": {
        "action": "changeSlug",
        "slug": {
          "de": "mein-neuer-produkt-slug",
          "en": "my-new-product-slug"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeSlug"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "slug": {
              "description": "Every slug must be unique across a project, but a product can have the same slug for different languages.\nAllowed are alphabetic, numeric, underscore (`_`) and hyphen (`-`) characters.\nMaximum size is `256`.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-slug"
    },
    "ProductCreatedMessage": {
      "title": "ProductCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "productProjection": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "productProjection"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productcreatedmessage"
    },
    "ProductCreatedMessagePayload": {
      "title": "ProductCreatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "productProjection": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "productProjection"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productcreatedmessage"
    },
    "ProductData": {
      "title": "ProductData",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryReference"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "categoryOrderHints": {
          "$ref": "#/definitions/CategoryOrderHints",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "slug": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaTitle": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaDescription": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaKeywords": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "masterVariant": {
          "$ref": "#/definitions/ProductVariant",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariant"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "searchKeywords": {
          "$ref": "#/definitions/SearchKeywords",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "categories",
        "slug",
        "masterVariant",
        "variants",
        "searchKeywords"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdata"
    },
    "ProductDeletedMessage": {
      "title": "ProductDeletedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "currentProjection": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "removedImageUrls",
            "currentProjection"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productdeletedmessage"
    },
    "ProductDeletedMessagePayload": {
      "title": "ProductDeletedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "currentProjection": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "removedImageUrls",
            "currentProjection"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productdeletedmessage"
    },
    "ProductDiscount": {
      "title": "ProductDiscount",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the product discount",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the product discount.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for a product discount.\nMust be unique across a project.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/ProductDiscountValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "predicate": {
              "description": "A valid ProductDiscount Predicate.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "sortOrder": {
              "description": "The string contains a number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.\nA sortOrder must be unambiguous.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "isActive": {
              "description": "Only active discount will be applied to product prices.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "references": {
              "description": "The platform will generate this array from the predicate.\nIt contains the references of all the resources that are addressed in the predicate.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "validFrom": {
              "format": "date-time",
              "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated product discount values.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validUntil": {
              "format": "date-time",
              "description": "The time from which the discount should be ineffective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name",
            "value",
            "predicate",
            "sortOrder",
            "isActive",
            "references"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount",
      "x-annotation-updateType": "ProductDiscountUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<ProductDiscount>"
    },
    "ProductDiscountChangeIsActiveAction": {
      "title": "ProductDiscountChangeIsActiveAction",
      "example": {
        "action": "changeIsActive",
        "isActive": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeIsActive"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "isActive": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "isActive"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-is-active"
    },
    "ProductDiscountChangeNameAction": {
      "title": "ProductDiscountChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "de": "NewProductDiscountDE",
          "en": "NewProductDiscountEN"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-name"
    },
    "ProductDiscountChangePredicateAction": {
      "title": "ProductDiscountChangePredicateAction",
      "example": {
        "action": "changePredicate",
        "predicate": "product.id = \"{{product-id}}\""
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changePredicate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "predicate": {
              "description": "A valid ProductDiscount Predicate.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "predicate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-predicate"
    },
    "ProductDiscountChangeSortOrderAction": {
      "title": "ProductDiscountChangeSortOrderAction",
      "example": {
        "action": "changeSortOrder",
        "sortOrder": "0.3"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeSortOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sortOrder": {
              "description": "The string must contain a number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "sortOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-sort-order"
    },
    "ProductDiscountChangeValueAction": {
      "title": "ProductDiscountChangeValueAction",
      "example": {
        "action": "changeValue",
        "value": {
          "type": "relative",
          "permyriad": 2000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeValue"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "value": {
              "$ref": "#/definitions/ProductDiscountValueDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-value"
    },
    "ProductDiscountDraft": {
      "title": "ProductDiscountDraft",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier for a product discount.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "value": {
          "$ref": "#/definitions/ProductDiscountValueDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "predicate": {
          "description": "A valid ProductDiscount Predicate.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "sortOrder": {
          "description": "The string must contain a decimal number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "isActive": {
          "description": "If set to `true` the discount will be applied to product prices.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "validFrom": {
          "format": "date-time",
          "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated product discount values.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "validUntil": {
          "format": "date-time",
          "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "value",
        "predicate",
        "sortOrder",
        "isActive"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountdraft"
    },
    "ProductDiscountMatchQuery": {
      "title": "ProductDiscountMatchQuery",
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "variantId": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "staged": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "price": {
          "$ref": "#/definitions/QueryPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "productId",
        "variantId",
        "staged",
        "price"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#get-matching-productdiscount"
    },
    "ProductDiscountPagedQueryResponse": {
      "title": "ProductDiscountPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDiscount"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<ProductDiscount>"
    },
    "ProductDiscountReference": {
      "title": "ProductDiscountReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "product-discount"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount"
    },
    "ProductDiscountResourceIdentifier": {
      "title": "ProductDiscountResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "product-discount"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount"
    },
    "ProductDiscountSetDescriptionAction": {
      "title": "ProductDiscountSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "de": "New Product Discount Description DE",
          "en": "New Product Discount Description EN"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-description"
    },
    "ProductDiscountSetKeyAction": {
      "title": "ProductDiscountSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "The key to set.\nIf you provide a `null` value or do not set this field at all, the existing `key` field is removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-key"
    },
    "ProductDiscountSetValidFromAction": {
      "title": "ProductDiscountSetValidFromAction",
      "example": {
        "action": "setValidFrom",
        "validFrom": "2001-09-11T14:05:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidFrom"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validFrom": {
              "format": "date-time",
              "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated product discount values.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-from"
    },
    "ProductDiscountSetValidFromAndUntilAction": {
      "title": "ProductDiscountSetValidFromAndUntilAction",
      "example": {
        "action": "setValidFromAndUntil",
        "validFrom": "2001-09-11T14:00:00.000Z",
        "validUntil": "2001-09-11T14:05:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidFromAndUntil"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validFrom": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "validUntil": {
              "format": "date-time",
              "description": "The timeframe for which the discount should be effective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-from-and-until"
    },
    "ProductDiscountSetValidUntilAction": {
      "title": "ProductDiscountSetValidUntilAction",
      "example": {
        "action": "setValidUntil",
        "validUntil": "2001-09-11T14:05:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setValidUntil"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "validUntil": {
              "format": "date-time",
              "description": "The time from which the discount should be ineffective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-until"
    },
    "ProductDiscountUpdate": {
      "title": "ProductDiscountUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDiscountUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ProductDiscountUpdate, ProductDiscountUpdateAction>"
    },
    "ProductDiscountUpdateAction": {
      "title": "ProductDiscountUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ProductDiscountChangeIsActiveAction",
        "ProductDiscountChangeNameAction",
        "ProductDiscountChangePredicateAction",
        "ProductDiscountChangeSortOrderAction",
        "ProductDiscountChangeValueAction",
        "ProductDiscountSetDescriptionAction",
        "ProductDiscountSetKeyAction",
        "ProductDiscountSetValidFromAction",
        "ProductDiscountSetValidFromAndUntilAction",
        "ProductDiscountSetValidUntilAction"
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ProductDiscountUpdateAction>"
    },
    "ProductDiscountValue": {
      "title": "ProductDiscountValue",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ProductDiscountValueAbsolute",
        "ProductDiscountValueExternal",
        "ProductDiscountValueRelative"
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountvalue"
    },
    "ProductDiscountValueAbsolute": {
      "title": "ProductDiscountValueAbsolute",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValue"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "absolute"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypedMoney"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValueAbsoluteDraft": {
      "title": "ProductDiscountValueAbsoluteDraft",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValueDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "absolute"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Money"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValueDraft": {
      "title": "ProductDiscountValueDraft",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ProductDiscountValueAbsoluteDraft",
        "ProductDiscountValueExternalDraft",
        "ProductDiscountValueRelativeDraft"
      ],
      "x-annotation-package": "ProductDiscount",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountvalue"
    },
    "ProductDiscountValueExternal": {
      "title": "ProductDiscountValueExternal",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValue"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "external"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValueExternalDraft": {
      "title": "ProductDiscountValueExternalDraft",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValueDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "external"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValueRelative": {
      "title": "ProductDiscountValueRelative",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValue"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "relative"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "permyriad": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "permyriad"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDiscountValueRelativeDraft": {
      "title": "ProductDiscountValueRelativeDraft",
      "allOf": [
        {
          "$ref": "#/definitions/ProductDiscountValueDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "relative"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "permyriad": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "permyriad"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductDiscount"
    },
    "ProductDraft": {
      "title": "ProductDraft",
      "type": "object",
      "properties": {
        "productType": {
          "description": "A predefined product type assigned to the product.\nAll products must have a product type.",
          "$ref": "#/definitions/ProductTypeResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "slug": {
          "description": "Human-readable identifiers usually used as deep-link URLs for the product.\nA slug must be unique across a project, but a product can have the same slug for different languages.\nSlugs have a maximum size of 256.\nValid characters are: alphabetic characters (`A-Z, a-z`), numeric characters (`0-9`), underscores (`_`) and hyphens (`-`).",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier for the product.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "categories": {
          "description": "Categories assigned to the product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryResourceIdentifier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "categoryOrderHints": {
          "$ref": "#/definitions/CategoryOrderHints",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaTitle": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaDescription": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "metaKeywords": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "masterVariant": {
          "description": "The master product variant.\nRequired if the `variants` array has product variants.",
          "$ref": "#/definitions/ProductVariantDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "variants": {
          "description": "An array of related product variants.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariantDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "taxCategory": {
          "$ref": "#/definitions/TaxCategoryResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "searchKeywords": {
          "$ref": "#/definitions/SearchKeywords",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "state": {
          "$ref": "#/definitions/StateResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "publish": {
          "description": "If `true`, the product is published immediately.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "productType",
        "name",
        "slug"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdraft"
    },
    "ProductImageAddedMessage": {
      "title": "ProductImageAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductImageAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "image": {
              "$ref": "#/definitions/Image",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "variantId",
            "image",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productimageaddedmessage"
    },
    "ProductImageAddedMessagePayload": {
      "title": "ProductImageAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductImageAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "image": {
              "$ref": "#/definitions/Image",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "variantId",
            "image",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productimageaddedmessage"
    },
    "ProductLegacySetSkuAction": {
      "title": "ProductLegacySetSkuAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "legacySetSku"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "ProductMoveImageToPositionAction": {
      "title": "ProductMoveImageToPositionAction",
      "example": {
        "action": "moveImageToPosition",
        "variantId": 1,
        "imageUrl": "//myimage2.jpg",
        "position": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "moveImageToPosition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "imageUrl": {
              "description": "The URL of the image",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "position": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "imageUrl",
            "position"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#move-image-to-position"
    },
    "ProductPagedQueryResponse": {
      "title": "ProductPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Product>"
    },
    "ProductPriceDiscountsSetMessage": {
      "title": "ProductPriceDiscountsSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductPriceDiscountsSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "updatedPrices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductPriceDiscountsSetUpdatedPrice"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "updatedPrices"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpricediscountssetmessage"
    },
    "ProductPriceDiscountsSetMessagePayload": {
      "title": "ProductPriceDiscountsSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductPriceDiscountsSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "updatedPrices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductPriceDiscountsSetUpdatedPrice"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "updatedPrices"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpricediscountssetmessage"
    },
    "ProductPriceDiscountsSetUpdatedPrice": {
      "title": "ProductPriceDiscountsSetUpdatedPrice",
      "type": "object",
      "properties": {
        "variantId": {
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "variantKey": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "priceId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "discounted": {
          "$ref": "#/definitions/DiscountedPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "staged": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "variantId",
        "priceId",
        "staged"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpricediscountssetmessage"
    },
    "ProductPriceExternalDiscountSetMessage": {
      "title": "ProductPriceExternalDiscountSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductPriceExternalDiscountSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "variantId": {
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "variantKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "priceId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "discounted": {
              "$ref": "#/definitions/DiscountedPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "variantId",
            "priceId",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpriceexternaldiscountsetmessage"
    },
    "ProductPriceExternalDiscountSetMessagePayload": {
      "title": "ProductPriceExternalDiscountSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductPriceExternalDiscountSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "variantKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "priceId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "discounted": {
              "$ref": "#/definitions/DiscountedPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "variantId",
            "priceId",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpriceexternaldiscountsetmessage"
    },
    "ProductProjection": {
      "title": "ProductProjection",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the Product.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the Product.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "User-specific unique identifier of the Product.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "productType": {
              "$ref": "#/definitions/ProductTypeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "slug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "categories": {
              "description": "References to categories the product is in.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "categoryOrderHints": {
              "$ref": "#/definitions/CategoryOrderHints",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "metaTitle": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "metaDescription": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "metaKeywords": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "searchKeywords": {
              "$ref": "#/definitions/SearchKeywords",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "hasStagedChanges": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "published": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "masterVariant": {
              "$ref": "#/definitions/ProductVariant",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "variants": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductVariant"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "reviewRatingStatistics": {
              "description": "Statistics about the review ratings taken into account for this product.",
              "$ref": "#/definitions/ReviewRatingStatistics",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "productType",
            "name",
            "slug",
            "categories",
            "masterVariant",
            "variants"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productProjections.html#productprojection",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<ProductProjection>"
    },
    "ProductProjectionPagedQueryResponse": {
      "title": "ProductProjectionPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductProjection"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<ProductProjection>"
    },
    "ProductProjectionPagedSearchResponse": {
      "title": "ProductProjectionPagedSearchResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductProjection"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "facets": {
          "$ref": "#/definitions/FacetResults",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results",
        "facets"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<ProductProjection>"
    },
    "ProductPublishAction": {
      "title": "ProductPublishAction",
      "example": {
        "action": "publish"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "publish"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "scope": {
              "$ref": "#/definitions/ProductPublishScope",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#publish"
    },
    "ProductPublishScope": {
      "title": "ProductPublishScope",
      "enum": [
        "All",
        "Prices"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
    },
    "ProductPublishedMessage": {
      "title": "ProductPublishedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductPublished"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "productProjection": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "scope": {
              "$ref": "#/definitions/ProductPublishScope",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "removedImageUrls",
            "productProjection",
            "scope"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productpublishedmessage"
    },
    "ProductPublishedMessagePayload": {
      "title": "ProductPublishedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductPublished"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "productProjection": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "scope": {
              "$ref": "#/definitions/ProductPublishScope",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "removedImageUrls",
            "productProjection",
            "scope"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productpublishedmessage"
    },
    "ProductReference": {
      "title": "ProductReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "product"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product"
    },
    "ProductRemoveAssetAction": {
      "title": "ProductRemoveAssetAction",
      "example": {
        "action": "removeAsset",
        "variantId": 1,
        "assetId": "{{assetId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeAsset"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-asset"
    },
    "ProductRemoveFromCategoryAction": {
      "title": "ProductRemoveFromCategoryAction",
      "example": {
        "action": "removeFromCategory",
        "category": {
          "typeId": "category",
          "id": "{{category-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeFromCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/CategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "category"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-from-category"
    },
    "ProductRemoveImageAction": {
      "title": "ProductRemoveImageAction",
      "example": {
        "action": "removeImage",
        "variantId": 1,
        "imageUrl": "//myimage2.jpg"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeImage"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "imageUrl": {
              "description": "The URL of the image.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "imageUrl"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-image"
    },
    "ProductRemovePriceAction": {
      "title": "ProductRemovePriceAction",
      "example": {
        "action": "removePrice",
        "priceId": "{{priceId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removePrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "priceId": {
              "description": "ID of the [Price](#price)",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-price"
    },
    "ProductRemoveVariantAction": {
      "title": "ProductRemoveVariantAction",
      "example": {
        "action": "removeVariant",
        "id": 2
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeVariant"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-productvariant"
    },
    "ProductRemovedFromCategoryMessage": {
      "title": "ProductRemovedFromCategoryMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductRemovedFromCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/CategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "category",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productremovedfromcategorymessage"
    },
    "ProductRemovedFromCategoryMessagePayload": {
      "title": "ProductRemovedFromCategoryMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductRemovedFromCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "category": {
              "$ref": "#/definitions/CategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "category",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productremovedfromcategorymessage"
    },
    "ProductResourceIdentifier": {
      "title": "ProductResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "product"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product"
    },
    "ProductRevertStagedChangesAction": {
      "title": "ProductRevertStagedChangesAction",
      "example": {
        "action": "revertStagedChanges"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "revertStagedChanges"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-changes"
    },
    "ProductRevertStagedVariantChangesAction": {
      "title": "ProductRevertStagedVariantChangesAction",
      "example": {
        "action": "revertStagedVariantChanges",
        "variantId": 2
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "revertStagedVariantChanges"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-variant-changes"
    },
    "ProductRevertedStagedChangesMessage": {
      "title": "ProductRevertedStagedChangesMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductRevertedStagedChanges"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "removedImageUrls"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productrevertedstagedchangesmessage"
    },
    "ProductRevertedStagedChangesMessagePayload": {
      "title": "ProductRevertedStagedChangesMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductRevertedStagedChanges"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "removedImageUrls"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productrevertedstagedchangesmessage"
    },
    "ProductSetAssetCustomFieldAction": {
      "title": "ProductSetAssetCustomFieldAction",
      "example": {
        "action": "setAssetCustomField",
        "assetId": "{{assetId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-field"
    },
    "ProductSetAssetCustomTypeAction": {
      "title": "ProductSetAssetCustomTypeAction",
      "example": {
        "action": "setAssetCustomType",
        "assetId": "{{assetId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "If set, the custom fields are set to this new value.",
              "type": "object",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-type"
    },
    "ProductSetAssetDescriptionAction": {
      "title": "ProductSetAssetDescriptionAction",
      "example": {
        "action": "setAssetDescription",
        "assetId": "{{assetId}}",
        "description": {
          "de": "Dies ist eine Asset-Beschreibung",
          "en": "This is an asset description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-description"
    },
    "ProductSetAssetKeyAction": {
      "title": "ProductSetAssetKeyAction",
      "example": {
        "action": "setAssetKey",
        "assetId": "{{assetId}}",
        "assetKey": "assetKeyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "description": "User-defined identifier for the asset.\nIf left blank or set to `null`, the asset key is unset/removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "assetId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-key"
    },
    "ProductSetAssetSourcesAction": {
      "title": "ProductSetAssetSourcesAction",
      "example": {
        "action": "setAssetSources",
        "assetId": "{{assetId}}",
        "sources": [
          {
            "uri": "https://www.commercetools.de/ct-logo.svg",
            "key": "vector"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetSources"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "sources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetSource"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "sources"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-sources"
    },
    "ProductSetAssetTagsAction": {
      "title": "ProductSetAssetTagsAction",
      "example": {
        "action": "setAssetTags",
        "assetId": "{{assetId}}",
        "tags": [
          "commercetools",
          "awesome"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAssetTags"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "assetId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "assetKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-tags"
    },
    "ProductSetAttributeAction": {
      "title": "ProductSetAttributeAction",
      "example": {
        "action": "setAttribute",
        "variantId": 1,
        "name": "ExamplaryStringTypeAttribute",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAttribute"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "description": "If the attribute exists and the value is omitted or set to `null`, the attribute is removed.\nIf the attribute exists and a value is provided, the new value is applied.\nIf the attribute does not exist and a value is provided, it is added as a new attribute.",
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute"
    },
    "ProductSetAttributeInAllVariantsAction": {
      "title": "ProductSetAttributeInAllVariantsAction",
      "example": {
        "action": "setAttributeInAllVariants",
        "name": "ExamplaryStringTypeAttribute",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAttributeInAllVariants"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "description": "The same update behavior as for Set Attribute applies.",
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute-in-all-variants"
    },
    "ProductSetCategoryOrderHintAction": {
      "title": "ProductSetCategoryOrderHintAction",
      "example": {
        "action": "setCategoryOrderHint",
        "categoryId": "{{category-id}}",
        "orderHint": "0.1"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCategoryOrderHint"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "categoryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "orderHint": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "categoryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-category-order-hint"
    },
    "ProductSetDescriptionAction": {
      "title": "ProductSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "de": "Dies ist eine neue Produktbeschreibung",
          "en": "This is a new product description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-description"
    },
    "ProductSetDiscountedPriceAction": {
      "title": "ProductSetDiscountedPriceAction",
      "example": {
        "action": "setDiscountedPrice",
        "priceId": "{{priceId}}",
        "staged": true,
        "discounted": {
          "value": {
            "currencyCode": "EUR",
            "centAmount": 4000
          },
          "discount": {
            "typeId": "product-discount",
            "id": "{{product-discount-id}}"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDiscountedPrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "priceId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "discounted": {
              "$ref": "#/definitions/DiscountedPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-discounted-price"
    },
    "ProductSetImageLabelAction": {
      "title": "ProductSetImageLabelAction",
      "example": {
        "action": "setImageLabel",
        "variantId": 2,
        "imageUrl": "//image.png",
        "label": "labelString",
        "staged": true
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setImageLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "imageUrl": {
              "description": "The URL of the image.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "label": {
              "description": "The new image label.\nIf left blank or set to null, the label is removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "imageUrl"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-image-label"
    },
    "ProductSetKeyAction": {
      "title": "ProductSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "DefaultKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "User-specific unique identifier for the product.\nIf left blank or set to `null`, the product key is unset/removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-key"
    },
    "ProductSetMetaDescriptionAction": {
      "title": "ProductSetMetaDescriptionAction",
      "example": {
        "action": "setMetaDescription",
        "metaDescription": {
          "de": "meine Meta Beschreibung",
          "en": "my metaDescription"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMetaDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "metaDescription": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-description"
    },
    "ProductSetMetaKeywordsAction": {
      "title": "ProductSetMetaKeywordsAction",
      "example": {
        "action": "setMetaKeywords",
        "metaKeywords": {
          "de": "mein MetaKeyword",
          "en": "my metaKeeyword"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMetaKeywords"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "metaKeywords": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-keywords"
    },
    "ProductSetMetaTitleAction": {
      "title": "ProductSetMetaTitleAction",
      "example": {
        "action": "setMetaTitle",
        "metaTitle": {
          "de": "mein MetaTitel",
          "en": "my metaTitle"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMetaTitle"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "metaTitle": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-title"
    },
    "ProductSetPricesAction": {
      "title": "ProductSetPricesAction",
      "example": {
        "action": "setPrices",
        "variantId": 1,
        "prices": [
          {
            "value": {
              "currencyCode": "USD",
              "centAmount": 3100
            }
          },
          {
            "value": {
              "currencyCode": "EUR",
              "centAmount": 4000
            }
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setPrices"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "prices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "prices"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-prices"
    },
    "ProductSetProductPriceCustomFieldAction": {
      "title": "ProductSetProductPriceCustomFieldAction",
      "example": {
        "action": "setProductPriceCustomField",
        "priceId": "{{priceId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setProductPriceCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "priceId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "priceId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-customfield"
    },
    "ProductSetProductPriceCustomTypeAction": {
      "title": "ProductSetProductPriceCustomTypeAction",
      "example": {
        "action": "setProductPriceCustomType",
        "priceId": "{{priceId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setProductPriceCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "priceId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "priceId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-product-price-custom-type"
    },
    "ProductSetProductVariantKeyAction": {
      "title": "ProductSetProductVariantKeyAction",
      "example": {
        "action": "setProductVariantKey",
        "variantId": 1,
        "key": "keyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setProductVariantKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "If left blank or set to `null`, the key is unset/removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-productvariant-key"
    },
    "ProductSetSearchKeywordsAction": {
      "title": "ProductSetSearchKeywordsAction",
      "example": {
        "action": "setSearchKeywords",
        "searchKeywords": {
          "en": [
            {
              "text": "Super Keyword"
            },
            {
              "text": "What a keyword",
              "suggestTokenizer": {
                "type": "whitespace"
              }
            }
          ],
          "de": [
            {
              "text": "Ein super Schlüsselwort",
              "suggestTokenizer": {
                "type": "custom",
                "inputs": [
                  "wow wow wow",
                  "super genial",
                  "der Wahnsinn"
                ]
              }
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setSearchKeywords"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "searchKeywords": {
              "$ref": "#/definitions/SearchKeywords",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "searchKeywords"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-searchkeywords"
    },
    "ProductSetSkuAction": {
      "title": "ProductSetSkuAction",
      "example": {
        "action": "setSku",
        "variantId": 1,
        "sku": "SKU"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setSku"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "description": "SKU must be unique.\nIf left blank or set to `null`, the sku is unset/removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "variantId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-sku"
    },
    "ProductSetTaxCategoryAction": {
      "title": "ProductSetTaxCategoryAction",
      "example": {
        "action": "setTaxCategory",
        "taxCategory": {
          "typeId": "tax-category",
          "id": "{{tax-category-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTaxCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxCategory": {
              "description": "If left blank or set to `null`, the tax category is unset/removed.",
              "$ref": "#/definitions/TaxCategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-taxcategory"
    },
    "ProductSlugChangedMessage": {
      "title": "ProductSlugChangedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductSlugChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "slug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldSlug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productslugchangedmessage"
    },
    "ProductSlugChangedMessagePayload": {
      "title": "ProductSlugChangedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductSlugChanged"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "slug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldSlug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productslugchangedmessage"
    },
    "ProductStateTransitionMessage": {
      "title": "ProductStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productstatetransitionmessage"
    },
    "ProductStateTransitionMessagePayload": {
      "title": "ProductStateTransitionMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "state",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productstatetransitionmessage"
    },
    "ProductTransitionStateAction": {
      "title": "ProductTransitionStateAction",
      "example": {
        "action": "transitionState",
        "state": {
          "typeId": "state",
          "id": "{{state-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#transition-state"
    },
    "ProductType": {
      "title": "ProductType",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the product type.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the product type.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the product type (max.\n256 characters).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeDefinition"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name",
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype",
      "x-annotation-updateType": "ProductTypeUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<ProductType>"
    },
    "ProductTypeAddAttributeDefinitionAction": {
      "title": "ProductTypeAddAttributeDefinitionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addAttributeDefinition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attribute": {
              "$ref": "#/definitions/AttributeDefinitionDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attribute"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-attributedefinition"
    },
    "ProductTypeAddLocalizedEnumValueAction": {
      "title": "ProductTypeAddLocalizedEnumValueAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLocalizedEnumValue"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/AttributeLocalizedEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-localizableenumvalue-to-attributedefinition"
    },
    "ProductTypeAddPlainEnumValueAction": {
      "title": "ProductTypeAddPlainEnumValueAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addPlainEnumValue"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/AttributePlainEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-plainenumvalue-to-attributedefinition"
    },
    "ProductTypeChangeAttributeConstraintAction": {
      "title": "ProductTypeChangeAttributeConstraintAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAttributeConstraint"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "newValue": {
              "$ref": "#/definitions/AttributeConstraintEnumDraft",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-attributeconstraint"
    },
    "ProductTypeChangeAttributeNameAction": {
      "title": "ProductTypeChangeAttributeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAttributeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "newAttributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "newAttributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-name"
    },
    "ProductTypeChangeAttributeOrderAction": {
      "title": "ProductTypeChangeAttributeOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAttributeOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeDefinition"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributes"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-attributedefinitions",
      "x-annotation-deprecated": true
    },
    "ProductTypeChangeAttributeOrderByNameAction": {
      "title": "ProductTypeChangeAttributeOrderByNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeAttributeOrderByName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeNames"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-attributedefinitions"
    },
    "ProductTypeChangeDescriptionAction": {
      "title": "ProductTypeChangeDescriptionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-description"
    },
    "ProductTypeChangeEnumKeyAction": {
      "title": "ProductTypeChangeEnumKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeEnumKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "newKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "key",
            "newKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-key-of-an-enumvalue"
    },
    "ProductTypeChangeInputHintAction": {
      "title": "ProductTypeChangeInputHintAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeInputHint"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "newValue": {
              "$ref": "#/definitions/TextInputHint",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-inputhint"
    },
    "ProductTypeChangeIsSearchableAction": {
      "title": "ProductTypeChangeIsSearchableAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeIsSearchable"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "isSearchable": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "isSearchable"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-issearchable"
    },
    "ProductTypeChangeLabelAction": {
      "title": "ProductTypeChangeLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "label": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-label"
    },
    "ProductTypeChangeLocalizedEnumValueLabelAction": {
      "title": "ProductTypeChangeLocalizedEnumValueLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLocalizedEnumValueLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "newValue": {
              "$ref": "#/definitions/AttributeLocalizedEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-label-of-an-enumvalue"
    },
    "ProductTypeChangeLocalizedEnumValueOrderAction": {
      "title": "ProductTypeChangeLocalizedEnumValueOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLocalizedEnumValueOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeLocalizedEnumValue"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-localizedenumvalues"
    },
    "ProductTypeChangeNameAction": {
      "title": "ProductTypeChangeNameAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-name"
    },
    "ProductTypeChangePlainEnumValueLabelAction": {
      "title": "ProductTypeChangePlainEnumValueLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changePlainEnumValueLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "newValue": {
              "$ref": "#/definitions/AttributePlainEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "newValue"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-label-of-an-enumvalue"
    },
    "ProductTypeChangePlainEnumValueOrderAction": {
      "title": "ProductTypeChangePlainEnumValueOrderAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changePlainEnumValueOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributePlainEnumValue"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "values"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-enumvalues"
    },
    "ProductTypeDraft": {
      "title": "ProductTypeDraft",
      "type": "object",
      "properties": {
        "key": {
          "description": "User-specific unique identifier for the product type (min.\n2 and max.\n256 characters).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "description": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeDefinitionDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "description"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttypedraft"
    },
    "ProductTypePagedQueryResponse": {
      "title": "ProductTypePagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductType"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<ProductType>"
    },
    "ProductTypeReference": {
      "title": "ProductTypeReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "product-type"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype"
    },
    "ProductTypeRemoveAttributeDefinitionAction": {
      "title": "ProductTypeRemoveAttributeDefinitionAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeAttributeDefinition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "description": "The name of the attribute to remove.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-attributedefinition"
    },
    "ProductTypeRemoveEnumValuesAction": {
      "title": "ProductTypeRemoveEnumValuesAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeEnumValues"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName",
            "keys"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-enumvalues-from-attributedefinition"
    },
    "ProductTypeResourceIdentifier": {
      "title": "ProductTypeResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "product-type"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype"
    },
    "ProductTypeSetInputTipAction": {
      "title": "ProductTypeSetInputTipAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setInputTip"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "attributeName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "inputTip": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "attributeName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-attributedefinition-inputtip"
    },
    "ProductTypeSetKeyAction": {
      "title": "ProductTypeSetKeyAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProductTypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-key"
    },
    "ProductTypeUpdate": {
      "title": "ProductTypeUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductTypeUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ProductType",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ProductTypeUpdate, ProductTypeUpdateAction>"
    },
    "ProductTypeUpdateAction": {
      "title": "ProductTypeUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ProductTypeAddAttributeDefinitionAction",
        "ProductTypeAddLocalizedEnumValueAction",
        "ProductTypeAddPlainEnumValueAction",
        "ProductTypeChangeAttributeConstraintAction",
        "ProductTypeChangeAttributeNameAction",
        "ProductTypeChangeAttributeOrderAction",
        "ProductTypeChangeAttributeOrderByNameAction",
        "ProductTypeChangeDescriptionAction",
        "ProductTypeChangeEnumKeyAction",
        "ProductTypeChangeInputHintAction",
        "ProductTypeChangeIsSearchableAction",
        "ProductTypeChangeLabelAction",
        "ProductTypeChangeLocalizedEnumValueLabelAction",
        "ProductTypeChangeLocalizedEnumValueOrderAction",
        "ProductTypeChangeNameAction",
        "ProductTypeChangePlainEnumValueLabelAction",
        "ProductTypeChangePlainEnumValueOrderAction",
        "ProductTypeRemoveAttributeDefinitionAction",
        "ProductTypeRemoveEnumValuesAction",
        "ProductTypeSetInputTipAction",
        "ProductTypeSetKeyAction"
      ],
      "x-annotation-package": "ProductType",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ProductTypeUpdateAction>"
    },
    "ProductUnpublishAction": {
      "title": "ProductUnpublishAction",
      "example": {
        "action": "unpublish"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "unpublish"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#unpublish"
    },
    "ProductUnpublishedMessage": {
      "title": "ProductUnpublishedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductUnpublished"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productunpublishedmessage"
    },
    "ProductUnpublishedMessagePayload": {
      "title": "ProductUnpublishedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductUnpublished"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productunpublishedmessage"
    },
    "ProductUpdate": {
      "title": "ProductUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ProductUpdate, ProductUpdateAction>"
    },
    "ProductUpdateAction": {
      "title": "ProductUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ProductAddAssetAction",
        "ProductAddExternalImageAction",
        "ProductAddPriceAction",
        "ProductAddToCategoryAction",
        "ProductAddVariantAction",
        "ProductChangeAssetNameAction",
        "ProductChangeAssetOrderAction",
        "ProductChangeMasterVariantAction",
        "ProductChangeNameAction",
        "ProductChangePriceAction",
        "ProductChangeSlugAction",
        "ProductLegacySetSkuAction",
        "ProductMoveImageToPositionAction",
        "ProductPublishAction",
        "ProductRemoveAssetAction",
        "ProductRemoveFromCategoryAction",
        "ProductRemoveImageAction",
        "ProductRemovePriceAction",
        "ProductRemoveVariantAction",
        "ProductRevertStagedChangesAction",
        "ProductRevertStagedVariantChangesAction",
        "ProductSetAssetCustomFieldAction",
        "ProductSetAssetCustomTypeAction",
        "ProductSetAssetDescriptionAction",
        "ProductSetAssetKeyAction",
        "ProductSetAssetSourcesAction",
        "ProductSetAssetTagsAction",
        "ProductSetAttributeAction",
        "ProductSetAttributeInAllVariantsAction",
        "ProductSetCategoryOrderHintAction",
        "ProductSetDescriptionAction",
        "ProductSetDiscountedPriceAction",
        "ProductSetImageLabelAction",
        "ProductSetKeyAction",
        "ProductSetMetaDescriptionAction",
        "ProductSetMetaKeywordsAction",
        "ProductSetMetaTitleAction",
        "ProductSetPricesAction",
        "ProductSetProductPriceCustomFieldAction",
        "ProductSetProductPriceCustomTypeAction",
        "ProductSetProductVariantKeyAction",
        "ProductSetSearchKeywordsAction",
        "ProductSetSkuAction",
        "ProductSetTaxCategoryAction",
        "ProductTransitionStateAction",
        "ProductUnpublishAction"
      ],
      "x-annotation-package": "Product",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ProductUpdateAction>"
    },
    "ProductVariant": {
      "title": "ProductVariant",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "price": {
          "$ref": "#/definitions/Price",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "availability": {
          "$ref": "#/definitions/ProductVariantAvailability",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "isMatchingVariant": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "scopedPrice": {
          "$ref": "#/definitions/ScopedPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "scopedPriceDiscounted": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariant"
    },
    "ProductVariantAddedMessage": {
      "title": "ProductVariantAddedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductVariantAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "variant": {
              "$ref": "#/definitions/ProductVariant",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "variant",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantaddedmessage"
    },
    "ProductVariantAddedMessagePayload": {
      "title": "ProductVariantAddedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductVariantAdded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variant": {
              "$ref": "#/definitions/ProductVariant",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "staged": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "variant",
            "staged"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantaddedmessage"
    },
    "ProductVariantAvailability": {
      "title": "ProductVariantAvailability",
      "type": "object",
      "properties": {
        "isOnStock": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "restockableInDays": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "availableQuantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "channels": {
          "$ref": "#/definitions/ProductVariantChannelAvailabilityMap",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantavailability"
    },
    "ProductVariantChannelAvailability": {
      "title": "ProductVariantChannelAvailability",
      "type": "object",
      "properties": {
        "isOnStock": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "restockableInDays": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "availableQuantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "ProductVariantChannelAvailabilityMap": {
      "title": "ProductVariantChannelAvailabilityMap",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "$ref": "#/definitions/ProductVariantChannelAvailability",
        "x-annotation-builtinType": "object",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "ProductVariantDeletedMessage": {
      "title": "ProductVariantDeletedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ProductVariantDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "variant": {
              "$ref": "#/definitions/ProductVariant",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "variant",
            "removedImageUrls"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantdeletedmessage"
    },
    "ProductVariantDeletedMessagePayload": {
      "title": "ProductVariantDeletedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ProductVariantDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "variant": {
              "$ref": "#/definitions/ProductVariant",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "removedImageUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "variant",
            "removedImageUrls"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantdeletedmessage"
    },
    "ProductVariantDraft": {
      "title": "ProductVariantDraft",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantdraft"
    },
    "ProductVariantImportDraft": {
      "title": "ProductVariantImportDraft",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The sequential ID of the variant within the product.\nThe variant with provided ID should exist in some existing product, so you also need to specify the productId if this property is set,\nor alternatively you can just specify SKU of the product variant.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "sku": {
          "description": "The SKU of the existing variant.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "prices": {
          "description": "The prices of the variant.\nThe prices should not contain two prices for the same price scope (same currency, country and customer group).\nIf this property is defined, then it will override the `prices` property from the original product variant, otherwise `prices` property from the original product variant would be copied in the resulting order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "attributes": {
          "description": "If this property is defined, then it will override the `attributes` property from the original\nproduct variant, otherwise `attributes` property from the original product variant would be copied in the resulting order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "images": {
          "description": "If this property is defined, then it will override the `images` property from the original\nproduct variant, otherwise `images` property from the original product variant would be copied in the resulting order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#productvariantimportdraft"
    },
    "Project": {
      "title": "Project",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "description": "The current version of the project.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "The unique key of the project.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The name of the project.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "countries": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryCode"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "currencies": {
          "description": "A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyCode"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "languages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "trialUntil": {
          "description": "The time is in the format Year-Month `YYYY-MM`.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "messages": {
          "$ref": "#/definitions/MessageConfiguration",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingRateInputType": {
          "$ref": "#/definitions/ShippingRateInputType",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "externalOAuth": {
          "$ref": "#/definitions/ExternalOAuth",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "carts": {
          "$ref": "#/definitions/CartsConfiguration",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "searchIndexing": {
          "$ref": "#/definitions/SearchIndexingConfiguration",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "key",
        "name",
        "countries",
        "currencies",
        "languages",
        "createdAt",
        "messages",
        "carts"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#project",
      "x-annotation-updateType": "ProjectUpdate"
    },
    "ProjectChangeCartsConfiguration": {
      "title": "ProjectChangeCartsConfiguration",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCartsConfiguration"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "cartsConfiguration": {
              "$ref": "#/definitions/CartsConfiguration",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-carts-configuration"
    },
    "ProjectChangeCountriesAction": {
      "title": "ProjectChangeCountriesAction",
      "example": {
        "action": "changeCountries",
        "countries": [
          "DE",
          "US"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCountries"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "countries": {
              "description": "A two-digit country code as per country code.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryCode"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "countries"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-countries"
    },
    "ProjectChangeCountryTaxRateFallbackEnabledAction": {
      "title": "ProjectChangeCountryTaxRateFallbackEnabledAction",
      "example": {
        "action": "changeCountryTaxRateFallbackEnabled",
        "countryTaxRateFallbackEnabled": true
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCountryTaxRateFallbackEnabled"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "countryTaxRateFallbackEnabled": {
              "description": "default value is `false`",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "countryTaxRateFallbackEnabled"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-country-tax-rate-fallback-enabled"
    },
    "ProjectChangeCurrenciesAction": {
      "title": "ProjectChangeCurrenciesAction",
      "example": {
        "action": "changeCurrencies",
        "currencies": [
          "EUR"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCurrencies"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "currencies": {
              "description": "A three-digit currency code as per currency code.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyCode"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "currencies"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-currencies"
    },
    "ProjectChangeLanguagesAction": {
      "title": "ProjectChangeLanguagesAction",
      "example": {
        "action": "changeLanguages",
        "languages": [
          "en",
          "de",
          "de-DE"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLanguages"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "languages": {
              "description": ".",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Locale"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "languages"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-languages"
    },
    "ProjectChangeMessagesConfigurationAction": {
      "title": "ProjectChangeMessagesConfigurationAction",
      "example": {
        "action": "changeMessagesConfiguration",
        "messagesConfiguration": {
          "enabled": true,
          "deleteDaysAfterCreation": 30
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeMessagesConfiguration"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "messagesConfiguration": {
              "$ref": "#/definitions/MessageConfigurationDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "messagesConfiguration"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-messages-configuration"
    },
    "ProjectChangeMessagesEnabledAction": {
      "title": "ProjectChangeMessagesEnabledAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeMessagesEnabled"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "messagesEnabled": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "messagesEnabled"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-messages-enabled",
      "x-annotation-deprecated": true
    },
    "ProjectChangeNameAction": {
      "title": "ProjectChangeNameAction",
      "example": {
        "action": "changeName",
        "name": "CTP Postman Monitor"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-name"
    },
    "ProjectChangeProductSearchIndexingEnabledAction": {
      "title": "ProjectChangeProductSearchIndexingEnabledAction",
      "example": {
        "action": "changeProductSearchIndexingEnabled",
        "enabled": true
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeProductSearchIndexingEnabled"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "enabled": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "enabled"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-product-search-indexing-enabled"
    },
    "ProjectNotConfiguredForLanguagesError": {
      "title": "ProjectNotConfiguredForLanguagesError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ProjectNotConfiguredForLanguages"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "languages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ProjectSetExternalOAuthAction": {
      "title": "ProjectSetExternalOAuthAction",
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setExternalOAuth"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalOAuth": {
              "description": "If you do not provide the `externalOAuth` field or provide a value\nof `null`, the update action unsets the External OAuth provider.",
              "$ref": "#/definitions/ExternalOAuth",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#set-externaloauth"
    },
    "ProjectSetShippingRateInputTypeAction": {
      "title": "ProjectSetShippingRateInputTypeAction",
      "example": {
        "action": "setShippingRateInputType",
        "shippingRateInputType": {
          "type": "CartScore"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProjectUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingRateInputType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingRateInputType": {
              "description": "If not set, removes existing shippingRateInputType.",
              "$ref": "#/definitions/ShippingRateInputType",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#set-shippingrateinputtype"
    },
    "ProjectUpdate": {
      "title": "ProjectUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ProjectUpdate, ProjectUpdateAction>"
    },
    "ProjectUpdateAction": {
      "title": "ProjectUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ProjectChangeCartsConfiguration",
        "ProjectChangeCountriesAction",
        "ProjectChangeCountryTaxRateFallbackEnabledAction",
        "ProjectChangeCurrenciesAction",
        "ProjectChangeLanguagesAction",
        "ProjectChangeMessagesConfigurationAction",
        "ProjectChangeMessagesEnabledAction",
        "ProjectChangeNameAction",
        "ProjectChangeProductSearchIndexingEnabledAction",
        "ProjectSetExternalOAuthAction",
        "ProjectSetShippingRateInputTypeAction"
      ],
      "x-annotation-package": "Project",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ProjectUpdateAction>"
    },
    "QueryComplexityLimitExceededError": {
      "title": "QueryComplexityLimitExceededError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "QueryComplexityLimitExceeded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "QueryPrice": {
      "title": "QueryPrice",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "value": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerGroup": {
          "$ref": "#/definitions/CustomerGroupReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "channel": {
          "$ref": "#/definitions/ChannelReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "validUntil": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "discounted": {
          "$ref": "#/definitions/DiscountedPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "tiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceTierDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "value"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#price"
    },
    "QueryTimedOutError": {
      "title": "QueryTimedOutError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "QueryTimedOut"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "RangeFacetResult": {
      "title": "RangeFacetResult",
      "allOf": [
        {
          "$ref": "#/definitions/FacetResult"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "range"
              ],
              "$ref": "#/definitions/FacetTypes",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "ranges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FacetResultRange"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "ranges"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "Reference": {
      "title": "Reference",
      "discriminator": "typeId",
      "type": "object",
      "properties": {
        "typeId": {
          "$ref": "#/definitions/ReferenceTypeId",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "typeId",
        "id"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartDiscountReference",
        "CartReference",
        "CategoryReference",
        "ChannelReference",
        "CustomObjectReference",
        "CustomerGroupReference",
        "CustomerReference",
        "DiscountCodeReference",
        "InventoryEntryReference",
        "OrderEditReference",
        "OrderReference",
        "PaymentReference",
        "ProductDiscountReference",
        "ProductReference",
        "ProductTypeReference",
        "ReviewReference",
        "ShippingMethodReference",
        "ShoppingListReference",
        "StateReference",
        "StoreReference",
        "TaxCategoryReference",
        "TypeReference",
        "ZoneReference"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference"
    },
    "ReferenceExistsError": {
      "title": "ReferenceExistsError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ReferenceExists"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "referencedBy": {
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ReferenceTypeId": {
      "title": "ReferenceTypeId",
      "enum": [
        "cart",
        "cart-discount",
        "category",
        "channel",
        "customer",
        "customer-email-token",
        "customer-group",
        "customer-password-token",
        "discount-code",
        "extension",
        "inventory-entry",
        "key-value-document",
        "order",
        "order-edit",
        "payment",
        "product",
        "product-discount",
        "product-type",
        "review",
        "shipping-method",
        "shopping-list",
        "state",
        "store",
        "subscription",
        "tax-category",
        "type",
        "zone"
      ],
      "type": "string",
      "x-annotation-package": "Common"
    },
    "ReferencedResourceNotFoundError": {
      "title": "ReferencedResourceNotFoundError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ReferencedResourceNotFound"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "typeId": {
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "typeId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ReplicaCartDraft": {
      "title": "ReplicaCartDraft",
      "type": "object",
      "properties": {
        "reference": {
          "x-annotation-oneOfDef": [
            {
              "$ref": "#/definitions/CartReference"
            },
            {
              "$ref": "#/definitions/OrderReference"
            }
          ],
          "x-annotation-oneOf": [
            "CartReference",
            "OrderReference"
          ],
          "x-annotation-builtinType": "any",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier of the cart.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "reference"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#replicacartdraft"
    },
    "RequiredFieldError": {
      "title": "RequiredFieldError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "RequiredField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "field": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "code",
            "message",
            "field"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ResourceCreatedDelivery": {
      "title": "ResourceCreatedDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "projectKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "notificationType": {
              "enum": [
                "ResourceCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "projectKey",
            "notificationType",
            "resource",
            "version",
            "modifiedAt"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcecreated-payload"
    },
    "ResourceDeletedDelivery": {
      "title": "ResourceDeletedDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "projectKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "notificationType": {
              "enum": [
                "ResourceDeleted"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "dataErasure": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "projectKey",
            "notificationType",
            "resource",
            "version",
            "modifiedAt"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcedeleted-payload"
    },
    "ResourceIdentifier": {
      "title": "ResourceIdentifier",
      "discriminator": "typeId",
      "type": "object",
      "properties": {
        "typeId": {
          "$ref": "#/definitions/ReferenceTypeId",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartDiscountResourceIdentifier",
        "CartResourceIdentifier",
        "CategoryResourceIdentifier",
        "ChannelResourceIdentifier",
        "CustomerGroupResourceIdentifier",
        "CustomerResourceIdentifier",
        "DiscountCodeResourceIdentifier",
        "InventoryEntryResourceIdentifier",
        "OrderEditResourceIdentifier",
        "OrderResourceIdentifier",
        "PaymentResourceIdentifier",
        "ProductDiscountResourceIdentifier",
        "ProductResourceIdentifier",
        "ProductTypeResourceIdentifier",
        "ReviewResourceIdentifier",
        "ShippingMethodResourceIdentifier",
        "ShoppingListResourceIdentifier",
        "StateResourceIdentifier",
        "StoreResourceIdentifier",
        "TaxCategoryResourceIdentifier",
        "TypeResourceIdentifier",
        "ZoneResourceIdentifier"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#resourceidentifier"
    },
    "ResourceNotFoundError": {
      "title": "ResourceNotFoundError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ResourceNotFound"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ResourceSizeLimitExceededError": {
      "title": "ResourceSizeLimitExceededError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ResourceSizeLimitExceeded"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ResourceTypeId": {
      "title": "ResourceTypeId",
      "enum": [
        "address",
        "asset",
        "category",
        "channel",
        "customer",
        "order",
        "order-edit",
        "inventory-entry",
        "line-item",
        "custom-line-item",
        "product-price",
        "payment",
        "payment-interface-interaction",
        "review",
        "shipping-method",
        "shopping-list",
        "shopping-list-text-line-item",
        "discount-code",
        "cart-discount",
        "customer-group"
      ],
      "type": "string",
      "x-annotation-package": "Type"
    },
    "ResourceUpdatedDelivery": {
      "title": "ResourceUpdatedDelivery",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionDelivery"
        },
        {
          "properties": {
            "projectKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "notificationType": {
              "enum": [
                "ResourceUpdated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "oldVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "projectKey",
            "notificationType",
            "resource",
            "version",
            "oldVersion",
            "modifiedAt"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourceupdated-payload"
    },
    "ReturnInfo": {
      "title": "ReturnInfo",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnItem"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "returnTrackingId": {
          "description": "Identifies, which return tracking ID is connected to this particular return.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "returnDate": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "items"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returninfo"
    },
    "ReturnItem": {
      "title": "ReturnItem",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "comment": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "shipmentState": {
          "$ref": "#/definitions/ReturnShipmentState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "paymentState": {
          "$ref": "#/definitions/ReturnPaymentState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "quantity",
        "type",
        "shipmentState",
        "paymentState",
        "lastModifiedAt",
        "createdAt"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CustomLineItemReturnItem",
        "LineItemReturnItem"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem"
    },
    "ReturnItemDraft": {
      "title": "ReturnItemDraft",
      "type": "object",
      "properties": {
        "quantity": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "lineItemId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customLineItemId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "comment": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "shipmentState": {
          "$ref": "#/definitions/ReturnShipmentState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "quantity",
        "shipmentState"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order"
    },
    "ReturnPaymentState": {
      "title": "ReturnPaymentState",
      "enum": [
        "NonRefundable",
        "Initial",
        "Refunded",
        "NotRefunded"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnpaymentstate"
    },
    "ReturnShipmentState": {
      "title": "ReturnShipmentState",
      "enum": [
        "Advised",
        "Returned",
        "BackInStock",
        "Unusable"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnshipmentstate"
    },
    "Review": {
      "title": "Review",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the review.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the review.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the review.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "uniquenessValue": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "authorName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "title": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "text": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "target": {
              "description": "Identifies the target of the review.\nCan be a Product or a Channel",
              "x-annotation-oneOfDef": [
                {
                  "$ref": "#/definitions/ProductReference"
                },
                {
                  "$ref": "#/definitions/ChannelReference"
                }
              ],
              "x-annotation-oneOf": [
                "ProductReference",
                "ChannelReference"
              ],
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            },
            "includedInStatistics": {
              "description": "Indicates if this review is taken into account in the ratings statistics of the target.\nA review is per default used in the statistics, unless the review is in a state that does not have the role `ReviewIncludedInStatistics`.\nIf the role of a State is modified after the calculation of this field, the calculation is not updated.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "rating": {
              "minimum": -100,
              "maximum": 100,
              "format": "int8",
              "description": "Number between -100 and 100 included.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "state": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "customer": {
              "description": "The customer who created the review.",
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "includedInStatistics"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#review",
      "x-annotation-updateType": "ReviewUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Review>"
    },
    "ReviewCreatedMessage": {
      "title": "ReviewCreatedMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ReviewCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "review": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "review"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewcreatedmessage"
    },
    "ReviewCreatedMessagePayload": {
      "title": "ReviewCreatedMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ReviewCreated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "review": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "review"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewcreatedmessage"
    },
    "ReviewDraft": {
      "title": "ReviewDraft",
      "type": "object",
      "properties": {
        "key": {
          "description": "User-specific unique identifier for the review.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "uniquenessValue": {
          "description": "If set, this value must be unique among reviews.\nFor example, if you want to have only one review per customer and per product, you can set the value to `customer's id` and `product's id`.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "locale": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "authorName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "title": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "text": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "target": {
          "description": "Identifies the target of the review.\nCan be a Product or a Channel",
          "x-annotation-oneOfDef": [
            {
              "$ref": "#/definitions/ProductResourceIdentifier"
            },
            {
              "$ref": "#/definitions/ChannelResourceIdentifier"
            }
          ],
          "x-annotation-oneOf": [
            "ProductResourceIdentifier",
            "ChannelResourceIdentifier"
          ],
          "x-annotation-builtinType": "any",
          "x-annotation-inherited": false
        },
        "state": {
          "$ref": "#/definitions/StateResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "rating": {
          "minimum": -100,
          "maximum": 100,
          "format": "int8",
          "description": "Number between -100 and 100 included.\nRating of the targeted object, like a product.\nThis rating can represent the number of stars, or a percentage, or a like (+1)/dislike (-1)\nA rating is used in the ratings statistics of the targeted object, unless the review is in a state that does not have the role `ReviewIncludedInStatistics`.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "customer": {
          "description": "The customer who created the review.",
          "$ref": "#/definitions/CustomerResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewdraft"
    },
    "ReviewPagedQueryResponse": {
      "title": "ReviewPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Review"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Review>"
    },
    "ReviewRatingSetMessage": {
      "title": "ReviewRatingSetMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ReviewRatingSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "oldRating": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "newRating": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "includedInStatistics": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "target": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "includedInStatistics"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewratingsetmessage"
    },
    "ReviewRatingSetMessagePayload": {
      "title": "ReviewRatingSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ReviewRatingSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "oldRating": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "newRating": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "includedInStatistics": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "target": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "includedInStatistics"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewratingsetmessage"
    },
    "ReviewRatingStatistics": {
      "title": "ReviewRatingStatistics",
      "type": "object",
      "properties": {
        "averageRating": {
          "format": "float",
          "description": "Average rating of one target\nThis number is rounded with 5 decimals.",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "highestRating": {
          "format": "float",
          "description": "Highest rating of one target",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "lowestRating": {
          "format": "float",
          "description": "Lowest rating of one target",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int",
          "description": "Number of ratings taken into account",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "ratingsDistribution": {
          "description": "The full distribution of the ratings.\nThe keys are the different ratings and the values are the count of reviews having this rating.\nOnly the used ratings appear in this object.",
          "type": "object",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "averageRating",
        "highestRating",
        "lowestRating",
        "count",
        "ratingsDistribution"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewratingstatistics"
    },
    "ReviewReference": {
      "title": "ReviewReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "review"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review"
    },
    "ReviewResourceIdentifier": {
      "title": "ReviewResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "review"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review"
    },
    "ReviewSetAuthorNameAction": {
      "title": "ReviewSetAuthorNameAction",
      "example": {
        "action": "setAuthorName",
        "authorName": "myAuthorName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAuthorName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "authorName": {
              "description": "If `authorName` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-author-name"
    },
    "ReviewSetCustomFieldAction": {
      "title": "ReviewSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-customfield"
    },
    "ReviewSetCustomTypeAction": {
      "title": "ReviewSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the CustomFields to this value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-custom-type"
    },
    "ReviewSetCustomerAction": {
      "title": "ReviewSetCustomerAction",
      "example": {
        "action": "setCustomer",
        "customer": {
          "typeId": "customer",
          "id": "0c2eaad4-833c-43c1-98a4-5d03f57e9329"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomer"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customer": {
              "description": "The customer who created the review.\nIf `customer` is absent or `null`, this field will be removed if it exists.",
              "$ref": "#/definitions/CustomerResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-customer"
    },
    "ReviewSetKeyAction": {
      "title": "ReviewSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "myReviewKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-key"
    },
    "ReviewSetLocaleAction": {
      "title": "ReviewSetLocaleAction",
      "example": {
        "action": "setLocale",
        "locale": "ISO-code locale"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocale"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "locale": {
              "description": "If `locale` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-locale"
    },
    "ReviewSetRatingAction": {
      "title": "ReviewSetRatingAction",
      "example": {
        "action": "setRating",
        "rating": 60
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setRating"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "rating": {
              "format": "int8",
              "description": "Number between -100 and 100 included.\nIf `rating` is absent or `null`, this field will be removed if it exists.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-rating"
    },
    "ReviewSetTargetAction": {
      "title": "ReviewSetTargetAction",
      "example": {
        "action": "setTarget",
        "target": {
          "typeId": "product",
          "id": "{{product-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTarget"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "target": {
              "description": "Identifies the target of the review.\nCan be a Product or a Channel.\nIf `target` is absent or `null`, this field will be removed if it exists.",
              "x-annotation-oneOfDef": [
                {
                  "$ref": "#/definitions/ProductResourceIdentifier"
                },
                {
                  "$ref": "#/definitions/ChannelResourceIdentifier"
                }
              ],
              "x-annotation-oneOf": [
                "ProductResourceIdentifier",
                "ChannelResourceIdentifier"
              ],
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "target"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-target"
    },
    "ReviewSetTextAction": {
      "title": "ReviewSetTextAction",
      "example": {
        "action": "setText",
        "text": "reviewText"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setText"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "text": {
              "description": "If `text` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-text"
    },
    "ReviewSetTitleAction": {
      "title": "ReviewSetTitleAction",
      "example": {
        "action": "setTitle",
        "title": "reviewTitle"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTitle"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "title": {
              "description": "If `title` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-title"
    },
    "ReviewStateTransitionMessage": {
      "title": "ReviewStateTransitionMessage",
      "allOf": [
        {
          "$ref": "#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "sequenceNumber": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "resource": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "resourceVersion": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "type": {
              "enum": [
                "ReviewStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "resourceUserProvidedIdentifiers": {
              "$ref": "#/definitions/UserProvidedIdentifiers",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "oldState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "newState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldIncludedInStatistics": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "newIncludedInStatistics": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "target": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "sequenceNumber",
            "resource",
            "resourceVersion",
            "type",
            "oldState",
            "newState",
            "oldIncludedInStatistics",
            "newIncludedInStatistics",
            "target",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewstatetransitionmessage"
    },
    "ReviewStateTransitionMessagePayload": {
      "title": "ReviewStateTransitionMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ReviewStateTransition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "oldState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "newState": {
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "oldIncludedInStatistics": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "newIncludedInStatistics": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "target": {
              "$ref": "#/definitions/Reference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "oldState",
            "newState",
            "oldIncludedInStatistics",
            "newIncludedInStatistics",
            "target",
            "force"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewstatetransitionmessage"
    },
    "ReviewTransitionStateAction": {
      "title": "ReviewTransitionStateAction",
      "example": {
        "action": "transitionState",
        "state": {
          "typeId": "state",
          "id": "{{state-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReviewUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#transition-state"
    },
    "ReviewUpdate": {
      "title": "ReviewUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReviewUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Review",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ReviewUpdate, ReviewUpdateAction>"
    },
    "ReviewUpdateAction": {
      "title": "ReviewUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ReviewSetAuthorNameAction",
        "ReviewSetCustomFieldAction",
        "ReviewSetCustomTypeAction",
        "ReviewSetCustomerAction",
        "ReviewSetKeyAction",
        "ReviewSetLocaleAction",
        "ReviewSetRatingAction",
        "ReviewSetTargetAction",
        "ReviewSetTextAction",
        "ReviewSetTitleAction",
        "ReviewTransitionStateAction"
      ],
      "x-annotation-package": "Review",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ReviewUpdateAction>"
    },
    "RoundingMode": {
      "title": "RoundingMode",
      "enum": [
        "HalfEven",
        "HalfUp",
        "HalfDown"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "ScopedPrice": {
      "title": "ScopedPrice",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "value": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "currentValue": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "country": {
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerGroup": {
          "$ref": "#/definitions/CustomerGroupReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "channel": {
          "$ref": "#/definitions/ChannelReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "validUntil": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "discounted": {
          "$ref": "#/definitions/DiscountedPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "value",
        "currentValue"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#scopedprice"
    },
    "ScoreShippingRateInput": {
      "title": "ScoreShippingRateInput",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInput"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "Score"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "score": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "score"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinput"
    },
    "ScoreShippingRateInputDraft": {
      "title": "ScoreShippingRateInputDraft",
      "allOf": [
        {
          "$ref": "#/definitions/ShippingRateInputDraft"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "Score"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "score": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "score"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinputdraft"
    },
    "SearchDeactivatedError": {
      "title": "SearchDeactivatedError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "SearchDeactivated"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "SearchExecutionFailureError": {
      "title": "SearchExecutionFailureError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "SearchExecutionFailure"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "SearchFacetPathNotFoundError": {
      "title": "SearchFacetPathNotFoundError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "SearchFacetPathNotFound"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "SearchIndexingConfiguration": {
      "title": "SearchIndexingConfiguration",
      "type": "object",
      "properties": {
        "products": {
          "$ref": "#/definitions/SearchIndexingConfigurationValues",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project"
    },
    "SearchIndexingConfigurationStatus": {
      "title": "SearchIndexingConfigurationStatus",
      "description": "Can be one of the following or absent. \"Activated\" or absent means that the search and suggest endpoints for the specified resource type are active. \"Deactivated\" means that the search and suggest endpoints for the specified resource type cannot be used. \"Indexing\" indicates that the search and suggest endpoints can _temporally_ not be used because the search index is being re-built.",
      "enum": [
        "Activated",
        "Deactivated",
        "Indexing"
      ],
      "type": "string",
      "x-annotation-package": "Project"
    },
    "SearchIndexingConfigurationValues": {
      "title": "SearchIndexingConfigurationValues",
      "type": "object",
      "properties": {
        "status": {
          "description": "Can be one of the following or absent. \"Activated\" or absent means that the search and suggest endpoints for the specified resource type are active. \"Deactivated\" means that the search and suggest endpoints for the specified resource type cannot be used. \"Indexing\" indicates that the search and suggest endpoints can _temporally_ not be used because the search index is being re-built.",
          "$ref": "#/definitions/SearchIndexingConfigurationStatus",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/LastModifiedBy",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Project"
    },
    "SearchIndexingInProgressError": {
      "title": "SearchIndexingInProgressError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "SearchIndexingInProgress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "SearchKeyword": {
      "title": "SearchKeyword",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "suggestTokenizer": {
          "$ref": "#/definitions/SuggestTokenizer",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "text"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeyword"
    },
    "SearchKeywords": {
      "title": "SearchKeywords",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "type": "array",
        "items": {
          "$ref": "#/definitions/SearchKeyword"
        },
        "x-annotation-builtinType": "array",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeywords"
    },
    "SelectionMode": {
      "title": "SelectionMode",
      "enum": [
        "Cheapest",
        "MostExpensive"
      ],
      "type": "string",
      "x-annotation-package": "CartDiscount"
    },
    "SemanticErrorError": {
      "title": "SemanticErrorError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "SemanticError"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ShipmentState": {
      "title": "ShipmentState",
      "enum": [
        "Shipped",
        "Ready",
        "Pending",
        "Delayed",
        "Partial",
        "Backorder"
      ],
      "type": "string",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#shipmentstate"
    },
    "ShippingInfo": {
      "title": "ShippingInfo",
      "type": "object",
      "properties": {
        "shippingMethodName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "price": {
          "description": "Determined based on the ShippingRate and its tiered prices, and either the sum of LineItem prices or the `shippingRateInput` field.",
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingRate": {
          "description": "The shipping rate used to determine the price.",
          "$ref": "#/definitions/ShippingRate",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxedPrice": {
          "description": "Set once the `taxRate` is set.",
          "$ref": "#/definitions/TaxedItemPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxRate": {
          "description": "Will be set automatically in the `Platform` TaxMode once the shipping address is set is set.\nFor the `External` tax mode the tax rate has to be set explicitly with the ExternalTaxRateDraft.",
          "$ref": "#/definitions/TaxRate",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxCategory": {
          "$ref": "#/definitions/TaxCategoryReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingMethod": {
          "description": "Not set if custom shipping method is used.",
          "$ref": "#/definitions/ShippingMethodReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "deliveries": {
          "description": "Deliveries are compilations of information on how the articles are being delivered to the customers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delivery"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "discountedPrice": {
          "$ref": "#/definitions/DiscountedLineItemPrice",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingMethodState": {
          "description": "Indicates whether the ShippingMethod referenced in this ShippingInfo is allowed for the cart or not.",
          "$ref": "#/definitions/ShippingMethodState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "shippingMethodName",
        "price",
        "shippingRate",
        "shippingMethodState"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippinginfo"
    },
    "ShippingInfoImportDraft": {
      "title": "ShippingInfoImportDraft",
      "type": "object",
      "properties": {
        "shippingMethodName": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "price": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingRate": {
          "description": "The shipping rate used to determine the price.",
          "$ref": "#/definitions/ShippingRateDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxRate": {
          "$ref": "#/definitions/TaxRate",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxCategory": {
          "$ref": "#/definitions/TaxCategoryResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingMethod": {
          "description": "Not set if custom shipping method is used.",
          "$ref": "#/definitions/ShippingMethodResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "deliveries": {
          "description": "Deliveries are compilations of information on how the articles are being delivered to the customers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delivery"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "discountedPrice": {
          "$ref": "#/definitions/DiscountedLineItemPriceDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingMethodState": {
          "description": "Indicates whether the ShippingMethod referenced is allowed for the cart or not.",
          "$ref": "#/definitions/ShippingMethodState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "shippingMethodName",
        "price",
        "shippingRate"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#shippinginfoimportdraft"
    },
    "ShippingMethod": {
      "title": "ShippingMethod",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the shipping method.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the shipping method.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the shipping method.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "localizedDescription": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "zoneRates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ZoneRate"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "isDefault": {
              "description": "One shipping method in a project can be default.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "predicate": {
              "description": "A Cart predicate which can be used to more precisely select a shipping method for a cart.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name",
            "taxCategory",
            "zoneRates",
            "isDefault"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod",
      "x-annotation-updateType": "ShippingMethodUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<ShippingMethod>"
    },
    "ShippingMethodAddShippingRateAction": {
      "title": "ShippingMethodAddShippingRateAction",
      "example": {
        "action": "addShippingRate",
        "zone": {
          "typeId": "zone",
          "id": "{{zone-id}}"
        },
        "shippingRate": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4000
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addShippingRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "zone": {
              "$ref": "#/definitions/ZoneResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingRate": {
              "$ref": "#/definitions/ShippingRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "zone",
            "shippingRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-shippingrate"
    },
    "ShippingMethodAddZoneAction": {
      "title": "ShippingMethodAddZoneAction",
      "example": {
        "action": "addZone",
        "zone": {
          "typeId": "zone",
          "id": "{{zone-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addZone"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "zone": {
              "$ref": "#/definitions/ZoneResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "zone"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-zone"
    },
    "ShippingMethodChangeIsDefaultAction": {
      "title": "ShippingMethodChangeIsDefaultAction",
      "example": {
        "action": "changeIsDefault",
        "isDefault": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeIsDefault"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "isDefault": {
              "description": "Only one ShippingMethod in a project can be default.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "isDefault"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-isdefault"
    },
    "ShippingMethodChangeNameAction": {
      "title": "ShippingMethodChangeNameAction",
      "example": {
        "action": "changeName",
        "name": "nameString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-name"
    },
    "ShippingMethodChangeTaxCategoryAction": {
      "title": "ShippingMethodChangeTaxCategoryAction",
      "example": {
        "action": "changeTaxCategory",
        "taxCategory": {
          "id": "{{tax-category-id}}",
          "typeId": "tax-category"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxCategory"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxCategory"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-taxcategory"
    },
    "ShippingMethodDoesNotMatchCartError": {
      "title": "ShippingMethodDoesNotMatchCartError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "ShippingMethodDoesNotMatchCart"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "ShippingMethodDraft": {
      "title": "ShippingMethodDraft",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "description": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "localizedDescription": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxCategory": {
          "$ref": "#/definitions/TaxCategoryResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "zoneRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneRateDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "isDefault": {
          "description": "If `true` the shipping method will be the default one in a project.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "predicate": {
          "description": "A Cart predicate which can be used to more precisely select a shipping method for a cart.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "taxCategory",
        "zoneRates",
        "isDefault"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethoddraft"
    },
    "ShippingMethodPagedQueryResponse": {
      "title": "ShippingMethodPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingMethod"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "count",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<ShippingMethod>"
    },
    "ShippingMethodReference": {
      "title": "ShippingMethodReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "shipping-method"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod"
    },
    "ShippingMethodRemoveShippingRateAction": {
      "title": "ShippingMethodRemoveShippingRateAction",
      "example": {
        "action": "removeShippingRate",
        "zone": {
          "typeId": "zone",
          "id": "{{zone-id}}"
        },
        "shippingRate": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4000
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeShippingRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "zone": {
              "$ref": "#/definitions/ZoneResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingRate": {
              "$ref": "#/definitions/ShippingRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "zone",
            "shippingRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-shippingrate"
    },
    "ShippingMethodRemoveZoneAction": {
      "title": "ShippingMethodRemoveZoneAction",
      "example": {
        "action": "removeZone",
        "zone": {
          "typeId": "zone",
          "id": "{{zone-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeZone"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "zone": {
              "$ref": "#/definitions/ZoneResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "zone"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-zone"
    },
    "ShippingMethodResourceIdentifier": {
      "title": "ShippingMethodResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "shipping-method"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod"
    },
    "ShippingMethodSetCustomFieldAction": {
      "title": "ShippingMethodSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-customfield"
    },
    "ShippingMethodSetCustomTypeAction": {
      "title": "ShippingMethodSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-customtype"
    },
    "ShippingMethodSetDescriptionAction": {
      "title": "ShippingMethodSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": "descriptionString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-description"
    },
    "ShippingMethodSetKeyAction": {
      "title": "ShippingMethodSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "keyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, it is removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-key"
    },
    "ShippingMethodSetLocalizedDescriptionAction": {
      "title": "ShippingMethodSetLocalizedDescriptionAction",
      "example": {
        "action": "setLocalizedDescription",
        "localizedDescription": "localizedDescriptionString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocalizedDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "localizedDescription": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-localized-description"
    },
    "ShippingMethodSetPredicateAction": {
      "title": "ShippingMethodSetPredicateAction",
      "example": {
        "action": "setPredicate",
        "predicate": "1=1"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShippingMethodUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setPredicate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "predicate": {
              "description": "A valid Cart predicate.\nIf `predicate` is absent or `null`, it is removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-predicate"
    },
    "ShippingMethodState": {
      "title": "ShippingMethodState",
      "enum": [
        "DoesNotMatchCart",
        "MatchesCart"
      ],
      "type": "string",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingmethodstate"
    },
    "ShippingMethodUpdate": {
      "title": "ShippingMethodUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingMethodUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ShippingMethodUpdate, ShippingMethodUpdateAction>"
    },
    "ShippingMethodUpdateAction": {
      "title": "ShippingMethodUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ShippingMethodAddShippingRateAction",
        "ShippingMethodAddZoneAction",
        "ShippingMethodChangeIsDefaultAction",
        "ShippingMethodChangeNameAction",
        "ShippingMethodChangeTaxCategoryAction",
        "ShippingMethodRemoveShippingRateAction",
        "ShippingMethodRemoveZoneAction",
        "ShippingMethodSetCustomFieldAction",
        "ShippingMethodSetCustomTypeAction",
        "ShippingMethodSetDescriptionAction",
        "ShippingMethodSetKeyAction",
        "ShippingMethodSetLocalizedDescriptionAction",
        "ShippingMethodSetPredicateAction"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ShippingMethodUpdateAction>"
    },
    "ShippingRate": {
      "title": "ShippingRate",
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "freeAbove": {
          "description": "The shipping is free if the order total (the sum of line item prices) exceeds the `freeAbove` value.\nNote: `freeAbove` applies before any Cart or Product discounts, and can cause discounts to apply in invalid scenarios.\nUse a Cart Discount to set the shipping price to 0 to avoid providing free shipping in invalid discount scenarios.",
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "isMatching": {
          "description": "Only appears in response to requests for shipping methods by cart or location to mark this shipping rate as one that matches the cart or location.",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "tiers": {
          "description": "A list of shipping rate price tiers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRatePriceTier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "price",
        "tiers"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
    },
    "ShippingRateDraft": {
      "title": "ShippingRateDraft",
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "freeAbove": {
          "description": "The shipping is free if the order total (the sum of line item prices) exceeds the freeAbove value.\nNote: `freeAbove` applies before any Cart or Product discounts, and can cause discounts to apply in invalid scenarios.\nUse a Cart Discount to set the shipping price to 0 to avoid providing free shipping in invalid discount scenarios.",
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "tiers": {
          "description": "A list of shipping rate price tiers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRatePriceTier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "price"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratedraft"
    },
    "ShippingRateInput": {
      "title": "ShippingRateInput",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ClassificationShippingRateInput",
        "ScoreShippingRateInput"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinput"
    },
    "ShippingRateInputDraft": {
      "title": "ShippingRateInputDraft",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ClassificationShippingRateInputDraft",
        "ScoreShippingRateInputDraft"
      ],
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinputdraft"
    },
    "ShippingRateInputType": {
      "title": "ShippingRateInputType",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ShippingRateTierType",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartClassificationType",
        "CartScoreType",
        "CartValueType"
      ],
      "x-annotation-package": "Project",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#shippingrateinputtype"
    },
    "ShippingRatePriceTier": {
      "title": "ShippingRatePriceTier",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ShippingRateTierType",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CartClassificationTier",
        "CartScoreTier",
        "CartValueTier"
      ],
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
    },
    "ShippingRateTierType": {
      "title": "ShippingRateTierType",
      "enum": [
        "CartValue",
        "CartClassification",
        "CartScore"
      ],
      "type": "string",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratepricetier"
    },
    "ShoppingList": {
      "title": "ShoppingList",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the shopping list.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the shopping list.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "customer": {
              "$ref": "#/definitions/CustomerReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "deleteDaysAfterLastModification": {
              "format": "int64",
              "description": "The shopping list will be deleted automatically if it hasn't been modified for the specified amount of days.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the shopping list.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "lineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShoppingListLineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "slug": {
              "description": "Human-readable identifiers usually used as deep-link URL to the related shopping list.\nEach slug is unique across a project, but a shopping list can have the same slug for different languages.\nThe slug must match the pattern [a-zA-Z0-9_-]{2,256}.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "textLineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TextLineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "anonymousId": {
              "description": "Identifies shopping lists belonging to an anonymous session (the customer has not signed up/in yet).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "store": {
              "$ref": "#/definitions/StoreKeyReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingList",
      "x-annotation-updateType": "ShoppingListUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<ShoppingList>"
    },
    "ShoppingListAddLineItemAction": {
      "title": "ShoppingListAddLineItemAction",
      "example": {
        "action": "addLineItem",
        "productId": "{{product-id}}",
        "variantId": 1,
        "quantity": 2
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "productId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "addedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-lineitem"
    },
    "ShoppingListAddTextLineItemAction": {
      "title": "ShoppingListAddTextLineItemAction",
      "example": {
        "action": "addTextLineItem",
        "name": {
          "de": "textDE",
          "en": "textEN"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addTextLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "addedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-textlineitem"
    },
    "ShoppingListChangeLineItemQuantityAction": {
      "title": "ShoppingListChangeLineItemQuantityAction",
      "example": {
        "action": "changeLineItemQuantity",
        "lineItemId": "{{lineItemId}}",
        "quantity": 8
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitem-quantity"
    },
    "ShoppingListChangeLineItemsOrderAction": {
      "title": "ShoppingListChangeLineItemsOrderAction",
      "example": {
        "action": "changeLineItemsOrder",
        "lineItemOrder": [
          "{{lineItemId2}}",
          "{{lineItemId}}"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLineItemsOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemOrder": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitems-order"
    },
    "ShoppingListChangeNameAction": {
      "title": "ShoppingListChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "de": "Name",
          "en": "name"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-name"
    },
    "ShoppingListChangeTextLineItemNameAction": {
      "title": "ShoppingListChangeTextLineItemNameAction",
      "example": {
        "action": "changeTextLineItemName",
        "textLineItemId": "{{lineItemId}}",
        "name": {
          "de": "name",
          "en": "name"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTextLineItemName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-name"
    },
    "ShoppingListChangeTextLineItemQuantityAction": {
      "title": "ShoppingListChangeTextLineItemQuantityAction",
      "example": {
        "action": "changeTextLineItemQuantity",
        "textLineItemId": "{{lineItemId}}",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTextLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-quantity"
    },
    "ShoppingListChangeTextLineItemsOrderAction": {
      "title": "ShoppingListChangeTextLineItemsOrderAction",
      "example": {
        "action": "changeTextLineItemsOrder",
        "textLineItemOrder": [
          "{{lineItemId2}}",
          "{{lineItemId}}"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTextLineItemsOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemOrder": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemOrder"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitems-order"
    },
    "ShoppingListDraft": {
      "title": "ShoppingListDraft",
      "type": "object",
      "properties": {
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "customer": {
          "$ref": "#/definitions/CustomerResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "deleteDaysAfterLastModification": {
          "format": "int64",
          "description": "The shopping list will be deleted automatically if it hasn't been modified for the specified amount of days.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "description": "User-specific unique identifier for the shopping list.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingListLineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "slug": {
          "description": "Human-readable identifiers usually used as deep-link URL to the related shopping list.\nEach slug is unique across a project, but a shopping list can have the same slug for different languages.\nThe slug must match the pattern [a-zA-Z0-9_-]{2,256}.",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "textLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextLineItemDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "anonymousId": {
          "description": "Identifies shopping lists belonging to an anonymous session (the customer has not signed up/in yet).",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "store": {
          "$ref": "#/definitions/StoreResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingListDraft"
    },
    "ShoppingListLineItem": {
      "title": "ShoppingListLineItem",
      "type": "object",
      "properties": {
        "addedAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "deactivatedAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "id": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "productId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "productSlug": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "productType": {
          "$ref": "#/definitions/ProductTypeReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "variant": {
          "$ref": "#/definitions/ProductVariant",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "variantId": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "addedAt",
        "id",
        "name",
        "productId",
        "productType",
        "quantity"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList"
    },
    "ShoppingListLineItemDraft": {
      "title": "ShoppingListLineItemDraft",
      "type": "object",
      "properties": {
        "addedAt": {
          "type": "string",
          "format": "date-time",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "productId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "variantId": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList"
    },
    "ShoppingListPagedQueryResponse": {
      "title": "ShoppingListPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingList"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<ShoppingList>"
    },
    "ShoppingListReference": {
      "title": "ShoppingListReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "shopping-list"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shopping-lists.html#shopping-list"
    },
    "ShoppingListRemoveLineItemAction": {
      "title": "ShoppingListRemoveLineItemAction",
      "example": {
        "action": "removeLineItem",
        "lineItemId": "{{lineItemId}}",
        "quantity": 2
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-lineitem"
    },
    "ShoppingListRemoveTextLineItemAction": {
      "title": "ShoppingListRemoveTextLineItemAction",
      "example": {
        "action": "removeTextLineItem",
        "textLineItemId": "{{lineItemId}}",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeTextLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-textlineitem"
    },
    "ShoppingListResourceIdentifier": {
      "title": "ShoppingListResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "shopping-list"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shopping-lists.html#shopping-list"
    },
    "ShoppingListSetAnonymousIdAction": {
      "title": "ShoppingListSetAnonymousIdAction",
      "example": {
        "action": "setAnonymousId",
        "anonymousId": "ThisIsMyID"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setAnonymousId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "anonymousId": {
              "description": "Anonymous ID of the anonymous customer that this shopping list belongs to.\nIf this field is not set any existing `anonymousId` is removed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-anonymousid"
    },
    "ShoppingListSetCustomFieldAction": {
      "title": "ShoppingListSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customfield"
    },
    "ShoppingListSetCustomTypeAction": {
      "title": "ShoppingListSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "If set, the custom fields are set to this new value.",
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-custom-type"
    },
    "ShoppingListSetCustomerAction": {
      "title": "ShoppingListSetCustomerAction",
      "example": {
        "action": "setCustomer",
        "customer": {
          "typeId": "customer",
          "id": "{{customer-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomer"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customer": {
              "$ref": "#/definitions/CustomerResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customer"
    },
    "ShoppingListSetDeleteDaysAfterLastModificationAction": {
      "title": "ShoppingListSetDeleteDaysAfterLastModificationAction",
      "example": {
        "action": "setDeleteDaysAfterLastModification",
        "deleteDaysAfterLastModification": 10
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeleteDaysAfterLastModification"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deleteDaysAfterLastModification": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-deletedaysafterlastmodification"
    },
    "ShoppingListSetDescriptionAction": {
      "title": "ShoppingListSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "en": "description",
          "de": "Beschreibung"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-description"
    },
    "ShoppingListSetKeyAction": {
      "title": "ShoppingListSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "key"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "User-specific unique identifier for the shopping list.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-key"
    },
    "ShoppingListSetLineItemCustomFieldAction": {
      "title": "ShoppingListSetLineItemCustomFieldAction",
      "example": {
        "action": "setLineItemCustomField",
        "lineItemId": "{{lineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-customfield"
    },
    "ShoppingListSetLineItemCustomTypeAction": {
      "title": "ShoppingListSetLineItemCustomTypeAction",
      "example": {
        "action": "setLineItemCustomType",
        "lineItemId": "{{lineItemId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-custom-type"
    },
    "ShoppingListSetSlugAction": {
      "title": "ShoppingListSetSlugAction",
      "example": {
        "action": "setSlug",
        "slug": {
          "en": "en-slug",
          "de": "de-slug"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setSlug"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "slug": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-slug"
    },
    "ShoppingListSetStoreAction": {
      "title": "ShoppingListSetStoreAction",
      "example": {
        "action": "setStore",
        "store": {
          "key": "{{store-key}}",
          "typeId": "store"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setStore"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-store"
    },
    "ShoppingListSetTextLineItemCustomFieldAction": {
      "title": "ShoppingListSetTextLineItemCustomFieldAction",
      "example": {
        "action": "setTextLineItemCustomField",
        "textLineItemId": "{{lineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTextLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-customfield"
    },
    "ShoppingListSetTextLineItemCustomTypeAction": {
      "title": "ShoppingListSetTextLineItemCustomTypeAction",
      "example": {
        "action": "setTextLineItemCustomType",
        "textLineItemId": "{{lineItemId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTextLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-custom-type"
    },
    "ShoppingListSetTextLineItemDescriptionAction": {
      "title": "ShoppingListSetTextLineItemDescriptionAction",
      "example": {
        "action": "setTextLineItemDescription",
        "textLineItemId": "{{lineItemId}}",
        "description": {
          "de": "Beschreibung",
          "en": "description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ShoppingListUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTextLineItemDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "textLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "textLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-description"
    },
    "ShoppingListStoreSetMessagePayload": {
      "title": "ShoppingListStoreSetMessagePayload",
      "allOf": [
        {
          "$ref": "#/definitions/MessagePayload"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "ShoppingListStoreSet"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreKeyReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "store"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#shoppingliststoreset-message"
    },
    "ShoppingListUpdate": {
      "title": "ShoppingListUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingListUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ShoppingListUpdate, ShoppingListUpdateAction>"
    },
    "ShoppingListUpdateAction": {
      "title": "ShoppingListUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ShoppingListAddLineItemAction",
        "ShoppingListAddTextLineItemAction",
        "ShoppingListChangeLineItemQuantityAction",
        "ShoppingListChangeLineItemsOrderAction",
        "ShoppingListChangeNameAction",
        "ShoppingListChangeTextLineItemNameAction",
        "ShoppingListChangeTextLineItemQuantityAction",
        "ShoppingListChangeTextLineItemsOrderAction",
        "ShoppingListRemoveLineItemAction",
        "ShoppingListRemoveTextLineItemAction",
        "ShoppingListSetAnonymousIdAction",
        "ShoppingListSetCustomFieldAction",
        "ShoppingListSetCustomTypeAction",
        "ShoppingListSetCustomerAction",
        "ShoppingListSetDeleteDaysAfterLastModificationAction",
        "ShoppingListSetDescriptionAction",
        "ShoppingListSetKeyAction",
        "ShoppingListSetLineItemCustomFieldAction",
        "ShoppingListSetLineItemCustomTypeAction",
        "ShoppingListSetSlugAction",
        "ShoppingListSetStoreAction",
        "ShoppingListSetTextLineItemCustomFieldAction",
        "ShoppingListSetTextLineItemCustomTypeAction",
        "ShoppingListSetTextLineItemDescriptionAction"
      ],
      "x-annotation-package": "ShoppingList",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ShoppingListUpdateAction>"
    },
    "SnsDestination": {
      "title": "SnsDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "SNS"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "accessKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "accessSecret": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "topicArn": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "accessKey",
            "accessSecret",
            "topicArn"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "SqsDestination": {
      "title": "SqsDestination",
      "allOf": [
        {
          "$ref": "#/definitions/Destination"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "SQS"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "accessKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "accessSecret": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "queueUrl": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "region": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "accessKey",
            "accessSecret",
            "queueUrl",
            "region"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription"
    },
    "StackingMode": {
      "title": "StackingMode",
      "enum": [
        "Stacking",
        "StopAfterThisDiscount"
      ],
      "type": "string",
      "x-annotation-package": "CartDiscount"
    },
    "StagedOrder": {
      "title": "StagedOrder",
      "allOf": [
        {
          "$ref": "#/definitions/Order"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the order.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": true
            },
            "version": {
              "format": "int64",
              "description": "The current version of the order.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "completedAt": {
              "format": "date-time",
              "description": "This field will only be present if it was set for Order Import",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": true
            },
            "orderNumber": {
              "description": "String that uniquely identifies an order.\nIt can be used to create more human-readable (in contrast to ID) identifier for the order.\nIt should be unique across a project.\nOnce it's set it cannot be changed.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerEmail": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "anonymousId": {
              "description": "Identifies carts and orders belonging to an anonymous session (the customer has not signed up/in yet).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "store": {
              "$ref": "#/definitions/StoreKeyReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "lineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": true
            },
            "customLineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomLineItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": true
            },
            "totalPrice": {
              "$ref": "#/definitions/TypedMoney",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "taxedPrice": {
              "description": "The taxes are calculated based on the shipping address.",
              "$ref": "#/definitions/TaxedPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "shippingAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "billingAddress": {
              "$ref": "#/definitions/Address",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "taxMode": {
              "$ref": "#/definitions/TaxMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxRoundingMode": {
              "description": "When calculating taxes for `taxedPrice`, the selected mode is used for rouding.",
              "$ref": "#/definitions/RoundingMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "description": "Set when the customer is set and the customer is a member of a customer group.\nUsed for product variant price selection.",
              "$ref": "#/definitions/CustomerGroupReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "country": {
              "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nUsed for product variant price selection.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "orderState": {
              "description": "One of the four predefined OrderStates.",
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "description": "This reference can point to a state in a custom workflow.",
              "$ref": "#/definitions/StateReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "shipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "paymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingInfo": {
              "description": "Set if the ShippingMethod is set.",
              "$ref": "#/definitions/ShippingInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "syncInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SyncInfo"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": true
            },
            "returnInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnInfo"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": true
            },
            "discountCodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscountCodeInfo"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": true
            },
            "lastMessageSequenceNumber": {
              "format": "int64",
              "description": "The sequence number of the last order message produced by changes to this order.\n`0` means, that no messages were created yet.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "cart": {
              "description": "Set when this order was created from a cart.\nThe cart will have the state `Ordered`.",
              "$ref": "#/definitions/CartReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "paymentInfo": {
              "$ref": "#/definitions/PaymentInfo",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "inventoryMode": {
              "$ref": "#/definitions/InventoryMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "origin": {
              "$ref": "#/definitions/CartOrigin",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxCalculationMode": {
              "description": "When calculating taxes for `taxedPrice`, the selected mode is used for calculating the price with LineItemLevel (horizontally) or UnitPriceLevel (vertically) calculation mode.",
              "$ref": "#/definitions/TaxCalculationMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingRateInput": {
              "description": "The shippingRateInput is used as an input to select a ShippingRatePriceTier.",
              "$ref": "#/definitions/ShippingRateInput",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": true
            },
            "itemShippingAddresses": {
              "description": "Contains addresses for orders with multiple shipping addresses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": true
            },
            "refusedGifts": {
              "description": "Automatically filled when a line item with LineItemMode `GiftLineItem` is removed from this order.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartDiscountReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "lineItems",
            "customLineItems",
            "totalPrice",
            "orderState",
            "syncInfo",
            "lastMessageSequenceNumber",
            "origin",
            "refusedGifts"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html",
      "x-annotation-actionType": "StagedOrderUpdateAction"
    },
    "StagedOrderAddCustomLineItemAction": {
      "title": "StagedOrderAddCustomLineItemAction",
      "example": {
        "action": "addCustomLineItem",
        "name": {
          "en": "Name"
        },
        "quantity": 2,
        "money": {
          "currencyCode": "EUR",
          "centAmount": 4000
        },
        "slug": "slugString",
        "taxCategory": {
          "typeId": "tax-category",
          "id": "{{tax-category-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addCustomLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "money": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "quantity": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "slug": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "money",
            "name",
            "slug"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-customlineitem"
    },
    "StagedOrderAddDeliveryAction": {
      "title": "StagedOrderAddDeliveryAction",
      "example": {
        "action": "addDelivery",
        "items": [
          {
            "id": "{{lineItemId}}",
            "quantity": 2
          }
        ],
        "parcels": [
          {
            "measurements": {
              "heightInMillimeter": 11,
              "lengthInMillimeter": 11
            },
            "trackingData": {
              "trackingId": "{{trackingId}}",
              "carrier": "TNT",
              "provider": "providerName",
              "providerTransaction": "{{transactionId}}",
              "isReturn": false
            },
            "items": {
              "id": "{{lineItemId}}",
              "quantity": 2
            }
          }
        ],
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "parcels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParcelDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-delivery"
    },
    "StagedOrderAddDiscountCodeAction": {
      "title": "StagedOrderAddDiscountCodeAction",
      "example": {
        "action": "addDiscountCode",
        "code": "discountCodeString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addDiscountCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "code": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "code"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-discountcode"
    },
    "StagedOrderAddItemShippingAddressAction": {
      "title": "StagedOrderAddItemShippingAddressAction",
      "example": {
        "action": "addItemShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-itemshippingaddress"
    },
    "StagedOrderAddLineItemAction": {
      "title": "StagedOrderAddLineItemAction",
      "example": {
        "action": "addLineItem",
        "lineItem": {
          "sku": "productSKU",
          "quantity": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "custom": {
              "$ref": "#/definitions/CustomFieldsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "productId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "variantId": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "sku": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "addedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-lineitem"
    },
    "StagedOrderAddParcelToDeliveryAction": {
      "title": "StagedOrderAddParcelToDeliveryAction",
      "example": {
        "action": "addParcelToDelivery",
        "deliveryId": "{{deliveryId}}",
        "measurements": {
          "heightInMillimeter": 11,
          "lengthInMillimeter": 11
        },
        "trackingData": {
          "trackingId": "{{trackingId}}"
        },
        "items": {
          "id": "{{lineItemId}}",
          "quantity": 2
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addParcelToDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "measurements": {
              "$ref": "#/definitions/ParcelMeasurements",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "trackingData": {
              "$ref": "#/definitions/TrackingData",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-parcel"
    },
    "StagedOrderAddPaymentAction": {
      "title": "StagedOrderAddPaymentAction",
      "example": {
        "action": "addPayment",
        "payment": {
          "typeId": "payment",
          "id": "{{payment-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addPayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-payment"
    },
    "StagedOrderAddReturnInfoAction": {
      "title": "StagedOrderAddReturnInfoAction",
      "example": {
        "action": "addReturnInfo",
        "items": {
          "quantity": 1,
          "lineItemId": "{{lineItemId}}",
          "shipmentState": "BackInStock"
        },
        "returnDate": "2018-09-11T14:00:00.000Z"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addReturnInfo"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnTrackingId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnItemDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "returnDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-returninfo"
    },
    "StagedOrderAddShoppingListAction": {
      "title": "StagedOrderAddShoppingListAction",
      "example": {
        "action": "addShoppingList",
        "shoppingList": {
          "typeId": "shopping-list",
          "id": "{{shopping-list-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addShoppingList"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shoppingList": {
              "$ref": "#/definitions/ShoppingListResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "shoppingList"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-shopping-list"
    },
    "StagedOrderChangeCustomLineItemMoneyAction": {
      "title": "StagedOrderChangeCustomLineItemMoneyAction",
      "example": {
        "action": "changeCustomLineItemMoney",
        "customLineItemId": "{{customLineItemId}}",
        "money": {
          "currencyCode": "EUR",
          "centAmount": 4000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCustomLineItemMoney"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "money": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "money"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-customlineitem-money"
    },
    "StagedOrderChangeCustomLineItemQuantityAction": {
      "title": "StagedOrderChangeCustomLineItemQuantityAction",
      "example": {
        "action": "changeCustomLineItemQuantity",
        "customLineItemId": "{{customLineItemId}}",
        "quantity": 2
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeCustomLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-customlineitem-quantity"
    },
    "StagedOrderChangeLineItemQuantityAction": {
      "title": "StagedOrderChangeLineItemQuantityAction",
      "example": {
        "action": "changeLineItemQuantity",
        "lineItemId": "{{lineItemId}}",
        "quantity": 2
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLineItemQuantity"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "quantity"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-lineitem-quantity"
    },
    "StagedOrderChangeOrderStateAction": {
      "title": "StagedOrderChangeOrderStateAction",
      "example": {
        "action": "changeOrderState",
        "orderState": "Open"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeOrderState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "orderState": {
              "$ref": "#/definitions/OrderState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "orderState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-orderstate"
    },
    "StagedOrderChangePaymentStateAction": {
      "title": "StagedOrderChangePaymentStateAction",
      "example": {
        "action": "changePaymentState",
        "paymentState": "Paid"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changePaymentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "paymentState": {
              "$ref": "#/definitions/PaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-paymentstate"
    },
    "StagedOrderChangeShipmentStateAction": {
      "title": "StagedOrderChangeShipmentStateAction",
      "example": {
        "action": "changeShipmentState",
        "shipmentSate": "Shipped"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeShipmentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shipmentState": {
              "$ref": "#/definitions/ShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-shipmentstate"
    },
    "StagedOrderChangeTaxCalculationModeAction": {
      "title": "StagedOrderChangeTaxCalculationModeAction",
      "example": {
        "action": "changeTaxCalculationMode",
        "taxCalculationMode": "LineItemLevel"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxCalculationMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxCalculationMode": {
              "$ref": "#/definitions/TaxCalculationMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxCalculationMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-taxcalculationmode"
    },
    "StagedOrderChangeTaxModeAction": {
      "title": "StagedOrderChangeTaxModeAction",
      "example": {
        "action": "changeTaxMode",
        "taxMode": "Platform"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxMode": {
              "$ref": "#/definitions/TaxMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-taxmode"
    },
    "StagedOrderChangeTaxRoundingModeAction": {
      "title": "StagedOrderChangeTaxRoundingModeAction",
      "example": {
        "action": "changeTaxRoundingMode",
        "taxRoundingMode": "HalfUp"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeTaxRoundingMode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxRoundingMode": {
              "$ref": "#/definitions/RoundingMode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxRoundingMode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-tax-roundingmode"
    },
    "StagedOrderImportCustomLineItemStateAction": {
      "title": "StagedOrderImportCustomLineItemStateAction",
      "example": {
        "action": "importCustomLineItemState",
        "customLineItemId": "{{customLineItemId}}",
        "state": [
          {
            "quantity": 1,
            "state": {
              "typeId": "state",
              "id": "{{state-id}}"
            }
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "importCustomLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemState"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#import-state-for-customlineitems"
    },
    "StagedOrderImportLineItemStateAction": {
      "title": "StagedOrderImportLineItemStateAction",
      "example": {
        "action": "importLineItemState",
        "lineItemId": "{{lineItemId}}",
        "state": {
          "typeId": "state",
          "id": "{{state-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "importLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "state": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemState"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#import-state-for-lineitems"
    },
    "StagedOrderRemoveCustomLineItemAction": {
      "title": "StagedOrderRemoveCustomLineItemAction",
      "example": {
        "action": "removeCustomLineItem",
        "customLineItemId": "{{customLineItemId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeCustomLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-customlineitem"
    },
    "StagedOrderRemoveDeliveryAction": {
      "title": "StagedOrderRemoveDeliveryAction",
      "example": {
        "action": "removeDelivery",
        "deliveryId": "{{deliveryId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-delivery"
    },
    "StagedOrderRemoveDiscountCodeAction": {
      "title": "StagedOrderRemoveDiscountCodeAction",
      "example": {
        "action": "removeDiscountCode",
        "discountCode": {
          "typeId": "discount-code",
          "id": "{{discount-code-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeDiscountCode"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "discountCode": {
              "$ref": "#/definitions/DiscountCodeReference",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "discountCode"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-discountcode"
    },
    "StagedOrderRemoveItemShippingAddressAction": {
      "title": "StagedOrderRemoveItemShippingAddressAction",
      "example": {
        "action": "removeItemShippingAddress",
        "addressKey": "addressKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-itemshippingaddress"
    },
    "StagedOrderRemoveLineItemAction": {
      "title": "StagedOrderRemoveLineItemAction",
      "example": {
        "action": "removeLineItem",
        "lineItemId": "{{lineItemId}}",
        "quantity": 1
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeLineItem"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "type": "number",
              "x-annotation-builtinType": "number",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingDetailsToRemove": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-lineitem"
    },
    "StagedOrderRemoveParcelFromDeliveryAction": {
      "title": "StagedOrderRemoveParcelFromDeliveryAction",
      "example": {
        "action": "removeParcelFromDelivery",
        "parcelId": "{{parcelId}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeParcelFromDelivery"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-parcel-from-delivery"
    },
    "StagedOrderRemovePaymentAction": {
      "title": "StagedOrderRemovePaymentAction",
      "example": {
        "action": "removePayment",
        "payment": {
          "typeId": "payment",
          "id": "{{payment-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removePayment"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "payment": {
              "$ref": "#/definitions/PaymentResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "payment"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-payment"
    },
    "StagedOrderSetBillingAddressAction": {
      "title": "StagedOrderSetBillingAddressAction",
      "example": {
        "action": "setBillingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-billing-address"
    },
    "StagedOrderSetBillingAddressCustomFieldAction": {
      "title": "StagedOrderSetBillingAddressCustomFieldAction",
      "example": {
        "action": "setBillingAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-billing-address-customfield"
    },
    "StagedOrderSetBillingAddressCustomTypeAction": {
      "title": "StagedOrderSetBillingAddressCustomTypeAction",
      "example": {
        "action": "setShippingAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setBillingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-billing-address-custom-type"
    },
    "StagedOrderSetCountryAction": {
      "title": "StagedOrderSetCountryAction",
      "example": {
        "action": "setCountry",
        "country": "DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCountry"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "country": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-country"
    },
    "StagedOrderSetCustomFieldAction": {
      "title": "StagedOrderSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customfield"
    },
    "StagedOrderSetCustomLineItemCustomFieldAction": {
      "title": "StagedOrderSetCustomLineItemCustomFieldAction",
      "example": {
        "action": "setCustomLineItemCustomField",
        "customLineItemId": "{{customLineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-customfield"
    },
    "StagedOrderSetCustomLineItemCustomTypeAction": {
      "title": "StagedOrderSetCustomLineItemCustomTypeAction",
      "example": {
        "action": "setCustomLineItemCustomType",
        "customLineItemId": "{{customLineItemId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-custom-type"
    },
    "StagedOrderSetCustomLineItemShippingDetailsAction": {
      "title": "StagedOrderSetCustomLineItemShippingDetailsAction",
      "example": {
        "action": "setCustomLineItemShippingDetails",
        "customLineItemId": "{{customLineItemId}}",
        "shippingDetails": {
          "targets": [
            {
              "addressKey": "addressKey",
              "quantity": 1
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitemshippingdetails"
    },
    "StagedOrderSetCustomLineItemTaxAmountAction": {
      "title": "StagedOrderSetCustomLineItemTaxAmountAction",
      "example": {
        "action": "setCustomLineItemTaxAmount",
        "customLineItemId": "{{customerLineItemId}}",
        "externalTaxAmount": {
          "totalGross": {
            "currencyCode": "EUR",
            "centAmount": 4000
          },
          "taxRate": {
            "name": "Name",
            "country": "DE",
            "amount": 0.19
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemTaxAmount"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxAmount": {
              "$ref": "#/definitions/ExternalTaxAmountDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-taxamount"
    },
    "StagedOrderSetCustomLineItemTaxRateAction": {
      "title": "StagedOrderSetCustomLineItemTaxRateAction",
      "example": {
        "action": "setCustomLineItemTaxRate",
        "customLineItemId": "{{customLineItemId}}",
        "externalTaxRate": {
          "name": "Name",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomLineItemTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-taxrate"
    },
    "StagedOrderSetCustomShippingMethodAction": {
      "title": "StagedOrderSetCustomShippingMethodAction",
      "example": {
        "action": "setCustomShippingMethod",
        "shippingMethodName": "shippingMethodName",
        "shippingRate": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4000
          }
        },
        "taxCategory": {
          "typeId": "tax-category",
          "id": "{{tax-category-id}}"
        },
        "externalTaxRate": {
          "name": "taxRateName",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomShippingMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingMethodName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingRate": {
              "$ref": "#/definitions/ShippingRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "shippingMethodName",
            "shippingRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-custom-shipping-method"
    },
    "StagedOrderSetCustomTypeAction": {
      "title": "StagedOrderSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-custom-type"
    },
    "StagedOrderSetCustomerEmailAction": {
      "title": "StagedOrderSetCustomerEmailAction",
      "example": {
        "action": "setCustomerEmail",
        "email": "mail@email.com"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerEmail"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "email": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customer-email"
    },
    "StagedOrderSetCustomerGroupAction": {
      "title": "StagedOrderSetCustomerGroupAction",
      "example": {
        "action": "setCustomerGroup",
        "customerGroup": {
          "typeId": "customer-group",
          "id": "{{customer-group-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerGroup"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerGroup": {
              "$ref": "#/definitions/CustomerGroupResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customer-group"
    },
    "StagedOrderSetCustomerIdAction": {
      "title": "StagedOrderSetCustomerIdAction",
      "example": {
        "action": "setCustomerId",
        "customerId": "{{customer-id}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomerId"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customerId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customer-id"
    },
    "StagedOrderSetDeliveryAddressAction": {
      "title": "StagedOrderSetDeliveryAddressAction",
      "example": {
        "action": "setDeliveryAddress",
        "deliveryId": "{{deliveryId}}",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-delivery-address"
    },
    "StagedOrderSetDeliveryAddressCustomFieldAction": {
      "title": "StagedOrderSetDeliveryAddressCustomFieldAction",
      "example": {
        "action": "setDeliveryAddressCustomField",
        "deliveryId": "{{delivery-id}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-delivery-address-customfield"
    },
    "StagedOrderSetDeliveryAddressCustomTypeAction": {
      "title": "StagedOrderSetDeliveryAddressCustomTypeAction",
      "example": {
        "action": "setDeliveryAddressCustomType",
        "deliveryId": "{{delivery-id}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-delivery-address-custom-type"
    },
    "StagedOrderSetDeliveryItemsAction": {
      "title": "StagedOrderSetDeliveryItemsAction",
      "example": {
        "action": "setDeliveryItems",
        "deliveryId": "{{deliveryId}}",
        "items": [
          {
            "id": "{{itemId}}",
            "quantity": 2
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDeliveryItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "deliveryId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "deliveryId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-delivery-items"
    },
    "StagedOrderSetItemShippingAddressCustomFieldAction": {
      "title": "StagedOrderSetItemShippingAddressCustomFieldAction",
      "example": {
        "action": "setItemShippingAddressCustomField",
        "addressKey": "{{address-key}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setItemShippingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-itemshipping-address-customfield"
    },
    "StagedOrderSetItemShippingAddressCustomTypeAction": {
      "title": "StagedOrderSetItemShippingAddressCustomTypeAction",
      "example": {
        "action": "setItemShippingAddressCustomType",
        "addressKey": "{{address-key}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setItemShippingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "addressKey": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "addressKey"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-itemshipping-address-custom-type"
    },
    "StagedOrderSetLineItemCustomFieldAction": {
      "title": "StagedOrderSetLineItemCustomFieldAction",
      "example": {
        "action": "setLineItemCustomField",
        "lineItemId": "{{lineItemId}}",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-customfield"
    },
    "StagedOrderSetLineItemCustomTypeAction": {
      "title": "StagedOrderSetLineItemCustomTypeAction",
      "example": {
        "action": "setLineItemCustomType",
        "lineItemId": "{{lineItemId}}",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-custom-type"
    },
    "StagedOrderSetLineItemDistributionChannelAction": {
      "title": "StagedOrderSetLineItemDistributionChannelAction",
      "example": {
        "action": "setLineItemDistributionChannel",
        "lineItemId": "{{lineItemId}}",
        "distributionChannel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemDistributionChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits#set-lineitem-distributionchannel"
    },
    "StagedOrderSetLineItemPriceAction": {
      "title": "StagedOrderSetLineItemPriceAction",
      "example": {
        "action": "setLineItemPrice",
        "lineItemId": "{{lineItemId}}",
        "externalPrice": {
          "currencyCode": "EUR",
          "centAmount": 4000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemPrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalPrice": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-price"
    },
    "StagedOrderSetLineItemShippingDetailsAction": {
      "title": "StagedOrderSetLineItemShippingDetailsAction",
      "example": {
        "action": "setLineItemShippingDetails",
        "lineItemId": "{{lineItemId}}",
        "shippingDetails": {
          "targets": [
            {
              "addressKey": "addressKeyString",
              "quantity": 2
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemShippingDetails"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingDetails": {
              "$ref": "#/definitions/ItemShippingDetailsDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitemshippingdetails"
    },
    "StagedOrderSetLineItemTaxAmountAction": {
      "title": "StagedOrderSetLineItemTaxAmountAction",
      "example": {
        "action": "setLineItemTaxAmount",
        "lineItemId": "{{lineItemId}}",
        "externalTaxAmount": {
          "totalGross": {
            "currencyCode": "EUR",
            "centAmount": 4000
          },
          "taxRate": {
            "name": "Name",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemTaxAmount"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxAmount": {
              "$ref": "#/definitions/ExternalTaxAmountDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-taxamount"
    },
    "StagedOrderSetLineItemTaxRateAction": {
      "title": "StagedOrderSetLineItemTaxRateAction",
      "example": {
        "action": "setLineItemTaxRate",
        "lineItemId": "{{lineItemId}}",
        "externalTaxRate": {
          "name": "Name",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-taxrate"
    },
    "StagedOrderSetLineItemTotalPriceAction": {
      "title": "StagedOrderSetLineItemTotalPriceAction",
      "example": {
        "action": "setLineItemTotalPrice",
        "lineItemId": "{{lineItemId}}",
        "externalTotalPrice": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4000
          },
          "totalPrice": {
            "currencyCode": "EUR",
            "centAmount": 4000
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLineItemTotalPrice"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "externalTotalPrice": {
              "$ref": "#/definitions/ExternalLineItemTotalPrice",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-totalprice"
    },
    "StagedOrderSetLocaleAction": {
      "title": "StagedOrderSetLocaleAction",
      "example": {
        "action": "setLocale",
        "locale": "de-DE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLocale"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "locale": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-locale"
    },
    "StagedOrderSetOrderNumberAction": {
      "title": "StagedOrderSetOrderNumberAction",
      "example": {
        "action": "setOrderNumber",
        "orderNumber": "orderNumberString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setOrderNumber"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "orderNumber": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-order-number"
    },
    "StagedOrderSetOrderTotalTaxAction": {
      "title": "StagedOrderSetOrderTotalTaxAction",
      "example": {
        "action": "setOrderTotalTax",
        "externalTotalGross": {
          "currencyCode": "EUR",
          "centAmount": 4000
        },
        "externalTaxPortions": [
          {
            "name": "Name",
            "rate": 0.19,
            "amount": {
              "currencyCode": "EUR",
              "centAmount": 4000
            }
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setOrderTotalTax"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalTotalGross": {
              "$ref": "#/definitions/Money",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxPortions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxPortionDraft"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "externalTotalGross"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-order-total-tax"
    },
    "StagedOrderSetParcelItemsAction": {
      "title": "StagedOrderSetParcelItemsAction",
      "example": {
        "action": "setParcelItems",
        "parcelId": "{{parcelId}}",
        "items": [
          {
            "id": "{{lineItemId}}",
            "quantity": 2
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setParcelItems"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryItem"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId",
            "items"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-parcel-items"
    },
    "StagedOrderSetParcelMeasurementsAction": {
      "title": "StagedOrderSetParcelMeasurementsAction",
      "example": {
        "action": "setParcelMeasurements",
        "parcelId": "{{parcelId}}",
        "measurements": {
          "heightInMillimeter": 11,
          "widthInMillimeter": 11
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setParcelMeasurements"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "measurements": {
              "$ref": "#/definitions/ParcelMeasurements",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-parcel-measurements"
    },
    "StagedOrderSetParcelTrackingDataAction": {
      "title": "StagedOrderSetParcelTrackingDataAction",
      "example": {
        "action": "setParcelTrackingData",
        "parcelId": "{{parcelId))",
        "trackingData": {
          "trackingId": "{{trackingId}}",
          "carrier": "TNT",
          "provider": "providerName",
          "providerTransaction": "{{transactionId}}",
          "isReturn": false
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setParcelTrackingData"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "parcelId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "trackingData": {
              "$ref": "#/definitions/TrackingData",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "parcelId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-parcel-tracking-data"
    },
    "StagedOrderSetReturnPaymentStateAction": {
      "title": "StagedOrderSetReturnPaymentStateAction",
      "example": {
        "action": "setReturnPaymentState",
        "returnItemId": "{{returnItemId}}",
        "paymentState": "Refunded"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setReturnPaymentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "paymentState": {
              "$ref": "#/definitions/ReturnPaymentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "returnItemId",
            "paymentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-returnpaymentstate"
    },
    "StagedOrderSetReturnShipmentStateAction": {
      "title": "StagedOrderSetReturnShipmentStateAction",
      "example": {
        "action": "setReturnShipmentState",
        "returnItemId": "{{returnItemId}}",
        "shipmentState": "Returned"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setReturnShipmentState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "returnItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shipmentState": {
              "$ref": "#/definitions/ReturnShipmentState",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "returnItemId",
            "shipmentState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-returnshipmentstate"
    },
    "StagedOrderSetShippingAddressAction": {
      "title": "StagedOrderSetShippingAddressAction",
      "example": {
        "action": "setShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-address"
    },
    "StagedOrderSetShippingAddressAndCustomShippingMethodAction": {
      "title": "StagedOrderSetShippingAddressAndCustomShippingMethodAction",
      "example": {
        "action": "setShippingAddressAndCustomShippingMethod",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        },
        "shippingMethodName": "shippingMethodName",
        "shippingRate": {
          "price": {
            "currencyCode": "EUR",
            "centAmount": 4000
          }
        },
        "taxCategory": {
          "typeId": "tax-category",
          "id": "{{tax-category-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressAndCustomShippingMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingMethodName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "shippingRate": {
              "$ref": "#/definitions/ShippingRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "taxCategory": {
              "$ref": "#/definitions/TaxCategoryResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address",
            "shippingMethodName",
            "shippingRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-address-and-custom-shipping-method"
    },
    "StagedOrderSetShippingAddressAndShippingMethodAction": {
      "title": "StagedOrderSetShippingAddressAndShippingMethodAction",
      "example": {
        "action": "setShippingAddressAndShippingMethod",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        },
        "shippingMethod": {
          "typeId": "shipping-method",
          "id": "shippingMethodId"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressAndShippingMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "shippingMethod": {
              "$ref": "#/definitions/ShippingMethodResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-address-and-shipping-method"
    },
    "StagedOrderSetShippingAddressCustomFieldAction": {
      "title": "StagedOrderSetShippingAddressCustomFieldAction",
      "example": {
        "action": "setShippingAddressCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-shipping-address-customfield"
    },
    "StagedOrderSetShippingAddressCustomTypeAction": {
      "title": "StagedOrderSetShippingAddressCustomTypeAction",
      "example": {
        "action": "setShippingAddressCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingAddressCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "$ref": "#/definitions/FieldContainer",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/api/projects/order-edits#set-shipping-address-custom-type"
    },
    "StagedOrderSetShippingMethodAction": {
      "title": "StagedOrderSetShippingMethodAction",
      "example": {
        "action": "setShippingMethod",
        "shippingMethod": {
          "typeId": "shipping-method",
          "id": "shippingMethodId"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingMethod"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingMethod": {
              "$ref": "#/definitions/ShippingMethodResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-method"
    },
    "StagedOrderSetShippingMethodTaxAmountAction": {
      "title": "StagedOrderSetShippingMethodTaxAmountAction",
      "example": {
        "action": "setShippingMethodTaxAmount",
        "externalTaxAmount": {
          "totalGross": {
            "currencyCode": "EUR",
            "centAmount": 4000
          },
          "taxRate": {
            "name": "Name",
            "amount": 0.19,
            "country": "DE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingMethodTaxAmount"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalTaxAmount": {
              "$ref": "#/definitions/ExternalTaxAmountDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shippingmethod-taxamount"
    },
    "StagedOrderSetShippingMethodTaxRateAction": {
      "title": "StagedOrderSetShippingMethodTaxRateAction",
      "example": {
        "action": "setShippingMethodTaxRate",
        "externalTaxRate": {
          "name": "Name",
          "amount": 0.19,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingMethodTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "externalTaxRate": {
              "$ref": "#/definitions/ExternalTaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shippingmethod-taxrate"
    },
    "StagedOrderSetShippingRateInputAction": {
      "title": "StagedOrderSetShippingRateInputAction",
      "example": {
        "action": "setShippingRateInput",
        "shippingRateInput": {
          "type": "Classification",
          "key": "key"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setShippingRateInput"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "shippingRateInput": {
              "$ref": "#/definitions/ShippingRateInputDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-rate-input"
    },
    "StagedOrderTransitionCustomLineItemStateAction": {
      "title": "StagedOrderTransitionCustomLineItemStateAction",
      "example": {
        "action": "transitionCustomLineItemState",
        "customLineItemId": "{{customLineItemId}}",
        "quantity": 2,
        "fromState": {
          "typeId": "state",
          "id": "stateId"
        },
        "toState": {
          "typeId": "state",
          "id": "stateId"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionCustomLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "customLineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "actualTransitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "customLineItemId",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-the-state-of-customlineitem-according-to-allowed-transitions"
    },
    "StagedOrderTransitionLineItemStateAction": {
      "title": "StagedOrderTransitionLineItemStateAction",
      "example": {
        "action": "transitionLineItemState",
        "lineItemId": "{lineItemId}}",
        "quantity": 2,
        "fromState": {
          "typeId": "state",
          "id": "stateId"
        },
        "toState": {
          "typeId": "state",
          "id": "stateId"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionLineItemState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "lineItemId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "quantity": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "fromState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "toState": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "actualTransitionDate": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "lineItemId",
            "quantity",
            "fromState",
            "toState"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-the-state-of-lineitem-according-to-allowed-transitions"
    },
    "StagedOrderTransitionStateAction": {
      "title": "StagedOrderTransitionStateAction",
      "example": {
        "action": "transitionState",
        "state": {
          "typeId": "state",
          "id": "{{state-id}}"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "transitionState"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "state": {
              "$ref": "#/definitions/StateResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "force": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "state"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#transition-state"
    },
    "StagedOrderUpdateAction": {
      "title": "StagedOrderUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "StagedOrderAddCustomLineItemAction",
        "StagedOrderAddDeliveryAction",
        "StagedOrderAddDiscountCodeAction",
        "StagedOrderAddItemShippingAddressAction",
        "StagedOrderAddLineItemAction",
        "StagedOrderAddParcelToDeliveryAction",
        "StagedOrderAddPaymentAction",
        "StagedOrderAddReturnInfoAction",
        "StagedOrderAddShoppingListAction",
        "StagedOrderChangeCustomLineItemMoneyAction",
        "StagedOrderChangeCustomLineItemQuantityAction",
        "StagedOrderChangeLineItemQuantityAction",
        "StagedOrderChangeOrderStateAction",
        "StagedOrderChangePaymentStateAction",
        "StagedOrderChangeShipmentStateAction",
        "StagedOrderChangeTaxCalculationModeAction",
        "StagedOrderChangeTaxModeAction",
        "StagedOrderChangeTaxRoundingModeAction",
        "StagedOrderImportCustomLineItemStateAction",
        "StagedOrderImportLineItemStateAction",
        "StagedOrderRemoveCustomLineItemAction",
        "StagedOrderRemoveDeliveryAction",
        "StagedOrderRemoveDiscountCodeAction",
        "StagedOrderRemoveItemShippingAddressAction",
        "StagedOrderRemoveLineItemAction",
        "StagedOrderRemoveParcelFromDeliveryAction",
        "StagedOrderRemovePaymentAction",
        "StagedOrderSetBillingAddressAction",
        "StagedOrderSetBillingAddressCustomFieldAction",
        "StagedOrderSetBillingAddressCustomTypeAction",
        "StagedOrderSetCountryAction",
        "StagedOrderSetCustomFieldAction",
        "StagedOrderSetCustomLineItemCustomFieldAction",
        "StagedOrderSetCustomLineItemCustomTypeAction",
        "StagedOrderSetCustomLineItemShippingDetailsAction",
        "StagedOrderSetCustomLineItemTaxAmountAction",
        "StagedOrderSetCustomLineItemTaxRateAction",
        "StagedOrderSetCustomShippingMethodAction",
        "StagedOrderSetCustomTypeAction",
        "StagedOrderSetCustomerEmailAction",
        "StagedOrderSetCustomerGroupAction",
        "StagedOrderSetCustomerIdAction",
        "StagedOrderSetDeliveryAddressAction",
        "StagedOrderSetDeliveryAddressCustomFieldAction",
        "StagedOrderSetDeliveryAddressCustomTypeAction",
        "StagedOrderSetDeliveryItemsAction",
        "StagedOrderSetItemShippingAddressCustomFieldAction",
        "StagedOrderSetItemShippingAddressCustomTypeAction",
        "StagedOrderSetLineItemCustomFieldAction",
        "StagedOrderSetLineItemCustomTypeAction",
        "StagedOrderSetLineItemDistributionChannelAction",
        "StagedOrderSetLineItemPriceAction",
        "StagedOrderSetLineItemShippingDetailsAction",
        "StagedOrderSetLineItemTaxAmountAction",
        "StagedOrderSetLineItemTaxRateAction",
        "StagedOrderSetLineItemTotalPriceAction",
        "StagedOrderSetLocaleAction",
        "StagedOrderSetOrderNumberAction",
        "StagedOrderSetOrderTotalTaxAction",
        "StagedOrderSetParcelItemsAction",
        "StagedOrderSetParcelMeasurementsAction",
        "StagedOrderSetParcelTrackingDataAction",
        "StagedOrderSetReturnPaymentStateAction",
        "StagedOrderSetReturnShipmentStateAction",
        "StagedOrderSetShippingAddressAction",
        "StagedOrderSetShippingAddressAndCustomShippingMethodAction",
        "StagedOrderSetShippingAddressAndShippingMethodAction",
        "StagedOrderSetShippingAddressCustomFieldAction",
        "StagedOrderSetShippingAddressCustomTypeAction",
        "StagedOrderSetShippingMethodAction",
        "StagedOrderSetShippingMethodTaxAmountAction",
        "StagedOrderSetShippingMethodTaxRateAction",
        "StagedOrderSetShippingRateInputAction",
        "StagedOrderTransitionCustomLineItemStateAction",
        "StagedOrderTransitionLineItemStateAction",
        "StagedOrderTransitionStateAction",
        "StagedOrderUpdateItemShippingAddressAction",
        "StagedOrderUpdateSyncInfoAction"
      ],
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#stagedorderupdateaction",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<StagedOrderUpdateAction>"
    },
    "StagedOrderUpdateItemShippingAddressAction": {
      "title": "StagedOrderUpdateItemShippingAddressAction",
      "example": {
        "action": "updateItemShippingAddress",
        "address": {
          "id": "exampleAddress",
          "key": "exampleKey",
          "title": "My Address",
          "salutation": "Mr.",
          "firstName": "Example",
          "lastName": "Person",
          "streetName": "Examplary Street",
          "streetNumber": "4711",
          "additionalStreetInfo": "Backhouse",
          "postalCode": "80933",
          "city": "Exemplary City",
          "region": "Exemplary Region",
          "state": "Exemplary State",
          "country": "DE",
          "company": "My Company Name",
          "department": "Sales",
          "building": "Hightower 1",
          "apartment": "247",
          "pOBox": "2471",
          "phone": "+49 89 12345678",
          "mobile": "+49 171 2345678",
          "email": "mail@mail.com",
          "fax": "+49 89 12345679",
          "additionalAddressInfo": "no additional Info",
          "externalId": "Information not needed"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "updateItemShippingAddress"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "address": {
              "$ref": "#/definitions/BaseAddress",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "address"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#update-itemshippingaddress"
    },
    "StagedOrderUpdateSyncInfoAction": {
      "title": "StagedOrderUpdateSyncInfoAction",
      "example": {
        "action": "updateSyncInfo",
        "channel": {
          "typeId": "channel",
          "id": "{{channel-id}}"
        },
        "externalId": "externalId"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StagedOrderUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "updateSyncInfo"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "channel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "externalId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "syncedAt": {
              "type": "string",
              "format": "date-time",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "channel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "OrderEdit",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#update-syncinfo"
    },
    "State": {
      "title": "State",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "A unique identifier for the state.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "type": {
              "$ref": "#/definitions/StateTypeEnum",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "description": "A human-readable name of the state.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "description": "A human-readable description of the state.",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "initial": {
              "description": "A state can be declared as an initial state for any state machine.\nWhen a workflow starts, this first state must be an `initial` state.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "builtIn": {
              "description": "Builtin states are integral parts of the project that cannot be deleted nor the key can be changed.",
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "transitions": {
              "description": "Transitions are a way to describe possible transformations of the current state to other states of the same `type` (e.g.: _Initial_ -> _Shipped_).\nWhen performing a `transitionState` update action and `transitions` is set, the currently referenced state must have a transition to the new state.\nIf `transitions` is an empty list, it means the current state is a final state and no further transitions are allowed.\nIf `transitions` is not set, the validation is turned off.\nWhen performing a `transitionState` update action, any other state of the same `type` can be transitioned to.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "key",
            "type",
            "initial",
            "builtIn"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state",
      "x-annotation-updateType": "StateUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<State>"
    },
    "StateAddRolesAction": {
      "title": "StateAddRolesAction",
      "example": {
        "action": "addRoles",
        "roles": [
          "ReviewIncludedInStatistics"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addRoles"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#add-state-roles"
    },
    "StateChangeInitialAction": {
      "title": "StateChangeInitialAction",
      "example": {
        "action": "changeInitial",
        "initial": false
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeInitial"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "initial": {
              "type": "boolean",
              "x-annotation-builtinType": "boolean",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "initial"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-initial-state"
    },
    "StateChangeKeyAction": {
      "title": "StateChangeKeyAction",
      "example": {
        "action": "changeKey",
        "key": "ChangedStateKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-key"
    },
    "StateChangeTypeAction": {
      "title": "StateChangeTypeAction",
      "example": {
        "action": "changeType",
        "type": "ReviewState"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/StateTypeEnum",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-type"
    },
    "StateDraft": {
      "title": "StateDraft",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "type": {
          "$ref": "#/definitions/StateTypeEnum",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "initial": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRoleEnum"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateResourceIdentifier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key",
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#statedraft"
    },
    "StatePagedQueryResponse": {
      "title": "StatePagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/State"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<State>"
    },
    "StateReference": {
      "title": "StateReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "state"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state"
    },
    "StateRemoveRolesAction": {
      "title": "StateRemoveRolesAction",
      "example": {
        "action": "removeRoles",
        "roles": [
          "ReviewIncludedInStatistics"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeRoles"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#remove-state-roles"
    },
    "StateResourceIdentifier": {
      "title": "StateResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "state"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state"
    },
    "StateRoleEnum": {
      "title": "StateRoleEnum",
      "enum": [
        "ReviewIncludedInStatistics",
        "Return"
      ],
      "type": "string",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#staterole"
    },
    "StateSetDescriptionAction": {
      "title": "StateSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "de": "State Beschreibung",
          "en": "State description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "description"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-description"
    },
    "StateSetNameAction": {
      "title": "StateSetNameAction",
      "example": {
        "action": "setName",
        "name": {
          "de": "State Name",
          "en": "State name"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-name"
    },
    "StateSetRolesAction": {
      "title": "StateSetRolesAction",
      "example": {
        "action": "setRoles",
        "roles": [
          "ReviewIncludedInStatistics"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setRoles"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateRoleEnum"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "roles"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-roles"
    },
    "StateSetTransitionsAction": {
      "title": "StateSetTransitionsAction",
      "example": {
        "action": "setTransitions",
        "transitions": [
          {
            "typeId": "state",
            "id": "{{state-id}}"
          },
          {
            "typeId": "state",
            "id": "{{state-id2}}"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StateUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setTransitions"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "transitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StateResourceIdentifier"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-transitions"
    },
    "StateTypeEnum": {
      "title": "StateTypeEnum",
      "enum": [
        "OrderState",
        "LineItemState",
        "ProductState",
        "ReviewState",
        "PaymentState"
      ],
      "type": "string",
      "x-annotation-package": "State"
    },
    "StateUpdate": {
      "title": "StateUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "State",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<StateUpdate, StateUpdateAction>"
    },
    "StateUpdateAction": {
      "title": "StateUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "StateAddRolesAction",
        "StateChangeInitialAction",
        "StateChangeKeyAction",
        "StateChangeTypeAction",
        "StateRemoveRolesAction",
        "StateSetDescriptionAction",
        "StateSetNameAction",
        "StateSetRolesAction",
        "StateSetTransitionsAction"
      ],
      "x-annotation-package": "State",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<StateUpdateAction>"
    },
    "Store": {
      "title": "Store",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the store.\nThe `key` is mandatory and immutable.\nIt is used to reference the store.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "description": "The name of the store",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "languages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "distributionChannels": {
              "description": "Set of References to a Channel with `ProductDistribution` role",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "supplyChannels": {
              "description": "Set of ResourceIdentifiers of Channels with `InventorySupply` role",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelReference"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "custom": {
              "$ref": "#/definitions/CustomFields",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "key",
            "distributionChannels"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores",
      "x-annotation-updateType": "StoreUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Store>"
    },
    "StoreAddDistributionChannelAction": {
      "title": "StoreAddDistributionChannelAction",
      "example": {
        "action": "addDistributionChannel",
        "distributionChannels": {
          "typeId": "channel",
          "id": "12345"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addDistributionChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "distributionChannel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#add-distribution-channel"
    },
    "StoreAddSupplyChannelAction": {
      "title": "StoreAddSupplyChannelAction",
      "example": {
        "action": "addSupplyChannel",
        "supplyChannel": {
          "typeId": "channel",
          "id": "12345"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addSupplyChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "supplyChannel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#add-supply-channel"
    },
    "StoreDraft": {
      "title": "StoreDraft",
      "type": "object",
      "properties": {
        "key": {
          "description": "User-specific unique identifier for the store.\nThe `key` is mandatory and immutable.\nIt is used to reference the store.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "description": "The name of the store",
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "distributionChannels": {
          "description": "Set of ResourceIdentifiers to a Channel with `ProductDistribution` role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelResourceIdentifier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "supplyChannels": {
          "description": "Set of ResourceIdentifiers of Channels with `InventorySupply` role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelResourceIdentifier"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key",
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#storedraft"
    },
    "StoreKeyReference": {
      "title": "StoreKeyReference",
      "allOf": [
        {
          "$ref": "#/definitions/KeyReference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "store"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "typeId",
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores"
    },
    "StorePagedQueryResponse": {
      "title": "StorePagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Store"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Store>"
    },
    "StoreReference": {
      "title": "StoreReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "store"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores"
    },
    "StoreRemoveDistributionChannelAction": {
      "title": "StoreRemoveDistributionChannelAction",
      "example": {
        "action": "removeDistributionChannel",
        "distributionChannels": {
          "typeId": "channel",
          "id": "12345"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeDistributionChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "distributionChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "distributionChannel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#remove-distribution-channel"
    },
    "StoreRemoveSupplyChannelAction": {
      "title": "StoreRemoveSupplyChannelAction",
      "example": {
        "action": "removeDistributionChannel",
        "distributionChannels": {
          "typeId": "channel",
          "id": "12345"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeSupplyChannel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "supplyChannel": {
              "$ref": "#/definitions/ChannelResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "supplyChannel"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#remove-supply-channel"
    },
    "StoreResourceIdentifier": {
      "title": "StoreResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "store"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores"
    },
    "StoreSetCustomFieldAction": {
      "title": "StoreSetCustomFieldAction",
      "example": {
        "action": "setCustomField",
        "name": "ExamplaryStringTypeField",
        "value": "TextString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomField"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "type": "string",
              "x-annotation-builtinType": "any",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-custom-field"
    },
    "StoreSetCustomTypeAction": {
      "title": "StoreSetCustomTypeAction",
      "example": {
        "action": "setCustomType",
        "type": {
          "id": "{{type-id}}",
          "typeId": "type"
        },
        "fields": {
          "examplaryStringTypeField": "TextString"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setCustomType"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "description": "If set, the custom type is reset to this value.\nIf absent, the custom type and any existing custom fields are removed.",
              "$ref": "#/definitions/TypeResourceIdentifier",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "fields": {
              "description": "A valid JSON object, based on the FieldDefinitions of the Type\nSets the custom field to this value.",
              "type": "object",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-custom-type"
    },
    "StoreSetDistributionChannelsAction": {
      "title": "StoreSetDistributionChannelsAction",
      "example": {
        "action": "setDistributionChannels",
        "distributionChannels": [
          {
            "typeId": "channel",
            "id": "12345"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDistributionChannels"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "distributionChannels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelResourceIdentifier"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-distribution-channels"
    },
    "StoreSetLanguagesAction": {
      "title": "StoreSetLanguagesAction",
      "example": {
        "action": "setLanguages",
        "languages": [
          "en"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setLanguages"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "languages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-languages"
    },
    "StoreSetNameAction": {
      "title": "StoreSetNameAction",
      "example": {
        "action": "setName",
        "name": {
          "en": "New Name"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "description": "The updated name of the store",
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-name"
    },
    "StoreSetSupplyChannelsAction": {
      "title": "StoreSetSupplyChannelsAction",
      "example": {
        "action": "setSupplyChannels",
        "supplyChannels": [
          {
            "typeId": "channel",
            "id": "12345"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/StoreUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setSupplyChannels"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "supplyChannels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelResourceIdentifier"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-supply-channels"
    },
    "StoreUpdate": {
      "title": "StoreUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoreUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Store",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<StoreUpdate, StoreUpdateAction>"
    },
    "StoreUpdateAction": {
      "title": "StoreUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "StoreAddDistributionChannelAction",
        "StoreAddSupplyChannelAction",
        "StoreRemoveDistributionChannelAction",
        "StoreRemoveSupplyChannelAction",
        "StoreSetCustomFieldAction",
        "StoreSetCustomTypeAction",
        "StoreSetDistributionChannelsAction",
        "StoreSetLanguagesAction",
        "StoreSetNameAction",
        "StoreSetSupplyChannelsAction"
      ],
      "x-annotation-package": "Store",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<StoreUpdateAction>"
    },
    "SubRate": {
      "title": "SubRate",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amount": {
          "minimum": 0,
          "maximum": 1,
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "amount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#subrate"
    },
    "Subscription": {
      "title": "Subscription",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "changes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeSubscription"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "destination": {
              "$ref": "#/definitions/Destination",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSubscription"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "format": {
              "$ref": "#/definitions/DeliveryFormat",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "status": {
              "$ref": "#/definitions/SubscriptionHealthStatus",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "changes",
            "destination",
            "messages",
            "format",
            "status"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscription",
      "x-annotation-updateType": "SubscriptionUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Subscription>"
    },
    "SubscriptionChangeDestinationAction": {
      "title": "SubscriptionChangeDestinationAction",
      "example": {
        "action": "changeDestination",
        "destination": {
          "type": "SQS",
          "queueUrl": "https://...",
          "accessKey": "{{accessKey}}",
          "accessSecret": "secretString",
          "region": "regionA"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeDestination"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "destination": {
              "$ref": "#/definitions/Destination",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "destination"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#change-destination"
    },
    "SubscriptionDelivery": {
      "title": "SubscriptionDelivery",
      "discriminator": "notificationType",
      "type": "object",
      "properties": {
        "projectKey": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "notificationType": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "resource": {
          "$ref": "#/definitions/Reference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "resourceUserProvidedIdentifiers": {
          "$ref": "#/definitions/UserProvidedIdentifiers",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "projectKey",
        "notificationType",
        "resource"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "MessageDelivery",
        "ResourceCreatedDelivery",
        "ResourceDeletedDelivery",
        "ResourceUpdatedDelivery"
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#delivery"
    },
    "SubscriptionDraft": {
      "title": "SubscriptionDraft",
      "type": "object",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangeSubscription"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "destination": {
          "$ref": "#/definitions/Destination",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageSubscription"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "format": {
          "$ref": "#/definitions/DeliveryFormat",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "destination"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscriptiondraft"
    },
    "SubscriptionHealthStatus": {
      "title": "SubscriptionHealthStatus",
      "enum": [
        "Healthy",
        "ConfigurationError",
        "ConfigurationErrorDeliveryStopped",
        "TemporaryError"
      ],
      "type": "string",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscription-health-status"
    },
    "SubscriptionPagedQueryResponse": {
      "title": "SubscriptionPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Subscription>"
    },
    "SubscriptionSetChangesAction": {
      "title": "SubscriptionSetChangesAction",
      "example": {
        "action": "setChanges",
        "changes": [
          {
            "resourceTypeId": "channel"
          },
          {
            "resourceTypeId": "product"
          },
          {
            "resourceTypeId": "payment"
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setChanges"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "changes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeSubscription"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-changes"
    },
    "SubscriptionSetKeyAction": {
      "title": "SubscriptionSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "keyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-key"
    },
    "SubscriptionSetMessagesAction": {
      "title": "SubscriptionSetMessagesAction",
      "example": {
        "action": "setMessages",
        "messages": [
          {
            "resourceTypeId": "product",
            "types": [
              "ProductCreated"
            ]
          }
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setMessages"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSubscription"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-messages"
    },
    "SubscriptionUpdate": {
      "title": "SubscriptionUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Subscription",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<SubscriptionUpdate, SubscriptionUpdateAction>"
    },
    "SubscriptionUpdateAction": {
      "title": "SubscriptionUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "SubscriptionChangeDestinationAction",
        "SubscriptionSetChangesAction",
        "SubscriptionSetKeyAction",
        "SubscriptionSetMessagesAction"
      ],
      "x-annotation-package": "Subscription",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<SubscriptionUpdateAction>"
    },
    "SuggestTokenizer": {
      "title": "SuggestTokenizer",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "whitespace",
            "custom"
          ],
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CustomTokenizer",
        "WhitespaceTokenizer"
      ],
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product-search-keywords-suggest-examples"
    },
    "Suggestion": {
      "title": "Suggestion",
      "type": "object",
      "properties": {
        "text": {
          "description": "The suggested text.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "text"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestion"
    },
    "SuggestionResult": {
      "title": "SuggestionResult",
      "type": "object",
      "x-annotation-additionalProperties": {
        "required": true,
        "type": "array",
        "items": {
          "$ref": "#/definitions/Suggestion"
        },
        "x-annotation-builtinType": "array",
        "x-annotation-inherited": false
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestionresult"
    },
    "SyncInfo": {
      "title": "SyncInfo",
      "type": "object",
      "properties": {
        "channel": {
          "description": "Connection to a particular synchronization destination.",
          "$ref": "#/definitions/ChannelReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "externalId": {
          "description": "Can be used to reference an external order instance, file etc.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "syncedAt": {
          "format": "date-time",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "channel",
        "syncedAt"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#syncinfo"
    },
    "SyntaxErrorError": {
      "title": "SyntaxErrorError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "SyntaxError"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "TaxCalculationMode": {
      "title": "TaxCalculationMode",
      "enum": [
        "LineItemLevel",
        "UnitPriceLevel"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "TaxCategory": {
      "title": "TaxCategory",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the category.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the category.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "rates": {
              "description": "The tax rates have unique IDs in the rates list",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxRate"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for the category.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name",
            "rates"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory",
      "x-annotation-updateType": "TaxCategoryUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<TaxCategory>"
    },
    "TaxCategoryAddTaxRateAction": {
      "title": "TaxCategoryAddTaxRateAction",
      "example": {
        "action": "addTaxRate",
        "taxRate": {
          "name": "TaxRateName",
          "amount": 0.3,
          "includedInPrice": true,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxRate": {
              "$ref": "#/definitions/TaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#add-tax-rate"
    },
    "TaxCategoryChangeNameAction": {
      "title": "TaxCategoryChangeNameAction",
      "example": {
        "action": "changeName",
        "name": "name"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#change-name"
    },
    "TaxCategoryDraft": {
      "title": "TaxCategoryDraft",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "description": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "rates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRateDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "rates"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategorydraft"
    },
    "TaxCategoryPagedQueryResponse": {
      "title": "TaxCategoryPagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCategory"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<TaxCategory>"
    },
    "TaxCategoryReference": {
      "title": "TaxCategoryReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "tax-category"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory"
    },
    "TaxCategoryRemoveTaxRateAction": {
      "title": "TaxCategoryRemoveTaxRateAction",
      "example": {
        "action": "removeTaxRate",
        "taxRateId": "{{taxRateID}}"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxRateId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxRateId"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#remove-tax-rate"
    },
    "TaxCategoryReplaceTaxRateAction": {
      "title": "TaxCategoryReplaceTaxRateAction",
      "example": {
        "action": "replaceTaxRate",
        "taxRateId": "{{taxRateID}}",
        "taxRate": {
          "name": "TaxRateName",
          "amount": 0.4,
          "includedInPrice": true,
          "country": "DE"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "replaceTaxRate"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "taxRateId": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "taxRate": {
              "$ref": "#/definitions/TaxRateDraft",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "taxRateId",
            "taxRate"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#replace-tax-rate"
    },
    "TaxCategoryResourceIdentifier": {
      "title": "TaxCategoryResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "tax-category"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory"
    },
    "TaxCategorySetDescriptionAction": {
      "title": "TaxCategorySetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": "new Description"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#set-description"
    },
    "TaxCategorySetKeyAction": {
      "title": "TaxCategorySetKeyAction",
      "example": {
        "action": "setKey",
        "key": "keyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaxCategoryUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, it is removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#set-key"
    },
    "TaxCategoryUpdate": {
      "title": "TaxCategoryUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCategoryUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<TaxCategoryUpdate, TaxCategoryUpdateAction>"
    },
    "TaxCategoryUpdateAction": {
      "title": "TaxCategoryUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "TaxCategoryAddTaxRateAction",
        "TaxCategoryChangeNameAction",
        "TaxCategoryRemoveTaxRateAction",
        "TaxCategoryReplaceTaxRateAction",
        "TaxCategorySetDescriptionAction",
        "TaxCategorySetKeyAction"
      ],
      "x-annotation-package": "TaxCategory",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<TaxCategoryUpdateAction>"
    },
    "TaxMode": {
      "title": "TaxMode",
      "enum": [
        "Platform",
        "External",
        "ExternalAmount",
        "Disabled"
      ],
      "type": "string",
      "x-annotation-package": "Cart"
    },
    "TaxPortion": {
      "title": "TaxPortion",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "rate": {
          "minimum": 0,
          "maximum": 1,
          "format": "float",
          "description": "A number in the range [0..1]",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "amount": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "rate",
        "amount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxportion"
    },
    "TaxPortionDraft": {
      "title": "TaxPortionDraft",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "rate": {
          "minimum": 0,
          "maximum": 1,
          "format": "float",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "amount": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "rate",
        "amount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxportion"
    },
    "TaxRate": {
      "title": "TaxRate",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID is always set if the tax rate is part of a TaxCategory.\nThe external tax rates in a\nCart do not contain an `id`.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amount": {
          "minimum": 0,
          "maximum": 1,
          "format": "float",
          "description": "Percentage in the range of [0..1].\nThe sum of the amounts of all `subRates`, if there are any.",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "includedInPrice": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "country": {
          "pattern": "^[A-Z]{2}$",
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "description": "The state in the country",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "subRates": {
          "description": "For countries (e.g.\nthe US) where the total tax is a combination of multiple taxes (e.g.\nstate and local taxes).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubRate"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "amount",
        "includedInPrice",
        "country"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxrate"
    },
    "TaxRateDraft": {
      "title": "TaxRateDraft",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amount": {
          "minimum": 0,
          "maximum": 1,
          "format": "float",
          "description": "Percentage in the range of [0..1].\nMust be supplied if no `subRates` are specified.\nIf `subRates` are specified\nthen the `amount` can be omitted or it must be the sum of the amounts of all `subRates`.",
          "type": "number",
          "x-annotation-builtinType": "number",
          "x-annotation-inherited": false
        },
        "includedInPrice": {
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        },
        "country": {
          "pattern": "^[A-Z]{2}$",
          "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
          "$ref": "#/definitions/CountryCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "description": "The state in the country",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "subRates": {
          "description": "For countries (e.g.\nthe US) where the total tax is a combination of multiple taxes (e.g.\nstate and local taxes).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubRate"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "includedInPrice",
        "country"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "TaxCategory"
    },
    "TaxedItemPrice": {
      "title": "TaxedItemPrice",
      "type": "object",
      "properties": {
        "totalNet": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "totalGross": {
          "description": "TaxedItemPrice fields can not be used in query predicates.",
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "totalNet",
        "totalGross"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart"
    },
    "TaxedItemPriceDraft": {
      "title": "TaxedItemPriceDraft",
      "type": "object",
      "properties": {
        "totalNet": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "totalGross": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "totalNet",
        "totalGross"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order"
    },
    "TaxedPrice": {
      "title": "TaxedPrice",
      "type": "object",
      "properties": {
        "totalNet": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "totalGross": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxPortions": {
          "description": "TaxedPrice fields that can be used in query predicates: `totalNet`, `totalGross`.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxPortion"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "totalNet",
        "totalGross",
        "taxPortions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxedprice"
    },
    "TaxedPriceDraft": {
      "title": "TaxedPriceDraft",
      "type": "object",
      "properties": {
        "totalNet": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "totalGross": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "taxPortions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxPortionDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "totalNet",
        "totalGross",
        "taxPortions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Cart",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxedprice"
    },
    "TermFacetResult": {
      "title": "TermFacetResult",
      "allOf": [
        {
          "$ref": "#/definitions/FacetResult"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "terms"
              ],
              "$ref": "#/definitions/FacetTypes",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "dataType": {
              "$ref": "#/definitions/TermFacetResultType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "missing": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "total": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "other": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "terms": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FacetResultTerm"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "type",
            "dataType",
            "missing",
            "total",
            "other",
            "terms"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "TermFacetResultType": {
      "title": "TermFacetResultType",
      "enum": [
        "text",
        "date",
        "time",
        "datetime",
        "boolean",
        "number"
      ],
      "type": "string",
      "x-annotation-package": "Product"
    },
    "TextInputHint": {
      "title": "TextInputHint",
      "enum": [
        "SingleLine",
        "MultiLine"
      ],
      "type": "string",
      "x-annotation-package": "ProductType"
    },
    "TextLineItem": {
      "title": "TextLineItem",
      "type": "object",
      "properties": {
        "addedAt": {
          "format": "date-time",
          "description": "When the text line item was added to the shopping list.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "custom": {
          "$ref": "#/definitions/CustomFields",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "id": {
          "description": "The unique ID of this TextLineItem.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "addedAt",
        "id",
        "name",
        "quantity"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList"
    },
    "TextLineItemDraft": {
      "title": "TextLineItemDraft",
      "type": "object",
      "properties": {
        "addedAt": {
          "format": "date-time",
          "description": "Defaults to the current date and time.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "custom": {
          "description": "The custom fields.",
          "$ref": "#/definitions/CustomFieldsDraft",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "quantity": {
          "format": "int32",
          "description": "Defaults to `1`.",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShoppingList"
    },
    "TrackingData": {
      "title": "TrackingData",
      "type": "object",
      "properties": {
        "trackingId": {
          "description": "The ID to track one parcel.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "carrier": {
          "description": "The carrier that delivers the parcel.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "provider": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "providerTransaction": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "isReturn": {
          "description": "Flag to distinguish if the parcel is on the way to the customer (false) or on the way back (true).",
          "type": "boolean",
          "x-annotation-builtinType": "boolean",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Order",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#trackingdata"
    },
    "Transaction": {
      "title": "Transaction",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this object.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "timestamp": {
          "format": "date-time",
          "description": "The time at which the transaction took place.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "type": {
          "description": "The type of this transaction.",
          "$ref": "#/definitions/TransactionType",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amount": {
          "$ref": "#/definitions/TypedMoney",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "interactionId": {
          "description": "The identifier that is used by the interface that managed the transaction (usually the PSP).\nIf a matching interaction was logged in the `interfaceInteractions` array, the corresponding interaction should be findable with this ID.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "description": "The state of this transaction.",
          "$ref": "#/definitions/TransactionState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "id",
        "type",
        "amount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transaction"
    },
    "TransactionDraft": {
      "title": "TransactionDraft",
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "The time at which the transaction took place.",
          "type": "string",
          "x-annotation-builtinType": "datetime",
          "x-annotation-inherited": false
        },
        "type": {
          "description": "The type of this transaction.",
          "$ref": "#/definitions/TransactionType",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "amount": {
          "$ref": "#/definitions/Money",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "interactionId": {
          "description": "The identifier that is used by the interface that managed the transaction (usually the PSP).\nIf a matching interaction was logged in the `interfaceInteractions` array, the corresponding interaction should be findable with this ID.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "state": {
          "description": "The state of this transaction.\nIf not set, defaults to `Initial`.",
          "$ref": "#/definitions/TransactionState",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type",
        "amount"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Payment"
    },
    "TransactionState": {
      "title": "TransactionState",
      "enum": [
        "Initial",
        "Pending",
        "Success",
        "Failure"
      ],
      "type": "string",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactionstate"
    },
    "TransactionType": {
      "title": "TransactionType",
      "enum": [
        "Authorization",
        "CancelAuthorization",
        "Charge",
        "Refund",
        "Chargeback"
      ],
      "type": "string",
      "x-annotation-package": "Payment",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactiontype"
    },
    "Type": {
      "title": "Type",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the type.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the type.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "description": "Present on resources created after 1/02/2019 except for events not tracked.",
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "Identifier for the type (max.\n256 characters).",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "resourceTypeIds": {
              "description": "Defines for which resource(s) the type is valid.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceTypeId"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            },
            "fieldDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FieldDefinition"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "key",
            "name",
            "resourceTypeIds",
            "fieldDefinitions"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type",
      "x-annotation-updateType": "TypeUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Type>"
    },
    "TypeAddEnumValueAction": {
      "title": "TypeAddEnumValueAction",
      "example": {
        "action": "addEnumValue",
        "fieldName": "CustomENumField",
        "value": {
          "key": "NewENumKey",
          "label": "NewENumLabel"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addEnumValue"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/CustomFieldEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-enumvalue-to-fielddefinition"
    },
    "TypeAddFieldDefinitionAction": {
      "title": "TypeAddFieldDefinitionAction",
      "example": {
        "action": "addFieldDefinition",
        "fieldDefinition": {
          "type": {
            "name": "LocalizedString"
          },
          "name": "fieldDefinitionName",
          "label": {
            "de": "labelDE",
            "en": "labelEN"
          },
          "required": false,
          "inputHint": "MultiLine"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addFieldDefinition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldDefinition": {
              "$ref": "#/definitions/FieldDefinition",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldDefinition"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-fielddefinition"
    },
    "TypeAddLocalizedEnumValueAction": {
      "title": "TypeAddLocalizedEnumValueAction",
      "example": {
        "action": "addLocalizedEnumValue",
        "fieldName": "CustomLeNumField",
        "value": {
          "key": "NewLocalizedEnumKeyString",
          "label": {
            "en": "NewLocalizedEnumLabelEN",
            "de": "NewLocalizedEnumLabelDE"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLocalizedEnumValue"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/CustomFieldLocalizedEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-localizedenumvalue-to-fielddefinition"
    },
    "TypeChangeEnumValueLabelAction": {
      "title": "TypeChangeEnumValueLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeEnumValueLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/CustomFieldEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-enumvalue-label"
    },
    "TypeChangeEnumValueOrderAction": {
      "title": "TypeChangeEnumValueOrderAction",
      "example": {
        "action": "changeEnumValueOrder",
        "fieldName": "CustomENumField",
        "keys": [
          "neweNumKey",
          "NewENumKey",
          "enum2",
          "enum1"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeEnumValueOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "keys"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-enumvalues"
    },
    "TypeChangeFieldDefinitionLabelAction": {
      "title": "TypeChangeFieldDefinitionLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeFieldDefinitionLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "label": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-deprecated": true
    },
    "TypeChangeFieldDefinitionOrderAction": {
      "title": "TypeChangeFieldDefinitionOrderAction",
      "example": {
        "action": "changeFieldDefinitionOrder",
        "fieldNames": [
          "CustomENumField",
          "CustomLeNumField",
          "CustomTextField"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeFieldDefinitionOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldNames"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-fielddefinitions"
    },
    "TypeChangeInputHintAction": {
      "title": "TypeChangeInputHintAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeInputHint"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "inputHint": {
              "$ref": "#/definitions/TypeTextInputHint",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "inputHint"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-inputhint"
    },
    "TypeChangeKeyAction": {
      "title": "TypeChangeKeyAction",
      "example": {
        "action": "changeKey",
        "key": "NewKey"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "key"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-key"
    },
    "TypeChangeLabelAction": {
      "title": "TypeChangeLabelAction",
      "example": {
        "action": "changeLabel",
        "fieldName": "CustomTextField",
        "label": {
          "de": "NewLabelDE",
          "en": "NewLabelEN"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "label": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "label"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-label"
    },
    "TypeChangeLocalizedEnumValueLabelAction": {
      "title": "TypeChangeLocalizedEnumValueLabelAction",
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLocalizedEnumValueLabel"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "value": {
              "$ref": "#/definitions/CustomFieldLocalizedEnumValue",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "value"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-localizedenumvalue-label"
    },
    "TypeChangeLocalizedEnumValueOrderAction": {
      "title": "TypeChangeLocalizedEnumValueOrderAction",
      "example": {
        "action": "changeLocalizedEnumValueOrder",
        "fieldName": "CustomLeNumField",
        "keys": [
          "newleNumKey",
          "NewLocalizedEnumKeyString",
          "lenum2",
          "lenum1"
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeLocalizedEnumValueOrder"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName",
            "keys"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-localizedenumvalues"
    },
    "TypeChangeNameAction": {
      "title": "TypeChangeNameAction",
      "example": {
        "action": "changeName",
        "name": {
          "en": "NameDE",
          "de": "NameEN"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-name"
    },
    "TypeDraft": {
      "title": "TypeDraft",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "description": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "resourceTypeIds": {
          "description": "The IDs of the resources that can be customized with this type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeId"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "fieldDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDefinition"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "key",
        "name",
        "resourceTypeIds"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#typedraft"
    },
    "TypePagedQueryResponse": {
      "title": "TypePagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Type>"
    },
    "TypeReference": {
      "title": "TypeReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "type"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type"
    },
    "TypeRemoveFieldDefinitionAction": {
      "title": "TypeRemoveFieldDefinitionAction",
      "example": {
        "action": "removeFieldDefinition",
        "fieldName": "fieldDefinitionName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeFieldDefinition"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "fieldName": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "fieldName"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#remove-fielddefinition"
    },
    "TypeResourceIdentifier": {
      "title": "TypeResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "type"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type"
    },
    "TypeSetDescriptionAction": {
      "title": "TypeSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": {
          "de": "DescriptionDE",
          "en": "DescriptionEN"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TypeUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "$ref": "#/definitions/LocalizedString",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#set-description"
    },
    "TypeTextInputHint": {
      "title": "TypeTextInputHint",
      "enum": [
        "SingleLine",
        "MultiLine"
      ],
      "type": "string",
      "x-annotation-package": "Type"
    },
    "TypeUpdate": {
      "title": "TypeUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Type",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<TypeUpdate, TypeUpdateAction>"
    },
    "TypeUpdateAction": {
      "title": "TypeUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "TypeAddEnumValueAction",
        "TypeAddFieldDefinitionAction",
        "TypeAddLocalizedEnumValueAction",
        "TypeChangeEnumValueLabelAction",
        "TypeChangeEnumValueOrderAction",
        "TypeChangeFieldDefinitionLabelAction",
        "TypeChangeFieldDefinitionOrderAction",
        "TypeChangeInputHintAction",
        "TypeChangeKeyAction",
        "TypeChangeLabelAction",
        "TypeChangeLocalizedEnumValueLabelAction",
        "TypeChangeLocalizedEnumValueOrderAction",
        "TypeChangeNameAction",
        "TypeRemoveFieldDefinitionAction",
        "TypeSetDescriptionAction"
      ],
      "x-annotation-package": "Type",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<TypeUpdateAction>"
    },
    "TypedMoney": {
      "title": "TypedMoney",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/MoneyType",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "fractionDigits": {
          "maximum": 12,
          "format": "int32",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "centAmount": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "currencyCode": {
          "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
          "$ref": "#/definitions/CurrencyCode",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "type",
        "fractionDigits",
        "centAmount",
        "currencyCode"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CentPrecisionMoney",
        "HighPrecisionMoney"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
    },
    "TypedMoneyDraft": {
      "title": "TypedMoneyDraft",
      "discriminator": "type",
      "allOf": [
        {
          "$ref": "#/definitions/Money"
        },
        {
          "properties": {
            "centAmount": {
              "format": "int64",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": true
            },
            "currencyCode": {
              "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
              "$ref": "#/definitions/CurrencyCode",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "type": {
              "$ref": "#/definitions/MoneyType",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "fractionDigits": {
              "maximum": 12,
              "format": "int32",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "centAmount",
            "currencyCode",
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "CentPrecisionMoneyDraft",
        "HighPrecisionMoneyDraft"
      ],
      "x-annotation-package": "Common",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#basemoney"
    },
    "Update": {
      "title": "Update",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<Update, UpdateAction>"
    },
    "UpdateAction": {
      "title": "UpdateAction",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Common",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<UpdateAction>"
    },
    "UserProvidedIdentifiers": {
      "title": "UserProvidedIdentifiers",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "externalId": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "orderNumber": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "customerNumber": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "slug": {
          "$ref": "#/definitions/LocalizedString",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        }
      },
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Message",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#userprovidedidentifiers"
    },
    "VariantValues": {
      "title": "VariantValues",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "prices",
        "attributes"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "WeakPasswordError": {
      "title": "WeakPasswordError",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorObject"
        },
        {
          "properties": {
            "code": {
              "enum": [
                "WeakPassword"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "message": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Error"
    },
    "WhitespaceTokenizer": {
      "title": "WhitespaceTokenizer",
      "allOf": [
        {
          "$ref": "#/definitions/SuggestTokenizer"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "whitespace"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Product"
    },
    "Zone": {
      "title": "Zone",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResource"
        },
        {
          "properties": {
            "id": {
              "description": "The unique ID of the zone.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-identifier": true,
              "x-annotation-inherited": false
            },
            "version": {
              "format": "int64",
              "description": "The current version of the zone.",
              "type": "integer",
              "x-annotation-builtinType": "integer",
              "x-annotation-inherited": false
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedAt": {
              "format": "date-time",
              "type": "string",
              "x-annotation-builtinType": "datetime",
              "x-annotation-inherited": false
            },
            "lastModifiedBy": {
              "$ref": "#/definitions/LastModifiedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "createdBy": {
              "$ref": "#/definitions/CreatedBy",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            },
            "key": {
              "description": "User-specific unique identifier for a zone.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            },
            "locations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              },
              "x-annotation-builtinType": "array",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "id",
            "version",
            "createdAt",
            "lastModifiedAt",
            "name",
            "locations"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone",
      "x-annotation-updateType": "ZoneUpdate",
      "x-annotation-java-extends": "com.commercetools.api.models.DomainResource<Zone>"
    },
    "ZoneAddLocationAction": {
      "title": "ZoneAddLocationAction",
      "example": {
        "action": "addLocation",
        "location": {
          "country": "AT"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "addLocation"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "location": {
              "$ref": "#/definitions/Location",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "location"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#add-location"
    },
    "ZoneChangeNameAction": {
      "title": "ZoneChangeNameAction",
      "example": {
        "action": "changeName",
        "name": "changedName"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "changeName"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "name": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "name"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#change-name"
    },
    "ZoneDraft": {
      "title": "ZoneDraft",
      "type": "object",
      "properties": {
        "key": {
          "description": "User-specific unique identifier for a zone.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction.",
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "name": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "description": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "name",
        "locations"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zonedraft"
    },
    "ZonePagedQueryResponse": {
      "title": "ZonePagedQueryResponse",
      "type": "object",
      "properties": {
        "limit": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "count": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "total": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "offset": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Zone"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "limit",
        "count",
        "offset",
        "results"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourcePagedQueryResponse<Zone>"
    },
    "ZoneRate": {
      "title": "ZoneRate",
      "type": "object",
      "properties": {
        "zone": {
          "$ref": "#/definitions/ZoneReference",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingRates": {
          "description": "The array does not contain two shipping rates with the same currency.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRate"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "zone",
        "shippingRates"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zonerate"
    },
    "ZoneRateDraft": {
      "title": "ZoneRateDraft",
      "type": "object",
      "properties": {
        "zone": {
          "$ref": "#/definitions/ZoneResourceIdentifier",
          "x-annotation-builtinType": "object",
          "x-annotation-inherited": false
        },
        "shippingRates": {
          "description": "The array must not contain two shipping rates with the same currency.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingRateDraft"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "zone",
        "shippingRates"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "ShippingMethod",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zoneratedraft"
    },
    "ZoneReference": {
      "title": "ZoneReference",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "zone"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "obj": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "typeId",
            "id"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone"
    },
    "ZoneRemoveLocationAction": {
      "title": "ZoneRemoveLocationAction",
      "example": {
        "action": "removeLocation",
        "location": {
          "country": "AT"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "removeLocation"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "location": {
              "$ref": "#/definitions/Location",
              "x-annotation-builtinType": "object",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action",
            "location"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#remove-location"
    },
    "ZoneResourceIdentifier": {
      "title": "ZoneResourceIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceIdentifier"
        },
        {
          "properties": {
            "typeId": {
              "enum": [
                "zone"
              ],
              "$ref": "#/definitions/ReferenceTypeId",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "id": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            }
          },
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone"
    },
    "ZoneSetDescriptionAction": {
      "title": "ZoneSetDescriptionAction",
      "example": {
        "action": "setDescription",
        "description": "new ZoneDescription"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setDescription"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "description": {
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#set-description"
    },
    "ZoneSetKeyAction": {
      "title": "ZoneSetKeyAction",
      "example": {
        "action": "setKey",
        "key": "keyString"
      },
      "allOf": [
        {
          "$ref": "#/definitions/ZoneUpdateAction"
        },
        {
          "properties": {
            "action": {
              "enum": [
                "setKey"
              ],
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": true
            },
            "key": {
              "description": "If `key` is absent or `null`, this field will be removed if it exists.",
              "type": "string",
              "x-annotation-builtinType": "string",
              "x-annotation-inherited": false
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        }
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#set-key"
    },
    "ZoneUpdate": {
      "title": "ZoneUpdate",
      "type": "object",
      "properties": {
        "version": {
          "format": "int64",
          "type": "integer",
          "x-annotation-builtinType": "integer",
          "x-annotation-inherited": false
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneUpdateAction"
          },
          "x-annotation-builtinType": "array",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "version",
        "actions"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-package": "Zone",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdate<ZoneUpdate, ZoneUpdateAction>"
    },
    "ZoneUpdateAction": {
      "title": "ZoneUpdateAction",
      "discriminator": "action",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "x-annotation-builtinType": "string",
          "x-annotation-inherited": false
        }
      },
      "required": [
        "action"
      ],
      "x-annotation-builtinType": "object",
      "x-annotation-oneOf": [
        "ZoneAddLocationAction",
        "ZoneChangeNameAction",
        "ZoneRemoveLocationAction",
        "ZoneSetDescriptionAction",
        "ZoneSetKeyAction"
      ],
      "x-annotation-package": "Zone",
      "x-annotation-java-extends": "com.commercetools.api.models.ResourceUpdateAction<ZoneUpdateAction>"
    }
  },
  "paths": {
    "/{projectKey}": {
      "get": {
        "description": "The Endpoint is responding a limited set of information about settings and configuration of the project.",
        "operationId": "Get project settings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "version": 1,
                  "key": "test-project",
                  "name": "Some project name",
                  "countries": [
                    "DE",
                    "US"
                  ],
                  "currencies": [
                    "EUR"
                  ],
                  "languages": [
                    "en"
                  ],
                  "createdAt": "2013-11-01T15:14:34.325Z",
                  "trialUntil": "2013-11-01T15:14:34.325Z",
                  "messages": {
                    "enabled": false
                  },
                  "carts": {
                    "countryTaxRateFallbackEnabled": false
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Project",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update project",
        "operationId": "Update project settings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "version": 1,
                  "key": "test-project",
                  "name": "Some project name",
                  "countries": [
                    "DE",
                    "US"
                  ],
                  "currencies": [
                    "EUR"
                  ],
                  "languages": [
                    "en"
                  ],
                  "createdAt": "2013-11-01T15:14:34.325Z",
                  "trialUntil": "2013-11-01T15:14:34.325Z",
                  "messages": {
                    "enabled": false
                  },
                  "carts": {
                    "countryTaxRateFallbackEnabled": false
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Project",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ProjectUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKey",
      "x-annotation-resourcePathUri": "/{projectKey}"
    },
    "/{projectKey}/api-clients": {
      "get": {
        "description": "Query api-clients",
        "operationId": "Query api-clients",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "api-client-id",
                      "name": "api-client-name",
                      "scope": "view_products",
                      "createdAt": "2018-01-01T00:00:00.001Z",
                      "lastUsedAt": "2017-09-10",
                      "secret": "secret-passphrase"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ApiClientPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}",
              "view_api_clients:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/api-clients -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ApiClient",
        "operationId": "Create ApiClient",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "api-client-id",
                  "name": "api-client-name",
                  "scope": "view_products",
                  "createdAt": "2018-01-01T00:00:00.001Z",
                  "lastUsedAt": "2017-09-10",
                  "secret": "secret-passphrase"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ApiClient",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": "api-client-name",
                  "scope": "view_products"
                }
              },
              "$ref": "#/definitions/ApiClientDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/api-clients -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : \"api-client-name\",\n  \"scope\" : \"view_products\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyApiClients",
      "x-annotation-resourcePathUri": "/{projectKey}/api-clients"
    },
    "/{projectKey}/api-clients/{ID}": {
      "get": {
        "description": "Get ApiClient by ID",
        "operationId": "Get ApiClient by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "api-client-id",
                  "name": "api-client-name",
                  "scope": "view_products",
                  "createdAt": "2018-01-01T00:00:00.001Z",
                  "lastUsedAt": "2017-09-10",
                  "secret": "secret-passphrase"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ApiClient",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}",
              "view_api_clients:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/api-clients/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "delete": {
        "description": "Delete ApiClient by ID",
        "operationId": "Delete ApiClient by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "api-client-id",
                  "name": "api-client-name",
                  "scope": "view_products",
                  "createdAt": "2018-01-01T00:00:00.001Z",
                  "lastUsedAt": "2017-09-10",
                  "secret": "secret-passphrase"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ApiClient",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/api-clients/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyApiClientsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/api-clients/{ID}"
    },
    "/{projectKey}/cart-discounts": {
      "get": {
        "description": "Query cart-discounts",
        "operationId": "Query cart-discounts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                      "version": 1,
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                      "name": {
                        "en": "Summer Sale"
                      },
                      "value": {
                        "type": "relative",
                        "permyriad": 1000
                      },
                      "cartPredicate": "1=1",
                      "target": {
                        "type": "lineItems",
                        "predicate": "1=1"
                      },
                      "sortOrder": "0.1",
                      "isActive": true,
                      "requiresDiscountCode": false,
                      "references": [],
                      "stackingMode": "Stacking"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscountPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create CartDiscount",
        "operationId": "Create CartDiscount",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false
                }
              },
              "$ref": "#/definitions/CartDiscountDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : {\n    \"en\" : \"Summer Sale\"\n  },\n  \"value\" : {\n    \"type\" : \"relative\",\n    \"permyriad\" : 1000\n  },\n  \"cartPredicate\" : \"1=1\",\n  \"target\" : {\n    \"type\" : \"lineItems\",\n    \"predicate\" : \"1=1\"\n  },\n  \"sortOrder\" : \"0.1\",\n  \"isActive\" : true,\n  \"requiresDiscountCode\" : false\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCartDiscounts",
      "x-annotation-resourcePathUri": "/{projectKey}/cart-discounts"
    },
    "/{projectKey}/cart-discounts/key={key}": {
      "get": {
        "description": "Get CartDiscount by key",
        "operationId": "Get CartDiscount by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update CartDiscount by key",
        "operationId": "Update CartDiscount by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeValue",
                      "value": {
                        "type": "relative",
                        "permyriad": 1000
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CartDiscountUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"relative\",\n      \"permyriad\" : 1000\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete CartDiscount by key",
        "operationId": "Delete CartDiscount by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCartDiscountsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/cart-discounts/key={key}"
    },
    "/{projectKey}/cart-discounts/{ID}": {
      "get": {
        "description": "Get CartDiscount by ID",
        "operationId": "Get CartDiscount by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update CartDiscount by ID",
        "operationId": "Update CartDiscount by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeValue",
                      "value": {
                        "type": "relative",
                        "permyriad": 1000
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CartDiscountUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"relative\",\n      \"permyriad\" : 1000\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete CartDiscount by ID",
        "operationId": "Delete CartDiscount by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/cart-discounts/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCartDiscountsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/cart-discounts/{ID}"
    },
    "/{projectKey}/carts": {
      "get": {
        "description": "Query carts",
        "operationId": "Query carts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "type": "Cart",
                      "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                      "version": 5,
                      "createdAt": "2015-09-22T15:36:17.510Z",
                      "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                      "lineItems": [
                        {
                          "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                          "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                          "name": {
                            "en": "SAPPHIRE"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "sapphire1421832124423"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_SAPPHIRE_variant1_1421832124423",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 2800
                                },
                                "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          },
                          "quantity": 2,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 2,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 5600
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      },
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    },
                    {
                      "type": "Cart",
                      "id": "668e5783-73c8-4f2d-91f4-3c90b872c700",
                      "version": 3,
                      "createdAt": "2015-10-07T07:33:05.894Z",
                      "lastModifiedAt": "2015-10-07T07:33:06.070Z",
                      "lineItems": [
                        {
                          "id": "90dff06c-272e-47fa-b8de-923dce092474",
                          "productId": "7b1203f4-66c0-438c-9a30-f4fb6be79bdf",
                          "name": {
                            "de": "WB ATHLETIC PANZER",
                            "en": "WB ATHLETIC TANK"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "wb-athletic-tank1421832124574"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_WB_ATHLETIC_TANK_variant1_1421832124574",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 8400
                                },
                                "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253265444_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 8400
                            },
                            "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 8400
                          },
                          "custom": {
                            "type": {
                              "typeId": "type",
                              "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa"
                            },
                            "fields": {
                              "offer_name": "SuperMax"
                            }
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 8400
                      },
                      "country": "DE",
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "customerId",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creating a cart can fail with an InvalidOperation if the referenced shipping method in the\nCartDraft has a predicate which does not match the cart.",
        "operationId": "Create Cart",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "currency": "EUR"
                }
              },
              "$ref": "#/definitions/CartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"currency\" : \"EUR\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCarts",
      "x-annotation-resourcePathUri": "/{projectKey}/carts"
    },
    "/{projectKey}/carts/customer-id={customerId}": {
      "get": {
        "description": "Retrieves the active cart of the customer that has been modified most recently.\nIt does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.\n\nThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\nsend an Update request with the Recalculate update action instead.",
        "operationId": "Get Cart by customerId",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts/customer-id={customerId} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "customerId",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCartsCustomerIdByCustomerId",
      "x-annotation-resourcePathUri": "/{projectKey}/carts/customer-id={customerId}"
    },
    "/{projectKey}/carts/key={key}": {
      "get": {
        "description": "The cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.",
        "operationId": "Get Cart by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Cart by key",
        "operationId": "Update Cart by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addLineItem",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "variantId": 1,
                      "quantity": 1
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Cart by key",
        "operationId": "Delete Cart by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCartsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/carts/key={key}"
    },
    "/{projectKey}/carts/replicate": {
      "post": {
        "operationId": "Replicate cart",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ReplicaCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCartsReplicate",
      "x-annotation-resourcePathUri": "/{projectKey}/carts/replicate"
    },
    "/{projectKey}/carts/{ID}": {
      "get": {
        "description": "The cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.",
        "operationId": "Get Cart by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Cart by ID",
        "operationId": "Update Cart by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addLineItem",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "variantId": 1,
                      "quantity": 1
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Cart by ID",
        "operationId": "Delete Cart by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/carts/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCartsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/carts/{ID}"
    },
    "/{projectKey}/categories": {
      "get": {
        "description": "Query categories",
        "operationId": "Query categories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                      "version": 1,
                      "name": {
                        "en": "Hats"
                      },
                      "slug": {
                        "en": "hats"
                      },
                      "ancestors": [
                        {
                          "typeId": "category",
                          "id": "123456"
                        }
                      ],
                      "orderHint": "0.000013833188755841543727840",
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                    },
                    {
                      "id": "1bae3aa3-1e02-49d2-b719-4c5020f50638",
                      "version": 1,
                      "name": {
                        "en": "Long sleeves"
                      },
                      "slug": {
                        "en": "long-sleeves"
                      },
                      "ancestors": [],
                      "orderHint": "0.000013833188755781786424864",
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CategoryPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creating a category produces the CategoryCreated message.",
        "operationId": "Create Category",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": {
                    "en": "Top hat"
                  },
                  "slug": {
                    "en": "top-hat"
                  },
                  "orderHint": "0.1"
                }
              },
              "$ref": "#/definitions/CategoryDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : {\n    \"en\" : \"Top hat\"\n  },\n  \"slug\" : {\n    \"en\" : \"top-hat\"\n  },\n  \"orderHint\" : \"0.1\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCategories",
      "x-annotation-resourcePathUri": "/{projectKey}/categories"
    },
    "/{projectKey}/categories/key={key}": {
      "get": {
        "description": "Get Category by key",
        "operationId": "Get Category by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Category by key",
        "operationId": "Update Category by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CategoryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Category by key",
        "operationId": "Delete Category by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCategoriesKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/categories/key={key}"
    },
    "/{projectKey}/categories/{ID}": {
      "get": {
        "description": "Get Category by ID",
        "operationId": "Get Category by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Category by ID",
        "operationId": "Update Category by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CategoryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Category by ID",
        "operationId": "Delete Category by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Category",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/categories/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCategoriesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/categories/{ID}"
    },
    "/{projectKey}/channels": {
      "get": {
        "description": "Query channels",
        "operationId": "Query channels",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                      "key": "channel1",
                      "version": 1,
                      "roles": [
                        "InventorySupply"
                      ],
                      "createdAt": "2015-05-28T09:48:35.023Z",
                      "lastModifiedAt": "2015-05-28T09:48:35.023Z"
                    },
                    {
                      "id": "51323ad2-89f2-4233-b9be-f15c049769c8",
                      "key": "channel2",
                      "version": 2,
                      "roles": [
                        "InventorySupply"
                      ],
                      "createdAt": "2017-01-10T06:51:08.866Z",
                      "lastModifiedAt": "2017-01-10T06:51:08.924Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ChannelPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/channels -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Channel",
        "operationId": "Create Channel",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                  "key": "commercetools",
                  "version": 1,
                  "roles": [
                    "InventorySupply"
                  ],
                  "createdAt": "2015-05-28T09:48:35.023Z",
                  "lastModifiedAt": "2015-05-28T09:48:35.023Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Channel",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "key": "commercetools",
                  "roles": [
                    "InventorySupply"
                  ]
                }
              },
              "$ref": "#/definitions/ChannelDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/channels -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"key\" : \"commercetools\",\n  \"roles\" : [ \"InventorySupply\" ]\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyChannels",
      "x-annotation-resourcePathUri": "/{projectKey}/channels"
    },
    "/{projectKey}/channels/{ID}": {
      "get": {
        "description": "Get Channel by ID",
        "operationId": "Get Channel by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                  "key": "commercetools",
                  "version": 1,
                  "roles": [
                    "InventorySupply"
                  ],
                  "createdAt": "2015-05-28T09:48:35.023Z",
                  "lastModifiedAt": "2015-05-28T09:48:35.023Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Channel",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/channels/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Channel by ID",
        "operationId": "Update Channel by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                  "key": "commercetools",
                  "version": 1,
                  "roles": [
                    "InventorySupply"
                  ],
                  "createdAt": "2015-05-28T09:48:35.023Z",
                  "lastModifiedAt": "2015-05-28T09:48:35.023Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Channel",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ChannelUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/channels/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Channel by ID",
        "operationId": "Delete Channel by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                  "key": "commercetools",
                  "version": 1,
                  "roles": [
                    "InventorySupply"
                  ],
                  "createdAt": "2015-05-28T09:48:35.023Z",
                  "lastModifiedAt": "2015-05-28T09:48:35.023Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Channel",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/channels/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyChannelsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/channels/{ID}"
    },
    "/{projectKey}/custom-objects": {
      "get": {
        "description": "The query endpoint allows to retrieve custom objects in a specific container or all custom objects.\nFor performance reasons, it is highly advisable to query only for custom objects in a container by using\nthe container field in the where predicate.",
        "operationId": "Query custom-objects",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "f584ebbb-3805-43f3-80c8-76f98b2c18b5",
                      "version": 5,
                      "container": "channel",
                      "key": "ac390383-370f-43f8-a534-db1604cb96a8",
                      "value": "{\"name\":\"Commercetools\",\"slug\":\"commercetools\",\"lat\":52.523753,\"lng\":13.380434}",
                      "createdAt": "2015-05-28T09:48:35.098Z",
                      "lastModifiedAt": "2015-07-01T15:58:36.930Z"
                    },
                    {
                      "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                      "version": 2,
                      "container": "test-container",
                      "key": "test-key",
                      "value": "test-value",
                      "createdAt": "2016-02-18T10:36:29.468Z",
                      "lastModifiedAt": "2016-02-18T10:36:29.571Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomObjectPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/custom-objects -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.",
        "operationId": "Create CustomObject",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                  "version": 2,
                  "container": "test-container",
                  "key": "test-key",
                  "value": "test-value",
                  "createdAt": "2016-02-18T10:36:29.468Z",
                  "lastModifiedAt": "2016-02-18T10:36:29.571Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomObject",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "container": "test-container",
                  "key": "test-key",
                  "value": "test-value"
                }
              },
              "$ref": "#/definitions/CustomObjectDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/custom-objects -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"container\" : \"test-container\",\n  \"key\" : \"test-key\",\n  \"value\" : \"test-value\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomObjects",
      "x-annotation-resourcePathUri": "/{projectKey}/custom-objects"
    },
    "/{projectKey}/custom-objects/{container}": {
      "get": {
        "description": "Get CustomObjectPagedQueryResponse by container",
        "operationId": "Get CustomObjectPagedQueryResponse by container",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "f584ebbb-3805-43f3-80c8-76f98b2c18b5",
                      "version": 5,
                      "container": "channel",
                      "key": "ac390383-370f-43f8-a534-db1604cb96a8",
                      "value": "{\"name\":\"Commercetools\",\"slug\":\"commercetools\",\"lat\":52.523753,\"lng\":13.380434}",
                      "createdAt": "2015-05-28T09:48:35.098Z",
                      "lastModifiedAt": "2015-07-01T15:58:36.930Z"
                    },
                    {
                      "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                      "version": 2,
                      "container": "test-container",
                      "key": "test-key",
                      "value": "test-value",
                      "createdAt": "2016-02-18T10:36:29.468Z",
                      "lastModifiedAt": "2016-02-18T10:36:29.571Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomObjectPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/custom-objects/{container} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "container",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomObjectsByContainer",
      "x-annotation-resourcePathUri": "/{projectKey}/custom-objects/{container}"
    },
    "/{projectKey}/custom-objects/{container}/{key}": {
      "get": {
        "description": "Get CustomObject by container and key",
        "operationId": "Get CustomObject by container and key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                  "version": 2,
                  "container": "test-container",
                  "key": "test-key",
                  "value": "test-value",
                  "createdAt": "2016-02-18T10:36:29.468Z",
                  "lastModifiedAt": "2016-02-18T10:36:29.571Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomObject",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/custom-objects/{container}/{key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "delete": {
        "description": "Delete CustomObject by container and key",
        "operationId": "Delete CustomObject by container and key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                  "version": 2,
                  "container": "test-container",
                  "key": "test-key",
                  "value": "test-value",
                  "createdAt": "2016-02-18T10:36:29.468Z",
                  "lastModifiedAt": "2016-02-18T10:36:29.571Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomObject",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/custom-objects/{container}/{key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "container",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomObjectsByContainerByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/custom-objects/{container}/{key}"
    },
    "/{projectKey}/customer-groups": {
      "get": {
        "description": "Query customer-groups",
        "operationId": "Query customer-groups",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "aef9cf41-94ad-4794-8122-62d308900430",
                      "version": 2,
                      "name": "Webshop user",
                      "createdAt": "2017-01-10T06:51:25.896Z",
                      "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroupPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create CustomerGroup",
        "operationId": "Create CustomerGroup",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "groupName": "Webshop user"
                }
              },
              "$ref": "#/definitions/CustomerGroupDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"groupName\" : \"Webshop user\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomerGroups",
      "x-annotation-resourcePathUri": "/{projectKey}/customer-groups"
    },
    "/{projectKey}/customer-groups/key={key}": {
      "get": {
        "description": "Gets a customer group by Key.",
        "operationId": "Get CustomerGroup by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Updates a customer group by Key.",
        "operationId": "Update CustomerGroup by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CustomerGroupUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete CustomerGroup by key",
        "operationId": "Delete CustomerGroup by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomerGroupsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/customer-groups/key={key}"
    },
    "/{projectKey}/customer-groups/{ID}": {
      "get": {
        "description": "Get CustomerGroup by ID",
        "operationId": "Get CustomerGroup by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update CustomerGroup by ID",
        "operationId": "Update CustomerGroup by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CustomerGroupUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete CustomerGroup by ID",
        "operationId": "Delete CustomerGroup by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerGroup",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/customer-groups/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomerGroupsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/customer-groups/{ID}"
    },
    "/{projectKey}/customers": {
      "get": {
        "description": "Query customers",
        "operationId": "Query customers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "addresses": [],
                      "email": "<random>@example.com",
                      "firstName": "John",
                      "id": "some_123_id",
                      "isEmailVerified": false,
                      "lastName": "Doe",
                      "password": "secret123",
                      "version": 1,
                      "createdAt": "2015-07-06T13:22:33.339Z",
                      "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creates a customer. If an anonymous cart is passed in,\nthen the cart is assigned to the created customer and the version number of the Cart will increase.\nIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer.",
        "operationId": "Create Customer",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "lastName": "Doe",
                  "password": "secret123"
                }
              },
              "$ref": "#/definitions/CustomerDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"email\" : \"<random>@example.com\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"password\" : \"secret123\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomers",
      "x-annotation-resourcePathUri": "/{projectKey}/customers"
    },
    "/{projectKey}/customers/email-token": {
      "post": {
        "description": "Create a Token for verifying the Customer's Email",
        "operationId": "Create a Token for verifying the Customer's Email",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerToken",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerCreateEmailToken"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersEmailToken",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/email-token"
    },
    "/{projectKey}/customers/email-token={emailToken}": {
      "get": {
        "description": "Get Customer by emailToken",
        "operationId": "Get customer by email verification token",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/email-token={emailToken} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "emailToken",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersEmailTokenByEmailToken",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/email-token={emailToken}"
    },
    "/{projectKey}/customers/email/confirm": {
      "post": {
        "description": "Verifies customer's email using a token.",
        "operationId": "Verifies customer's email.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The email was verified.",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerEmailVerify"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersEmailConfirm",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/email/confirm"
    },
    "/{projectKey}/customers/key={key}": {
      "get": {
        "description": "Get Customer by key",
        "operationId": "Get Customer by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Customer by key",
        "operationId": "Update Customer by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 3,
                  "actions": [
                    {
                      "action": "addAddress",
                      "address": {
                        "streetName": "Any Street",
                        "streetNumber": "1337",
                        "postalCode": "11111",
                        "city": "Any City",
                        "country": "US"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CustomerUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Customer by key",
        "operationId": "Delete Customer by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/key={key}"
    },
    "/{projectKey}/customers/password": {
      "post": {
        "description": "Change a customers password",
        "operationId": "Change a customers password",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerChangePassword"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersPassword",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/password"
    },
    "/{projectKey}/customers/password-token": {
      "post": {
        "description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.",
        "operationId": "Create a Token for Resetting the Customer's Password",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerToken",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerCreatePasswordResetToken"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersPasswordToken",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/password-token"
    },
    "/{projectKey}/customers/password-token={passwordToken}": {
      "get": {
        "description": "Get Customer by passwordToken",
        "operationId": "Get customer by password verification token",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/password-token={passwordToken} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "passwordToken",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersPasswordTokenByPasswordToken",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/password-token={passwordToken}"
    },
    "/{projectKey}/customers/password/reset": {
      "post": {
        "description": "Set a new password using a token.",
        "operationId": "Reset Customer's Password",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerResetPassword"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersPasswordReset",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/password/reset"
    },
    "/{projectKey}/customers/{ID}": {
      "get": {
        "description": "Get Customer by ID",
        "operationId": "Get Customer by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Customer by ID",
        "operationId": "Update Customer by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 3,
                  "actions": [
                    {
                      "action": "addAddress",
                      "address": {
                        "streetName": "Any Street",
                        "streetNumber": "1337",
                        "postalCode": "11111",
                        "city": "Any City",
                        "country": "US"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CustomerUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Customer by ID",
        "operationId": "Delete Customer by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/customers/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyCustomersByID",
      "x-annotation-resourcePathUri": "/{projectKey}/customers/{ID}"
    },
    "/{projectKey}/discount-codes": {
      "get": {
        "description": "Query discount-codes",
        "operationId": "Query discount-codes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                      "version": 2,
                      "code": "SAVE10",
                      "name": {
                        "en": "Save10"
                      },
                      "cartDiscounts": [
                        {
                          "typeId": "cart-discount",
                          "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                        }
                      ],
                      "isActive": true,
                      "cartPredicate": "1=1",
                      "references": [],
                      "groups": [],
                      "attributeTypes": {},
                      "cartFieldTypes": {},
                      "lineItemFieldTypes": {},
                      "customLineItemFieldTypes": {},
                      "createdAt": "2015-09-15T09:02:29.323Z",
                      "lastModifiedAt": "2015-09-15T09:04:06.910Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/DiscountCodePagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/discount-codes -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create DiscountCode",
        "operationId": "Create DiscountCode",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                  "version": 2,
                  "code": "SAVE10",
                  "name": {
                    "en": "Save10"
                  },
                  "cartDiscounts": [
                    {
                      "typeId": "cart-discount",
                      "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                    }
                  ],
                  "isActive": true,
                  "cartPredicate": "1=1",
                  "references": [],
                  "groups": [],
                  "createdAt": "2015-09-15T09:02:29.323Z",
                  "lastModifiedAt": "2015-09-15T09:04:06.910Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/DiscountCode",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "code": "SAVE10",
                  "name": {
                    "en": "Save10"
                  },
                  "cartDiscounts": [
                    {
                      "typeId": "cart-discount",
                      "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                    }
                  ],
                  "isActive": true,
                  "cartPredicate": "1=1"
                }
              },
              "$ref": "#/definitions/DiscountCodeDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/discount-codes -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"code\" : \"SAVE10\",\n  \"name\" : {\n    \"en\" : \"Save10\"\n  },\n  \"cartDiscounts\" : [ {\n    \"typeId\" : \"cart-discount\",\n    \"id\" : \"fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3\"\n  } ],\n  \"isActive\" : true,\n  \"cartPredicate\" : \"1=1\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyDiscountCodes",
      "x-annotation-resourcePathUri": "/{projectKey}/discount-codes"
    },
    "/{projectKey}/discount-codes/{ID}": {
      "get": {
        "description": "Get DiscountCode by ID",
        "operationId": "Get DiscountCode by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                  "version": 2,
                  "code": "SAVE10",
                  "name": {
                    "en": "Save10"
                  },
                  "cartDiscounts": [
                    {
                      "typeId": "cart-discount",
                      "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                    }
                  ],
                  "isActive": true,
                  "cartPredicate": "1=1",
                  "references": [],
                  "groups": [],
                  "createdAt": "2015-09-15T09:02:29.323Z",
                  "lastModifiedAt": "2015-09-15T09:04:06.910Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/DiscountCode",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/discount-codes/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update DiscountCode by ID",
        "operationId": "Update DiscountCode by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                  "version": 2,
                  "code": "SAVE10",
                  "name": {
                    "en": "Save10"
                  },
                  "cartDiscounts": [
                    {
                      "typeId": "cart-discount",
                      "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                    }
                  ],
                  "isActive": true,
                  "cartPredicate": "1=1",
                  "references": [],
                  "groups": [],
                  "createdAt": "2015-09-15T09:02:29.323Z",
                  "lastModifiedAt": "2015-09-15T09:04:06.910Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/DiscountCode",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/DiscountCodeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/discount-codes/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete DiscountCode by ID",
        "operationId": "Delete DiscountCode by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                  "version": 2,
                  "code": "SAVE10",
                  "name": {
                    "en": "Save10"
                  },
                  "cartDiscounts": [
                    {
                      "typeId": "cart-discount",
                      "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                    }
                  ],
                  "isActive": true,
                  "cartPredicate": "1=1",
                  "references": [],
                  "groups": [],
                  "createdAt": "2015-09-15T09:02:29.323Z",
                  "lastModifiedAt": "2015-09-15T09:04:06.910Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/DiscountCode",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/discount-codes/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyDiscountCodesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/discount-codes/{ID}"
    },
    "/{projectKey}/extensions": {
      "get": {
        "description": "Query extensions",
        "operationId": "Query extensions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                      "version": 1,
                      "createdAt": "2017-01-25T14:14:22.417Z",
                      "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                      "destination": {
                        "type": "HTTP",
                        "url": "https://example.org/extension"
                      },
                      "triggers": [
                        {
                          "resourceTypeId": "cart",
                          "actions": [
                            "Create"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ExtensionPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Currently, a maximum of 25 extensions can be created per project.",
        "operationId": "Create Extension",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              },
              "$ref": "#/definitions/ExtensionDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"destination\" : {\n    \"type\" : \"HTTP\",\n    \"url\" : \"https://example.azurewebsites.net/api/extension\",\n    \"authentication\" : {\n      \"type\" : \"AzureFunctions\",\n      \"key\" : \"some-azure-function-code\"\n    }\n  },\n  \"triggers\" : [ {\n    \"resourceTypeId\" : \"cart\",\n    \"actions\" : [ \"Create\", \"Update\" ]\n  } ],\n  \"key\" : \"my-extension\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyExtensions",
      "x-annotation-resourcePathUri": "/{projectKey}/extensions"
    },
    "/{projectKey}/extensions/key={key}": {
      "get": {
        "description": "Retrieves the representation of an extension by its key.",
        "operationId": "Get Extension by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Extension by key",
        "operationId": "Update Extension by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setKey",
                      "key": "my-new-extension-key"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ExtensionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"my-new-extension-key\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Extension by key",
        "operationId": "Delete Extension by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyExtensionsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/extensions/key={key}"
    },
    "/{projectKey}/extensions/{ID}": {
      "get": {
        "description": "Retrieves the representation of an extension by its id.",
        "operationId": "Get Extension by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Extension by ID",
        "operationId": "Update Extension by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setKey",
                      "key": "my-new-extension-key"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ExtensionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"my-new-extension-key\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Extension by ID",
        "operationId": "Delete Extension by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Extension",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/extensions/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyExtensionsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/extensions/{ID}"
    },
    "/{projectKey}/graphql": {
      "post": {
        "description": "Execute a GraphQL query",
        "operationId": "GraphQL",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "data": {
                    "products": {
                      "results": [
                        {
                          "id": "00f230ac-da51-4a18-99eb-83368f1435b1",
                          "masterData": {
                            "staged": {
                              "skus": [
                                "test"
                              ],
                              "name": "Test"
                            },
                            "current": {
                              "skus": [
                                "test"
                              ],
                              "name": "Test"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/GraphQLResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/graphql"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "query": "query query_1($productId: String){\n        product(key:$productId){\n          key\n        }\n      }",
                  "operationName": "query_1",
                  "variables": {
                    "productId": "f8ded810-a1"
                  }
                }
              },
              "$ref": "#/definitions/GraphQLRequest"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/graphql -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"query\" : \"query query_1($productId: String){n        product(key:$productId){n          keyn        }n      }\",\n  \"operationName\" : \"query_1\",\n  \"variables\" : {\n    \"productId\" : \"f8ded810-a1\"\n  }\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyGraphql",
      "x-annotation-resourcePathUri": "/{projectKey}/graphql"
    },
    "/{projectKey}/in-store/key={storeKey}": {
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKey",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}"
    },
    "/{projectKey}/in-store/key={storeKey}/carts": {
      "get": {
        "description": "Queries carts in a specific Store. The {storeKey} path parameter maps to a Store's key.",
        "operationId": "Query carts in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "type": "Cart",
                      "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                      "version": 5,
                      "createdAt": "2015-09-22T15:36:17.510Z",
                      "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                      "lineItems": [
                        {
                          "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                          "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                          "name": {
                            "en": "SAPPHIRE"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "sapphire1421832124423"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_SAPPHIRE_variant1_1421832124423",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 2800
                                },
                                "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          },
                          "quantity": 2,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 2,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 5600
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      },
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    },
                    {
                      "type": "Cart",
                      "id": "668e5783-73c8-4f2d-91f4-3c90b872c700",
                      "version": 3,
                      "createdAt": "2015-10-07T07:33:05.894Z",
                      "lastModifiedAt": "2015-10-07T07:33:06.070Z",
                      "lineItems": [
                        {
                          "id": "90dff06c-272e-47fa-b8de-923dce092474",
                          "productId": "7b1203f4-66c0-438c-9a30-f4fb6be79bdf",
                          "name": {
                            "de": "WB ATHLETIC PANZER",
                            "en": "WB ATHLETIC TANK"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "wb-athletic-tank1421832124574"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_WB_ATHLETIC_TANK_variant1_1421832124574",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 8400
                                },
                                "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253265444_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 8400
                            },
                            "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 8400
                          },
                          "custom": {
                            "type": {
                              "typeId": "type",
                              "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa"
                            },
                            "fields": {
                              "offer_name": "SuperMax"
                            }
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 8400
                      },
                      "country": "DE",
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    }
                  ]
                }
              },
              "x-annotation-oneOfDef": [
                {
                  "$ref": "#/definitions/CartPagedQueryResponse"
                },
                {
                  "type": "object"
                }
              ],
              "x-annotation-oneOf": [
                "CartPagedQueryResponse",
                "object"
              ],
              "x-annotation-builtinType": "any"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "customerId",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint the cart's store field is always set to the store specified in the path parameter.\nCreating a cart can fail with an InvalidOperation if the referenced shipping method\nin the CartDraft has a predicate which does not match the cart.",
        "operationId": "Create cart in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "currency": "EUR"
                }
              },
              "$ref": "#/definitions/CartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"currency\" : \"EUR\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCarts",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/carts"
    },
    "/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}": {
      "get": {
        "description": "Retrieves the active cart of the customer that has been modified most recently in a specific Store.\nThe {storeKey} path parameter maps to a Store's key.\n\nIf the cart exists in the commercetools project but does not have the store field, or the store field\nreferences a different store, this method returns a ResourceNotFound error.\n\nThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\nsend an Update request with the Recalculate update action instead.",
        "operationId": "Get cart by customer id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "customerId",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerId",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}"
    },
    "/{projectKey}/in-store/key={storeKey}/carts/key={key}": {
      "get": {
        "description": "Returns a cart by its key from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nThe cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.",
        "operationId": "Get cart by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.",
        "operationId": "Update cart by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addLineItem",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "variantId": 1,
                      "quantity": 1
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Cart by key",
        "operationId": "Delete cart by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/carts/key={key}"
    },
    "/{projectKey}/in-store/key={storeKey}/carts/replicate": {
      "post": {
        "operationId": "Replicate cart for store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ReplicaCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_orders:{projectKey}:{storeKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCartsReplicate",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/carts/replicate"
    },
    "/{projectKey}/in-store/key={storeKey}/carts/{ID}": {
      "get": {
        "description": "Returns a cart by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nThe cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.",
        "operationId": "Get cart by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.",
        "operationId": "Update cart by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addLineItem",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "variantId": 1,
                      "quantity": 1
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Cart by ID",
        "operationId": "Delete cart by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/carts/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCartsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/carts/{ID}"
    },
    "/{projectKey}/in-store/key={storeKey}/customers": {
      "get": {
        "description": "Query customers",
        "operationId": "Query customers in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "addresses": [],
                      "email": "<random>@example.com",
                      "firstName": "John",
                      "id": "some_123_id",
                      "isEmailVerified": false,
                      "lastName": "Doe",
                      "password": "secret123",
                      "version": 1,
                      "createdAt": "2015-07-06T13:22:33.339Z",
                      "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creates a customer in a specific Store. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint, if omitted,\nthe customer's stores field is set to the store specified in the path parameter.\nIf an anonymous cart is passed in as when using this method,\nthen the cart is assigned to the created customer and the version number of the Cart increases.\nIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer and\nthe store specified. If you pass in a cart with a store field specified,\nthe store field must reference the same store specified in the {storeKey} path parameter.",
        "operationId": "Create customer in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "lastName": "Doe",
                  "password": "secret123"
                }
              },
              "$ref": "#/definitions/CustomerDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"email\" : \"<random>@example.com\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"password\" : \"secret123\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomers",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/email-token": {
      "post": {
        "description": "Create a Token for verifying the Customer's Email in store",
        "operationId": "Create a Token for verifying the Customer's Email in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerToken",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerCreateEmailToken"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersEmailToken",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/email-token"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}": {
      "get": {
        "description": "Get Customer by emailToken",
        "operationId": "Get customer by email verification token in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "emailToken",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailToken",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/email/confirm": {
      "post": {
        "description": "Verifies customer's email using a token.",
        "operationId": "Verify Customer's Email in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The email was verified.",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerEmailVerify"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirm",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/email/confirm"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/key={key}": {
      "get": {
        "description": "Returns a customer by its Key from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIt also considers customers that do not have the stores field.\nIf the customer exists in the commercetools project but the stores field references different stores,\nthis method returns a ResourceNotFound error.",
        "operationId": "Get customer by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "If the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.",
        "operationId": "Update customer by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 3,
                  "actions": [
                    {
                      "action": "addAddress",
                      "address": {
                        "streetName": "Any Street",
                        "streetNumber": "1337",
                        "postalCode": "11111",
                        "city": "Any City",
                        "country": "US"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CustomerUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Customer by key",
        "operationId": "Delete customer by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/key={key}"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password": {
      "post": {
        "description": "Change a customers password",
        "operationId": "Change a customers password in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerChangePassword"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersPassword",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/password"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password-token": {
      "post": {
        "description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.",
        "operationId": "Create a Token for Resetting the Customer's Password in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerToken",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerCreatePasswordResetToken"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordToken",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/password-token"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}": {
      "get": {
        "description": "Get Customer by passwordToken",
        "operationId": "Get customer by password verification token in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "passwordToken",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordToken",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password/reset": {
      "post": {
        "description": "Set a new password using a token.",
        "operationId": "Reset Customer's Password in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerResetPassword"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordReset",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/password/reset"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/{ID}": {
      "get": {
        "description": "Returns a customer by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIt also considers customers that do not have the stores field.\nIf the customer exists in the commercetools project but the stores field references different stores,\nthis method returns a ResourceNotFound error.",
        "operationId": "Get customer by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.",
        "operationId": "Post customer by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 3,
                  "actions": [
                    {
                      "action": "addAddress",
                      "address": {
                        "streetName": "Any Street",
                        "streetNumber": "1337",
                        "postalCode": "11111",
                        "city": "Any City",
                        "country": "US"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/CustomerUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Customer by ID",
        "operationId": "Delete customer by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/customers/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyCustomersByID",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/customers/{ID}"
    },
    "/{projectKey}/in-store/key={storeKey}/login": {
      "post": {
        "description": "Authenticate Customer (Sign In) in store",
        "operationId": "Authenticate Customer (Sign In) in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerSignin"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyLogin",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/login"
    },
    "/{projectKey}/in-store/key={storeKey}/me": {
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMe",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me"
    },
    "/{projectKey}/in-store/key={storeKey}/me/active-cart": {
      "get": {
        "operationId": "Get my active cart in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/active-cart -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeActiveCart",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/active-cart"
    },
    "/{projectKey}/in-store/key={storeKey}/me/carts": {
      "get": {
        "description": "Query carts",
        "operationId": "Query my carts in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "type": "Cart",
                      "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                      "version": 5,
                      "createdAt": "2015-09-22T15:36:17.510Z",
                      "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                      "lineItems": [
                        {
                          "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                          "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                          "name": {
                            "en": "SAPPHIRE"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "sapphire1421832124423"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_SAPPHIRE_variant1_1421832124423",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 2800
                                },
                                "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          },
                          "quantity": 2,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 2,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 5600
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      },
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    },
                    {
                      "type": "Cart",
                      "id": "668e5783-73c8-4f2d-91f4-3c90b872c700",
                      "version": 3,
                      "createdAt": "2015-10-07T07:33:05.894Z",
                      "lastModifiedAt": "2015-10-07T07:33:06.070Z",
                      "lineItems": [
                        {
                          "id": "90dff06c-272e-47fa-b8de-923dce092474",
                          "productId": "7b1203f4-66c0-438c-9a30-f4fb6be79bdf",
                          "name": {
                            "de": "WB ATHLETIC PANZER",
                            "en": "WB ATHLETIC TANK"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "wb-athletic-tank1421832124574"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_WB_ATHLETIC_TANK_variant1_1421832124574",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 8400
                                },
                                "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253265444_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 8400
                            },
                            "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 8400
                          },
                          "custom": {
                            "type": {
                              "typeId": "type",
                              "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa"
                            },
                            "fields": {
                              "offer_name": "SuperMax"
                            }
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 8400
                      },
                      "country": "DE",
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Cart",
        "operationId": "Create my cart in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "currency": "EUR"
                }
              },
              "$ref": "#/definitions/MyCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"currency\" : \"EUR\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeCarts",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/carts"
    },
    "/{projectKey}/in-store/key={storeKey}/me/carts/{ID}": {
      "get": {
        "description": "Get Cart by ID",
        "operationId": "Get my cart by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Cart by ID",
        "operationId": "Update my cart by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addLineItem",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "variantId": 1,
                      "quantity": 1
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyCartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Cart by ID",
        "operationId": "Delete my cart by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/carts/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeCartsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/carts/{ID}"
    },
    "/{projectKey}/in-store/key={storeKey}/me/orders": {
      "get": {
        "description": "Query orders",
        "operationId": "Query my orders in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "type": "Order",
                      "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                      "version": 1,
                      "createdAt": "2017-01-04T19:54:49.797Z",
                      "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "taxMode": "External",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "lineItems": [
                        {
                          "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                          "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                          "name": {
                            "en": "MyProduct"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                            "version": 21
                          },
                          "productSlug": {
                            "de": "neues-produkt-slug-1234678",
                            "en": "new-product-slug-12345678"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "some-sku-123",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 1000
                                },
                                "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                              }
                            ],
                            "images": [],
                            "attributes": [
                              {
                                "name": "text",
                                "value": "attribute-value"
                              },
                              {
                                "name": "enum",
                                "value": {
                                  "key": "test",
                                  "label": "test"
                                }
                              }
                            ],
                            "assets": []
                          },
                          "price": {
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            }
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "Bla",
                            "amount": 0.1,
                            "includedInPrice": false,
                            "country": "DE",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 1000
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1100
                            }
                          }
                        }
                      ],
                      "customLineItems": [],
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 1,
                      "origin": "Customer"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Order",
        "operationId": "Create my order in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 10,
                  "orderNumber": "201612010001"
                }
              },
              "$ref": "#/definitions/MyOrderFromCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeOrders",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/orders"
    },
    "/{projectKey}/in-store/key={storeKey}/me/orders/{ID}": {
      "get": {
        "description": "Get Order by ID",
        "operationId": "Get my order by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/orders/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeOrdersByID",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/orders/{ID}"
    },
    "/{projectKey}/in-store/key={storeKey}/me/shopping-lists": {
      "get": {
        "description": "Query shopping-lists",
        "operationId": "Get my shopping lists in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                      "version": 1,
                      "name": {
                        "en": "test"
                      },
                      "key": "test",
                      "lineItems": [],
                      "textLineItems": [],
                      "createdAt": "2017-03-30T11:49:40.904Z",
                      "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingListPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}",
              "view_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ShoppingList",
        "operationId": "Create my shopping lists in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": {
                    "en": "test"
                  },
                  "key": "test"
                }
              },
              "$ref": "#/definitions/MyShoppingListDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : {\n    \"en\" : \"test\"\n  },\n  \"key\" : \"test\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeShoppingLists",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/shopping-lists"
    },
    "/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}": {
      "get": {
        "description": "Gets a shopping list by Key.",
        "operationId": "Get my shopping list by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}",
              "view_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update a shopping list found by its Key.",
        "operationId": "Update my shopping list by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by key",
        "operationId": "Delete my shopping list by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}"
    },
    "/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}": {
      "get": {
        "description": "Gets a shopping list by ID.",
        "operationId": "Get my shopping list by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}",
              "view_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ShoppingList by ID",
        "operationId": "Update my shopping list by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by ID",
        "operationId": "Delete my shopping list by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}"
    },
    "/{projectKey}/in-store/key={storeKey}/orders": {
      "get": {
        "description": "Queries orders in a specific Store. The {storeKey} path parameter maps to a Store's key.",
        "operationId": "Query orders in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "type": "Order",
                      "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                      "version": 1,
                      "createdAt": "2017-01-04T19:54:49.797Z",
                      "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "taxMode": "External",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "lineItems": [
                        {
                          "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                          "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                          "name": {
                            "en": "MyProduct"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                            "version": 21
                          },
                          "productSlug": {
                            "de": "neues-produkt-slug-1234678",
                            "en": "new-product-slug-12345678"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "some-sku-123",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 1000
                                },
                                "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                              }
                            ],
                            "images": [],
                            "attributes": [
                              {
                                "name": "text",
                                "value": "attribute-value"
                              },
                              {
                                "name": "enum",
                                "value": {
                                  "key": "test",
                                  "label": "test"
                                }
                              }
                            ],
                            "assets": []
                          },
                          "price": {
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            }
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "Bla",
                            "amount": 0.1,
                            "includedInPrice": false,
                            "country": "DE",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 1000
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1100
                            }
                          }
                        }
                      ],
                      "customLineItems": [],
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 1,
                      "origin": "Customer"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creates an order from a Cart from a specific Store. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint the orders's store field is always set to the store specified in the path parameter.\nThe cart must have a shipping address set before creating an order. When using the Platform TaxMode,\nthe shipping address is used for tax calculation.",
        "operationId": "Create order in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 10,
                  "orderNumber": "201612010001"
                }
              },
              "$ref": "#/definitions/OrderFromCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyOrders",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/orders"
    },
    "/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}": {
      "get": {
        "description": "Returns an order by its order number from a specific Store.\nThe {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nIn case the orderNumber does not match the regular expression [a-zA-Z0-9_-]+,\nit should be provided in URL-encoded format.",
        "operationId": "Get order by order number in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nIn case the orderNumber does not match the regular expression [a-zA-Z0-9_-]+,\nit should be provided in URL-encoded format.",
        "operationId": "Update order by order number in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeOrderState",
                      "orderState": "Complete"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/OrderUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Order by orderNumber",
        "operationId": "Delete order by order number in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "orderNumber",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumber",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}"
    },
    "/{projectKey}/in-store/key={storeKey}/orders/{ID}": {
      "get": {
        "description": "Returns an order by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.",
        "operationId": "Get order by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.",
        "operationId": "Update order by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeOrderState",
                      "orderState": "Complete"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/OrderUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Order by ID",
        "operationId": "Delete order by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/orders/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyOrdersByID",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/orders/{ID}"
    },
    "/{projectKey}/in-store/key={storeKey}/shipping-methods": {
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyShippingMethods",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/shipping-methods"
    },
    "/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart": {
      "get": {
        "operationId": "Get ShippingMethods for a cart in a store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                      "version": 3,
                      "name": "DHL",
                      "description": "Standard delivery",
                      "taxCategory": {
                        "typeId": "tax-category",
                        "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                      },
                      "zoneRates": [
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "EUR",
                                "centAmount": 570
                              },
                              "tiers": []
                            }
                          ]
                        },
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "USD",
                                "centAmount": 990
                              },
                              "tiers": []
                            }
                          ]
                        }
                      ],
                      "isDefault": false,
                      "createdAt": "2015-01-21T09:22:04.320Z",
                      "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethodPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "in": "query",
            "name": "cartId",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart?cartId={cartId} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCart",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart"
    },
    "/{projectKey}/in-store/key={storeKey}/shopping-lists": {
      "get": {
        "description": "Query shopping-lists",
        "operationId": "Get shopping lists in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                      "version": 1,
                      "name": {
                        "en": "test"
                      },
                      "key": "test",
                      "lineItems": [],
                      "textLineItems": [],
                      "createdAt": "2017-03-30T11:49:40.904Z",
                      "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingListPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}",
              "view_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ShoppingList",
        "operationId": "Create shopping lists in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": {
                    "en": "test"
                  },
                  "key": "test"
                }
              },
              "$ref": "#/definitions/ShoppingListDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : {\n    \"en\" : \"test\"\n  },\n  \"key\" : \"test\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyShoppingLists",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/shopping-lists"
    },
    "/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}": {
      "get": {
        "description": "Gets a shopping list by Key.",
        "operationId": "Get shopping list by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}",
              "view_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update a shopping list found by its Key.",
        "operationId": "Update shopping list by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by key",
        "operationId": "Delete shopping list by key in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}"
    },
    "/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}": {
      "get": {
        "description": "Gets a shopping list by ID.",
        "operationId": "Get shopping list by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}",
              "view_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ShoppingList by ID",
        "operationId": "Update shopping list by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by ID",
        "operationId": "Delete shopping list by id in store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}",
              "manage_shopping_lists:{projectKey}:{storeKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "storeKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInStoreKeyByStoreKeyShoppingListsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}"
    },
    "/{projectKey}/inventory": {
      "get": {
        "description": "Query inventory",
        "operationId": "Query inventory",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                      "version": 1,
                      "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                      "quantityOnStock": 4,
                      "availableQuantity": 4,
                      "createdAt": "2015-03-11T13:36:20.720Z",
                      "lastModifiedAt": "2015-03-11T13:36:20.720Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/InventoryPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/inventory -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create InventoryEntry",
        "operationId": "Create InventoryEntry",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                  "version": 1,
                  "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                  "quantityOnStock": 4,
                  "availableQuantity": 4,
                  "createdAt": "2015-03-11T13:36:20.720Z",
                  "lastModifiedAt": "2015-03-11T13:36:20.720Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/InventoryEntry",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                  "quantityOnStock": 4,
                  "availableQuantity": 4
                }
              },
              "$ref": "#/definitions/InventoryEntryDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/inventory -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"sku\" : \"sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541\",\n  \"quantityOnStock\" : 4,\n  \"availableQuantity\" : 4\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInventory",
      "x-annotation-resourcePathUri": "/{projectKey}/inventory"
    },
    "/{projectKey}/inventory/{ID}": {
      "get": {
        "description": "Get InventoryEntry by ID",
        "operationId": "Get InventoryEntry by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                  "version": 1,
                  "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                  "quantityOnStock": 4,
                  "availableQuantity": 4,
                  "createdAt": "2015-03-11T13:36:20.720Z",
                  "lastModifiedAt": "2015-03-11T13:36:20.720Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/InventoryEntry",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/inventory/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update InventoryEntry by ID",
        "operationId": "Update InventoryEntry by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                  "version": 1,
                  "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                  "quantityOnStock": 4,
                  "availableQuantity": 4,
                  "createdAt": "2015-03-11T13:36:20.720Z",
                  "lastModifiedAt": "2015-03-11T13:36:20.720Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/InventoryEntry",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addQuantity",
                      "quantity": 4
                    }
                  ]
                }
              },
              "$ref": "#/definitions/InventoryEntryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/inventory/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addQuantity\",\n    \"quantity\" : 4\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete InventoryEntry by ID",
        "operationId": "Delete InventoryEntry by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                  "version": 1,
                  "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                  "quantityOnStock": 4,
                  "availableQuantity": 4,
                  "createdAt": "2015-03-11T13:36:20.720Z",
                  "lastModifiedAt": "2015-03-11T13:36:20.720Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/InventoryEntry",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/inventory/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyInventoryByID",
      "x-annotation-resourcePathUri": "/{projectKey}/inventory/{ID}"
    },
    "/{projectKey}/login": {
      "post": {
        "description": "Authenticate Customer (Sign In). Retrieves the authenticated\ncustomer (a customer that matches the given email/password pair).\nIf used with an access token for Anonymous Sessions,\nall orders and carts belonging to the anonymousId will be assigned to the newly created customer.\nIf a cart is is returned as part of the CustomerSignInResult,\nit has been recalculated (It will have up-to-date prices, taxes and discounts,\nand invalid line items have been removed.).",
        "operationId": "Authenticate Customer (Sign In)",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CustomerSignin"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyLogin",
      "x-annotation-resourcePathUri": "/{projectKey}/login"
    },
    "/{projectKey}/me": {
      "get": {
        "operationId": "Get my customer details",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update my customer",
        "operationId": "Update my customer",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [
                    {
                      "city": "Any City",
                      "country": "US",
                      "id": "some_456_id",
                      "postalCode": "11111",
                      "streetName": "Any Street",
                      "streetNumber": "1337"
                    }
                  ],
                  "email": "1-<random>@example.com",
                  "firstName": "Jane",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 4,
                  "createdAt": "2015-05-06T12:10:12.421Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 3,
                  "actions": [
                    {
                      "action": "addAddress",
                      "address": {
                        "streetName": "Any Street",
                        "streetNumber": "1337",
                        "postalCode": "11111",
                        "city": "Any City",
                        "country": "US"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyCustomerUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"addAddress\",\n    \"address\" : {\n      \"streetName\" : \"Any Street\",\n      \"streetNumber\" : \"1337\",\n      \"postalCode\" : \"11111\",\n      \"city\" : \"Any City\",\n      \"country\" : \"US\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete my Customer",
        "operationId": "Delete my Customer",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/me?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMe",
      "x-annotation-resourcePathUri": "/{projectKey}/me"
    },
    "/{projectKey}/me/active-cart": {
      "get": {
        "operationId": "Get my active cart",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/active-cart -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeActiveCart",
      "x-annotation-resourcePathUri": "/{projectKey}/me/active-cart"
    },
    "/{projectKey}/me/carts": {
      "get": {
        "description": "Query carts",
        "operationId": "Query my carts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "type": "Cart",
                      "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                      "version": 5,
                      "createdAt": "2015-09-22T15:36:17.510Z",
                      "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                      "lineItems": [
                        {
                          "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                          "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                          "name": {
                            "en": "SAPPHIRE"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "sapphire1421832124423"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_SAPPHIRE_variant1_1421832124423",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 2800
                                },
                                "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          },
                          "quantity": 2,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 2,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 5600
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      },
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    },
                    {
                      "type": "Cart",
                      "id": "668e5783-73c8-4f2d-91f4-3c90b872c700",
                      "version": 3,
                      "createdAt": "2015-10-07T07:33:05.894Z",
                      "lastModifiedAt": "2015-10-07T07:33:06.070Z",
                      "lineItems": [
                        {
                          "id": "90dff06c-272e-47fa-b8de-923dce092474",
                          "productId": "7b1203f4-66c0-438c-9a30-f4fb6be79bdf",
                          "name": {
                            "de": "WB ATHLETIC PANZER",
                            "en": "WB ATHLETIC TANK"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                            "version": 8
                          },
                          "productSlug": {
                            "en": "wb-athletic-tank1421832124574"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_WB_ATHLETIC_TANK_variant1_1421832124574",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 8400
                                },
                                "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253265444_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 8400
                            },
                            "id": "37696f7c-8260-4941-a921-68e6aa76b4a3"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 8400
                          },
                          "custom": {
                            "type": {
                              "typeId": "type",
                              "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa"
                            },
                            "fields": {
                              "offer_name": "SuperMax"
                            }
                          }
                        }
                      ],
                      "cartState": "Active",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 8400
                      },
                      "country": "DE",
                      "customLineItems": [],
                      "discountCodes": [],
                      "inventoryMode": "None",
                      "taxMode": "Platform",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "refusedGifts": [],
                      "origin": "Customer"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CartPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Cart",
        "operationId": "Create my cart",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "currency": "EUR"
                }
              },
              "$ref": "#/definitions/MyCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"currency\" : \"EUR\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeCarts",
      "x-annotation-resourcePathUri": "/{projectKey}/me/carts"
    },
    "/{projectKey}/me/carts/key={key}": {
      "get": {
        "description": "Get Cart by key",
        "operationId": "Get my cart by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Cart by key",
        "operationId": "Update my cart by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addLineItem",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "variantId": 1,
                      "quantity": 1
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyCartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Cart by key",
        "operationId": "Delete my cart by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeCartsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/me/carts/key={key}"
    },
    "/{projectKey}/me/carts/{ID}": {
      "get": {
        "description": "Get Cart by ID",
        "operationId": "Get my cart by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Cart by ID",
        "operationId": "Update my cart by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "addLineItem",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "variantId": 1,
                      "quantity": 1
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyCartUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"addLineItem\",\n    \"productId\" : \"9f10dcfb-5cc9-4a18-843a-c07f7e22d01f\",\n    \"variantId\" : 1,\n    \"quantity\" : 1\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Cart by ID",
        "operationId": "Delete my cart by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "key": "test-key",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Cart",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/carts/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeCartsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/me/carts/{ID}"
    },
    "/{projectKey}/me/email/confirm": {
      "post": {
        "operationId": "Verify my Customer's Email",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeEmailConfirm",
      "x-annotation-resourcePathUri": "/{projectKey}/me/email/confirm"
    },
    "/{projectKey}/me/login": {
      "post": {
        "operationId": "Authenticate my Customer (Sign In)",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeLogin",
      "x-annotation-resourcePathUri": "/{projectKey}/me/login"
    },
    "/{projectKey}/me/orders": {
      "get": {
        "description": "Query orders",
        "operationId": "Query my orders",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "type": "Order",
                      "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                      "version": 1,
                      "createdAt": "2017-01-04T19:54:49.797Z",
                      "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "taxMode": "External",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "lineItems": [
                        {
                          "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                          "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                          "name": {
                            "en": "MyProduct"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                            "version": 21
                          },
                          "productSlug": {
                            "de": "neues-produkt-slug-1234678",
                            "en": "new-product-slug-12345678"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "some-sku-123",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 1000
                                },
                                "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                              }
                            ],
                            "images": [],
                            "attributes": [
                              {
                                "name": "text",
                                "value": "attribute-value"
                              },
                              {
                                "name": "enum",
                                "value": {
                                  "key": "test",
                                  "label": "test"
                                }
                              }
                            ],
                            "assets": []
                          },
                          "price": {
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            }
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "Bla",
                            "amount": 0.1,
                            "includedInPrice": false,
                            "country": "DE",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 1000
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1100
                            }
                          }
                        }
                      ],
                      "customLineItems": [],
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 1,
                      "origin": "Customer"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Order",
        "operationId": "Create my order",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 10,
                  "orderNumber": "201612010001"
                }
              },
              "$ref": "#/definitions/MyOrderFromCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeOrders",
      "x-annotation-resourcePathUri": "/{projectKey}/me/orders"
    },
    "/{projectKey}/me/orders/{ID}": {
      "get": {
        "description": "Get Order by ID",
        "operationId": "Get my order by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/orders/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeOrdersByID",
      "x-annotation-resourcePathUri": "/{projectKey}/me/orders/{ID}"
    },
    "/{projectKey}/me/password": {
      "post": {
        "operationId": "Change my customers password",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMePassword",
      "x-annotation-resourcePathUri": "/{projectKey}/me/password"
    },
    "/{projectKey}/me/password/reset": {
      "post": {
        "operationId": "Reset my Customer's Password",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "addresses": [],
                  "email": "<random>@example.com",
                  "firstName": "John",
                  "id": "some_123_id",
                  "isEmailVerified": false,
                  "lastName": "Doe",
                  "password": "secret123",
                  "version": 1,
                  "createdAt": "2015-07-06T13:22:33.339Z",
                  "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Customer",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMePasswordReset",
      "x-annotation-resourcePathUri": "/{projectKey}/me/password/reset"
    },
    "/{projectKey}/me/payments": {
      "get": {
        "description": "Query payments",
        "operationId": "Query my payments",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "459e32dc-74ef-4189-bbd0-932275bb027c",
                      "version": 1,
                      "amountPlanned": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "paymentMethodInfo": {
                        "paymentInterface": "STRIPE",
                        "method": "CREDIT_CARD",
                        "name": {
                          "en": "Credit Card"
                        }
                      },
                      "transactions": [
                        {
                          "id": "2e318aa5-8af4-4db1-909d-e7142f7d174f",
                          "timestamp": "2015-10-20T08:51:56.000Z",
                          "type": "Charge",
                          "amount": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 1000
                          },
                          "state": "Pending"
                        }
                      ]
                    },
                    {
                      "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                      "version": 1,
                      "amountPlanned": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "paymentMethodInfo": {
                        "paymentInterface": "STRIPE",
                        "method": "CREDIT_CARD",
                        "name": {
                          "en": "Credit Card"
                        }
                      },
                      "transactions": [
                        {
                          "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                          "timestamp": "2015-10-20T08:54:24.000Z",
                          "type": "Charge",
                          "amount": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 1000
                          },
                          "state": "Pending"
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPaymentPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create MyPayment",
        "operationId": "Create my payment",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPayment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "amountPlanned": {
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transaction": {
                    "timestamp": "2015-10-20T08:54:24.000Z",
                    "type": "Charge",
                    "amount": {
                      "currencyCode": "USD",
                      "centAmount": 1000
                    }
                  }
                }
              },
              "$ref": "#/definitions/MyPaymentDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"amountPlanned\" : {\n    \"currencyCode\" : \"USD\",\n    \"centAmount\" : 1000\n  },\n  \"paymentMethodInfo\" : {\n    \"paymentInterface\" : \"STRIPE\",\n    \"method\" : \"CREDIT_CARD\",\n    \"name\" : {\n      \"en\" : \"Credit Card\"\n    }\n  },\n  \"transaction\" : {\n    \"timestamp\" : \"2015-10-20T08:54:24.000Z\",\n    \"type\" : \"Charge\",\n    \"amount\" : {\n      \"currencyCode\" : \"USD\",\n      \"centAmount\" : 1000\n    }\n  }\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMePayments",
      "x-annotation-resourcePathUri": "/{projectKey}/me/payments"
    },
    "/{projectKey}/me/payments/key={key}": {
      "get": {
        "description": "Get MyPayment by key",
        "operationId": "Get my payment by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPayment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update MyPayment by key",
        "operationId": "Update my payment by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPayment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setMethodInfoMethod",
                      "method": "12334567890123456"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyPaymentUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setMethodInfoMethod\",\n    \"method\" : \"12334567890123456\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete MyPayment by key",
        "operationId": "Delete my payment by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPayment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMePaymentsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/me/payments/key={key}"
    },
    "/{projectKey}/me/payments/{ID}": {
      "get": {
        "description": "Get MyPayment by ID",
        "operationId": "Get my payment by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPayment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update MyPayment by ID",
        "operationId": "Update my payment by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPayment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setMethodInfoMethod",
                      "method": "12334567890123456"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyPaymentUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setMethodInfoMethod\",\n    \"method\" : \"12334567890123456\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete MyPayment by ID",
        "operationId": "Delete my payment by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MyPayment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/payments/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMePaymentsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/me/payments/{ID}"
    },
    "/{projectKey}/me/shopping-lists": {
      "get": {
        "description": "Query shopping-lists",
        "operationId": "Query my shopping lists",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                      "version": 1,
                      "name": {
                        "en": "test"
                      },
                      "key": "test",
                      "lineItems": [],
                      "textLineItems": [],
                      "createdAt": "2017-03-30T11:49:40.904Z",
                      "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingListPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ShoppingList",
        "operationId": "Create my shopping list",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": {
                    "en": "test"
                  }
                }
              },
              "$ref": "#/definitions/MyShoppingListDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : {\n    \"en\" : \"test\"\n  }\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeShoppingLists",
      "x-annotation-resourcePathUri": "/{projectKey}/me/shopping-lists"
    },
    "/{projectKey}/me/shopping-lists/key={key}": {
      "get": {
        "description": "Get ShoppingList by key",
        "operationId": "Get my shopping list by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ShoppingList by key",
        "operationId": "Update my shopping list by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by key",
        "operationId": "Delete my shopping list by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeShoppingListsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/me/shopping-lists/key={key}"
    },
    "/{projectKey}/me/shopping-lists/{ID}": {
      "get": {
        "description": "Get ShoppingList by ID",
        "operationId": "Get my shopping list by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ShoppingList by ID",
        "operationId": "Update my shopping list by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/MyShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by ID",
        "operationId": "Delete my shopping list by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/me/shopping-lists/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeShoppingListsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/me/shopping-lists/{ID}"
    },
    "/{projectKey}/me/signup": {
      "post": {
        "operationId": "Signup my customer",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSignInResult",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/MyCustomerDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMeSignup",
      "x-annotation-resourcePathUri": "/{projectKey}/me/signup"
    },
    "/{projectKey}/messages": {
      "get": {
        "description": "Query messages",
        "operationId": "Query messages",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "7d165eba-6032-4614-8e6a-fb78d2a02139",
                      "version": 1,
                      "sequenceNumber": 1,
                      "resource": {
                        "typeId": "category",
                        "id": "c979f0f7-2e6a-4e8b-92eb-59e6e840e797"
                      },
                      "resourceVersion": 1,
                      "type": "CategoryCreated",
                      "category": {
                        "id": "c979f0f7-2e6a-4e8b-92eb-59e6e840e797",
                        "version": 1,
                        "name": {
                          "en": "test-Category"
                        },
                        "slug": {
                          "en": "test-category"
                        },
                        "ancestors": [],
                        "orderHint": "0.00001455631179379695951525",
                        "createdAt": "2016-02-16T13:59:39.379Z",
                        "lastModifiedAt": "2016-02-16T13:59:39.379Z",
                        "assets": [],
                        "lastMessageSequenceNumber": 1
                      },
                      "createdAt": "2016-02-16T13:59:39.379Z",
                      "lastModifiedAt": "2016-02-16T13:59:39.379Z"
                    },
                    {
                      "id": "174adf2f-783f-4ce5-a2d5-ee7d3ee7caf4",
                      "version": 1,
                      "sequenceNumber": 1,
                      "resource": {
                        "typeId": "category",
                        "id": "45251684-d693-409d-9864-f93f486adb95"
                      },
                      "resourceVersion": 1,
                      "type": "CategoryCreated",
                      "category": {
                        "id": "45251684-d693-409d-9864-f93f486adb95",
                        "version": 1,
                        "name": {
                          "en": "myCategory"
                        },
                        "slug": {
                          "en": "my-category"
                        },
                        "ancestors": [],
                        "orderHint": "0.000014556311799451762128695",
                        "createdAt": "2016-02-16T13:59:39.945Z",
                        "lastModifiedAt": "2016-02-16T13:59:39.945Z",
                        "assets": [],
                        "lastMessageSequenceNumber": 1
                      },
                      "createdAt": "2016-02-16T13:59:39.945Z",
                      "lastModifiedAt": "2016-02-16T13:59:39.945Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/MessagePagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/messages -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMessages",
      "x-annotation-resourcePathUri": "/{projectKey}/messages"
    },
    "/{projectKey}/messages/{ID}": {
      "get": {
        "description": "Get Message by ID",
        "operationId": "Get Message by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "174adf2f-783f-4ce5-a2d5-ee7d3ee7caf4",
                  "version": 1,
                  "sequenceNumber": 1,
                  "resource": {
                    "typeId": "category",
                    "id": "45251684-d693-409d-9864-f93f486adb95"
                  },
                  "resourceVersion": 1,
                  "type": "CategoryCreated",
                  "category": {
                    "id": "45251684-d693-409d-9864-f93f486adb95",
                    "version": 1,
                    "name": {
                      "en": "myCategory"
                    },
                    "slug": {
                      "en": "my-category"
                    },
                    "ancestors": [],
                    "orderHint": "0.000014556311799451762128695",
                    "createdAt": "2016-02-16T13:59:39.945Z",
                    "lastModifiedAt": "2016-02-16T13:59:39.945Z",
                    "assets": [],
                    "lastMessageSequenceNumber": 1
                  },
                  "createdAt": "2016-02-16T13:59:39.945Z",
                  "lastModifiedAt": "2016-02-16T13:59:39.945Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Message",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/messages/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyMessagesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/messages/{ID}"
    },
    "/{projectKey}/orders": {
      "get": {
        "description": "Query orders",
        "operationId": "Query orders",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "type": "Order",
                      "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                      "version": 1,
                      "createdAt": "2017-01-04T19:54:49.797Z",
                      "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "taxMode": "External",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "lineItems": [
                        {
                          "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                          "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                          "name": {
                            "en": "MyProduct"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                            "version": 21
                          },
                          "productSlug": {
                            "de": "neues-produkt-slug-1234678",
                            "en": "new-product-slug-12345678"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "some-sku-123",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "currencyCode": "EUR",
                                  "centAmount": 1000
                                },
                                "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                              }
                            ],
                            "images": [],
                            "attributes": [
                              {
                                "name": "text",
                                "value": "attribute-value"
                              },
                              {
                                "name": "enum",
                                "value": {
                                  "key": "test",
                                  "label": "test"
                                }
                              }
                            ],
                            "assets": []
                          },
                          "price": {
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            }
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "Bla",
                            "amount": 0.1,
                            "includedInPrice": false,
                            "country": "DE",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "lineItemMode": "Standard",
                          "totalPrice": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 1000
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1100
                            }
                          }
                        }
                      ],
                      "customLineItems": [],
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 1,
                      "origin": "Customer"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Creates an order from a Cart.\nThe cart must have a shipping address set before creating an order.\nWhen using the Platform TaxMode, the shipping address is used for tax calculation.",
        "operationId": "Create Order",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 10,
                  "orderNumber": "201612010001"
                }
              },
              "$ref": "#/definitions/OrderFromCartDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"id\" : \"7c2e2694-aefe-43d7-888e-6a99514caaca\",\n  \"version\" : 10,\n  \"orderNumber\" : \"201612010001\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrders",
      "x-annotation-resourcePathUri": "/{projectKey}/orders"
    },
    "/{projectKey}/orders/edits": {
      "get": {
        "description": "Query edits",
        "operationId": "Query edits",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                      "version": 1,
                      "resource": {
                        "typeId": "order",
                        "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                      },
                      "key": "order-edit-key",
                      "createdAt": "2018-10-04T15:22:31.639Z",
                      "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                      "stagedActions": [
                        {
                          "action": "setCustomerEmail",
                          "email": "user@localhost"
                        }
                      ],
                      "result": {
                        "type": "NotProcessed"
                      },
                      "comment": "sample-comment"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEditPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create OrderEdit",
        "operationId": "Create OrderEdit",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "key": "order-edit-key",
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "comment": "sample-comment"
                }
              },
              "$ref": "#/definitions/OrderEditDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"key\" : \"order-edit-key\",\n  \"resource\" : {\n    \"typeId\" : \"order\",\n    \"id\" : \"ed454f4e-c43a-485f-a86f-046c691b1363\"\n  },\n  \"stagedActions\" : [ {\n    \"action\" : \"setCustomerEmail\",\n    \"email\" : \"user@localhost\"\n  } ],\n  \"comment\" : \"sample-comment\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrdersEdits",
      "x-annotation-resourcePathUri": "/{projectKey}/orders/edits"
    },
    "/{projectKey}/orders/edits/key={key}": {
      "get": {
        "description": "Get OrderEdit by key",
        "operationId": "Get OrderEdit by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update OrderEdit by key",
        "operationId": "Update OrderEdit by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 7,
                  "actions": [
                    {
                      "action": "setKey",
                      "key": "another-key"
                    },
                    {
                      "action": "addStagedAction",
                      "stagedAction": {
                        "action": "setCountry",
                        "country": "ES"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/OrderEditUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 7,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"another-key\"\n  }, {\n    \"action\" : \"addStagedAction\",\n    \"stagedAction\" : {\n      \"action\" : \"setCountry\",\n      \"country\" : \"ES\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete OrderEdit by key",
        "operationId": "Delete OrderEdit by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrdersEditsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/orders/edits/key={key}"
    },
    "/{projectKey}/orders/edits/{ID}": {
      "get": {
        "description": "Get OrderEdit by ID",
        "operationId": "Get OrderEdit by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update OrderEdit by ID",
        "operationId": "Update OrderEdit by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 7,
                  "actions": [
                    {
                      "action": "setKey",
                      "key": "another-key"
                    },
                    {
                      "action": "addStagedAction",
                      "stagedAction": {
                        "action": "setCountry",
                        "country": "ES"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/OrderEditUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 7,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"another-key\"\n  }, {\n    \"action\" : \"addStagedAction\",\n    \"stagedAction\" : {\n      \"action\" : \"setCountry\",\n      \"country\" : \"ES\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete OrderEdit by ID",
        "operationId": "Delete OrderEdit by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/OrderEdit",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/edits/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrdersEditsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/orders/edits/{ID}"
    },
    "/{projectKey}/orders/edits/{ID}/apply": {
      "post": {
        "operationId": "Apply order edit",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/OrderEditApply"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrdersEditsByIDApply",
      "x-annotation-resourcePathUri": "/{projectKey}/orders/edits/{ID}/apply"
    },
    "/{projectKey}/orders/import": {
      "post": {
        "description": "Create an Order by Import",
        "operationId": "Create an Order by Import",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "orderNumber": "100000001",
                  "totalPrice": {
                    "centAmount": 1000,
                    "currencyCode": "EUR"
                  }
                }
              },
              "$ref": "#/definitions/OrderImportDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/import -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"orderNumber\" : \"100000001\",\n  \"totalPrice\" : {\n    \"centAmount\" : 1000,\n    \"currencyCode\" : \"EUR\"\n  }\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrdersImport",
      "x-annotation-resourcePathUri": "/{projectKey}/orders/import"
    },
    "/{projectKey}/orders/order-number={orderNumber}": {
      "get": {
        "description": "In case the orderNumber does not match the regular expression [a-zA-Z0-9_-]+,\nit should be provided in URL-encoded format.",
        "operationId": "Get Order by orderNumber",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/order-number={orderNumber} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Order by orderNumber",
        "operationId": "Update Order by orderNumber",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeOrderState",
                      "orderState": "Complete"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/OrderUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/order-number={orderNumber} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Order by orderNumber",
        "operationId": "Delete Order by orderNumber",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/order-number={orderNumber}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "orderNumber",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrdersOrderNumberByOrderNumber",
      "x-annotation-resourcePathUri": "/{projectKey}/orders/order-number={orderNumber}"
    },
    "/{projectKey}/orders/{ID}": {
      "get": {
        "description": "Get Order by ID",
        "operationId": "Get Order by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Order by ID",
        "operationId": "Update Order by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeOrderState",
                      "orderState": "Complete"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/OrderUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeOrderState\",\n    \"orderState\" : \"Complete\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Order by ID",
        "operationId": "Delete Order by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Order",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/orders/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyOrdersByID",
      "x-annotation-resourcePathUri": "/{projectKey}/orders/{ID}"
    },
    "/{projectKey}/payments": {
      "get": {
        "description": "Query payments",
        "operationId": "Query payments",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "459e32dc-74ef-4189-bbd0-932275bb027c",
                      "version": 1,
                      "externalId": "123456",
                      "interfaceId": "78901",
                      "amountPlanned": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "paymentMethodInfo": {
                        "paymentInterface": "STRIPE",
                        "method": "CREDIT_CARD",
                        "name": {
                          "en": "Credit Card"
                        }
                      },
                      "paymentStatus": {},
                      "transactions": [
                        {
                          "id": "2e318aa5-8af4-4db1-909d-e7142f7d174f",
                          "timestamp": "2015-10-20T08:51:56.000Z",
                          "type": "Charge",
                          "amount": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 1000
                          },
                          "state": "Pending"
                        }
                      ],
                      "interfaceInteractions": [],
                      "createdAt": "2015-10-20T08:51:43.082Z",
                      "lastModifiedAt": "2015-10-20T08:51:43.082Z",
                      "lastMessageSequenceNumber": 1
                    },
                    {
                      "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                      "version": 1,
                      "externalId": "123456",
                      "interfaceId": "789011",
                      "amountPlanned": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "paymentMethodInfo": {
                        "paymentInterface": "STRIPE",
                        "method": "CREDIT_CARD",
                        "name": {
                          "en": "Credit Card"
                        }
                      },
                      "paymentStatus": {},
                      "transactions": [
                        {
                          "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                          "timestamp": "2015-10-20T08:54:24.000Z",
                          "type": "Charge",
                          "amount": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 1000
                          },
                          "state": "Pending"
                        }
                      ],
                      "interfaceInteractions": [],
                      "createdAt": "2015-10-20T08:54:11.480Z",
                      "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                      "lastMessageSequenceNumber": 1
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/PaymentPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "To create a payment object a payment draft object has to be given with the request.",
        "operationId": "Create Payment",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/PaymentDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"externalId\" : \"123456\",\n  \"interfaceId\" : \"789011\",\n  \"amountPlanned\" : {\n    \"currencyCode\" : \"USD\",\n    \"centAmount\" : 1000\n  },\n  \"paymentMethodInfo\" : {\n    \"paymentInterface\" : \"STRIPE\",\n    \"method\" : \"CREDIT_CARD\",\n    \"name\" : {\n      \"en\" : \"Credit Card\"\n    }\n  },\n  \"transactions\" : [ {\n    \"timestamp\" : \"2015-10-20T08:54:24.000Z\",\n    \"type\" : \"Charge\",\n    \"amount\" : {\n      \"currencyCode\" : \"USD\",\n      \"centAmount\" : 1000\n    },\n    \"state\" : \"Pending\"\n  } ]\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyPayments",
      "x-annotation-resourcePathUri": "/{projectKey}/payments"
    },
    "/{projectKey}/payments/key={key}": {
      "get": {
        "description": "Get Payment by key",
        "operationId": "Get Payment by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Payment by key",
        "operationId": "Update Payment by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setInterfaceId",
                      "interfaceId": "12334567890123456"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/PaymentUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setInterfaceId\",\n    \"interfaceId\" : \"12334567890123456\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Payment by key",
        "operationId": "Delete Payment by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyPaymentsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/payments/key={key}"
    },
    "/{projectKey}/payments/{ID}": {
      "get": {
        "description": "Get Payment by ID",
        "operationId": "Get Payment by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Payment by ID",
        "operationId": "Update Payment by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setInterfaceId",
                      "interfaceId": "12334567890123456"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/PaymentUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setInterfaceId\",\n    \"interfaceId\" : \"12334567890123456\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Payment by ID",
        "operationId": "Delete Payment by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Payment",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/payments/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyPaymentsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/payments/{ID}"
    },
    "/{projectKey}/product-discounts": {
      "get": {
        "description": "Query product-discounts",
        "operationId": "Query product-discounts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                      "version": 2,
                      "value": {
                        "type": "absolute",
                        "money": [
                          {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 100
                          }
                        ]
                      },
                      "predicate": "1=1",
                      "name": {
                        "en": "test-discount1"
                      },
                      "description": {
                        "en": "test-discount1"
                      },
                      "isActive": false,
                      "sortOrder": "0.9534",
                      "references": [],
                      "createdAt": "2016-02-24T09:44:57.858Z",
                      "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                    },
                    {
                      "id": "29cc032d-8ee3-4763-b2ab-3fe0dda22a2d",
                      "version": 2,
                      "value": {
                        "type": "absolute",
                        "money": [
                          {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 100
                          }
                        ]
                      },
                      "predicate": "1=1",
                      "name": {
                        "en": "test-discount2"
                      },
                      "description": {
                        "en": "test-discount2"
                      },
                      "isActive": false,
                      "sortOrder": "0.9478",
                      "references": [],
                      "createdAt": "2016-02-24T10:25:04.206Z",
                      "lastModifiedAt": "2016-02-24T10:25:04.295Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscountPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ProductDiscount",
        "operationId": "Create ProductDiscount",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ]
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534"
                }
              },
              "$ref": "#/definitions/ProductDiscountDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"value\" : {\n    \"type\" : \"absolute\",\n    \"money\" : [ {\n      \"currencyCode\" : \"EUR\",\n      \"centAmount\" : 100\n    } ]\n  },\n  \"predicate\" : \"1=1\",\n  \"name\" : {\n    \"en\" : \"test-discount1\"\n  },\n  \"description\" : {\n    \"en\" : \"test-discount1\"\n  },\n  \"isActive\" : false,\n  \"sortOrder\" : \"0.9534\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductDiscounts",
      "x-annotation-resourcePathUri": "/{projectKey}/product-discounts"
    },
    "/{projectKey}/product-discounts/key={key}": {
      "get": {
        "description": "Get ProductDiscount by key",
        "operationId": "Get ProductDiscount by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ProductDiscount by key",
        "operationId": "Update ProductDiscount by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeValue",
                      "value": {
                        "type": "absolute",
                        "money": [
                          {
                            "currencyCode": "EUR",
                            "centAmount": 100
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductDiscountUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"absolute\",\n      \"money\" : [ {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 100\n      } ]\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ProductDiscount by key",
        "operationId": "Delete ProductDiscount by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductDiscountsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/product-discounts/key={key}"
    },
    "/{projectKey}/product-discounts/matching": {
      "post": {
        "operationId": "Get matching product discounts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": "\"{\\n  \\\"productId\\\": \\\"123456\\\",\\n  \\\"variantId\\\": 1,\\n  \\\"staged\\\": false,\\n  \\\"price\\\": {\\n    \\\"value\\\": {\\n      \\\"type\\\": \\\"centPrecision\\\",\\n      \\\"centAmount\\\": 100,\\n      \\\"currencyCode\\\": \\\"EUR\\\",\\n      \\\"fractionDigits\\\": 2\\n    },\\n  \\\"id\\\": \\\"2474c2c3-d424-49af-b90a-b71bc74cf51b\\\"\\n  }\\n}\\n\"\n"
              },
              "$ref": "#/definitions/ProductDiscountMatchQuery"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts/matching -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n\"{n  \"productId\": \"123456\",n  \"variantId\": 1,n  \"staged\": false,n  \"price\": {n    \"value\": {n      \"type\": \"centPrecision\",n      \"centAmount\": 100,n      \"currencyCode\": \"EUR\",n      \"fractionDigits\": 2n    },n  \"id\": \"2474c2c3-d424-49af-b90a-b71bc74cf51b\"n  }n}n\"\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductDiscountsMatching",
      "x-annotation-resourcePathUri": "/{projectKey}/product-discounts/matching"
    },
    "/{projectKey}/product-discounts/{ID}": {
      "get": {
        "description": "Get ProductDiscount by ID",
        "operationId": "Get ProductDiscount by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ProductDiscount by ID",
        "operationId": "Update ProductDiscount by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeValue",
                      "value": {
                        "type": "absolute",
                        "money": [
                          {
                            "currencyCode": "EUR",
                            "centAmount": 100
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductDiscountUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeValue\",\n    \"value\" : {\n      \"type\" : \"absolute\",\n      \"money\" : [ {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 100\n      } ]\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ProductDiscount by ID",
        "operationId": "Delete ProductDiscount by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductDiscount",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-discounts/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductDiscountsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/product-discounts/{ID}"
    },
    "/{projectKey}/product-projections": {
      "get": {
        "description": "You can use the product projections query endpoint to get the current or staged representations of Products.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.",
        "operationId": "Query product-projections",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "080feded-4f74-4d31-9309-f7ef6b7f1279",
                      "version": 3,
                      "productType": {
                        "typeId": "product-type",
                        "id": "1c095f1b-e638-4c7e-86c4-c58df873fca6"
                      },
                      "name": {
                        "en": "Some Products"
                      },
                      "categories": [],
                      "slug": {
                        "en": "product_slug_jxeutnxwkswk"
                      },
                      "masterVariant": {
                        "id": 1,
                        "prices": [],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text1",
                            "value": {
                              "it": "italian1",
                              "de": "german1",
                              "en": "englisch1"
                            }
                          }
                        ]
                      },
                      "variants": [],
                      "searchKeywords": {},
                      "hasStagedChanges": false,
                      "published": true,
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "2014-01-07T15:25:50.034Z"
                    },
                    {
                      "id": "e779ec1a-0a98-4135-8344-d51bdafd4fe6",
                      "version": 6,
                      "productType": {
                        "typeId": "product-type",
                        "id": "bac5ef74-e0f9-4792-8439-ab84b270599e"
                      },
                      "name": {
                        "en": "product with dates"
                      },
                      "description": {
                        "en": "<p>Used to test the various date attributes<br></p>"
                      },
                      "categories": [],
                      "slug": {
                        "aa": "product-with-dates-1432797256269",
                        "de": "product-with-dates-1432797256269",
                        "en": "product-with-dates-1432797256269"
                      },
                      "masterVariant": {
                        "id": 1,
                        "prices": [],
                        "images": [],
                        "attributes": [
                          {
                            "name": "aboolean",
                            "value": true
                          }
                        ]
                      },
                      "variants": [],
                      "searchKeywords": {},
                      "hasStagedChanges": true,
                      "published": true,
                      "createdAt": "2015-05-28T07:15:48.738Z",
                      "lastModifiedAt": "2015-05-28T07:19:38.624Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductProjectionPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-projections -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductProjections",
      "x-annotation-resourcePathUri": "/{projectKey}/product-projections"
    },
    "/{projectKey}/product-projections/key={key}": {
      "get": {
        "description": "Gets the current or staged representation of a product found by Key.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.",
        "operationId": "Get ProductProjection by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "080feded-4f74-4d31-9309-f7ef6b7f1279",
                  "version": 3,
                  "productType": {
                    "typeId": "product-type",
                    "id": "1c095f1b-e638-4c7e-86c4-c58df873fca6"
                  },
                  "name": {
                    "en": "Some Products"
                  },
                  "categories": [],
                  "slug": {
                    "en": "product_slug_jxeutnxwkswk"
                  },
                  "masterVariant": {
                    "id": 1,
                    "prices": [],
                    "images": [],
                    "attributes": [
                      {
                        "name": "text1",
                        "value": {
                          "it": "italian1",
                          "de": "german1",
                          "en": "englisch1"
                        }
                      }
                    ]
                  },
                  "variants": [],
                  "searchKeywords": {},
                  "hasStagedChanges": false,
                  "published": true,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "2014-01-07T15:25:50.034Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-projections/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductProjectionsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/product-projections/key={key}"
    },
    "/{projectKey}/product-projections/search": {
      "post": {
        "description": "Search Product Projection",
        "operationId": "Search Products by post",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "formData",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "description": "Search Product Projection",
        "operationId": "Search Products by get",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "limit": 0,
                  "results": [
                    {
                      "id": "080feded-4f74-4d31-9309-f7ef6b7f1279",
                      "version": 3,
                      "productType": {
                        "typeId": "product-type",
                        "id": "1c095f1b-e638-4c7e-86c4-c58df873fca6"
                      },
                      "name": {
                        "en": "Some Products"
                      },
                      "categories": [],
                      "slug": {
                        "en": "product_slug_jxeutnxwkswk"
                      },
                      "masterVariant": {
                        "id": 1,
                        "prices": [],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text1",
                            "value": {
                              "it": "italian1",
                              "de": "german1",
                              "en": "englisch1"
                            }
                          }
                        ]
                      },
                      "variants": [],
                      "searchKeywords": {},
                      "hasStagedChanges": false,
                      "published": true,
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "2014-01-07T15:25:50.034Z"
                    },
                    {
                      "id": "e779ec1a-0a98-4135-8344-d51bdafd4fe6",
                      "version": 6,
                      "productType": {
                        "typeId": "product-type",
                        "id": "bac5ef74-e0f9-4792-8439-ab84b270599e"
                      },
                      "name": {
                        "en": "product with dates"
                      },
                      "description": {
                        "en": "<p>Used to test the various date attributes<br></p>"
                      },
                      "categories": [],
                      "slug": {
                        "aa": "product-with-dates-1432797256269",
                        "de": "product-with-dates-1432797256269",
                        "en": "product-with-dates-1432797256269"
                      },
                      "masterVariant": {
                        "id": 1,
                        "prices": [],
                        "images": [],
                        "attributes": [
                          {
                            "name": "aboolean",
                            "value": true
                          }
                        ]
                      },
                      "variants": [],
                      "searchKeywords": {},
                      "hasStagedChanges": true,
                      "published": true,
                      "createdAt": "2015-05-28T07:15:48.738Z",
                      "lastModifiedAt": "2015-05-28T07:19:38.624Z"
                    }
                  ],
                  "facets": {
                    "red-things": {
                      "type": "filter",
                      "count": 0
                    },
                    "variants.attributes.size": {
                      "type": "terms",
                      "dataType": "text",
                      "missing": 0,
                      "total": 2,
                      "other": 0,
                      "terms": [
                        {
                          "term": "40",
                          "count": 2
                        },
                        {
                          "term": "41",
                          "count": 2
                        }
                      ]
                    },
                    "variants.attributes.price": {
                      "type": "range",
                      "ranges": [
                        {
                          "from": 0,
                          "fromStr": "0",
                          "to": 100,
                          "toStr": "100",
                          "count": 2,
                          "total": 2,
                          "min": 0,
                          "max": 100,
                          "mean": 50.5
                        }
                      ]
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductProjectionPagedSearchResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "type": "boolean",
            "in": "query",
            "name": "fuzzy",
            "x-annotation-builtinType": "boolean"
          },
          {
            "format": "float",
            "description": "Provide explicitly the fuzzy level desired if fuzzy is enabled. This value can not be higher than the one\nchosen by the platform by default.",
            "type": "number",
            "in": "query",
            "name": "fuzzyLevel",
            "x-annotation-builtinType": "number"
          },
          {
            "required": true,
            "description": "if `markMatchingVariants` parameter is `true` those ProductVariants that match the search query have the additional\nfield `isMatchingVariant` set to `true`. For the other variants in the same product projection this field is set to `false`.",
            "type": "boolean",
            "in": "query",
            "name": "markMatchingVariants",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "filter",
            "x-annotation-builtinType": "array"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "filter.facets",
            "x-annotation-builtinType": "array"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "filter.query",
            "x-annotation-builtinType": "array"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "facet",
            "x-annotation-builtinType": "array"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/text.[a-z]{2}(-[A-Z]{2})?/",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-projections/search?markMatchingVariants={markMatchingVariants} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductProjectionsSearch",
      "x-annotation-resourcePathUri": "/{projectKey}/product-projections/search"
    },
    "/{projectKey}/product-projections/suggest": {
      "get": {
        "operationId": "Get suggestion keywords",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "080feded-4f74-4d31-9309-f7ef6b7f1279",
                      "version": 3,
                      "productType": {
                        "typeId": "product-type",
                        "id": "1c095f1b-e638-4c7e-86c4-c58df873fca6"
                      },
                      "name": {
                        "en": "Some Products"
                      },
                      "categories": [],
                      "slug": {
                        "en": "product_slug_jxeutnxwkswk"
                      },
                      "masterVariant": {
                        "id": 1,
                        "prices": [],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text1",
                            "value": {
                              "it": "italian1",
                              "de": "german1",
                              "en": "englisch1"
                            }
                          }
                        ]
                      },
                      "variants": [],
                      "searchKeywords": {},
                      "hasStagedChanges": false,
                      "published": true,
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "2014-01-07T15:25:50.034Z"
                    },
                    {
                      "id": "e779ec1a-0a98-4135-8344-d51bdafd4fe6",
                      "version": 6,
                      "productType": {
                        "typeId": "product-type",
                        "id": "bac5ef74-e0f9-4792-8439-ab84b270599e"
                      },
                      "name": {
                        "en": "product with dates"
                      },
                      "description": {
                        "en": "<p>Used to test the various date attributes<br></p>"
                      },
                      "categories": [],
                      "slug": {
                        "aa": "product-with-dates-1432797256269",
                        "de": "product-with-dates-1432797256269",
                        "en": "product-with-dates-1432797256269"
                      },
                      "masterVariant": {
                        "id": 1,
                        "prices": [],
                        "images": [],
                        "attributes": [
                          {
                            "name": "aboolean",
                            "value": true
                          }
                        ]
                      },
                      "variants": [],
                      "searchKeywords": {},
                      "hasStagedChanges": true,
                      "published": true,
                      "createdAt": "2015-05-28T07:15:48.738Z",
                      "lastModifiedAt": "2015-05-28T07:19:38.624Z"
                    }
                  ]
                }
              },
              "type": "string",
              "x-annotation-builtinType": "any"
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "type": "boolean",
            "in": "query",
            "name": "fuzzy",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/searchKeywords.[a-z]{2}(-[A-Z]{2})?/",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-projections/suggest -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductProjectionsSuggest",
      "x-annotation-resourcePathUri": "/{projectKey}/product-projections/suggest"
    },
    "/{projectKey}/product-projections/{ID}": {
      "get": {
        "description": "Gets the current or staged representation of a product in a catalog by ID.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.",
        "operationId": "Get ProductProjection by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "080feded-4f74-4d31-9309-f7ef6b7f1279",
                  "version": 3,
                  "productType": {
                    "typeId": "product-type",
                    "id": "1c095f1b-e638-4c7e-86c4-c58df873fca6"
                  },
                  "name": {
                    "en": "Some Products"
                  },
                  "categories": [],
                  "slug": {
                    "en": "product_slug_jxeutnxwkswk"
                  },
                  "masterVariant": {
                    "id": 1,
                    "prices": [],
                    "images": [],
                    "attributes": [
                      {
                        "name": "text1",
                        "value": {
                          "it": "italian1",
                          "de": "german1",
                          "en": "englisch1"
                        }
                      }
                    ]
                  },
                  "variants": [],
                  "searchKeywords": {},
                  "hasStagedChanges": false,
                  "published": true,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "2014-01-07T15:25:50.034Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductProjection",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to query for the current or staged projections.",
            "type": "boolean",
            "in": "query",
            "name": "staged",
            "x-annotation-builtinType": "boolean"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-projections/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductProjectionsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/product-projections/{ID}"
    },
    "/{projectKey}/product-types": {
      "get": {
        "description": "Query product-types",
        "operationId": "Query product-types",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "d2220bf39eb2-c2f93298-c967-44af-8c2a",
                      "version": 1,
                      "name": "test_product_type",
                      "description": "Test product type.",
                      "attributes": [
                        {
                          "type": {
                            "name": "text"
                          },
                          "isSearchable": false,
                          "inputHint": "SingleLine",
                          "name": "size",
                          "label": {
                            "en": "The right size is important."
                          },
                          "isRequired": false,
                          "attributeConstraint": "CombinationUnique"
                        }
                      ],
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                    },
                    {
                      "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                      "version": 1,
                      "name": "another-test_product_type",
                      "description": "Another test product type.",
                      "attributes": [
                        {
                          "type": {
                            "name": "text"
                          },
                          "isSearchable": false,
                          "inputHint": "SingleLine",
                          "name": "color",
                          "label": {
                            "en": "The right color is important."
                          },
                          "isRequired": false,
                          "attributeConstraint": "CombinationUnique"
                        }
                      ],
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductTypePagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ProductType",
        "operationId": "Create ProductType",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductTypeDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : \"test_product_type\",\n  \"description\" : \"Test product type.\",\n  \"attributes\" : [ {\n    \"type\" : {\n      \"name\" : \"text\"\n    },\n    \"isSearchable\" : false,\n    \"inputHint\" : \"SingleLine\",\n    \"name\" : \"size\",\n    \"label\" : {\n      \"en\" : \"The right size is important.\"\n    },\n    \"isRequired\" : false,\n    \"attributeConstraint\" : \"CombinationUnique\"\n  } ]\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductTypes",
      "x-annotation-resourcePathUri": "/{projectKey}/product-types"
    },
    "/{projectKey}/product-types/key={key}": {
      "get": {
        "description": "Get ProductType by key",
        "operationId": "Get ProductType by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ProductType by key",
        "operationId": "Update ProductType by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 3,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "new-product-type-name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductTypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"new-product-type-name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ProductType by key",
        "operationId": "Delete ProductType by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductTypesKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/product-types/key={key}"
    },
    "/{projectKey}/product-types/{ID}": {
      "get": {
        "description": "Get ProductType by ID",
        "operationId": "Get ProductType by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ProductType by ID",
        "operationId": "Update ProductType by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 3,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "new-product-type-name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductTypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 3,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"new-product-type-name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ProductType by ID",
        "operationId": "Delete ProductType by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductType",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/product-types/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductTypesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/product-types/{ID}"
    },
    "/{projectKey}/products": {
      "get": {
        "description": "You can use the query endpoint to get the full representations of products.\nREMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,\nthe query API lacks like sorting on custom attributes, etc.",
        "operationId": "Query products",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                      "masterData": {
                        "current": {
                          "categories": [
                            {
                              "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                              "typeId": "category"
                            }
                          ],
                          "description": {
                            "en": "Sample description"
                          },
                          "masterVariant": {
                            "attributes": [],
                            "id": 1,
                            "images": [
                              {
                                "dimensions": {
                                  "h": 1400,
                                  "w": 1400
                                },
                                "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                              }
                            ],
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "centAmount": 10000,
                                  "currencyCode": "EUR"
                                },
                                "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                              }
                            ],
                            "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                          },
                          "name": {
                            "en": "MB PREMIUM TECH T"
                          },
                          "slug": {
                            "en": "mb-premium-tech-t1369226795424"
                          },
                          "variants": [],
                          "searchKeywords": {}
                        },
                        "hasStagedChanges": false,
                        "published": true,
                        "staged": {
                          "categories": [
                            {
                              "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                              "typeId": "category"
                            }
                          ],
                          "description": {
                            "en": "Sample description"
                          },
                          "masterVariant": {
                            "attributes": [],
                            "id": 1,
                            "images": [
                              {
                                "dimensions": {
                                  "h": 1400,
                                  "w": 1400
                                },
                                "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                              }
                            ],
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "fractionDigits": 2,
                                  "centAmount": 10000,
                                  "currencyCode": "EUR"
                                },
                                "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                              }
                            ],
                            "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                          },
                          "name": {
                            "en": "MB PREMIUM TECH T"
                          },
                          "slug": {
                            "en": "mb-premium-tech-t1369226795424"
                          },
                          "variants": [],
                          "searchKeywords": {}
                        }
                      },
                      "productType": {
                        "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                        "typeId": "product-type"
                      },
                      "taxCategory": {
                        "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                        "typeId": "tax-category"
                      },
                      "version": 2,
                      "createdAt": "1970-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ProductPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/products -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.",
        "operationId": "Create Product",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "categories": [
                    {
                      "typeId": "category",
                      "id": "24f510c3-f334-4099-94e2-d6224a8eb919"
                    }
                  ],
                  "name": {
                    "en": "Some Product"
                  },
                  "slug": {
                    "en": "product_slug_<random-uuid>"
                  },
                  "masterVariant": {
                    "sku": "SKU-1",
                    "prices": [
                      {
                        "value": {
                          "currencyCode": "EUR",
                          "centAmount": 4200
                        }
                      }
                    ],
                    "images": [
                      {
                        "url": "http://my.custom.cdn.net/master.png",
                        "label": "Master Image",
                        "dimensions": {
                          "w": 303,
                          "h": 197
                        }
                      }
                    ]
                  },
                  "variants": [
                    {
                      "images": [
                        {
                          "url": "http://my.custom.cdn.net/variant.png",
                          "label": "Variant Image",
                          "dimensions": {
                            "w": 303,
                            "h": 197
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/products -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"productType\" : {\n    \"id\" : \"24f510c3-f334-4099-94e2-d6224a8eb919\",\n    \"typeId\" : \"product-type\"\n  },\n  \"categories\" : [ {\n    \"typeId\" : \"category\",\n    \"id\" : \"24f510c3-f334-4099-94e2-d6224a8eb919\"\n  } ],\n  \"name\" : {\n    \"en\" : \"Some Product\"\n  },\n  \"slug\" : {\n    \"en\" : \"product_slug_<random-uuid>\"\n  },\n  \"masterVariant\" : {\n    \"sku\" : \"SKU-1\",\n    \"prices\" : [ {\n      \"value\" : {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 4200\n      }\n    } ],\n    \"images\" : [ {\n      \"url\" : \"http://my.custom.cdn.net/master.png\",\n      \"label\" : \"Master Image\",\n      \"dimensions\" : {\n        \"w\" : 303,\n        \"h\" : 197\n      }\n    } ]\n  },\n  \"variants\" : [ {\n    \"images\" : [ {\n      \"url\" : \"http://my.custom.cdn.net/variant.png\",\n      \"label\" : \"Variant Image\",\n      \"dimensions\" : {\n        \"w\" : 303,\n        \"h\" : 197\n      }\n    } ]\n  } ]\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProducts",
      "x-annotation-resourcePathUri": "/{projectKey}/products"
    },
    "/{projectKey}/products/key={key}": {
      "get": {
        "description": "Gets the full representation of a product by Key.",
        "operationId": "Get Product by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/products/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Product by key",
        "operationId": "Update Product by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 2,
                  "actions": [
                    {
                      "action": "setDescription",
                      "description": {
                        "en": "The best product ever!"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/products/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 2,\n  \"actions\" : [ {\n    \"action\" : \"setDescription\",\n    \"description\" : {\n      \"en\" : \"The best product ever!\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Product by key",
        "operationId": "Delete Product by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/products/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/products/key={key}"
    },
    "/{projectKey}/products/{ID}": {
      "get": {
        "description": "Gets the full representation of a product by ID.",
        "operationId": "Get Product by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/products/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Product by ID",
        "operationId": "Update Product by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 2,
                  "actions": [
                    {
                      "action": "setDescription",
                      "description": {
                        "en": "The best product ever!"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ProductUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/products/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 2,\n  \"actions\" : [ {\n    \"action\" : \"setDescription\",\n    \"description\" : {\n      \"en\" : \"The best product ever!\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Product by ID",
        "operationId": "Delete Product by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "priceCurrency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCountry",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceCustomerGroup",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "priceChannel",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "localeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "storeProjection",
            "x-annotation-builtinType": "string"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/products/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/products/{ID}"
    },
    "/{projectKey}/products/{ID}/images": {
      "post": {
        "description": "Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.",
        "operationId": "Upload a product image",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Product",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "file"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filename",
            "x-annotation-builtinType": "string"
          },
          {
            "format": "int64",
            "type": "integer",
            "in": "query",
            "name": "variant",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sku",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "staged",
            "x-annotation-builtinType": "boolean"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyProductsByIDImages",
      "x-annotation-resourcePathUri": "/{projectKey}/products/{ID}/images"
    },
    "/{projectKey}/reviews": {
      "get": {
        "description": "Query reviews",
        "operationId": "Query reviews",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                      "version": 1,
                      "includedInStatistics": true,
                      "authorName": "John Doe",
                      "title": "Incredible",
                      "text": "Best product ever",
                      "rating": 5,
                      "target": {
                        "typeId": "product",
                        "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                      },
                      "customer": {
                        "typeId": "customer",
                        "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                      },
                      "custom": {
                        "type": {
                          "typeId": "type",
                          "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                        },
                        "fields": {
                          "authorMail": "john.doe@example.com"
                        }
                      },
                      "createdAt": "2016-10-20T06:48:53.829Z",
                      "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                      "lastMessageSequenceNumber": 1
                    },
                    {
                      "id": "2f60e06c-7672-47fc-962a-1eafa1123456",
                      "version": 1,
                      "includedInStatistics": true,
                      "authorName": ".",
                      "title": ".",
                      "text": ".",
                      "rating": 5,
                      "target": {
                        "typeId": "product",
                        "id": "2c155644-bcde-426c-b021-a2aab123456"
                      },
                      "custom": {
                        "type": {
                          "typeId": "type",
                          "id": "3939dd9c-0884-4bfa-99c2-40b42123456"
                        },
                        "fields": {
                          "authorMail": "."
                        }
                      },
                      "createdAt": "2016-10-20T06:51:26.795Z",
                      "lastModifiedAt": "2016-10-20T06:51:26.795Z",
                      "lastMessageSequenceNumber": 1
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ReviewPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Review",
        "operationId": "Create Review",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  }
                }
              },
              "$ref": "#/definitions/ReviewDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"authorName\" : \"John Doe\",\n  \"title\" : \"Incredible\",\n  \"text\" : \"Best product ever\",\n  \"rating\" : 5,\n  \"target\" : {\n    \"typeId\" : \"product\",\n    \"id\" : \"8fddacac-6ef5-4e66-af6e-124452123456\"\n  }\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyReviews",
      "x-annotation-resourcePathUri": "/{projectKey}/reviews"
    },
    "/{projectKey}/reviews/key={key}": {
      "get": {
        "description": "Get Review by key",
        "operationId": "Get Review by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Review by key",
        "operationId": "Update Review by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setAuthorName",
                      "authorName": "John Doe"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ReviewUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setAuthorName\",\n    \"authorName\" : \"John Doe\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Review by key",
        "operationId": "Delete Review by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyReviewsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/reviews/key={key}"
    },
    "/{projectKey}/reviews/{ID}": {
      "get": {
        "description": "Get Review by ID",
        "operationId": "Get Review by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Review by ID",
        "operationId": "Update Review by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setAuthorName",
                      "authorName": "John Doe"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ReviewUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setAuthorName\",\n    \"authorName\" : \"John Doe\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Review by ID",
        "operationId": "Delete Review by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Review",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/reviews/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyReviewsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/reviews/{ID}"
    },
    "/{projectKey}/shipping-methods": {
      "get": {
        "description": "Query shipping-methods",
        "operationId": "Query shipping-methods",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                      "version": 3,
                      "name": "DHL",
                      "description": "Standard delivery",
                      "taxCategory": {
                        "typeId": "tax-category",
                        "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                      },
                      "zoneRates": [
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "EUR",
                                "centAmount": 570
                              },
                              "tiers": []
                            }
                          ]
                        },
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "USD",
                                "centAmount": 990
                              },
                              "tiers": []
                            }
                          ]
                        }
                      ],
                      "isDefault": false,
                      "createdAt": "2015-01-21T09:22:04.320Z",
                      "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethodPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ShippingMethod",
        "operationId": "Create ShippingMethod",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "currencyCode": "EUR",
                            "centAmount": 570
                          }
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "currencyCode": "USD",
                            "centAmount": 990
                          }
                        }
                      ]
                    }
                  ],
                  "isDefault": false
                }
              },
              "$ref": "#/definitions/ShippingMethodDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : \"DHL\",\n  \"description\" : \"Standard delivery\",\n  \"taxCategory\" : {\n    \"typeId\" : \"tax-category\",\n    \"id\" : \"5a21f15b-34f8-4b7f-9407-d1eb82a73eba\"\n  },\n  \"zoneRates\" : [ {\n    \"zone\" : {\n      \"typeId\" : \"zone\",\n      \"id\" : \"5cb532be-c680-43ab-ba14-b664bb03dc35\"\n    },\n    \"shippingRates\" : [ {\n      \"price\" : {\n        \"currencyCode\" : \"EUR\",\n        \"centAmount\" : 570\n      }\n    } ]\n  }, {\n    \"zone\" : {\n      \"typeId\" : \"zone\",\n      \"id\" : \"ebe01381-82be-4e63-9993-d1eb8f8e588b\"\n    },\n    \"shippingRates\" : [ {\n      \"price\" : {\n        \"currencyCode\" : \"USD\",\n        \"centAmount\" : 990\n      }\n    } ]\n  } ],\n  \"isDefault\" : false\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShippingMethods",
      "x-annotation-resourcePathUri": "/{projectKey}/shipping-methods"
    },
    "/{projectKey}/shipping-methods/key={key}": {
      "get": {
        "description": "Get ShippingMethod by key",
        "operationId": "Get ShippingMethod by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ShippingMethod by key",
        "operationId": "Update ShippingMethod by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ShippingMethodUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShippingMethod by key",
        "operationId": "Delete ShippingMethod by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShippingMethodsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/shipping-methods/key={key}"
    },
    "/{projectKey}/shipping-methods/matching-cart": {
      "get": {
        "operationId": "Get ShippingMethods for a cart",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                      "version": 3,
                      "name": "DHL",
                      "description": "Standard delivery",
                      "taxCategory": {
                        "typeId": "tax-category",
                        "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                      },
                      "zoneRates": [
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "EUR",
                                "centAmount": 570
                              },
                              "tiers": []
                            }
                          ]
                        },
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "USD",
                                "centAmount": 990
                              },
                              "tiers": []
                            }
                          ]
                        }
                      ],
                      "isDefault": false,
                      "createdAt": "2015-01-21T09:22:04.320Z",
                      "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethodPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "in": "query",
            "name": "cartId",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/matching-cart?cartId={cartId} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShippingMethodsMatchingCart",
      "x-annotation-resourcePathUri": "/{projectKey}/shipping-methods/matching-cart"
    },
    "/{projectKey}/shipping-methods/matching-location": {
      "get": {
        "operationId": "Get ShippingMethods for a location",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                      "version": 3,
                      "name": "DHL",
                      "description": "Standard delivery",
                      "taxCategory": {
                        "typeId": "tax-category",
                        "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                      },
                      "zoneRates": [
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "EUR",
                                "centAmount": 570
                              },
                              "tiers": []
                            }
                          ]
                        },
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "USD",
                                "centAmount": 990
                              },
                              "tiers": []
                            }
                          ]
                        }
                      ],
                      "isDefault": false,
                      "createdAt": "2015-01-21T09:22:04.320Z",
                      "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethodPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "in": "query",
            "name": "country",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "state",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "currency",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/matching-location?country={country} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShippingMethodsMatchingLocation",
      "x-annotation-resourcePathUri": "/{projectKey}/shipping-methods/matching-location"
    },
    "/{projectKey}/shipping-methods/matching-orderedit": {
      "get": {
        "operationId": "Get ShippingMethods for an order edit",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                      "version": 3,
                      "name": "DHL",
                      "description": "Standard delivery",
                      "taxCategory": {
                        "typeId": "tax-category",
                        "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                      },
                      "zoneRates": [
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "EUR",
                                "centAmount": 570
                              },
                              "tiers": []
                            }
                          ]
                        },
                        {
                          "zone": {
                            "typeId": "zone",
                            "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                          },
                          "shippingRates": [
                            {
                              "price": {
                                "type": "centPrecision",
                                "fractionDigits": 2,
                                "currencyCode": "USD",
                                "centAmount": 990
                              },
                              "tiers": []
                            }
                          ]
                        }
                      ],
                      "isDefault": false,
                      "createdAt": "2015-01-21T09:22:04.320Z",
                      "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethodPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "in": "query",
            "name": "orderEditId",
            "x-annotation-builtinType": "string"
          },
          {
            "required": true,
            "type": "string",
            "in": "query",
            "name": "country",
            "x-annotation-builtinType": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "state",
            "x-annotation-builtinType": "string"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/matching-orderedit?orderEditId={orderEditId}&country={country} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShippingMethodsMatchingOrderedit",
      "x-annotation-resourcePathUri": "/{projectKey}/shipping-methods/matching-orderedit"
    },
    "/{projectKey}/shipping-methods/{ID}": {
      "get": {
        "description": "Get ShippingMethod by ID",
        "operationId": "Get ShippingMethod by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ShippingMethod by ID",
        "operationId": "Update ShippingMethod by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ShippingMethodUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShippingMethod by ID",
        "operationId": "Delete ShippingMethod by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShippingMethod",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/shipping-methods/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShippingMethodsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/shipping-methods/{ID}"
    },
    "/{projectKey}/shopping-lists": {
      "get": {
        "description": "Query shopping-lists",
        "operationId": "Query shopping-lists",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                      "version": 1,
                      "name": {
                        "en": "test"
                      },
                      "key": "test",
                      "lineItems": [],
                      "textLineItems": [],
                      "createdAt": "2017-03-30T11:49:40.904Z",
                      "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingListPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create ShoppingList",
        "operationId": "Create ShoppingList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": {
                    "en": "test"
                  },
                  "key": "test"
                }
              },
              "$ref": "#/definitions/ShoppingListDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : {\n    \"en\" : \"test\"\n  },\n  \"key\" : \"test\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShoppingLists",
      "x-annotation-resourcePathUri": "/{projectKey}/shopping-lists"
    },
    "/{projectKey}/shopping-lists/key={key}": {
      "get": {
        "description": "Gets a shopping list by Key.",
        "operationId": "Get ShoppingList by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update a shopping list found by its Key.",
        "operationId": "Update ShoppingList by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by key",
        "operationId": "Delete ShoppingList by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShoppingListsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/shopping-lists/key={key}"
    },
    "/{projectKey}/shopping-lists/{ID}": {
      "get": {
        "description": "Gets a shopping list by ID.",
        "operationId": "Get ShoppingList by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update ShoppingList by ID",
        "operationId": "Update ShoppingList by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ShoppingListUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete ShoppingList by ID",
        "operationId": "Delete ShoppingList by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ShoppingList",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "dataErasure",
            "x-annotation-builtinType": "boolean"
          },
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/shopping-lists/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyShoppingListsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/shopping-lists/{ID}"
    },
    "/{projectKey}/states": {
      "get": {
        "description": "Query states",
        "operationId": "Query states",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                      "version": 1,
                      "key": "Initial",
                      "type": "LineItemState",
                      "roles": [],
                      "name": {
                        "en": "Initial"
                      },
                      "description": {
                        "en": "Initial is the first that (custom) line item gets after it's creation"
                      },
                      "builtIn": true,
                      "initial": true,
                      "createdAt": "2015-01-21T09:22:03.906Z",
                      "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                    },
                    {
                      "id": "fb2b1abd-7598-40f1-906c-9e5e7c6f8ebc",
                      "version": 1,
                      "key": "test-state",
                      "type": "ProductState",
                      "roles": [],
                      "builtIn": false,
                      "initial": true,
                      "createdAt": "2016-02-18T17:18:53.338Z",
                      "lastModifiedAt": "2016-02-18T17:18:53.338Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/StatePagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/states -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create State",
        "operationId": "Create State",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "key": "test-state",
                  "type": "ProductState",
                  "roles": [],
                  "initial": true
                }
              },
              "$ref": "#/definitions/StateDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/states -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"key\" : \"test-state\",\n  \"type\" : \"ProductState\",\n  \"roles\" : [ ],\n  \"initial\" : true\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyStates",
      "x-annotation-resourcePathUri": "/{projectKey}/states"
    },
    "/{projectKey}/states/key={key}": {
      "get": {
        "description": "Get State by key",
        "operationId": "Get State by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/states/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update State by key",
        "operationId": "Update State by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/StateUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/states/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete State by key",
        "operationId": "Delete State by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/states/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyStatesKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/states/key={key}"
    },
    "/{projectKey}/states/{ID}": {
      "get": {
        "description": "Get State by ID",
        "operationId": "Get State by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/states/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update State by ID",
        "operationId": "Update State by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/StateUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/states/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete State by ID",
        "operationId": "Delete State by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/State",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_states:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/states/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyStatesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/states/{ID}"
    },
    "/{projectKey}/stores": {
      "get": {
        "description": "Query stores",
        "operationId": "Query stores",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                      "version": 1,
                      "key": "random-key-12314",
                      "name": {
                        "en": "big store"
                      },
                      "createdAt": "1971-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                      "distributionChannels": []
                    },
                    {
                      "id": "c2f93209-c967-44af-8c2a-d2220bf39eb2",
                      "version": 1,
                      "key": "random-key-1234314",
                      "name": {
                        "en": "second store"
                      },
                      "createdAt": "1973-01-01T00:00:00.001Z",
                      "lastModifiedAt": "1973-01-01T00:00:00.001Z",
                      "distributionChannels": []
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/StorePagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Store",
        "operationId": "Create Store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "key": "random-key-123",
                  "name": {
                    "en": "main store"
                  }
                }
              },
              "$ref": "#/definitions/StoreDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"key\" : \"random-key-123\",\n  \"name\" : {\n    \"en\" : \"main store\"\n  }\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyStores",
      "x-annotation-resourcePathUri": "/{projectKey}/stores"
    },
    "/{projectKey}/stores/key={key}": {
      "get": {
        "description": "Get Store by key",
        "operationId": "Get Store by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Store by key",
        "operationId": "Update Store by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/StoreUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Store by key",
        "operationId": "Delete Store by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyStoresKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/stores/key={key}"
    },
    "/{projectKey}/stores/{ID}": {
      "get": {
        "description": "Get Store by ID",
        "operationId": "Get Store by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Store by ID",
        "operationId": "Update Store by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/StoreUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Store by ID",
        "operationId": "Delete Store by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Store",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/stores/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyStoresByID",
      "x-annotation-resourcePathUri": "/{projectKey}/stores/{ID}"
    },
    "/{projectKey}/subscriptions": {
      "get": {
        "description": "Query subscriptions",
        "operationId": "Query subscriptions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                      "version": 1,
                      "destination": {
                        "type": "IronMQ",
                        "uri": "https://queue-uri"
                      },
                      "messages": [
                        {
                          "resourceTypeId": "product",
                          "types": []
                        }
                      ],
                      "changes": [],
                      "createdAt": "2017-01-25T14:14:22.417Z",
                      "key": "test-queue",
                      "format": {
                        "type": "Platform"
                      },
                      "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                      "lastMessageSequenceNumber": 0,
                      "status": "Healthy"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/SubscriptionPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "The creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.\nIn order to test that the destination is correctly configured, a test message will be put into the queue.\nIf the message could not be delivered, the subscription will not be created.\nThe payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.\nCurrently, a maximum of 25 subscriptions can be created per project.",
        "operationId": "Create Subscription",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "key": "test-queue"
                }
              },
              "$ref": "#/definitions/SubscriptionDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"destination\" : {\n    \"type\" : \"IronMQ\",\n    \"uri\" : \"https://queue-uri\"\n  },\n  \"messages\" : [ {\n    \"resourceTypeId\" : \"product\",\n    \"types\" : [ ]\n  } ],\n  \"key\" : \"test-queue\"\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeySubscriptions",
      "x-annotation-resourcePathUri": "/{projectKey}/subscriptions"
    },
    "/{projectKey}/subscriptions/key={key}": {
      "get": {
        "description": "Retrieves the representation of a subscription by its key.",
        "operationId": "Get Subscription by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Subscription by key",
        "operationId": "Update Subscription by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setKey",
                      "key": "queue-key"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/SubscriptionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"queue-key\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Subscription by key",
        "operationId": "Delete Subscription by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeySubscriptionsKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/subscriptions/key={key}"
    },
    "/{projectKey}/subscriptions/{ID}": {
      "get": {
        "description": "Retrieves the representation of a subscription by its id.",
        "operationId": "Get Subscription by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Subscription by ID",
        "operationId": "Update Subscription by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "setKey",
                      "key": "queue-key"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/SubscriptionUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"setKey\",\n    \"key\" : \"queue-key\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Subscription by ID",
        "operationId": "Delete Subscription by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Subscription",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/subscriptions/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeySubscriptionsByID",
      "x-annotation-resourcePathUri": "/{projectKey}/subscriptions/{ID}"
    },
    "/{projectKey}/tax-categories": {
      "get": {
        "description": "Query tax-categories",
        "operationId": "Query tax-categories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                      "version": 1,
                      "name": "test-tax-category",
                      "rates": [
                        {
                          "name": "test-tax-category",
                          "amount": 0.2,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "vWTk7VjT",
                          "subRates": []
                        }
                      ],
                      "createdAt": "2016-02-24T15:33:40.811Z",
                      "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategoryPagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create TaxCategory",
        "operationId": "Create TaxCategory",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/TaxCategoryDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : \"test-tax-category\",\n  \"rates\" : [ {\n    \"name\" : \"test-tax-category\",\n    \"amount\" : 0.2,\n    \"includedInPrice\" : true,\n    \"country\" : \"DE\"\n  } ]\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyTaxCategories",
      "x-annotation-resourcePathUri": "/{projectKey}/tax-categories"
    },
    "/{projectKey}/tax-categories/key={key}": {
      "get": {
        "description": "Get TaxCategory by key",
        "operationId": "Get TaxCategory by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update TaxCategory by key",
        "operationId": "Update TaxCategory by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/TaxCategoryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete TaxCategory by key",
        "operationId": "Delete TaxCategory by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyTaxCategoriesKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/tax-categories/key={key}"
    },
    "/{projectKey}/tax-categories/{ID}": {
      "get": {
        "description": "Get TaxCategory by ID",
        "operationId": "Get TaxCategory by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update TaxCategory by ID",
        "operationId": "Update TaxCategory by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/TaxCategoryUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete TaxCategory by ID",
        "operationId": "Delete TaxCategory by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TaxCategory",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/tax-categories/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyTaxCategoriesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/tax-categories/{ID}"
    },
    "/{projectKey}/types": {
      "get": {
        "description": "Query types",
        "operationId": "Query types",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 1,
                  "total": 1,
                  "results": [
                    {
                      "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                      "version": 1,
                      "key": "lineitemtype",
                      "name": {
                        "en": "lineitem"
                      },
                      "description": {
                        "en": "description"
                      },
                      "resourceTypeIds": [
                        "line-item"
                      ],
                      "fieldDefinitions": [
                        {
                          "name": "offer_name",
                          "label": {
                            "en": "offer_name"
                          },
                          "required": false,
                          "type": {
                            "name": "String"
                          },
                          "inputHint": "SingleLine"
                        }
                      ],
                      "createdAt": "2015-10-07T06:56:19.217Z",
                      "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/TypePagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/types -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Type",
        "operationId": "Create Type",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/TypeDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/types -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"key\" : \"lineitemtype\",\n  \"name\" : {\n    \"en\" : \"lineitem\"\n  },\n  \"description\" : {\n    \"en\" : \"description\"\n  },\n  \"resourceTypeIds\" : [ \"line-item\" ],\n  \"fieldDefinitions\" : [ {\n    \"name\" : \"offer_name\",\n    \"label\" : {\n      \"en\" : \"offer_name\"\n    },\n    \"required\" : false,\n    \"type\" : {\n      \"name\" : \"String\"\n    },\n    \"inputHint\" : \"SingleLine\"\n  } ]\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyTypes",
      "x-annotation-resourcePathUri": "/{projectKey}/types"
    },
    "/{projectKey}/types/key={key}": {
      "get": {
        "description": "Get Type by key",
        "operationId": "Get Type by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/types/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Type by key",
        "operationId": "Update Type by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/TypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/types/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Type by key",
        "operationId": "Delete Type by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/types/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyTypesKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/types/key={key}"
    },
    "/{projectKey}/types/{ID}": {
      "get": {
        "description": "Get Type by ID",
        "operationId": "Get Type by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/types/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Type by ID",
        "operationId": "Update Type by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": {
                        "en": "New Name"
                      }
                    }
                  ]
                }
              },
              "$ref": "#/definitions/TypeUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/types/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : {\n      \"en\" : \"New Name\"\n    }\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Type by ID",
        "operationId": "Delete Type by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Type",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/types/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyTypesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/types/{ID}"
    },
    "/{projectKey}/zones": {
      "get": {
        "description": "Query zones",
        "operationId": "Query zones",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "limit": 20,
                  "offset": 0,
                  "count": 2,
                  "total": 2,
                  "results": [
                    {
                      "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                      "version": 1,
                      "name": "US",
                      "locations": [
                        {
                          "country": "US"
                        }
                      ],
                      "createdAt": "2015-01-21T09:22:04.275Z",
                      "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                    },
                    {
                      "id": "5cb532be-c680-43ab-ba14-b664bb03dc35",
                      "version": 3,
                      "name": "Europe",
                      "locations": [
                        {
                          "country": "DE"
                        },
                        {
                          "country": "IT"
                        },
                        {
                          "country": "FR"
                        },
                        {
                          "country": "ES"
                        }
                      ],
                      "createdAt": "2015-01-21T09:22:04.266Z",
                      "lastModifiedAt": "2016-01-26T10:56:32.504Z"
                    }
                  ]
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/ZonePagedQueryResponse",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "x-annotation-builtinType": "array"
          },
          {
            "maximum": 500,
            "format": "int32",
            "description": "Number of results returned",
            "type": "integer",
            "in": "query",
            "name": "limit",
            "x-annotation-builtinType": "integer"
          },
          {
            "format": "int32",
            "description": "Number of results skipped",
            "type": "integer",
            "in": "query",
            "name": "offset",
            "x-annotation-builtinType": "integer"
          },
          {
            "description": "Calculate total number of results",
            "type": "boolean",
            "in": "query",
            "name": "withTotal",
            "x-annotation-builtinType": "boolean"
          },
          {
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "x-annotation-builtinType": "array"
          },
          {
            "description": "Predicate parameter values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "/^var[.][a-zA-Z0-9]+$/",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Create Zone",
        "operationId": "Create Zone",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "name": "US",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ZoneDraft"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"name\" : \"US\",\n  \"locations\" : [ {\n    \"country\" : \"US\"\n  } ]\n}\nDATA"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyZones",
      "x-annotation-resourcePathUri": "/{projectKey}/zones"
    },
    "/{projectKey}/zones/key={key}": {
      "get": {
        "description": "Get Zone by key",
        "operationId": "Get Zone by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Zone by key",
        "operationId": "Update Zone by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ZoneUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones/key={key} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Zone by key",
        "operationId": "Delete Zone by key",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones/key={key}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "key",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyZonesKeyByKey",
      "x-annotation-resourcePathUri": "/{projectKey}/zones/key={key}"
    },
    "/{projectKey}/zones/{ID}": {
      "get": {
        "description": "Get Zone by ID",
        "operationId": "Get Zone by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X GET https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "post": {
        "description": "Update Zone by ID",
        "operationId": "Update Zone by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "example": {
                "default": {
                  "version": 1,
                  "actions": [
                    {
                      "action": "changeName",
                      "name": "New Name"
                    }
                  ]
                }
              },
              "$ref": "#/definitions/ZoneUpdate"
            },
            "in": "body",
            "name": "body",
            "required": true,
            "x-annotation-builtinType": "object"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X POST https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones/{ID} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}' \\\n--header 'Content-Type: application/json' \\\n--data-binary @- << DATA \n{\n  \"version\" : 1,\n  \"actions\" : [ {\n    \"action\" : \"changeName\",\n    \"name\" : \"New Name\"\n  } ]\n}\nDATA"
        }
      },
      "delete": {
        "description": "Delete Zone by ID",
        "operationId": "Delete Zone by ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "default": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/Zone",
              "x-annotation-builtinType": "object"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "format": "int64",
            "description": "Last seen version of the resource",
            "type": "integer",
            "in": "query",
            "name": "version",
            "x-annotation-builtinType": "integer"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand",
            "x-annotation-builtinType": "array"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ],
        "x-annotation-codeExamples": {
          "curl": "curl -X DELETE https://api.europe-west1.gcp.commercetools.com/{projectKey}/zones/{ID}?version={version} -i \\\n--header 'Authorization: Bearer ${BEARER_TOKEN}'"
        }
      },
      "parameters": [
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "projectKey",
          "x-annotation-builtinType": "string"
        },
        {
          "required": true,
          "type": "string",
          "in": "path",
          "name": "ID",
          "x-annotation-builtinType": "string"
        }
      ],
      "x-annotation-resourceName": "ByProjectKeyZonesByID",
      "x-annotation-resourcePathUri": "/{projectKey}/zones/{ID}"
    }
  }
}