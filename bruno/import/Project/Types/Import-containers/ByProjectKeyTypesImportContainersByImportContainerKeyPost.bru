meta {
  name: Import import-container
  type: http
  seq: 21
}

post {
  url: {{apiUrl}}/{{project-key}}/types/import-containers/{{import-container-key}}
  body: json
  auth: inherit
}

body:json {
  {
    "type" : "type",
    "resources" : [ {
      "key" : "type-key",
      "name" : {
        "en" : "Name of type"
      },
      "description" : {
        "en" : "Description of type"
      },
      "resourceTypeIds" : [ "customer" ],
      "fieldDefinitions" : [ {
        "type" : {
          "name" : "String"
        },
        "name" : "string-type-name",
        "label" : {
          "en" : "A label for the string field."
        },
        "required" : false,
        "inputHint" : "SingleLine"
      } ]
    } ]
  }
}  

query {
}

script:post-response {
  var data = res.body;
  if(res.status == 200 || res.status == 201) {
      if(data.results && data.results[0] && data.results[0].id && data.results[0].version){
          bru.setEnvVar("import-container-id", data.results[0].id); 
          bru.setEnvVar("import-container-version", data.results[0].version);
      }
      if(data.results && data.results[0] && data.results[0].key){
          bru.setEnvVar("import-container-key", data.results[0].key); 
      }
      if(data.version){
          bru.setEnvVar("import-container-version", data.version);
      }
      if(data.id){
          bru.setEnvVar("import-container-id", data.id); 
      }
      if(data.key){
          bru.setEnvVar("import-container-key", data.key);
      }

  }
}

assert {
  res.status: in [200, 201]
}
