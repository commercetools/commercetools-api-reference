meta {
  name: SetMethodInfo
  type: http
  seq: 787
}

post {
  url: {{apiUrl}}/{{project-key}}/payments/{{payment-id}}
  body: json
  auth: inherit
}

body:json {
  {
      "version": {{payment-version}},
      "actions": [
          {
              "action" : "setMethodInfo",
              "paymentInterface" : "STRIPE",
              "method" : "CREDITCARD",
              "name" : {
                "en" : "Credit Card",
                "de" : "Kreditkarte"
              },
              "token" : {
                "value" : "sk_test_123456789"
              },
              "interfaceAccount" : "acct_1234567890",
              "custom" : {
                "type" : {
                  "id" : "{{type-id}}",
                  "typeId" : "type"
                },
                "fields" : {
                  "last4" : 1234,
                  "brand" : "VISA"
                }
              }
            }
      ]
  }
}  

query {
  ~expand: 
}

script:post-response {
  var data = res.body;
  if(res.status == 200 || res.status == 201) {
      if(data.results && data.results[0] && data.results[0].id && data.results[0].version){
          bru.setEnvVar("payment-id", data.results[0].id); 
          bru.setEnvVar("payment-version", data.results[0].version);
      }
      if(data.results && data.results[0] && data.results[0].key){
          bru.setEnvVar("payment-key", data.results[0].key); 
      }
      if(data.version){
          bru.setEnvVar("payment-version", data.version);
      }
      if(data.id){
          bru.setEnvVar("payment-id", data.id); 
      }
      if(data.key){
          bru.setEnvVar("payment-key", data.key);
      }

  }
}

assert {
  res.status: in [200, 201]
}
