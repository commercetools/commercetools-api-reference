@startuml

hide empty fields
hide empty methods
legend
|= |= line |
|<back:black>   </back>| inheritance |
|<back:green>   </back>| property reference |
|<back:blue>   </back>| discriminated class |
endlegend
interface ProductProjection [[ProductProjection.svg]] extends BaseResource {
    id: String
    version: Long
    createdAt: DateTime
    lastModifiedAt: DateTime
    key: String
    productType: [[ProductTypeReference.svg ProductTypeReference]]
    name: [[LocalizedString.svg LocalizedString]]
    description: [[LocalizedString.svg LocalizedString]]
    slug: [[LocalizedString.svg LocalizedString]]
    categories: [[CategoryReference.svg List<CategoryReference>]]
    categoryOrderHints: [[CategoryOrderHints.svg CategoryOrderHints]]
    metaTitle: [[LocalizedString.svg LocalizedString]]
    metaDescription: [[LocalizedString.svg LocalizedString]]
    metaKeywords: [[LocalizedString.svg LocalizedString]]
    searchKeywords: [[SearchKeywords.svg SearchKeywords]]
    hasStagedChanges: Boolean
    published: Boolean
    masterVariant: [[ProductVariant.svg ProductVariant]]
    variants: [[ProductVariant.svg List<ProductVariant>]]
    taxCategory: [[TaxCategoryReference.svg TaxCategoryReference]]
    state: [[StateReference.svg StateReference]]
    reviewRatingStatistics: [[ReviewRatingStatistics.svg ReviewRatingStatistics]]
    priceMode: [[ProductPriceModeEnum.svg ProductPriceModeEnum]]
}
interface BaseResource [[BaseResource.svg]]  {
    id: String
    version: Long
    createdAt: DateTime
    lastModifiedAt: DateTime
}


interface ProductProjectionPagedQueryResponse [[ProductProjectionPagedQueryResponse.svg]]  {
    limit: Long
    count: Long
    total: Long
    offset: Long
    results: [[ProductProjection.svg List<ProductProjection>]]
}
interface ProductProjectionPagedSearchResponse [[ProductProjectionPagedSearchResponse.svg]]  {
    limit: Long
    count: Long
    total: Long
    offset: Long
    results: [[ProductProjection.svg List<ProductProjection>]]
    facets: [[FacetResults.svg FacetResults]]
}
interface ProductCreatedMessage [[ProductCreatedMessage.svg]]  {
    id: String
    version: Long
    createdAt: DateTime
    lastModifiedAt: DateTime
    lastModifiedBy: [[LastModifiedBy.svg LastModifiedBy]]
    createdBy: [[CreatedBy.svg CreatedBy]]
    sequenceNumber: Long
    resource: [[Reference.svg Reference]]
    resourceVersion: Long
    type: String
    resourceUserProvidedIdentifiers: [[UserProvidedIdentifiers.svg UserProvidedIdentifiers]]
    productProjection: [[ProductProjection.svg ProductProjection]]
}
interface ProductDeletedMessage [[ProductDeletedMessage.svg]]  {
    id: String
    version: Long
    createdAt: DateTime
    lastModifiedAt: DateTime
    lastModifiedBy: [[LastModifiedBy.svg LastModifiedBy]]
    createdBy: [[CreatedBy.svg CreatedBy]]
    sequenceNumber: Long
    resource: [[Reference.svg Reference]]
    resourceVersion: Long
    type: String
    resourceUserProvidedIdentifiers: [[UserProvidedIdentifiers.svg UserProvidedIdentifiers]]
    removedImageUrls: [[String.svg List<String>]]
    currentProjection: [[ProductProjection.svg ProductProjection]]
}
interface ProductPublishedMessage [[ProductPublishedMessage.svg]]  {
    id: String
    version: Long
    createdAt: DateTime
    lastModifiedAt: DateTime
    lastModifiedBy: [[LastModifiedBy.svg LastModifiedBy]]
    createdBy: [[CreatedBy.svg CreatedBy]]
    sequenceNumber: Long
    resource: [[Reference.svg Reference]]
    resourceVersion: Long
    type: String
    resourceUserProvidedIdentifiers: [[UserProvidedIdentifiers.svg UserProvidedIdentifiers]]
    removedImageUrls: [[String.svg List<String>]]
    productProjection: [[ProductProjection.svg ProductProjection]]
    scope: [[ProductPublishScope.svg ProductPublishScope]]
}
interface ProductCreatedMessagePayload [[ProductCreatedMessagePayload.svg]]  {
    type: String
    productProjection: [[ProductProjection.svg ProductProjection]]
}
interface ProductDeletedMessagePayload [[ProductDeletedMessagePayload.svg]]  {
    type: String
    removedImageUrls: [[String.svg List<String>]]
    currentProjection: [[ProductProjection.svg ProductProjection]]
}
interface ProductPublishedMessagePayload [[ProductPublishedMessagePayload.svg]]  {
    type: String
    removedImageUrls: [[String.svg List<String>]]
    productProjection: [[ProductProjection.svg ProductProjection]]
    scope: [[ProductPublishScope.svg ProductPublishScope]]
}
interface ProductSearchResult [[ProductSearchResult.svg]]  {
    id: String
    productProjection: [[ProductProjection.svg ProductProjection]]
    matchingVariants: [[ProductSearchMatchingVariants.svg ProductSearchMatchingVariants]]
}

ProductProjection --> ProductProjectionPagedQueryResponse #green;text:green : "results"
ProductProjection --> ProductProjectionPagedSearchResponse #green;text:green : "results"
ProductProjection --> ProductProjectionPagedSearchResponse #green;text:green : "results"
ProductProjection --> ProductCreatedMessage #green;text:green : "productProjection"
ProductProjection --> ProductDeletedMessage #green;text:green : "currentProjection"
ProductProjection --> ProductPublishedMessage #green;text:green : "productProjection"
ProductProjection --> ProductCreatedMessagePayload #green;text:green : "productProjection"
ProductProjection --> ProductDeletedMessagePayload #green;text:green : "currentProjection"
ProductProjection --> ProductPublishedMessagePayload #green;text:green : "productProjection"
ProductProjection --> ProductSearchResult #green;text:green : "productProjection"
@enduml
