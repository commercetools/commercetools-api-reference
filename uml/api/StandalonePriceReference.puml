@startuml

hide empty fields
hide empty methods
legend
|= |= line |
|<back:black>   </back>| inheritance |
|<back:green>   </back>| property reference |
|<back:blue>   </back>| discriminated class |
endlegend
interface StandalonePriceReference [[StandalonePriceReference.svg]] extends Reference {
    typeId: [[ReferenceTypeId.svg ReferenceTypeId]]
    id: String
    obj: [[StandalonePrice.svg StandalonePrice]]
}
interface Reference [[Reference.svg]]  {
    typeId: [[ReferenceTypeId.svg ReferenceTypeId]]
    id: String
}


interface DuplicateStandalonePriceScopeError [[DuplicateStandalonePriceScopeError.svg]]  {
    code: String
    message: String
    conflictingStandalonePrice: [[StandalonePriceReference.svg StandalonePriceReference]]
    sku: String
    currency: String
    country: String
    customerGroup: [[CustomerGroupResourceIdentifier.svg CustomerGroupResourceIdentifier]]
    channel: [[ChannelResourceIdentifier.svg ChannelResourceIdentifier]]
    validFrom: DateTime
    validUntil: DateTime
}
interface OverlappingStandalonePriceValidityError [[OverlappingStandalonePriceValidityError.svg]]  {
    code: String
    message: String
    conflictingStandalonePrice: [[StandalonePriceReference.svg StandalonePriceReference]]
    sku: String
    currency: String
    country: String
    customerGroup: [[CustomerGroupResourceIdentifier.svg CustomerGroupResourceIdentifier]]
    channel: [[ChannelResourceIdentifier.svg ChannelResourceIdentifier]]
    validFrom: DateTime
    validUntil: DateTime
    conflictingValidFrom: DateTime
    conflictingValidUntil: DateTime
}

StandalonePriceReference --> DuplicateStandalonePriceScopeError #green;text:green : "conflictingStandalonePrice"
StandalonePriceReference --> OverlappingStandalonePriceValidityError #green;text:green : "conflictingStandalonePrice"
@enduml
