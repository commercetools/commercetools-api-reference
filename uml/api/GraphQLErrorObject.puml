@startuml

hide empty fields
hide empty methods
legend
|= |= line |
|<back:black>   </back>| inheritance |
|<back:green>   </back>| property reference |
|<back:blue>   </back>| discriminated class |
endlegend
interface GraphQLErrorObject [[GraphQLErrorObject.svg]]  {
    code: String
}


interface GraphQLAnonymousIdAlreadyInUseError [[GraphQLAnonymousIdAlreadyInUseError.svg]]  {
    code: String
}
interface GraphQLAttributeDefinitionAlreadyExistsError [[GraphQLAttributeDefinitionAlreadyExistsError.svg]]  {
    code: String
    conflictingProductTypeId: String
    conflictingProductTypeName: String
    conflictingAttributeName: String
}
interface GraphQLAttributeDefinitionTypeConflictError [[GraphQLAttributeDefinitionTypeConflictError.svg]]  {
    code: String
    conflictingProductTypeId: String
    conflictingProductTypeName: String
    conflictingAttributeName: String
}
interface GraphQLAttributeNameDoesNotExistError [[GraphQLAttributeNameDoesNotExistError.svg]]  {
    code: String
    invalidAttributeName: String
}
interface GraphQLBadGatewayError [[GraphQLBadGatewayError.svg]]  {
    code: String
}
interface GraphQLConcurrentModificationError [[GraphQLConcurrentModificationError.svg]]  {
    code: String
    currentVersion: Long
}
interface GraphQLCountryNotConfiguredInStoreError [[GraphQLCountryNotConfiguredInStoreError.svg]]  {
    code: String
    storeCountries: [[String.svg List<String>]]
    country: String
}
interface GraphQLDiscountCodeNonApplicableError [[GraphQLDiscountCodeNonApplicableError.svg]]  {
    code: String
    discountCode: String
    reason: String
    discountCodeId: String
    validFrom: DateTime
    validUntil: DateTime
    validityCheckTime: DateTime
}
interface GraphQLDuplicateAttributeValueError [[GraphQLDuplicateAttributeValueError.svg]]  {
    code: String
    attribute: [[Attribute.svg Attribute]]
}
interface GraphQLDuplicateAttributeValuesError [[GraphQLDuplicateAttributeValuesError.svg]]  {
    code: String
    attributes: [[Attribute.svg List<Attribute>]]
}
interface GraphQLDuplicateEnumValuesError [[GraphQLDuplicateEnumValuesError.svg]]  {
    code: String
    duplicates: [[String.svg List<String>]]
}
interface GraphQLDuplicateFieldError [[GraphQLDuplicateFieldError.svg]]  {
    code: String
    field: String
    duplicateValue: [[Object.svg Object]]
}
interface GraphQLDuplicateFieldWithConflictingResourceError [[GraphQLDuplicateFieldWithConflictingResourceError.svg]]  {
    code: String
    field: String
    duplicateValue: [[Object.svg Object]]
    conflictingResource: [[Reference.svg Reference]]
}
interface GraphQLDuplicatePriceKeyError [[GraphQLDuplicatePriceKeyError.svg]]  {
    code: String
    conflictingPrice: [[Price.svg Price]]
}
interface GraphQLDuplicatePriceScopeError [[GraphQLDuplicatePriceScopeError.svg]]  {
    code: String
    conflictingPrice: [[Price.svg Price]]
}
interface GraphQLDuplicateStandalonePriceScopeError [[GraphQLDuplicateStandalonePriceScopeError.svg]]  {
    code: String
    conflictingStandalonePrice: [[StandalonePriceReference.svg StandalonePriceReference]]
    sku: String
    currency: String
    country: String
    customerGroup: [[CustomerGroupResourceIdentifier.svg CustomerGroupResourceIdentifier]]
    channel: [[ChannelResourceIdentifier.svg ChannelResourceIdentifier]]
    validFrom: DateTime
    validUntil: DateTime
}
interface GraphQLDuplicateVariantValuesError [[GraphQLDuplicateVariantValuesError.svg]]  {
    code: String
    variantValues: [[VariantValues.svg VariantValues]]
}
interface GraphQLEditPreviewFailedError [[GraphQLEditPreviewFailedError.svg]]  {
    code: String
    result: [[OrderEditPreviewFailure.svg OrderEditPreviewFailure]]
}
interface GraphQLEnumKeyAlreadyExistsError [[GraphQLEnumKeyAlreadyExistsError.svg]]  {
    code: String
    conflictingEnumKey: String
    conflictingAttributeName: String
}
interface GraphQLEnumKeyDoesNotExistError [[GraphQLEnumKeyDoesNotExistError.svg]]  {
    code: String
    conflictingEnumKey: String
    conflictingAttributeName: String
}
interface GraphQLEnumValueIsUsedError [[GraphQLEnumValueIsUsedError.svg]]  {
    code: String
}
interface GraphQLEnumValuesMustMatchError [[GraphQLEnumValuesMustMatchError.svg]]  {
    code: String
}
interface GraphQLExtensionBadResponseError [[GraphQLExtensionBadResponseError.svg]]  {
    code: String
    localizedMessage: [[LocalizedString.svg LocalizedString]]
    extensionExtraInfo: [[Object.svg Object]]
    extensionErrors: [[ExtensionError.svg List<ExtensionError>]]
    extensionBody: String
    extensionStatusCode: Integer
    extensionId: String
    extensionKey: String
}
interface GraphQLExtensionNoResponseError [[GraphQLExtensionNoResponseError.svg]]  {
    code: String
    extensionId: String
    extensionKey: String
}
interface GraphQLExtensionPredicateEvaluationFailedError [[GraphQLExtensionPredicateEvaluationFailedError.svg]]  {
    code: String
    errorByExtension: [[ErrorByExtension.svg ErrorByExtension]]
}
interface GraphQLExtensionUpdateActionsFailedError [[GraphQLExtensionUpdateActionsFailedError.svg]]  {
    code: String
    localizedMessage: [[LocalizedString.svg LocalizedString]]
    extensionExtraInfo: [[Object.svg Object]]
    extensionErrors: [[ExtensionError.svg List<ExtensionError>]]
}
interface GraphQLExternalOAuthFailedError [[GraphQLExternalOAuthFailedError.svg]]  {
    code: String
}
interface GraphQLFeatureRemovedError [[GraphQLFeatureRemovedError.svg]]  {
    code: String
}
interface GraphQLGeneralError [[GraphQLGeneralError.svg]]  {
    code: String
}
interface GraphQLInsufficientScopeError [[GraphQLInsufficientScopeError.svg]]  {
    code: String
}
interface GraphQLInternalConstraintViolatedError [[GraphQLInternalConstraintViolatedError.svg]]  {
    code: String
}
interface GraphQLInvalidCredentialsError [[GraphQLInvalidCredentialsError.svg]]  {
    code: String
}
interface GraphQLInvalidCurrentPasswordError [[GraphQLInvalidCurrentPasswordError.svg]]  {
    code: String
}
interface GraphQLInvalidFieldError [[GraphQLInvalidFieldError.svg]]  {
    code: String
    field: String
    invalidValue: [[Object.svg Object]]
    allowedValues: [[Object.svg List<Object>]]
}
interface GraphQLInvalidInputError [[GraphQLInvalidInputError.svg]]  {
    code: String
}
interface GraphQLInvalidItemShippingDetailsError [[GraphQLInvalidItemShippingDetailsError.svg]]  {
    code: String
    subject: String
    itemId: String
}
interface GraphQLInvalidJsonInputError [[GraphQLInvalidJsonInputError.svg]]  {
    code: String
    detailedErrorMessage: String
}
interface GraphQLInvalidOperationError [[GraphQLInvalidOperationError.svg]]  {
    code: String
}
interface GraphQLInvalidSubjectError [[GraphQLInvalidSubjectError.svg]]  {
    code: String
}
interface GraphQLInvalidTokenError [[GraphQLInvalidTokenError.svg]]  {
    code: String
}
interface GraphQLLanguageUsedInStoresError [[GraphQLLanguageUsedInStoresError.svg]]  {
    code: String
}
interface GraphQLMatchingPriceNotFoundError [[GraphQLMatchingPriceNotFoundError.svg]]  {
    code: String
    productId: String
    variantId: Integer
    currency: String
    country: String
    customerGroup: [[CustomerGroupReference.svg CustomerGroupReference]]
    channel: [[ChannelReference.svg ChannelReference]]
}
interface GraphQLMaxResourceLimitExceededError [[GraphQLMaxResourceLimitExceededError.svg]]  {
    code: String
    exceededResource: [[ReferenceTypeId.svg ReferenceTypeId]]
}
interface GraphQLMissingRoleOnChannelError [[GraphQLMissingRoleOnChannelError.svg]]  {
    code: String
    channel: [[ChannelResourceIdentifier.svg ChannelResourceIdentifier]]
    missingRole: [[ChannelRoleEnum.svg ChannelRoleEnum]]
}
interface GraphQLMissingTaxRateForCountryError [[GraphQLMissingTaxRateForCountryError.svg]]  {
    code: String
    taxCategoryId: String
    country: String
    state: String
}
interface GraphQLNoMatchingProductDiscountFoundError [[GraphQLNoMatchingProductDiscountFoundError.svg]]  {
    code: String
}
interface GraphQLNotEnabledError [[GraphQLNotEnabledError.svg]]  {
    code: String
}
interface GraphQLObjectNotFoundError [[GraphQLObjectNotFoundError.svg]]  {
    code: String
}
interface GraphQLOutOfStockError [[GraphQLOutOfStockError.svg]]  {
    code: String
    lineItems: [[String.svg List<String>]]
    skus: [[String.svg List<String>]]
}
interface GraphQLOverCapacityError [[GraphQLOverCapacityError.svg]]  {
    code: String
}
interface GraphQLOverlappingStandalonePriceValidityError [[GraphQLOverlappingStandalonePriceValidityError.svg]]  {
    code: String
    conflictingStandalonePrice: [[StandalonePriceReference.svg StandalonePriceReference]]
    sku: String
    currency: String
    country: String
    customerGroup: [[CustomerGroupResourceIdentifier.svg CustomerGroupResourceIdentifier]]
    channel: [[ChannelResourceIdentifier.svg ChannelResourceIdentifier]]
    validFrom: DateTime
    validUntil: DateTime
    conflictingValidFrom: DateTime
    conflictingValidUntil: DateTime
}
interface GraphQLPendingOperationError [[GraphQLPendingOperationError.svg]]  {
    code: String
}
interface GraphQLPriceChangedError [[GraphQLPriceChangedError.svg]]  {
    code: String
    lineItems: [[String.svg List<String>]]
    shipping: Boolean
}
interface GraphQLProductAssignmentMissingError [[GraphQLProductAssignmentMissingError.svg]]  {
    code: String
    product: [[ProductReference.svg ProductReference]]
}
interface GraphQLProductPresentWithDifferentVariantSelectionError [[GraphQLProductPresentWithDifferentVariantSelectionError.svg]]  {
    code: String
    product: [[ProductReference.svg ProductReference]]
    existingVariantSelection: [[ProductVariantSelection.svg ProductVariantSelection]]
}
interface GraphQLProjectNotConfiguredForLanguagesError [[GraphQLProjectNotConfiguredForLanguagesError.svg]]  {
    code: String
    languages: [[String.svg List<String>]]
}
interface GraphQLQueryComplexityLimitExceededError [[GraphQLQueryComplexityLimitExceededError.svg]]  {
    code: String
}
interface GraphQLQueryTimedOutError [[GraphQLQueryTimedOutError.svg]]  {
    code: String
}
interface GraphQLReferenceExistsError [[GraphQLReferenceExistsError.svg]]  {
    code: String
    referencedBy: [[ReferenceTypeId.svg ReferenceTypeId]]
}
interface GraphQLReferencedResourceNotFoundError [[GraphQLReferencedResourceNotFoundError.svg]]  {
    code: String
    typeId: [[ReferenceTypeId.svg ReferenceTypeId]]
    id: String
    key: String
}
interface GraphQLRequiredFieldError [[GraphQLRequiredFieldError.svg]]  {
    code: String
    field: String
}
interface GraphQLResourceNotFoundError [[GraphQLResourceNotFoundError.svg]]  {
    code: String
}
interface GraphQLResourceSizeLimitExceededError [[GraphQLResourceSizeLimitExceededError.svg]]  {
    code: String
}
interface GraphQLSearchDeactivatedError [[GraphQLSearchDeactivatedError.svg]]  {
    code: String
}
interface GraphQLSearchExecutionFailureError [[GraphQLSearchExecutionFailureError.svg]]  {
    code: String
}
interface GraphQLSearchFacetPathNotFoundError [[GraphQLSearchFacetPathNotFoundError.svg]]  {
    code: String
}
interface GraphQLSearchIndexingInProgressError [[GraphQLSearchIndexingInProgressError.svg]]  {
    code: String
}
interface GraphQLSemanticErrorError [[GraphQLSemanticErrorError.svg]]  {
    code: String
}
interface GraphQLShippingMethodDoesNotMatchCartError [[GraphQLShippingMethodDoesNotMatchCartError.svg]]  {
    code: String
}
interface GraphQLSyntaxErrorError [[GraphQLSyntaxErrorError.svg]]  {
    code: String
}

GraphQLErrorObject --> GraphQLAnonymousIdAlreadyInUseError #blue;text:blue : "code : AnonymousIdAlreadyInUse"
GraphQLErrorObject --> GraphQLAttributeDefinitionAlreadyExistsError #blue;text:blue : "code : AttributeDefinitionAlreadyExists"
GraphQLErrorObject --> GraphQLAttributeDefinitionTypeConflictError #blue;text:blue : "code : AttributeDefinitionTypeConflict"
GraphQLErrorObject --> GraphQLAttributeNameDoesNotExistError #blue;text:blue : "code : AttributeNameDoesNotExist"
GraphQLErrorObject --> GraphQLBadGatewayError #blue;text:blue : "code : BadGateway"
GraphQLErrorObject --> GraphQLConcurrentModificationError #blue;text:blue : "code : ConcurrentModification"
GraphQLErrorObject --> GraphQLCountryNotConfiguredInStoreError #blue;text:blue : "code : CountryNotConfiguredInStore"
GraphQLErrorObject --> GraphQLDiscountCodeNonApplicableError #blue;text:blue : "code : DiscountCodeNonApplicable"
GraphQLErrorObject --> GraphQLDuplicateAttributeValueError #blue;text:blue : "code : DuplicateAttributeValue"
GraphQLErrorObject --> GraphQLDuplicateAttributeValuesError #blue;text:blue : "code : DuplicateAttributeValues"
GraphQLErrorObject --> GraphQLDuplicateEnumValuesError #blue;text:blue : "code : DuplicateEnumValues"
GraphQLErrorObject --> GraphQLDuplicateFieldError #blue;text:blue : "code : DuplicateField"
GraphQLErrorObject --> GraphQLDuplicateFieldWithConflictingResourceError #blue;text:blue : "code : DuplicateFieldWithConflictingResource"
GraphQLErrorObject --> GraphQLDuplicatePriceKeyError #blue;text:blue : "code : DuplicatePriceKey"
GraphQLErrorObject --> GraphQLDuplicatePriceScopeError #blue;text:blue : "code : DuplicatePriceScope"
GraphQLErrorObject --> GraphQLDuplicateStandalonePriceScopeError #blue;text:blue : "code : DuplicateStandalonePriceScope"
GraphQLErrorObject --> GraphQLDuplicateVariantValuesError #blue;text:blue : "code : DuplicateVariantValues"
GraphQLErrorObject --> GraphQLEditPreviewFailedError #blue;text:blue : "code : EditPreviewFailed"
GraphQLErrorObject --> GraphQLEnumKeyAlreadyExistsError #blue;text:blue : "code : EnumKeyAlreadyExists"
GraphQLErrorObject --> GraphQLEnumKeyDoesNotExistError #blue;text:blue : "code : EnumKeyDoesNotExist"
GraphQLErrorObject --> GraphQLEnumValueIsUsedError #blue;text:blue : "code : EnumValueIsUsed"
GraphQLErrorObject --> GraphQLEnumValuesMustMatchError #blue;text:blue : "code : EnumValuesMustMatch"
GraphQLErrorObject --> GraphQLExtensionBadResponseError #blue;text:blue : "code : ExtensionBadResponse"
GraphQLErrorObject --> GraphQLExtensionNoResponseError #blue;text:blue : "code : ExtensionNoResponse"
GraphQLErrorObject --> GraphQLExtensionPredicateEvaluationFailedError #blue;text:blue : "code : ExtensionPredicateEvaluationFailed"
GraphQLErrorObject --> GraphQLExtensionUpdateActionsFailedError #blue;text:blue : "code : ExtensionUpdateActionsFailed"
GraphQLErrorObject --> GraphQLExternalOAuthFailedError #blue;text:blue : "code : ExternalOAuthFailed"
GraphQLErrorObject --> GraphQLFeatureRemovedError #blue;text:blue : "code : FeatureRemoved"
GraphQLErrorObject --> GraphQLGeneralError #blue;text:blue : "code : General"
GraphQLErrorObject --> GraphQLInsufficientScopeError #blue;text:blue : "code : insufficient_scope"
GraphQLErrorObject --> GraphQLInternalConstraintViolatedError #blue;text:blue : "code : InternalConstraintViolated"
GraphQLErrorObject --> GraphQLInvalidCredentialsError #blue;text:blue : "code : InvalidCredentials"
GraphQLErrorObject --> GraphQLInvalidCurrentPasswordError #blue;text:blue : "code : InvalidCurrentPassword"
GraphQLErrorObject --> GraphQLInvalidFieldError #blue;text:blue : "code : InvalidField"
GraphQLErrorObject --> GraphQLInvalidInputError #blue;text:blue : "code : InvalidInput"
GraphQLErrorObject --> GraphQLInvalidItemShippingDetailsError #blue;text:blue : "code : InvalidItemShippingDetails"
GraphQLErrorObject --> GraphQLInvalidJsonInputError #blue;text:blue : "code : InvalidJsonInput"
GraphQLErrorObject --> GraphQLInvalidOperationError #blue;text:blue : "code : InvalidOperation"
GraphQLErrorObject --> GraphQLInvalidSubjectError #blue;text:blue : "code : InvalidSubject"
GraphQLErrorObject --> GraphQLInvalidTokenError #blue;text:blue : "code : invalid_token"
GraphQLErrorObject --> GraphQLLanguageUsedInStoresError #blue;text:blue : "code : LanguageUsedInStores"
GraphQLErrorObject --> GraphQLMatchingPriceNotFoundError #blue;text:blue : "code : MatchingPriceNotFound"
GraphQLErrorObject --> GraphQLMaxResourceLimitExceededError #blue;text:blue : "code : MaxResourceLimitExceeded"
GraphQLErrorObject --> GraphQLMissingRoleOnChannelError #blue;text:blue : "code : MissingRoleOnChannel"
GraphQLErrorObject --> GraphQLMissingTaxRateForCountryError #blue;text:blue : "code : MissingTaxRateForCountry"
GraphQLErrorObject --> GraphQLNoMatchingProductDiscountFoundError #blue;text:blue : "code : NoMatchingProductDiscountFound"
GraphQLErrorObject --> GraphQLNotEnabledError #blue;text:blue : "code : NotEnabled"
GraphQLErrorObject --> GraphQLObjectNotFoundError #blue;text:blue : "code : ObjectNotFound"
GraphQLErrorObject --> GraphQLOutOfStockError #blue;text:blue : "code : OutOfStock"
GraphQLErrorObject --> GraphQLOverCapacityError #blue;text:blue : "code : OverCapacity"
GraphQLErrorObject --> GraphQLOverlappingStandalonePriceValidityError #blue;text:blue : "code : OverlappingStandalonePriceValidity"
GraphQLErrorObject --> GraphQLPendingOperationError #blue;text:blue : "code : PendingOperation"
GraphQLErrorObject --> GraphQLPriceChangedError #blue;text:blue : "code : PriceChanged"
GraphQLErrorObject --> GraphQLProductAssignmentMissingError #blue;text:blue : "code : ProductAssignmentMissing"
GraphQLErrorObject --> GraphQLProductPresentWithDifferentVariantSelectionError #blue;text:blue : "code : ProductPresentWithDifferentVariantSelection"
GraphQLErrorObject --> GraphQLProjectNotConfiguredForLanguagesError #blue;text:blue : "code : ProjectNotConfiguredForLanguages"
GraphQLErrorObject --> GraphQLQueryComplexityLimitExceededError #blue;text:blue : "code : QueryComplexityLimitExceeded"
GraphQLErrorObject --> GraphQLQueryTimedOutError #blue;text:blue : "code : QueryTimedOut"
GraphQLErrorObject --> GraphQLReferenceExistsError #blue;text:blue : "code : ReferenceExists"
GraphQLErrorObject --> GraphQLReferencedResourceNotFoundError #blue;text:blue : "code : ReferencedResourceNotFound"
GraphQLErrorObject --> GraphQLRequiredFieldError #blue;text:blue : "code : RequiredField"
GraphQLErrorObject --> GraphQLResourceNotFoundError #blue;text:blue : "code : ResourceNotFound"
GraphQLErrorObject --> GraphQLResourceSizeLimitExceededError #blue;text:blue : "code : ResourceSizeLimitExceeded"
GraphQLErrorObject --> GraphQLSearchDeactivatedError #blue;text:blue : "code : SearchDeactivated"
GraphQLErrorObject --> GraphQLSearchExecutionFailureError #blue;text:blue : "code : SearchExecutionFailure"
GraphQLErrorObject --> GraphQLSearchFacetPathNotFoundError #blue;text:blue : "code : SearchFacetPathNotFound"
GraphQLErrorObject --> GraphQLSearchIndexingInProgressError #blue;text:blue : "code : SearchIndexingInProgress"
GraphQLErrorObject --> GraphQLSemanticErrorError #blue;text:blue : "code : SemanticError"
GraphQLErrorObject --> GraphQLShippingMethodDoesNotMatchCartError #blue;text:blue : "code : ShippingMethodDoesNotMatchCart"
GraphQLErrorObject --> GraphQLSyntaxErrorError #blue;text:blue : "code : SyntaxError"

@enduml
