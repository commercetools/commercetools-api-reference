@startuml

hide empty fields
hide empty methods
legend
|= |= line |
|<back:black>   </back>| inheritance |
|<back:green>   </back>| property reference |
|<back:blue>   </back>| discriminated class |
endlegend
interface SearchQueryExpressionValue [[SearchQueryExpressionValue.svg]]  {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
}

interface SearchAnyValue [[SearchAnyValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    value: [[Object.svg Object]]
    language: String
    caseInsensitive: Boolean
}
interface SearchDateRangeValue [[SearchDateRangeValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    gte: Date
    gt: Date
    lte: Date
    lt: Date
}
interface SearchDateTimeRangeValue [[SearchDateTimeRangeValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    gte: DateTime
    gt: DateTime
    lte: DateTime
    lt: DateTime
}
interface SearchExactValue [[SearchExactValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    value: [[Object.svg Object]]
    values: [[Object.svg List<Object>]]
    language: String
    caseInsensitive: Boolean
}
interface SearchExistsValue [[SearchExistsValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    language: String
}
interface SearchFullTextPrefixValue [[SearchFullTextPrefixValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    value: [[Object.svg Object]]
    language: String
    mustMatch: [[SearchMatchType.svg SearchMatchType]]
}
interface SearchFullTextValue [[SearchFullTextValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    value: [[Object.svg Object]]
    language: String
    mustMatch: [[SearchMatchType.svg SearchMatchType]]
}
interface SearchLongRangeValue [[SearchLongRangeValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    gte: Long
    gt: Long
    lte: Long
    lt: Long
}
interface SearchNumberRangeValue [[SearchNumberRangeValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    gte: Double
    gt: Double
    lte: Double
    lt: Double
}
interface SearchTimeRangeValue [[SearchTimeRangeValue.svg]] extends SearchQueryExpressionValue {
    field: String
    boost: Double
    fieldType: [[SearchFieldType.svg SearchFieldType]]
    gte: Time
    gt: Time
    lte: Time
    lt: Time
}




@enduml
