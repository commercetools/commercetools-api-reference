@startuml

hide methods
enum EventSubscriptionResourceTypeId {
    CHECKOUT
    IMPORT_API
}
interface BaseEvent [[BaseEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    data: [[Object.svg Object]]
    createdAt: DateTime
}
interface CheckoutOrderCreationFailedEvent [[CheckoutOrderCreationFailedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessageOrderPayloadBaseData.svg CheckoutMessageOrderPayloadBaseData]]
}
interface CheckoutPaymentAuthorizationCancelledEvent [[CheckoutPaymentAuthorizationCancelledEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface CheckoutPaymentAuthorizationFailedEvent [[CheckoutPaymentAuthorizationFailedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface CheckoutPaymentAuthorizedEvent [[CheckoutPaymentAuthorizedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface CheckoutPaymentCancelAuthorizationFailedEvent [[CheckoutPaymentCancelAuthorizationFailedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface CheckoutPaymentChargeFailedEvent [[CheckoutPaymentChargeFailedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface CheckoutPaymentChargedEvent [[CheckoutPaymentChargedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface CheckoutPaymentRefundFailedEvent [[CheckoutPaymentRefundFailedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface CheckoutPaymentRefundedEvent [[CheckoutPaymentRefundedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[CheckoutMessagePaymentsPayloadBaseData.svg CheckoutMessagePaymentsPayloadBaseData]]
}
interface Event [[Event.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
}
interface ImportContainerCreatedEvent [[ImportContainerCreatedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[ImportContainerCreatedEventData.svg ImportContainerCreatedEventData]]
}
interface ImportContainerDeletedEvent [[ImportContainerDeletedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[ImportContainerDeletedEventData.svg ImportContainerDeletedEventData]]
}
interface ImportOperationRejectedEvent [[ImportOperationRejectedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[ImportOperationRejectedEventData.svg ImportOperationRejectedEventData]]
}
interface ImportUnresolvedEvent [[ImportUnresolvedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[ImportUnresolvedEventData.svg ImportUnresolvedEventData]]
}
interface ImportValidationFailedEvent [[ImportValidationFailedEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[ImportValidationFailedEventData.svg ImportValidationFailedEventData]]
}
interface ImportWaitForMasterVariantEvent [[ImportWaitForMasterVariantEvent.svg]]  {
    id: String
    notificationType: String
    resourceType: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    type: [[EventType.svg EventType]]
    createdAt: DateTime
    data: [[ImportWaitForMasterVariantEventData.svg ImportWaitForMasterVariantEventData]]
}
interface EventSubscription [[EventSubscription.svg]]  {
    resourceTypeId: [[EventSubscriptionResourceTypeId.svg EventSubscriptionResourceTypeId]]
    types: [[EventType.svg List<EventType>]]
}
EventSubscriptionResourceTypeId --> BaseEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutOrderCreationFailedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentAuthorizationCancelledEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentAuthorizationFailedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentAuthorizedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentCancelAuthorizationFailedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentChargeFailedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentChargedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentRefundFailedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> CheckoutPaymentRefundedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> Event #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> ImportContainerCreatedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> ImportContainerDeletedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> ImportOperationRejectedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> ImportUnresolvedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> ImportValidationFailedEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> ImportWaitForMasterVariantEvent #green;text:green : "resourceType"
EventSubscriptionResourceTypeId --> EventSubscription #green;text:green : "resourceTypeId"
@enduml
