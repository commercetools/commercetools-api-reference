{
  "openapi": "3.0.0",
  "info": {
    "title": "Commercetools",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.sphere.io/"
    }
  ],
  "paths": {
    "/{projectKey}": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "version": 1,
                  "key": "test-project",
                  "name": "Some project name",
                  "countries": [
                    "DE",
                    "US"
                  ],
                  "currencies": [
                    "EUR"
                  ],
                  "languages": [
                    "en"
                  ],
                  "createdAt": "2013-11-01T15:14:34.325Z",
                  "trialUntil": "2013-11-01T15:14:34.325Z",
                  "messages": {
                    "enabled": false
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          }
        },
        "description": "Update project",
        "operationId": "POST_projectKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "version": 1,
                  "key": "test-project",
                  "name": "Some project name",
                  "countries": [
                    "DE",
                    "US"
                  ],
                  "currencies": [
                    "EUR"
                  ],
                  "languages": [
                    "en"
                  ],
                  "createdAt": "2013-11-01T15:14:34.325Z",
                  "trialUntil": "2013-11-01T15:14:34.325Z",
                  "messages": {
                    "enabled": false
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        },
        "description": "The Endpoint is responding a limited set of information about settings and configuration of the project.\n",
        "operationId": "GET_projectKey",
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Project"
    },
    "/{projectKey}/carts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query carts",
        "operationId": "GET_projectKey-carts",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "includePath": "resources/carts.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Cart",
        "operationId": "POST_projectKey-carts",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currency": "EUR"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/CartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Cart",
      "x-annotation-deleteable": "Cart",
      "x-annotation-createable": "CartDraft"
    },
    "/{projectKey}/carts/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Cart by ID",
        "operationId": "POST_projectKey-carts-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CartUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Cart by ID",
        "operationId": "GET_projectKey-carts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Cart by ID",
        "operationId": "DELETE_projectKey-carts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/carts/replicate": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "POST_projectKey-carts-replicate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/carts.raml",
                "$ref": "#/components/schemas/ReplicaCartDraft"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/cart-discounts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query cart-discounts",
        "operationId": "GET_projectKey-cart-discounts",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                },
                "schema": {
                  "$ref": "#/components/schemas/CartDiscount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create CartDiscount",
        "operationId": "POST_projectKey-cart-discounts",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": {
                  "en": "Summer Sale"
                },
                "value": {
                  "type": "relative",
                  "permyriad": 1000
                },
                "cartPredicate": "1=1",
                "target": {
                  "type": "lineItems",
                  "predicate": "1=1"
                },
                "sortOrder": "0.1",
                "isActive": true,
                "requiresDiscountCode": false
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/CartDiscountDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "CartDiscount",
      "x-annotation-deleteable": "CartDiscount",
      "x-annotation-createable": "CartDiscountDraft"
    },
    "/{projectKey}/cart-discounts/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update CartDiscount by ID",
        "operationId": "POST_projectKey-cart-discounts-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "relative",
                      "permyriad": 1000
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CartDiscountUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CartDiscount by ID",
        "operationId": "GET_projectKey-cart-discounts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CartDiscount by ID",
        "operationId": "DELETE_projectKey-cart-discounts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/categories": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query categories",
        "operationId": "GET_projectKey-categories",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Category",
        "operationId": "POST_projectKey-categories",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": {
                  "en": "Top hat"
                },
                "slug": {
                  "en": "top-hat"
                },
                "orderHint": "0.1"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/CategoryDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Category",
      "x-annotation-deleteable": "Category",
      "x-annotation-createable": "CategoryDraft"
    },
    "/{projectKey}/categories/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Category by key",
        "operationId": "POST_projectKey-categories-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Category by key",
        "operationId": "GET_projectKey-categories-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Category by key",
        "operationId": "DELETE_projectKey-categories-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/categories/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Category by ID",
        "operationId": "POST_projectKey-categories-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Category by ID",
        "operationId": "GET_projectKey-categories-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Category by ID",
        "operationId": "DELETE_projectKey-categories-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/channels": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query channels",
        "operationId": "GET_projectKey-channels",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                  "key": "commercetools",
                  "version": 1,
                  "roles": [
                    "InventorySupply"
                  ],
                  "createdAt": "2015-05-28T09:48:35.023Z",
                  "lastModifiedAt": "2015-05-28T09:48:35.023Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Channel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Channel",
        "operationId": "POST_projectKey-channels",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "commercetools",
                "roles": [
                  "InventorySupply"
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ChannelDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Channel",
      "x-annotation-deleteable": "Channel",
      "x-annotation-createable": "ChannelDraft"
    },
    "/{projectKey}/channels/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Channel by ID",
        "operationId": "POST_projectKey-channels-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ChannelUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Channel by ID",
        "operationId": "GET_projectKey-channels-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Channel by ID",
        "operationId": "DELETE_projectKey-channels-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/customers": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query customers",
        "operationId": "GET_projectKey-customers",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "includePath": "resources/customers.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Customer",
        "operationId": "POST_projectKey-customers",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "email": "<random>@example.com",
                "firstName": "John",
                "lastName": "Doe",
                "password": "secret123"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/CustomerDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Customer",
      "x-annotation-deleteable": "Customer",
      "x-annotation-createable": "CustomerDraft"
    },
    "/{projectKey}/customers/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Customer by ID",
        "operationId": "POST_projectKey-customers-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by ID",
        "operationId": "GET_projectKey-customers-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Customer by ID",
        "operationId": "DELETE_projectKey-customers-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/customers/password-token={passwordToken}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by passwordToken",
        "operationId": "GET_projectKey-customers-password-token=passwordToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "passwordToken",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "passwordToken"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withPasswordToken"
    },
    "/{projectKey}/customers/email-token={emailToken}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by emailToken",
        "operationId": "GET_projectKey-customers-email-token=emailToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "emailToken",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "emailToken"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withEmailToken"
    },
    "/{projectKey}/customers/email-token": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create a Token for verifying the Customer's Email",
        "operationId": "POST_projectKey-customers-email-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerCreateEmailToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/email": {
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/email/confirm": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Verifies customer's email using a token.",
        "operationId": "POST_projectKey-customers-email-confirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerEmailVerify"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/password": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Change a customers password",
        "operationId": "POST_projectKey-customers-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerChangePassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/password/reset": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Set a new password using a token.",
        "operationId": "POST_projectKey-customers-password-reset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerResetPassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customers/password-token": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerToken"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.\n",
        "operationId": "POST_projectKey-customers-password-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerCreatePasswordResetToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/customer-groups": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query customer-groups",
        "operationId": "GET_projectKey-customer-groups",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create CustomerGroup",
        "operationId": "POST_projectKey-customer-groups",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "groupName": "Webshop user"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/CustomerGroupDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "CustomerGroup",
      "x-annotation-deleteable": "CustomerGroup",
      "x-annotation-createable": "CustomerGroupDraft"
    },
    "/{projectKey}/customer-groups/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update CustomerGroup by key",
        "operationId": "POST_projectKey-customer-groups-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerGroupUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CustomerGroup by key",
        "operationId": "GET_projectKey-customer-groups-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CustomerGroup by key",
        "operationId": "DELETE_projectKey-customer-groups-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/customer-groups/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update CustomerGroup by ID",
        "operationId": "POST_projectKey-customer-groups-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerGroupUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CustomerGroup by ID",
        "operationId": "GET_projectKey-customer-groups-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CustomerGroup by ID",
        "operationId": "DELETE_projectKey-customer-groups-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/discount-codes": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query discount-codes",
        "operationId": "GET_projectKey-discount-codes",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                  "version": 2,
                  "code": "SAVE10",
                  "name": {
                    "en": "Save10"
                  },
                  "cartDiscounts": [
                    {
                      "typeId": "cart-discount",
                      "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                    }
                  ],
                  "isActive": true,
                  "cartPredicate": "1=1",
                  "references": [],
                  "groups": [],
                  "createdAt": "2015-09-15T09:02:29.323Z",
                  "lastModifiedAt": "2015-09-15T09:04:06.910Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create DiscountCode",
        "operationId": "POST_projectKey-discount-codes",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "code": "SAVE10",
                "name": {
                  "en": "Save10"
                },
                "cartDiscounts": [
                  {
                    "typeId": "cart-discount",
                    "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                  }
                ],
                "isActive": true,
                "cartPredicate": "1=1"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/DiscountCodeDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "DiscountCode",
      "x-annotation-deleteable": "DiscountCode",
      "x-annotation-createable": "DiscountCodeDraft"
    },
    "/{projectKey}/discount-codes/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update DiscountCode by ID",
        "operationId": "POST_projectKey-discount-codes-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/DiscountCodeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get DiscountCode by ID",
        "operationId": "GET_projectKey-discount-codes-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete DiscountCode by ID",
        "operationId": "DELETE_projectKey-discount-codes-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/inventory": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query inventory",
        "operationId": "GET_projectKey-inventory",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                  "version": 1,
                  "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                  "quantityOnStock": 4,
                  "availableQuantity": 4,
                  "createdAt": "2015-03-11T13:36:20.720Z",
                  "lastModifiedAt": "2015-03-11T13:36:20.720Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create InventoryEntry",
        "operationId": "POST_projectKey-inventory",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                "quantityOnStock": 4,
                "availableQuantity": 4
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/InventoryEntryDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "InventoryEntry",
      "x-annotation-deleteable": "InventoryEntry",
      "x-annotation-createable": "InventoryEntryDraft"
    },
    "/{projectKey}/inventory/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update InventoryEntry by ID",
        "operationId": "POST_projectKey-inventory-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addQuantity",
                    "quantity": 4
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/InventoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get InventoryEntry by ID",
        "operationId": "GET_projectKey-inventory-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete InventoryEntry by ID",
        "operationId": "DELETE_projectKey-inventory-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/orders": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query orders",
        "operationId": "GET_projectKey-orders",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Order",
        "operationId": "POST_projectKey-orders",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/OrderFromCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Order",
      "x-annotation-deleteable": "Order",
      "x-annotation-createable": "OrderFromCartDraft"
    },
    "/{projectKey}/orders/order-number={orderNumber}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Order by orderNumber",
        "operationId": "POST_projectKey-orders-order-number=orderNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Order by orderNumber",
        "operationId": "GET_projectKey-orders-order-number=orderNumber",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Order by orderNumber",
        "operationId": "DELETE_projectKey-orders-order-number=orderNumber",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "orderNumber",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withOrderNumber"
    },
    "/{projectKey}/orders/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Order by ID",
        "operationId": "POST_projectKey-orders-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Order by ID",
        "operationId": "GET_projectKey-orders-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Order by ID",
        "operationId": "DELETE_projectKey-orders-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/orders/import": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create an Order by Import",
        "operationId": "POST_projectKey-orders-import",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "orderNumber": "100000001",
                "totalPrice": {
                  "centAmount": 1000,
                  "currencyCode": "EUR"
                }
              },
              "schema": {
                "title": "application/json",
                "includePath": "resources/orders.raml",
                "$ref": "#/components/schemas/OrderImportDraft"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/products": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query products",
        "operationId": "GET_projectKey-products",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://sphere.io/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://sphere.io/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Product",
        "operationId": "POST_projectKey-products",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "categories": [
                  {
                    "typeId": "category",
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919"
                  }
                ],
                "name": {
                  "en": "Some Product"
                },
                "slug": {
                  "en": "product_slug_<random-uuid>"
                },
                "masterVariant": {
                  "sku": "SKU-1",
                  "prices": [
                    {
                      "value": {
                        "currencyCode": "EUR",
                        "centAmount": 4200
                      }
                    }
                  ],
                  "images": [
                    {
                      "url": "http://my.custom.cdn.net/master.png",
                      "label": "Master Image",
                      "dimensions": {
                        "w": 303,
                        "h": 197
                      }
                    }
                  ]
                },
                "variants": [
                  {
                    "images": [
                      {
                        "url": "http://my.custom.cdn.net/variant.png",
                        "label": "Variant Image",
                        "dimensions": {
                          "w": 303,
                          "h": 197
                        }
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ProductDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Product",
      "x-annotation-deleteable": "Product",
      "x-annotation-createable": "ProductDraft"
    },
    "/{projectKey}/products/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Product by key",
        "operationId": "POST_projectKey-products-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 2,
                "actions": [
                  {
                    "action": "setDescription",
                    "description": {
                      "en": "The best product ever!"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Product by key",
        "operationId": "GET_projectKey-products-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Product by key",
        "operationId": "DELETE_projectKey-products-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/products/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Product by ID",
        "operationId": "POST_projectKey-products-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 2,
                "actions": [
                  {
                    "action": "setDescription",
                    "description": {
                      "en": "The best product ever!"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Product by ID",
        "operationId": "GET_projectKey-products-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Product by ID",
        "operationId": "DELETE_projectKey-products-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/products/{ID}/images": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://sphere.io/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://sphere.io/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "description": "Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.\n",
        "operationId": "POST_projectKey-products-ID-images",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/products.raml",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "image/jpeg",
                "image/png",
                "image/gif"
              ],
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "staged",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/payments": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query payments",
        "operationId": "GET_projectKey-payments",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Payment",
        "operationId": "POST_projectKey-payments",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "externalId": "123456",
                "interfaceId": "789011",
                "amountPlanned": {
                  "currencyCode": "USD",
                  "centAmount": 1000
                },
                "paymentMethodInfo": {
                  "paymentInterface": "STRIPE",
                  "method": "CREDIT_CARD",
                  "name": {
                    "en": "Credit Card"
                  }
                },
                "transactions": [
                  {
                    "timestamp": "2015-10-20T08:54:24.000Z",
                    "type": "Charge",
                    "amount": {
                      "currencyCode": "USD",
                      "centAmount": 1000
                    },
                    "state": "Pending"
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/PaymentDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Payment",
      "x-annotation-deleteable": "Payment",
      "x-annotation-createable": "PaymentDraft"
    },
    "/{projectKey}/payments/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Payment by key",
        "operationId": "POST_projectKey-payments-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setInterfaceId",
                    "interfaceId": "12334567890123456"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Payment by key",
        "operationId": "GET_projectKey-payments-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Payment by key",
        "operationId": "DELETE_projectKey-payments-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/payments/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Payment by ID",
        "operationId": "POST_projectKey-payments-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setInterfaceId",
                    "interfaceId": "12334567890123456"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Payment by ID",
        "operationId": "GET_projectKey-payments-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Payment by ID",
        "operationId": "DELETE_projectKey-payments-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-discounts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query product-discounts",
        "operationId": "GET_projectKey-product-discounts",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ]
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductDiscount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ProductDiscount",
        "operationId": "POST_projectKey-product-discounts",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "value": {
                  "type": "absolute",
                  "money": [
                    {
                      "currencyCode": "EUR",
                      "centAmount": 100
                    }
                  ]
                },
                "predicate": "1=1",
                "name": {
                  "en": "test-discount1"
                },
                "description": {
                  "en": "test-discount1"
                },
                "isActive": false,
                "sortOrder": "0.9534"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ProductDiscountDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ProductDiscount",
      "x-annotation-deleteable": "ProductDiscount",
      "x-annotation-createable": "ProductDiscountDraft"
    },
    "/{projectKey}/product-discounts/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ProductDiscount by ID",
        "operationId": "POST_projectKey-product-discounts-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "absolute",
                      "money": [
                        {
                          "currencyCode": "EUR",
                          "centAmount": 100
                        }
                      ]
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductDiscountUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductDiscount by ID",
        "operationId": "GET_projectKey-product-discounts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ProductDiscount by ID",
        "operationId": "DELETE_projectKey-product-discounts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-discounts/matching": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "POST_projectKey-product-discounts-matching",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "productId": "123456",
                "variantId": 1,
                "staged": false,
                "price": {
                  "value": {
                    "centAmount": 100,
                    "currencyCode": "EUR"
                  }
                }
              },
              "schema": {
                "title": "application/json",
                "includePath": "resources/product-discounts.raml",
                "$ref": "#/components/schemas/ProductDiscountMatchQuery"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-types": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query product-types",
        "operationId": "GET_projectKey-product-types",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ProductType",
        "operationId": "POST_projectKey-product-types",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "test_product_type",
                "description": "Test product type.",
                "attributes": [
                  {
                    "type": {
                      "name": "text"
                    },
                    "isSearchable": false,
                    "inputHint": "SingleLine",
                    "name": "size",
                    "label": {
                      "en": "The right size is important."
                    },
                    "isRequired": false,
                    "attributeConstraint": "CombinationUnique"
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ProductTypeDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ProductType",
      "x-annotation-deleteable": "ProductType",
      "x-annotation-createable": "ProductTypeDraft"
    },
    "/{projectKey}/product-types/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ProductType by key",
        "operationId": "POST_projectKey-product-types-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "new-product-type-name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductTypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductType by key",
        "operationId": "GET_projectKey-product-types-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ProductType by key",
        "operationId": "DELETE_projectKey-product-types-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/product-types/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ProductType by ID",
        "operationId": "POST_projectKey-product-types-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "new-product-type-name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductTypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductType by ID",
        "operationId": "GET_projectKey-product-types-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ProductType by ID",
        "operationId": "DELETE_projectKey-product-types-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/shipping-methods": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query shipping-methods",
        "operationId": "GET_projectKey-shipping-methods",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "query",
            "description": "Get ShippingMethods for a Cart",
            "schema": {
              "includePath": "resources/shipping-methods.raml",
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Get ShippingMethods for a Location",
            "schema": {
              "includePath": "resources/shipping-methods.raml",
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Get ShippingMethods for a Location",
            "schema": {
              "includePath": "resources/shipping-methods.raml",
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Get ShippingMethods for a Location",
            "schema": {
              "includePath": "resources/shipping-methods.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ShippingMethod",
        "operationId": "POST_projectKey-shipping-methods",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "DHL",
                "description": "Standard delivery",
                "taxCategory": {
                  "typeId": "tax-category",
                  "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                },
                "zoneRates": [
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "currencyCode": "EUR",
                          "centAmount": 570
                        }
                      }
                    ]
                  },
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "currencyCode": "USD",
                          "centAmount": 990
                        }
                      }
                    ]
                  }
                ],
                "isDefault": false
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ShippingMethodDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ShippingMethod",
      "x-annotation-deleteable": "ShippingMethod",
      "x-annotation-createable": "ShippingMethodDraft"
    },
    "/{projectKey}/shipping-methods/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ShippingMethod by key",
        "operationId": "POST_projectKey-shipping-methods-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ShippingMethod by key",
        "operationId": "GET_projectKey-shipping-methods-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShippingMethod by key",
        "operationId": "DELETE_projectKey-shipping-methods-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/shipping-methods/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ShippingMethod by ID",
        "operationId": "POST_projectKey-shipping-methods-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ShippingMethod by ID",
        "operationId": "GET_projectKey-shipping-methods-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShippingMethod by ID",
        "operationId": "DELETE_projectKey-shipping-methods-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/reviews": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query reviews",
        "operationId": "GET_projectKey-reviews",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Review",
        "operationId": "POST_projectKey-reviews",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "authorName": "John Doe",
                "title": "Incredible",
                "text": "Best product ever",
                "rating": 5,
                "target": {
                  "typeId": "product",
                  "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                }
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ReviewDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Review",
      "x-annotation-deleteable": "Review",
      "x-annotation-createable": "ReviewDraft"
    },
    "/{projectKey}/reviews/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Review by key",
        "operationId": "POST_projectKey-reviews-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setAuthorName",
                    "authorName": "John Doe"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ReviewUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Review by key",
        "operationId": "GET_projectKey-reviews-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Review by key",
        "operationId": "DELETE_projectKey-reviews-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/reviews/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Review by ID",
        "operationId": "POST_projectKey-reviews-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setAuthorName",
                    "authorName": "John Doe"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ReviewUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Review by ID",
        "operationId": "GET_projectKey-reviews-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Review by ID",
        "operationId": "DELETE_projectKey-reviews-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/shopping-lists": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query shopping-lists",
        "operationId": "GET_projectKey-shopping-lists",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ShoppingList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ShoppingList",
        "operationId": "POST_projectKey-shopping-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": {
                  "en": "test"
                },
                "key": "test"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ShoppingListDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "ShoppingList",
      "x-annotation-deleteable": "ShoppingList",
      "x-annotation-createable": "ShoppingListDraft"
    },
    "/{projectKey}/shopping-lists/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ShoppingList by key",
        "operationId": "POST_projectKey-shopping-lists-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShoppingListUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ShoppingList by key",
        "operationId": "GET_projectKey-shopping-lists-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShoppingList by key",
        "operationId": "DELETE_projectKey-shopping-lists-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/shopping-lists/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ShoppingList by ID",
        "operationId": "POST_projectKey-shopping-lists-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShoppingListUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ShoppingList by ID",
        "operationId": "GET_projectKey-shopping-lists-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShoppingList by ID",
        "operationId": "DELETE_projectKey-shopping-lists-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/states": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query states",
        "operationId": "GET_projectKey-states",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create State",
        "operationId": "POST_projectKey-states",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "test-state",
                "type": "ProductState",
                "roles": [],
                "initial": true
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/StateDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "State",
      "x-annotation-deleteable": "State",
      "x-annotation-createable": "StateDraft"
    },
    "/{projectKey}/states/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update State by ID",
        "operationId": "POST_projectKey-states-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/StateUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get State by ID",
        "operationId": "GET_projectKey-states-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete State by ID",
        "operationId": "DELETE_projectKey-states-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/subscriptions": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query subscriptions",
        "operationId": "GET_projectKey-subscriptions",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0
                },
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Subscription",
        "operationId": "POST_projectKey-subscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "destination": {
                  "type": "IronMQ",
                  "uri": "https://queue-uri"
                },
                "messages": [
                  {
                    "resourceTypeId": "product",
                    "types": []
                  }
                ],
                "key": "test-queue"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/SubscriptionDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Subscription",
      "x-annotation-deleteable": "Subscription",
      "x-annotation-createable": "SubscriptionDraft"
    },
    "/{projectKey}/subscriptions/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Subscription by key",
        "operationId": "POST_projectKey-subscriptions-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "queue-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Subscription by key",
        "operationId": "GET_projectKey-subscriptions-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Subscription by key",
        "operationId": "DELETE_projectKey-subscriptions-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/subscriptions/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Subscription by ID",
        "operationId": "POST_projectKey-subscriptions-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "queue-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Subscription by ID",
        "operationId": "GET_projectKey-subscriptions-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Subscription by ID",
        "operationId": "DELETE_projectKey-subscriptions-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/tax-categories": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query tax-categories",
        "operationId": "GET_projectKey-tax-categories",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create TaxCategory",
        "operationId": "POST_projectKey-tax-categories",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "test-tax-category",
                "rates": [
                  {
                    "name": "test-tax-category",
                    "amount": 0.2,
                    "includedInPrice": true,
                    "country": "DE"
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/TaxCategoryDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "TaxCategory",
      "x-annotation-deleteable": "TaxCategory",
      "x-annotation-createable": "TaxCategoryDraft"
    },
    "/{projectKey}/tax-categories/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update TaxCategory by ID",
        "operationId": "POST_projectKey-tax-categories-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/TaxCategoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get TaxCategory by ID",
        "operationId": "GET_projectKey-tax-categories-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete TaxCategory by ID",
        "operationId": "DELETE_projectKey-tax-categories-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/types": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query types",
        "operationId": "GET_projectKey-types",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Type"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Type",
        "operationId": "POST_projectKey-types",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "lineitemtype",
                "name": {
                  "en": "lineitem"
                },
                "description": {
                  "en": "description"
                },
                "resourceTypeIds": [
                  "line-item"
                ],
                "fieldDefinitions": [
                  {
                    "name": "offer_name",
                    "label": {
                      "en": "offer_name"
                    },
                    "required": false,
                    "type": {
                      "name": "String"
                    },
                    "inputHint": "SingleLine"
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/TypeDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Type",
      "x-annotation-deleteable": "Type",
      "x-annotation-createable": "TypeDraft"
    },
    "/{projectKey}/types/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Type by key",
        "operationId": "POST_projectKey-types-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/TypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Type by key",
        "operationId": "GET_projectKey-types-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Type by key",
        "operationId": "DELETE_projectKey-types-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/types/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Type by ID",
        "operationId": "POST_projectKey-types-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/TypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Type by ID",
        "operationId": "GET_projectKey-types-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Type by ID",
        "operationId": "DELETE_projectKey-types-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/zones": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query zones",
        "operationId": "GET_projectKey-zones",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Zone",
        "operationId": "POST_projectKey-zones",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "US",
                "locations": [
                  {
                    "country": "US"
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ZoneDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Zone",
      "x-annotation-deleteable": "Zone",
      "x-annotation-createable": "ZoneDraft"
    },
    "/{projectKey}/zones/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Zone by ID",
        "operationId": "POST_projectKey-zones-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ZoneUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Zone by ID",
        "operationId": "GET_projectKey-zones-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Zone by ID",
        "operationId": "DELETE_projectKey-zones-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/extensions": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query extensions",
        "operationId": "GET_projectKey-extensions",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                },
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Extension",
        "operationId": "POST_projectKey-extensions",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "destination": {
                  "type": "HTTP",
                  "url": "https://example.azurewebsites.net/api/extension",
                  "authentication": {
                    "type": "AzureFunctions",
                    "key": "some-azure-function-code"
                  }
                },
                "triggers": [
                  {
                    "resourceTypeId": "cart",
                    "actions": [
                      "Create",
                      "Update"
                    ]
                  }
                ],
                "key": "my-extension"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/ExtensionDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-updateable": "Extension",
      "x-annotation-deleteable": "Extension",
      "x-annotation-createable": "ExtensionDraft"
    },
    "/{projectKey}/extensions/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Extension by key",
        "operationId": "POST_projectKey-extensions-key=key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "my-new-extension-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ExtensionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Extension by key",
        "operationId": "GET_projectKey-extensions-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Extension by key",
        "operationId": "DELETE_projectKey-extensions-key=key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/extensions/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Extension by ID",
        "operationId": "POST_projectKey-extensions-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "my-new-extension-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ExtensionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Extension by ID",
        "operationId": "GET_projectKey-extensions-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Extension by ID",
        "operationId": "DELETE_projectKey-extensions-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/custom-objects": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query custom-objects",
        "operationId": "GET_projectKey-custom-objects",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                  "version": 2,
                  "container": "test-container",
                  "key": "test-key",
                  "value": "test-value",
                  "createdAt": "2016-02-18T10:36:29.468Z",
                  "lastModifiedAt": "2016-02-18T10:36:29.571Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomObject"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create CustomObject",
        "operationId": "POST_projectKey-custom-objects",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "container": "test-container",
                "key": "test-key",
                "value": "test-value"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/CustomObjectDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/custom-objects/{container}/{key}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CustomObject by key",
        "operationId": "GET_projectKey-custom-objects-container-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CustomObject by key",
        "operationId": "DELETE_projectKey-custom-objects-container-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "container",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/custom-objects.raml",
            "type": "string"
          },
          "description": "container"
        },
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "key"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withContainerAndKey"
    },
    "/{projectKey}/custom-objects/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CustomObject by container",
        "operationId": "GET_projectKey-custom-objects-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CustomObject by container",
        "operationId": "DELETE_projectKey-custom-objects-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/custom-objects.raml",
            "type": "string"
          },
          "description": "ID"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/graphql": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Execute a GraphQL query",
        "operationId": "POST_projectKey-graphql",
        "requestBody": {
          "content": {
            "application/graphql": {
              "example": "query Sphere {\n    products(limit: 1) {\n        ...StagedProduct,\n        ...CurrentProduct\n    }\n}\n\nfragment Product on ProductData {\n    skus, name(locale: \"en\")\n}\n\nfragment StagedProduct on ProductQueryResult {\n    results {\n        id, masterData { staged { ...Product } }\n    }\n}\n\nfragment CurrentProduct on ProductQueryResult {\n    results {\n        id, masterData { current { ...Product } }\n    }\n}\n",
              "schema": {
                "title": "application/graphql",
                "includePath": "resources/graphql.raml",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/login": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Authenticate Customer (Sign In)",
        "operationId": "POST_projectKey-login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/login.raml",
                "$ref": "#/components/schemas/CustomerSignin"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/messages": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query messages",
        "operationId": "GET_projectKey-messages",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/messages/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Message by ID",
        "operationId": "GET_projectKey-messages-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "ID"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-projections": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query product-projections",
        "operationId": "GET_projectKey-product-projections",
        "parameters": [
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-projections/search": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Search Product Projection",
        "operationId": "POST_projectKey-product-projections-search",
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Search Product Projection",
        "operationId": "GET_projectKey-product-projections-search",
        "parameters": [
          {
            "name": "fuzzy",
            "in": "query",
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fuzzyLevel",
            "in": "query",
            "description": "Provide explicitly the fuzzy level desired if fuzzy is enabled. This value can not be higher than the one\nchosen by the platform by default.\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.facets",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "facet",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "/text\\.[a-z]{2}(-[A-Z]{2})?/",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-annotation-placeholderParam": {
              "paramName": "text",
              "template": "text.<locale>",
              "placeholder": "locale"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-projections/suggest": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "GET_projectKey-product-projections-suggest",
        "parameters": [
          {
            "name": "fuzzy",
            "in": "query",
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "/searchKeywords\\.[a-z]{2}(-[A-Z]{2})?/",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-annotation-placeholderParam": {
              "paramName": "searchKeywords",
              "template": "searchKeywords.<locale>",
              "placeholder": "locale"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/product-projections/key={key}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductProjection by key",
        "operationId": "GET_projectKey-product-projections-key=key",
        "parameters": [
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "key"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/product-projections/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductProjection by ID",
        "operationId": "GET_projectKey-product-projections-ID",
        "parameters": [
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "ID"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/me": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "GET_projectKey-me",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create a customer",
        "operationId": "POST_projectKey-me",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete a Customer",
        "operationId": "DELETE_projectKey-me",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/email": {
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/email/confirm": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "POST_projectKey-me-email-confirm",
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/password": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "POST_projectKey-me-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/me.raml",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/password/reset": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "POST_projectKey-me-password-reset",
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/signup": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "POST_projectKey-me-signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/MyCustomerDraft"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/login": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "POST_projectKey-me-login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "application/json",
                "includePath": "resources/me.raml",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/active-cart": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "GET_projectKey-me-active-cart",
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/carts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query carts",
        "operationId": "GET_projectKey-me-carts",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Cart",
        "operationId": "POST_projectKey-me-carts",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currency": "EUR"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/MyCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/carts/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Cart by ID",
        "operationId": "GET_projectKey-me-carts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Cart by ID",
        "operationId": "POST_projectKey-me-carts-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Cart by ID",
        "operationId": "DELETE_projectKey-me-carts-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "ID"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/me/orders": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query orders",
        "operationId": "GET_projectKey-me-orders",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Order",
        "operationId": "POST_projectKey-me-orders",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/MyOrderFromCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ]
    },
    "/{projectKey}/me/orders/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Order by ID",
        "operationId": "GET_projectKey-me-orders-ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Order by ID",
        "operationId": "POST_projectKey-me-orders-ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "title": "application/json",
                "includePath": "api.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          },
          {
            "oauth_2_0": []
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "ID"
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          },
          "description": "projectKey"
        }
      ],
      "x-annotation-methodName": "withId"
    }
  },
  "components": {
    "schemas": {
      "PagedQueryResponse": {
        "title": "PagedQueryResponse",
        "includePath": "types/PagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "count": {
            "title": "count",
            "format": "int64",
            "type": "number"
          },
          "total": {
            "title": "total",
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "title": "offset",
            "format": "int64",
            "type": "number"
          },
          "results": {
            "title": "results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        },
        "required": [
          "count",
          "offset",
          "results"
        ]
      },
      "Update": {
        "title": "Update",
        "includePath": "types/Update.raml",
        "type": "object",
        "properties": {
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "title": "actions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ]
      },
      "UpdateAction": {
        "title": "UpdateAction",
        "includePath": "types/UpdateAction.raml",
        "type": "object",
        "properties": {
          "action": {
            "title": "action",
            "type": "string"
          }
        },
        "required": [
          "action"
        ]
      },
      "CartDiscount": {
        "title": "CartDiscount",
        "includePath": "types/cart-discount/CartDiscount.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/CartDiscountValue",
                "x-annotation-hasSimpleUpdateAction": "changeValue"
              },
              "cartPredicate": {
                "title": "cartPredicate",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeCartPredicate"
              },
              "target": {
                "title": "target",
                "$ref": "#/components/schemas/CartDiscountTarget"
              },
              "sortOrder": {
                "title": "sortOrder",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeSortOrder"
              },
              "isActive": {
                "title": "isActive",
                "type": "boolean",
                "x-annotation-hasUpdateAction": {
                  "action": "changeIsActive",
                  "docsAnchor": "change-isactive"
                }
              },
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time",
                "x-annotation-hasSimpleUpdateAction": "setValidFrom"
              },
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time",
                "x-annotation-hasSimpleUpdateAction": "setValidUntil"
              },
              "requiresDiscountCode": {
                "title": "requiresDiscountCode",
                "type": "boolean",
                "x-annotation-hasUpdateAction": {
                  "action": "changeRequiresDiscountCode",
                  "docsAnchor": "change-requires-discountcode"
                }
              },
              "references": {
                "title": "references",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                }
              },
              "stackingMode": {
                "title": "stackingMode",
                "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.\n",
                "$ref": "#/components/schemas/StackingMode",
                "x-annotation-hasSimpleUpdateAction": "changeStackingMode"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount",
        "x-annotation-updateType": "CartDiscountUpdate",
        "x-annotation-hasUpdateActions": [
          {
            "action": "setValidFromAndUntil",
            "fields": {
              "validFrom?": {
                "type": "datetime"
              },
              "validUntil?": {
                "type": "datetime"
              }
            }
          }
        ],
        "type": "string"
      },
      "CartDiscountCustomLineItemsTarget": {
        "title": "CartDiscountCustomLineItemsTarget",
        "includePath": "types/cart-discount/CartDiscountCustomLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "title": "predicate",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountDraft": {
        "title": "CartDiscountDraft",
        "includePath": "types/cart-discount/CartDiscountDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/CartDiscountValue"
          },
          "cartPredicate": {
            "title": "cartPredicate",
            "type": "string"
          },
          "target": {
            "title": "target",
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          "sortOrder": {
            "title": "sortOrder",
            "type": "string"
          },
          "isActive": {
            "title": "isActive",
            "type": "boolean"
          },
          "validFrom": {
            "title": "validFrom",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "title": "validUntil",
            "type": "string",
            "format": "date-time"
          },
          "requiresDiscountCode": {
            "title": "requiresDiscountCode",
            "type": "boolean"
          },
          "stackingMode": {
            "title": "stackingMode",
            "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.\n",
            "$ref": "#/components/schemas/StackingMode"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          }
        },
        "required": [
          "name",
          "value",
          "cartPredicate",
          "sortOrder",
          "requiresDiscountCode"
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
      },
      "CartDiscountLineItemsTarget": {
        "title": "CartDiscountLineItemsTarget",
        "includePath": "types/cart-discount/CartDiscountLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "title": "predicate",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountPagedQueryResponse": {
        "title": "CartDiscountPagedQueryResponse",
        "includePath": "types/cart-discount/CartDiscountPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscount"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountReference": {
        "title": "CartDiscountReference",
        "includePath": "types/cart-discount/CartDiscountReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/CartDiscount"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount",
        "type": "string"
      },
      "CartDiscountShippingCostTarget": {
        "title": "CartDiscountShippingCostTarget",
        "includePath": "types/cart-discount/CartDiscountShippingCostTarget.raml",
        "$ref": "#/components/schemas/CartDiscountTarget",
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountTarget": {
        "title": "CartDiscountTarget",
        "includePath": "types/cart-discount/CartDiscountTarget.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscounttarget"
      },
      "CartDiscountUpdate": {
        "title": "CartDiscountUpdate",
        "includePath": "types/cart-discount/CartDiscountUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountUpdateAction": {
        "title": "CartDiscountUpdateAction",
        "includePath": "types/cart-discount/CartDiscountUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountValue": {
        "title": "CartDiscountValue",
        "includePath": "types/cart-discount/CartDiscountValue.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscountvalue"
      },
      "CartDiscountValueAbsolute": {
        "title": "CartDiscountValueAbsolute",
        "includePath": "types/cart-discount/CartDiscountValueAbsolute.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValue"
          },
          {
            "properties": {
              "money": {
                "title": "money",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Money"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountValueGiftLineItem": {
        "title": "CartDiscountValueGiftLineItem",
        "includePath": "types/cart-discount/CartDiscountValueGiftLineItem.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValue"
          },
          {
            "properties": {
              "product": {
                "title": "product",
                "$ref": "#/components/schemas/ProductReference"
              },
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "supplyChannel": {
                "title": "supplyChannel",
                "$ref": "#/components/schemas/ChannelReference"
              },
              "distributionChannel": {
                "title": "distributionChannel",
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountValueRelative": {
        "title": "CartDiscountValueRelative",
        "includePath": "types/cart-discount/CartDiscountValueRelative.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValue"
          },
          {
            "properties": {
              "permyriad": {
                "title": "permyriad",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "MultiBuyCustomLineItemsTarget": {
        "title": "MultiBuyCustomLineItemsTarget",
        "includePath": "types/cart-discount/MultiBuyCustomLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "title": "predicate",
                "description": "A valid custom line item target predicate. The discount will be applied to custom line items that are\nmatched by the predicate.\n",
                "type": "string"
              },
              "triggerQuantity": {
                "title": "triggerQuantity",
                "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
                "type": "integer"
              },
              "discountedQuantity": {
                "title": "discountedQuantity",
                "description": "Quantity of line items that are discounted per application of this discount.",
                "type": "integer"
              },
              "maxOccurrence": {
                "title": "maxOccurrence",
                "description": "Maximum number of applications of this discount.",
                "type": "integer"
              },
              "selectionMode": {
                "title": "selectionMode",
                "$ref": "#/components/schemas/SelectionMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "MultiBuyLineItemsTarget": {
        "title": "MultiBuyLineItemsTarget",
        "includePath": "types/cart-discount/MultiBuyLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "title": "predicate",
                "description": "A valid line item target predicate. The discount will be applied to line items that are matched by the predicate.\n",
                "type": "string"
              },
              "triggerQuantity": {
                "title": "triggerQuantity",
                "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
                "type": "integer"
              },
              "discountedQuantity": {
                "title": "discountedQuantity",
                "description": "Quantity of line items that are discounted per application of this discount.",
                "type": "integer"
              },
              "maxOccurrence": {
                "title": "maxOccurrence",
                "description": "Maximum number of applications of this discount.",
                "type": "integer"
              },
              "selectionMode": {
                "title": "selectionMode",
                "$ref": "#/components/schemas/SelectionMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "SelectionMode": {
        "title": "SelectionMode",
        "enum": [
          "Cheapest",
          "MostExpensive"
        ],
        "includePath": "types/cart-discount/SelectionMode.raml",
        "type": "string",
        "x-annotation-package": "CartDiscount"
      },
      "StackingMode": {
        "title": "StackingMode",
        "enum": [
          "Stacking",
          "StopAfterThisDiscount"
        ],
        "includePath": "types/cart-discount/StackingMode.raml",
        "type": "string",
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountChangeCartPredicateAction": {
        "title": "CartDiscountChangeCartPredicateAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeCartPredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "cartPredicate": {
                "title": "cartPredicate",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-cart-predicate",
        "type": "string"
      },
      "CartDiscountChangeIsActiveAction": {
        "title": "CartDiscountChangeIsActiveAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeIsActiveAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "isActive": {
                "title": "isActive",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-isactive",
        "type": "string"
      },
      "CartDiscountChangeNameAction": {
        "title": "CartDiscountChangeNameAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-name",
        "type": "string"
      },
      "CartDiscountChangeRequiresDiscountCodeAction": {
        "title": "CartDiscountChangeRequiresDiscountCodeAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeRequiresDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "requiresDiscountCode": {
                "title": "requiresDiscountCode",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-requires-discountcode",
        "type": "string"
      },
      "CartDiscountChangeSortOrderAction": {
        "title": "CartDiscountChangeSortOrderAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeSortOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "sortOrder": {
                "title": "sortOrder",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-sort-order",
        "type": "string"
      },
      "CartDiscountChangeStackingModeAction": {
        "title": "CartDiscountChangeStackingModeAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeStackingModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "stackingMode": {
                "title": "stackingMode",
                "$ref": "#/components/schemas/StackingMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-stacking-mode",
        "type": "string"
      },
      "CartDiscountChangeTargetAction": {
        "title": "CartDiscountChangeTargetAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeTargetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "target": {
                "title": "target",
                "$ref": "#/components/schemas/CartDiscountTarget"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-target",
        "x-annotation-postman-example": "{\n  \"action\": \"changeTarget\",\n  \"target\": {\n    \"type\": \"lineItems\",\n    \"predicate\": \"sku = \\\"mySKU\\\"\"\n  }\n}\n",
        "type": "string"
      },
      "CartDiscountChangeValueAction": {
        "title": "CartDiscountChangeValueAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/CartDiscountValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-value",
        "type": "string"
      },
      "CartDiscountSetCustomFieldAction": {
        "title": "CartDiscountSetCustomFieldAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-postman-example": "{\n  \"action\": \"setCustomField\",\n  \"name\": \"StringCustomField\",\n  \"value\": \"myValue\"\n}\n",
        "type": "string"
      },
      "CartDiscountSetCustomTypeAction": {
        "title": "CartDiscountSetCustomTypeAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "fields": {
                "title": "fields",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-postman-example": "{\n  \"action\": \"setCustomType\",\n  \"type\": {\n    \"id\": \"089eaa2e-b54b-42d7-811e-23e180fe8dcc\",\n    \"typeId\": \"type\"\n  }\n}\n",
        "type": "string"
      },
      "CartDiscountSetDescriptionAction": {
        "title": "CartDiscountSetDescriptionAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-description",
        "type": "string"
      },
      "CartDiscountSetValidFromAction": {
        "title": "CartDiscountSetValidFromAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetValidFromAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-from",
        "type": "string"
      },
      "CartDiscountSetValidFromAndUntilAction": {
        "title": "CartDiscountSetValidFromAndUntilAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetValidFromAndUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-from-and-until",
        "type": "string"
      },
      "CartDiscountSetValidUntilAction": {
        "title": "CartDiscountSetValidUntilAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetValidUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-until",
        "type": "string"
      },
      "Cart": {
        "title": "Cart",
        "includePath": "types/cart/Cart.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "customerId": {
                "title": "customerId",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setCustomerId"
              },
              "customerEmail": {
                "title": "customerEmail",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "setCustomerEmail",
                  "fields": {
                    "email": "string"
                  }
                }
              },
              "anonymousId": {
                "title": "anonymousId",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setAnonymousId"
              },
              "lineItems": {
                "title": "lineItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addLineItem",
                    "docsAnchor": "add-lineitem",
                    "fields": {
                      "custom?": {
                        "type": "CustomFieldsDraft"
                      },
                      "distributionChannel?": {
                        "type": "ChannelReference"
                      },
                      "externalTaxRate?": {
                        "type": "ExternalTaxRateDraft"
                      },
                      "productId?": {
                        "type": "string"
                      },
                      "variantId?": {
                        "type": "number",
                        "format": "int64"
                      },
                      "sku?": {
                        "type": "string"
                      },
                      "quantity?": {
                        "type": "number",
                        "default": 1
                      },
                      "supplyChannel?": {
                        "type": "ChannelReference"
                      },
                      "externalPrice?": {
                        "type": "Money"
                      },
                      "externalTotalPrice?": {
                        "type": "ExternalLineItemTotalPrice"
                      },
                      "shippingDetails?": {
                        "type": "ItemShippingDetailsDraft"
                      }
                    }
                  },
                  {
                    "action": "removeLineItem",
                    "docsAnchor": "remove-lineitem",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "quantity?": {
                        "type": "number"
                      },
                      "externalPrice?": {
                        "type": "Money"
                      },
                      "externalTotalPrice?": {
                        "type": "ExternalLineItemTotalPrice"
                      },
                      "shippingDetailsToRemove?": {
                        "type": "ItemShippingDetailsDraft"
                      }
                    }
                  },
                  {
                    "action": "changeLineItemQuantity",
                    "docsAnchor": "change-lineitem-quantity",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "number"
                      },
                      "externalPrice?": {
                        "type": "Money"
                      },
                      "externalTotalPrice?": {
                        "type": "ExternalLineItemTotalPrice"
                      }
                    }
                  },
                  {
                    "action": "setLineItemTaxRate",
                    "docsAnchor": "set-lineitem-taxrate",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "externalTaxRate?": {
                        "type": "ExternalTaxRateDraft"
                      }
                    }
                  },
                  {
                    "action": "setLineItemTaxAmount",
                    "docsAnchor": "set-lineitem-taxamount",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "externalTaxAmount?": {
                        "type": "ExternalTaxAmountDraft"
                      }
                    }
                  },
                  {
                    "action": "setLineItemTotalPrice",
                    "docsAnchor": "set-lineitem-totalprice",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "externalTotalPrice?": {
                        "type": "ExternalLineItemTotalPrice"
                      }
                    }
                  },
                  {
                    "action": "setLineItemPrice",
                    "docsAnchor": "set-lineitem-price",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "externalPrice?": {
                        "type": "Money"
                      }
                    }
                  },
                  {
                    "action": "setLineItemCustomType",
                    "docsAnchor": "set-lineitem-custom-type",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "type?": {
                        "type": "TypeReference"
                      },
                      "fields?": {
                        "type": "FieldContainer"
                      }
                    }
                  },
                  {
                    "action": "setLineItemCustomField",
                    "docsAnchor": "set-lineitem-customfield",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value?": {
                        "type": "any"
                      }
                    }
                  },
                  {
                    "action": "applyDeltaToLineItemShippingDetailsTargets",
                    "docsAnchor": "apply-deltatolineitemshippingdetailstargets",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "targetsDelta": {
                        "type": "ItemShippingTarget[]"
                      }
                    }
                  },
                  {
                    "action": "setLineItemShippingDetails",
                    "docsAnchor": "set-lineitemshippingdetails",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "shippingDetails?": {
                        "type": "ItemShippingDetailsDraft"
                      }
                    }
                  }
                ]
              },
              "customLineItems": {
                "title": "customLineItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomLineItem"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addCustomLineItem",
                    "docsAnchor": "add-customlineitem",
                    "fields": {
                      "money": {
                        "type": "Money"
                      },
                      "name": {
                        "type": "LocalizedString"
                      },
                      "quantity": {
                        "type": "number"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "taxCategory?": {
                        "type": "TaxCategoryReference"
                      },
                      "custom?": {
                        "type": "CustomFieldsDraft"
                      },
                      "externalTaxRate?": {
                        "type": "ExternalTaxRateDraft"
                      }
                    }
                  },
                  {
                    "action": "removeCustomLineItem",
                    "docsAnchor": "remove-customlineitem",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "action": "changeCustomLineItemQuantity",
                    "docsAnchor": "change-customlineitem-quantity",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "number"
                      }
                    }
                  },
                  {
                    "action": "changeCustomLineItemMoney",
                    "docsAnchor": "change-customlineitem-money",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "money": {
                        "type": "Money"
                      }
                    }
                  },
                  {
                    "action": "setCustomLineItemCustomType",
                    "docsAnchor": "set-customlineitem-custom-type",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "type?": {
                        "type": "TypeReference"
                      },
                      "fields?": {
                        "type": "FieldContainer"
                      }
                    }
                  },
                  {
                    "action": "setCustomLineItemCustomField",
                    "docsAnchor": "set-customlineitem-customfield",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value?": {
                        "type": "any"
                      }
                    }
                  },
                  {
                    "action": "setCustomLineItemTaxRate",
                    "docsAnchor": "set-customlineitem-taxrate",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "externalTaxRate?": {
                        "type": "ExternalTaxRateDraft"
                      }
                    }
                  },
                  {
                    "action": "setCustomLineItemTaxAmount",
                    "docsAnchor": "set-customlineitem-taxamount",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "externalTaxAmount?": {
                        "type": "ExternalTaxAmountDraft"
                      }
                    }
                  },
                  {
                    "action": "applyDeltaToCustomLineItemShippingDetailsTargets",
                    "docsAnchor": "apply-deltatocustomlineitemshippingdetailstargets",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "targetsDelta": {
                        "type": "ItemShippingTarget[]"
                      }
                    }
                  },
                  {
                    "action": "setCustomLineItemShippingDetails",
                    "docsAnchor": "set-customlineitemshippingdetails",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "shippingDetails?": {
                        "type": "ItemShippingDetailsDraft"
                      }
                    }
                  }
                ]
              },
              "totalPrice": {
                "title": "totalPrice",
                "$ref": "#/components/schemas/TypedMoney"
              },
              "taxedPrice": {
                "title": "taxedPrice",
                "$ref": "#/components/schemas/TaxedPrice",
                "x-annotation-hasUpdateAction": {
                  "action": "setCartTotalTax",
                  "fields": {
                    "externalTotalGross": "Money",
                    "externalTaxPortions?": "TaxPortion[]"
                  }
                }
              },
              "cartState": {
                "title": "cartState",
                "$ref": "#/components/schemas/CartState"
              },
              "shippingAddress": {
                "title": "shippingAddress",
                "$ref": "#/components/schemas/Address",
                "x-annotation-hasUpdateAction": {
                  "action": "setShippingAddress",
                  "fields": {
                    "address?": "Address"
                  }
                }
              },
              "billingAddress": {
                "title": "billingAddress",
                "$ref": "#/components/schemas/Address",
                "x-annotation-hasUpdateAction": {
                  "action": "setBillingAddress",
                  "fields": {
                    "address?": "Address"
                  }
                }
              },
              "inventoryMode": {
                "title": "inventoryMode",
                "$ref": "#/components/schemas/InventoryMode"
              },
              "taxMode": {
                "title": "taxMode",
                "$ref": "#/components/schemas/TaxMode",
                "x-annotation-hasUpdateAction": {
                  "action": "changeTaxMode",
                  "docsAnchor": "change-taxmode"
                }
              },
              "taxRoundingMode": {
                "title": "taxRoundingMode",
                "$ref": "#/components/schemas/RoundingMode",
                "x-annotation-hasUpdateAction": {
                  "action": "changeTaxRoundingMode",
                  "docsAnchor": "change-tax-roundingmode"
                }
              },
              "taxCalculationMode": {
                "title": "taxCalculationMode",
                "$ref": "#/components/schemas/TaxCalculationMode",
                "x-annotation-hasUpdateAction": {
                  "action": "changeTaxCalculationMode",
                  "docsAnchor": "change-taxcalculationmode"
                }
              },
              "customerGroup": {
                "title": "customerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference",
                "x-annotation-hasSimpleUpdateAction": "setCustomerGroup"
              },
              "country": {
                "title": "country",
                "$ref": "#/components/schemas/CountryCode",
                "x-annotation-hasSimpleUpdateAction": "setCountry"
              },
              "shippingInfo": {
                "title": "shippingInfo",
                "$ref": "#/components/schemas/ShippingInfo",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setShippingMethod",
                    "fields": {
                      "shippingMethod?": "TypeReference",
                      "externalTaxRate?": "ExternalTaxRateDraft"
                    }
                  },
                  {
                    "action": "setCustomShippingMethod",
                    "fields": {
                      "shippingMethodName": {
                        "type": "string"
                      },
                      "shippingRate": {
                        "type": "ShippingRateDraft"
                      },
                      "taxCategory?": {
                        "type": "TaxCategoryReference"
                      },
                      "externalTaxRate?": {
                        "type": "ExternalTaxRateDraft"
                      }
                    }
                  },
                  {
                    "action": "setShippingMethodTaxAmount",
                    "docsAnchor": "set-shippingmethod-taxamount",
                    "fields": {
                      "externalTaxAmount?": "ExternalTaxAmountDraft"
                    }
                  },
                  {
                    "action": "setShippingMethodTaxRate",
                    "docsAnchor": "set-shippingmethod-taxrate",
                    "fields": {
                      "externalTaxRate?": "ExternalTaxRateDraft"
                    }
                  }
                ]
              },
              "discountCodes": {
                "title": "discountCodes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCodeInfo"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addDiscountCode",
                    "docsAnchor": "add-discountcode",
                    "fields": {
                      "code": "string"
                    }
                  },
                  {
                    "action": "removeDiscountCode",
                    "docsAnchor": "remove-discountcode",
                    "fields": {
                      "discountCode": "DiscountCodeReference"
                    }
                  }
                ]
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "paymentInfo": {
                "title": "paymentInfo",
                "$ref": "#/components/schemas/PaymentInfo",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addPayment",
                    "fields": {
                      "payment": "PaymentReference"
                    }
                  },
                  {
                    "action": "removePayment",
                    "fields": {
                      "payment": "PaymentReference"
                    }
                  }
                ]
              },
              "locale": {
                "title": "locale",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setLocale"
              },
              "deleteDaysAfterLastModification": {
                "title": "deleteDaysAfterLastModification",
                "type": "integer",
                "x-annotation-hasUpdateAction": {
                  "action": "setDeleteDaysAfterLastModification",
                  "docsAnchor": "set-deletedaysafterlastmodification-beta"
                }
              },
              "refusedGifts": {
                "title": "refusedGifts",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                }
              },
              "origin": {
                "title": "origin",
                "$ref": "#/components/schemas/CartOrigin"
              },
              "shippingRateInput": {
                "title": "shippingRateInput",
                "$ref": "#/components/schemas/ShippingRateInput",
                "x-annotation-hasUpdateAction": {
                  "action": "setShippingRateInput",
                  "fields": {
                    "shippingRateInput?": "ShippingRateInputDraft"
                  }
                }
              },
              "itemShippingAddresses": {
                "title": "itemShippingAddresses",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addItemShippingAddress",
                    "docsAnchor": "add-itemshippingaddress",
                    "fields": {
                      "address": "Address"
                    }
                  },
                  {
                    "action": "removeItemShippingAddress",
                    "docsAnchor": "remove-itemshippingaddress",
                    "fields": {
                      "addressKey": "string"
                    }
                  },
                  {
                    "action": "updateItemShippingAddress",
                    "docsAnchor": "update-itemshippingaddress",
                    "fields": {
                      "address": "Address"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart",
        "x-annotation-updateType": "CartUpdate",
        "x-annotation-hasUpdateActions": [
          {
            "action": "addShoppingList",
            "fields": {
              "shoppingList": {
                "type": "ShoppingListReference"
              },
              "supplyChannel?": {
                "type": "ChannelReference"
              },
              "distributionChannel?": {
                "type": "ChannelReference"
              }
            }
          },
          {
            "action": "recalculate",
            "fields": {
              "updateProductData?": "boolean"
            }
          }
        ],
        "type": "string"
      },
      "CartDraft": {
        "title": "CartDraft",
        "includePath": "types/cart/CartDraft.raml",
        "type": "object",
        "properties": {
          "currency": {
            "title": "currency",
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "customerId": {
            "title": "customerId",
            "type": "string"
          },
          "customerEmail": {
            "title": "customerEmail",
            "type": "string"
          },
          "customerGroup": {
            "title": "customerGroup",
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "anonymousId": {
            "title": "anonymousId",
            "type": "string"
          },
          "country": {
            "title": "country",
            "type": "string"
          },
          "inventoryMode": {
            "title": "inventoryMode",
            "$ref": "#/components/schemas/InventoryMode"
          },
          "taxMode": {
            "title": "taxMode",
            "$ref": "#/components/schemas/TaxMode"
          },
          "taxRoundingMode": {
            "title": "taxRoundingMode",
            "$ref": "#/components/schemas/RoundingMode"
          },
          "taxCalculationMode": {
            "title": "taxCalculationMode",
            "$ref": "#/components/schemas/TaxCalculationMode"
          },
          "lineItems": {
            "title": "lineItems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemDraft"
            }
          },
          "customLineItems": {
            "title": "customLineItems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomLineItemDraft"
            }
          },
          "shippingAddress": {
            "title": "shippingAddress",
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "title": "billingAddress",
            "$ref": "#/components/schemas/Address"
          },
          "shippingMethod": {
            "title": "shippingMethod",
            "$ref": "#/components/schemas/ShippingMethodReference"
          },
          "externalTaxRateForShippingMethod": {
            "title": "externalTaxRateForShippingMethod",
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "locale": {
            "title": "locale",
            "type": "string"
          },
          "deleteDaysAfterLastModification": {
            "title": "deleteDaysAfterLastModification",
            "format": "int64",
            "type": "number"
          },
          "origin": {
            "title": "origin",
            "$ref": "#/components/schemas/CartOrigin"
          },
          "shippingRateInput": {
            "title": "shippingRateInput",
            "$ref": "#/components/schemas/ShippingRateInputDraft"
          },
          "itemShippingAddresses": {
            "title": "itemShippingAddresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "required": [
          "currency"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartdraft"
      },
      "CartOrigin": {
        "title": "CartOrigin",
        "enum": [
          "Customer",
          "Merchant"
        ],
        "includePath": "types/cart/CartOrigin.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
      },
      "CartPagedQueryResponse": {
        "title": "CartPagedQueryResponse",
        "includePath": "types/cart/CartPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "type": "string"
      },
      "CartReference": {
        "title": "CartReference",
        "includePath": "types/cart/CartReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Cart"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart",
        "type": "string"
      },
      "CartState": {
        "title": "CartState",
        "enum": [
          "Active",
          "Merged",
          "Ordered"
        ],
        "includePath": "types/cart/CartState.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartstate"
      },
      "CartUpdate": {
        "title": "CartUpdate",
        "includePath": "types/cart/CartUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "type": "string"
      },
      "CartUpdateAction": {
        "title": "CartUpdateAction",
        "includePath": "types/cart/CartUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Cart"
      },
      "ClassificationShippingRateInput": {
        "title": "ClassificationShippingRateInput",
        "includePath": "types/cart/ClassificationShippingRateInput.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInput"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              },
              "label": {
                "title": "label",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinput",
        "type": "string"
      },
      "ClassificationShippingRateInputDraft": {
        "title": "ClassificationShippingRateInputDraft",
        "includePath": "types/cart/ClassificationShippingRateInputDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInputDraft"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinputdraft",
        "type": "string"
      },
      "CustomLineItem": {
        "title": "CustomLineItem",
        "includePath": "types/cart/CustomLineItem.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "money": {
            "title": "money",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "taxedPrice": {
            "title": "taxedPrice",
            "$ref": "#/components/schemas/TaxedItemPrice"
          },
          "totalPrice": {
            "title": "totalPrice",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "slug": {
            "title": "slug",
            "type": "string"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "state": {
            "title": "state",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemState"
            }
          },
          "taxCategory": {
            "title": "taxCategory",
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "taxRate": {
            "title": "taxRate",
            "$ref": "#/components/schemas/TaxRate"
          },
          "discountedPricePerQuantity": {
            "title": "discountedPricePerQuantity",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
            }
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "shippingDetails": {
            "title": "shippingDetails",
            "$ref": "#/components/schemas/ItemShippingDetails"
          }
        },
        "required": [
          "id",
          "name",
          "money",
          "totalPrice",
          "slug",
          "quantity",
          "state",
          "discountedPricePerQuantity"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitem"
      },
      "CustomLineItemDraft": {
        "title": "CustomLineItemDraft",
        "includePath": "types/cart/CustomLineItemDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "money": {
            "title": "money",
            "$ref": "#/components/schemas/Money"
          },
          "slug": {
            "title": "slug",
            "type": "string"
          },
          "taxCategory": {
            "title": "taxCategory",
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "externalTaxRate": {
            "title": "externalTaxRate",
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "shippingDetails": {
            "title": "shippingDetails",
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          }
        },
        "required": [
          "name",
          "quantity",
          "money",
          "slug"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitemdraft"
      },
      "DiscountCodeInfo": {
        "title": "DiscountCodeInfo",
        "includePath": "types/cart/DiscountCodeInfo.raml",
        "type": "object",
        "properties": {
          "discountCode": {
            "title": "discountCode",
            "$ref": "#/components/schemas/DiscountCodeReference"
          },
          "state": {
            "title": "state",
            "$ref": "#/components/schemas/DiscountCodeState"
          }
        },
        "required": [
          "discountCode",
          "state"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodereference"
      },
      "DiscountCodeState": {
        "title": "DiscountCodeState",
        "enum": [
          "NotActive",
          "DoesNotMatchCart",
          "MatchesCart",
          "MaxApplicationReached"
        ],
        "includePath": "types/cart/DiscountCodeState.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodestate"
      },
      "DiscountedLineItemPortion": {
        "title": "DiscountedLineItemPortion",
        "includePath": "types/cart/DiscountedLineItemPortion.raml",
        "type": "object",
        "properties": {
          "discount": {
            "title": "discount",
            "$ref": "#/components/schemas/CartDiscountReference"
          },
          "discountedAmount": {
            "title": "discountedAmount",
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "discount",
          "discountedAmount"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemportion"
      },
      "DiscountedLineItemPrice": {
        "title": "DiscountedLineItemPrice",
        "includePath": "types/cart/DiscountedLineItemPrice.raml",
        "type": "object",
        "properties": {
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "includedDiscounts": {
            "title": "includedDiscounts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPortion"
            }
          }
        },
        "required": [
          "value",
          "includedDiscounts"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"
      },
      "DiscountedLineItemPriceForQuantity": {
        "title": "DiscountedLineItemPriceForQuantity",
        "includePath": "types/cart/DiscountedLineItemPriceForQuantity.raml",
        "type": "object",
        "properties": {
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "discountedPrice": {
            "title": "discountedPrice",
            "$ref": "#/components/schemas/DiscountedLineItemPrice"
          }
        },
        "required": [
          "quantity",
          "discountedPrice"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitempriceforquantity"
      },
      "ExternalLineItemTotalPrice": {
        "title": "ExternalLineItemTotalPrice",
        "includePath": "types/cart/ExternalLineItemTotalPrice.raml",
        "type": "object",
        "properties": {
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/Money"
          },
          "totalPrice": {
            "title": "totalPrice",
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "price",
          "totalPrice"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externallineitemtotalprice"
      },
      "ExternalTaxAmountDraft": {
        "title": "ExternalTaxAmountDraft",
        "includePath": "types/cart/ExternalTaxAmountDraft.raml",
        "type": "object",
        "properties": {
          "totalGross": {
            "title": "totalGross",
            "$ref": "#/components/schemas/Money"
          },
          "taxRate": {
            "title": "taxRate",
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          }
        },
        "required": [
          "totalGross",
          "taxRate"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxamountdraft"
      },
      "ExternalTaxRateDraft": {
        "title": "ExternalTaxRateDraft",
        "includePath": "types/cart/ExternalTaxRateDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          },
          "amount": {
            "title": "amount",
            "type": "number"
          },
          "country": {
            "title": "country",
            "type": "string"
          },
          "state": {
            "title": "state",
            "type": "string"
          },
          "subRates": {
            "title": "subRates",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubRate"
            }
          }
        },
        "required": [
          "name",
          "country"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxratedraft"
      },
      "InventoryMode": {
        "title": "InventoryMode",
        "enum": [
          "TrackOnly",
          "ReserveOnOrder",
          "None"
        ],
        "includePath": "types/cart/InventoryMode.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#inventorymode"
      },
      "ItemShippingDetails": {
        "title": "ItemShippingDetails",
        "includePath": "types/cart/ItemShippingDetails.raml",
        "type": "object",
        "properties": {
          "targets": {
            "title": "targets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemShippingTarget"
            }
          },
          "valid": {
            "title": "valid",
            "type": "boolean"
          }
        },
        "required": [
          "targets",
          "valid"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingdetails"
      },
      "ItemShippingDetailsDraft": {
        "title": "ItemShippingDetailsDraft",
        "includePath": "types/cart/ItemShippingDetailsDraft.raml",
        "type": "object",
        "properties": {
          "targets": {
            "title": "targets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemShippingTarget"
            }
          }
        },
        "required": [
          "targets"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingdetailsdraft"
      },
      "ItemShippingTarget": {
        "title": "ItemShippingTarget",
        "includePath": "types/cart/ItemShippingTarget.raml",
        "type": "object",
        "properties": {
          "addressKey": {
            "title": "addressKey",
            "type": "string"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          }
        },
        "required": [
          "addressKey",
          "quantity"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingtarget"
      },
      "LineItem": {
        "title": "LineItem",
        "includePath": "types/cart/LineItem.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "productId": {
            "title": "productId",
            "type": "string"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productSlug": {
            "title": "productSlug",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productType": {
            "title": "productType",
            "$ref": "#/components/schemas/ProductTypeReference"
          },
          "variant": {
            "title": "variant",
            "$ref": "#/components/schemas/ProductVariant"
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/Price"
          },
          "taxedPrice": {
            "title": "taxedPrice",
            "$ref": "#/components/schemas/TaxedItemPrice"
          },
          "totalPrice": {
            "title": "totalPrice",
            "$ref": "#/components/schemas/Money"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "state": {
            "title": "state",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemState"
            }
          },
          "taxRate": {
            "title": "taxRate",
            "$ref": "#/components/schemas/TaxRate"
          },
          "supplyChannel": {
            "title": "supplyChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "distributionChannel": {
            "title": "distributionChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "discountedPricePerQuantity": {
            "title": "discountedPricePerQuantity",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
            }
          },
          "priceMode": {
            "title": "priceMode",
            "$ref": "#/components/schemas/LineItemPriceMode"
          },
          "lineItemMode": {
            "title": "lineItemMode",
            "$ref": "#/components/schemas/LineItemMode"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "shippingDetails": {
            "title": "shippingDetails",
            "$ref": "#/components/schemas/ItemShippingDetails"
          }
        },
        "required": [
          "id",
          "productId",
          "name",
          "productType",
          "variant",
          "price",
          "totalPrice",
          "quantity",
          "state",
          "discountedPricePerQuantity",
          "priceMode",
          "lineItemMode"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitem"
      },
      "LineItemDraft": {
        "title": "LineItemDraft",
        "includePath": "types/cart/LineItemDraft.raml",
        "type": "object",
        "properties": {
          "productId": {
            "title": "productId",
            "type": "string"
          },
          "variantId": {
            "title": "variantId",
            "format": "int64",
            "type": "number"
          },
          "sku": {
            "title": "sku",
            "type": "string"
          },
          "quantity": {
            "title": "quantity",
            "default": 1,
            "type": "number"
          },
          "supplyChannel": {
            "title": "supplyChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "distributionChannel": {
            "title": "distributionChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "externalTaxRate": {
            "title": "externalTaxRate",
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "externalPrice": {
            "title": "externalPrice",
            "$ref": "#/components/schemas/Money"
          },
          "externalTotalPrice": {
            "title": "externalTotalPrice",
            "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
          },
          "shippingDetails": {
            "title": "shippingDetails",
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          }
        },
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitemdraft",
        "x-annotation-builder": [
          {
            "paramNames": [
              "productId",
              "variantId",
              "quantity"
            ]
          },
          {
            "paramNames": [
              "sku",
              "quantity"
            ]
          }
        ]
      },
      "LineItemMode": {
        "title": "LineItemMode",
        "enum": [
          "Standard",
          "GiftLineItem"
        ],
        "includePath": "types/cart/LineItemMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "LineItemPriceMode": {
        "title": "LineItemPriceMode",
        "enum": [
          "Platform",
          "ExternalTotal",
          "ExternalPrice"
        ],
        "includePath": "types/cart/LineItemPriceMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "ReplicaCartDraft": {
        "title": "ReplicaCartDraft",
        "includePath": "types/cart/ReplicaCartDraft.raml",
        "type": "object",
        "properties": {
          "reference": {
            "title": "reference",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "required": [
          "reference"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#replicacartdraft"
      },
      "RoundingMode": {
        "title": "RoundingMode",
        "enum": [
          "HalfEven",
          "HalfUp",
          "HalfDown"
        ],
        "includePath": "types/cart/RoundingMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "ScoreShippingRateInput": {
        "title": "ScoreShippingRateInput",
        "includePath": "types/cart/ScoreShippingRateInput.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInput"
          },
          {
            "properties": {
              "score": {
                "title": "score",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinput",
        "type": "string"
      },
      "ScoreShippingRateInputDraft": {
        "title": "ScoreShippingRateInputDraft",
        "includePath": "types/cart/ScoreShippingRateInputDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInputDraft"
          },
          {
            "properties": {
              "score": {
                "title": "score",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinputdraft",
        "type": "string"
      },
      "ShippingInfo": {
        "title": "ShippingInfo",
        "includePath": "types/cart/ShippingInfo.raml",
        "type": "object",
        "properties": {
          "shippingMethodName": {
            "title": "shippingMethodName",
            "type": "string"
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "shippingRate": {
            "title": "shippingRate",
            "$ref": "#/components/schemas/ShippingRate"
          },
          "taxedPrice": {
            "title": "taxedPrice",
            "$ref": "#/components/schemas/TaxedItemPrice"
          },
          "taxRate": {
            "title": "taxRate",
            "$ref": "#/components/schemas/TaxRate"
          },
          "taxCategory": {
            "title": "taxCategory",
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "shippingMethod": {
            "title": "shippingMethod",
            "$ref": "#/components/schemas/ShippingMethodReference"
          },
          "deliveries": {
            "title": "deliveries",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Delivery"
            }
          },
          "discountedPrice": {
            "title": "discountedPrice",
            "$ref": "#/components/schemas/DiscountedLineItemPrice"
          },
          "shippingMethodState": {
            "title": "shippingMethodState",
            "$ref": "#/components/schemas/ShippingMethodState"
          }
        },
        "required": [
          "shippingMethodName",
          "price",
          "shippingRate",
          "shippingMethodState"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippinginfo"
      },
      "ShippingMethodState": {
        "title": "ShippingMethodState",
        "enum": [
          "DoesNotMatchCart",
          "MatchesCart"
        ],
        "includePath": "types/cart/ShippingMethodState.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingmethodstate"
      },
      "ShippingRateInput": {
        "title": "ShippingRateInput",
        "includePath": "types/cart/ShippingRateInput.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinput"
      },
      "ShippingRateInputDraft": {
        "title": "ShippingRateInputDraft",
        "includePath": "types/cart/ShippingRateInputDraft.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinputdraft"
      },
      "TaxCalculationMode": {
        "title": "TaxCalculationMode",
        "enum": [
          "LineItemLevel",
          "UnitPriceLevel"
        ],
        "includePath": "types/cart/TaxCalculationMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "TaxMode": {
        "title": "TaxMode",
        "enum": [
          "Platform",
          "External",
          "ExternalAmount",
          "Disabled"
        ],
        "includePath": "types/cart/TaxMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "TaxPortion": {
        "title": "TaxPortion",
        "includePath": "types/cart/TaxPortion.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          },
          "rate": {
            "title": "rate",
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "amount": {
            "title": "amount",
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "rate",
          "amount"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxportion"
      },
      "TaxedItemPrice": {
        "title": "TaxedItemPrice",
        "includePath": "types/cart/TaxedItemPrice.raml",
        "type": "object",
        "properties": {
          "totalNet": {
            "title": "totalNet",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "totalGross": {
            "title": "totalGross",
            "$ref": "#/components/schemas/TypedMoney"
          }
        },
        "required": [
          "totalNet",
          "totalGross"
        ],
        "x-annotation-package": "Cart"
      },
      "TaxedPrice": {
        "title": "TaxedPrice",
        "includePath": "types/cart/TaxedPrice.raml",
        "type": "object",
        "properties": {
          "totalNet": {
            "title": "totalNet",
            "$ref": "#/components/schemas/Money"
          },
          "totalGross": {
            "title": "totalGross",
            "$ref": "#/components/schemas/Money"
          },
          "taxPortions": {
            "title": "taxPortions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxPortion"
            }
          }
        },
        "required": [
          "totalNet",
          "totalGross",
          "taxPortions"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxedprice"
      },
      "CartAddCustomLineItemAction": {
        "title": "CartAddCustomLineItemAction",
        "includePath": "types/cart/updates/CartAddCustomLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "money": {
                "title": "money",
                "$ref": "#/components/schemas/Money"
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "quantity": {
                "title": "quantity",
                "type": "number"
              },
              "slug": {
                "title": "slug",
                "type": "string"
              },
              "taxCategory": {
                "title": "taxCategory",
                "$ref": "#/components/schemas/TaxCategoryReference"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFieldsDraft"
              },
              "externalTaxRate": {
                "title": "externalTaxRate",
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-customlineitem",
        "type": "string"
      },
      "CartAddDiscountCodeAction": {
        "title": "CartAddDiscountCodeAction",
        "includePath": "types/cart/updates/CartAddDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "code": {
                "title": "code",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-discountcode",
        "type": "string"
      },
      "CartAddItemShippingAddressAction": {
        "title": "CartAddItemShippingAddressAction",
        "includePath": "types/cart/updates/CartAddItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-itemshippingaddress",
        "type": "string"
      },
      "CartAddLineItemAction": {
        "title": "CartAddLineItemAction",
        "includePath": "types/cart/updates/CartAddLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFieldsDraft"
              },
              "distributionChannel": {
                "title": "distributionChannel",
                "$ref": "#/components/schemas/ChannelReference"
              },
              "externalTaxRate": {
                "title": "externalTaxRate",
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              },
              "productId": {
                "title": "productId",
                "type": "string"
              },
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "type": "number"
              },
              "supplyChannel": {
                "title": "supplyChannel",
                "$ref": "#/components/schemas/ChannelReference"
              },
              "externalPrice": {
                "title": "externalPrice",
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "title": "externalTotalPrice",
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetails": {
                "title": "shippingDetails",
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-lineitem",
        "type": "string"
      },
      "CartAddPaymentAction": {
        "title": "CartAddPaymentAction",
        "includePath": "types/cart/updates/CartAddPaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "title": "payment",
                "$ref": "#/components/schemas/PaymentReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-payment",
        "type": "string"
      },
      "CartAddShoppingListAction": {
        "title": "CartAddShoppingListAction",
        "includePath": "types/cart/updates/CartAddShoppingListAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shoppingList": {
                "title": "shoppingList",
                "$ref": "#/components/schemas/ShoppingListReference"
              },
              "supplyChannel": {
                "title": "supplyChannel",
                "$ref": "#/components/schemas/ChannelReference"
              },
              "distributionChannel": {
                "title": "distributionChannel",
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-shopping-list",
        "type": "string"
      },
      "CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction": {
        "title": "CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction",
        "includePath": "types/cart/updates/CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "targetsDelta": {
                "title": "targetsDelta",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemShippingTarget"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#apply-deltatocustomlineitemshippingdetailstargets",
        "type": "string"
      },
      "CartApplyDeltaToLineItemShippingDetailsTargetsAction": {
        "title": "CartApplyDeltaToLineItemShippingDetailsTargetsAction",
        "includePath": "types/cart/updates/CartApplyDeltaToLineItemShippingDetailsTargetsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "targetsDelta": {
                "title": "targetsDelta",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemShippingTarget"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#apply-deltatolineitemshippingdetailstargets",
        "type": "string"
      },
      "CartChangeCustomLineItemMoneyAction": {
        "title": "CartChangeCustomLineItemMoneyAction",
        "includePath": "types/cart/updates/CartChangeCustomLineItemMoneyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "money": {
                "title": "money",
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-money",
        "type": "string"
      },
      "CartChangeCustomLineItemQuantityAction": {
        "title": "CartChangeCustomLineItemQuantityAction",
        "includePath": "types/cart/updates/CartChangeCustomLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-quantity",
        "type": "string"
      },
      "CartChangeLineItemQuantityAction": {
        "title": "CartChangeLineItemQuantityAction",
        "includePath": "types/cart/updates/CartChangeLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "type": "number"
              },
              "externalPrice": {
                "title": "externalPrice",
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "title": "externalTotalPrice",
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-lineitem-quantity",
        "type": "string"
      },
      "CartChangeTaxCalculationModeAction": {
        "title": "CartChangeTaxCalculationModeAction",
        "includePath": "types/cart/updates/CartChangeTaxCalculationModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "taxCalculationMode": {
                "title": "taxCalculationMode",
                "$ref": "#/components/schemas/TaxCalculationMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-taxcalculationmode",
        "type": "string"
      },
      "CartChangeTaxModeAction": {
        "title": "CartChangeTaxModeAction",
        "includePath": "types/cart/updates/CartChangeTaxModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "taxMode": {
                "title": "taxMode",
                "$ref": "#/components/schemas/TaxMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-taxmode",
        "type": "string"
      },
      "CartChangeTaxRoundingModeAction": {
        "title": "CartChangeTaxRoundingModeAction",
        "includePath": "types/cart/updates/CartChangeTaxRoundingModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "taxRoundingMode": {
                "title": "taxRoundingMode",
                "$ref": "#/components/schemas/RoundingMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-tax-roundingmode",
        "type": "string"
      },
      "CartRecalculateAction": {
        "title": "CartRecalculateAction",
        "includePath": "types/cart/updates/CartRecalculateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "updateProductData": {
                "title": "updateProductData",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#recalculate",
        "type": "string"
      },
      "CartRemoveCustomLineItemAction": {
        "title": "CartRemoveCustomLineItemAction",
        "includePath": "types/cart/updates/CartRemoveCustomLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-customlineitem",
        "type": "string"
      },
      "CartRemoveDiscountCodeAction": {
        "title": "CartRemoveDiscountCodeAction",
        "includePath": "types/cart/updates/CartRemoveDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "discountCode": {
                "title": "discountCode",
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-discountcode",
        "type": "string"
      },
      "CartRemoveItemShippingAddressAction": {
        "title": "CartRemoveItemShippingAddressAction",
        "includePath": "types/cart/updates/CartRemoveItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "addressKey": {
                "title": "addressKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-itemshippingaddress",
        "type": "string"
      },
      "CartRemoveLineItemAction": {
        "title": "CartRemoveLineItemAction",
        "includePath": "types/cart/updates/CartRemoveLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "type": "number"
              },
              "externalPrice": {
                "title": "externalPrice",
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "title": "externalTotalPrice",
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetailsToRemove": {
                "title": "shippingDetailsToRemove",
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-lineitem",
        "type": "string"
      },
      "CartRemovePaymentAction": {
        "title": "CartRemovePaymentAction",
        "includePath": "types/cart/updates/CartRemovePaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "title": "payment",
                "$ref": "#/components/schemas/PaymentReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-payment",
        "type": "string"
      },
      "CartSetAnonymousIdAction": {
        "title": "CartSetAnonymousIdAction",
        "includePath": "types/cart/updates/CartSetAnonymousIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "anonymousId": {
                "title": "anonymousId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-anonymous-id",
        "type": "string"
      },
      "CartSetBillingAddressAction": {
        "title": "CartSetBillingAddressAction",
        "includePath": "types/cart/updates/CartSetBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-billing-address",
        "type": "string"
      },
      "CartSetCartTotalTaxAction": {
        "title": "CartSetCartTotalTaxAction",
        "includePath": "types/cart/updates/CartSetCartTotalTaxAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "externalTotalGross": {
                "title": "externalTotalGross",
                "$ref": "#/components/schemas/Money"
              },
              "externalTaxPortions": {
                "title": "externalTaxPortions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxPortion"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-cart-total-tax",
        "type": "string"
      },
      "CartSetCountryAction": {
        "title": "CartSetCountryAction",
        "includePath": "types/cart/updates/CartSetCountryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "country": {
                "title": "country",
                "$ref": "#/components/schemas/CountryCode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-country",
        "type": "string"
      },
      "CartSetCustomFieldAction": {
        "title": "CartSetCustomFieldAction",
        "includePath": "types/cart/updates/CartSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customfield",
        "type": "string"
      },
      "CartSetCustomLineItemCustomFieldAction": {
        "title": "CartSetCustomLineItemCustomFieldAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-customfield",
        "type": "string"
      },
      "CartSetCustomLineItemCustomTypeAction": {
        "title": "CartSetCustomLineItemCustomTypeAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-custom-type",
        "type": "string"
      },
      "CartSetCustomLineItemShippingDetailsAction": {
        "title": "CartSetCustomLineItemShippingDetailsAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "shippingDetails": {
                "title": "shippingDetails",
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitemshippingdetails",
        "type": "string"
      },
      "CartSetCustomLineItemTaxAmountAction": {
        "title": "CartSetCustomLineItemTaxAmountAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "externalTaxAmount": {
                "title": "externalTaxAmount",
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxamount",
        "type": "string"
      },
      "CartSetCustomLineItemTaxRateAction": {
        "title": "CartSetCustomLineItemTaxRateAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "externalTaxRate": {
                "title": "externalTaxRate",
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxrate",
        "type": "string"
      },
      "CartSetCustomShippingMethodAction": {
        "title": "CartSetCustomShippingMethodAction",
        "includePath": "types/cart/updates/CartSetCustomShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shippingMethodName": {
                "title": "shippingMethodName",
                "type": "string"
              },
              "shippingRate": {
                "title": "shippingRate",
                "$ref": "#/components/schemas/ShippingRateDraft"
              },
              "taxCategory": {
                "title": "taxCategory",
                "$ref": "#/components/schemas/TaxCategoryReference"
              },
              "externalTaxRate": {
                "title": "externalTaxRate",
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-custom-shipping-method",
        "type": "string"
      },
      "CartSetCustomTypeAction": {
        "title": "CartSetCustomTypeAction",
        "includePath": "types/cart/updates/CartSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-custom-type",
        "type": "string"
      },
      "CartSetCustomerEmailAction": {
        "title": "CartSetCustomerEmailAction",
        "includePath": "types/cart/updates/CartSetCustomerEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "email": {
                "title": "email",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-email",
        "type": "string"
      },
      "CartSetCustomerGroupAction": {
        "title": "CartSetCustomerGroupAction",
        "includePath": "types/cart/updates/CartSetCustomerGroupAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customerGroup": {
                "title": "customerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-group",
        "type": "string"
      },
      "CartSetCustomerIdAction": {
        "title": "CartSetCustomerIdAction",
        "includePath": "types/cart/updates/CartSetCustomerIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customerId": {
                "title": "customerId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-id",
        "type": "string"
      },
      "CartSetDeleteDaysAfterLastModificationAction": {
        "title": "CartSetDeleteDaysAfterLastModificationAction",
        "includePath": "types/cart/updates/CartSetDeleteDaysAfterLastModificationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "deleteDaysAfterLastModification": {
                "title": "deleteDaysAfterLastModification",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-deletedaysafterlastmodification-beta",
        "type": "string"
      },
      "CartSetLineItemCustomFieldAction": {
        "title": "CartSetLineItemCustomFieldAction",
        "includePath": "types/cart/updates/CartSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-customfield",
        "type": "string"
      },
      "CartSetLineItemCustomTypeAction": {
        "title": "CartSetLineItemCustomTypeAction",
        "includePath": "types/cart/updates/CartSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-custom-type",
        "type": "string"
      },
      "CartSetLineItemPriceAction": {
        "title": "CartSetLineItemPriceAction",
        "includePath": "types/cart/updates/CartSetLineItemPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "externalPrice": {
                "title": "externalPrice",
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-price",
        "type": "string"
      },
      "CartSetLineItemShippingDetailsAction": {
        "title": "CartSetLineItemShippingDetailsAction",
        "includePath": "types/cart/updates/CartSetLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "shippingDetails": {
                "title": "shippingDetails",
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitemshippingdetails",
        "type": "string"
      },
      "CartSetLineItemTaxAmountAction": {
        "title": "CartSetLineItemTaxAmountAction",
        "includePath": "types/cart/updates/CartSetLineItemTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "externalTaxAmount": {
                "title": "externalTaxAmount",
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxamount",
        "type": "string"
      },
      "CartSetLineItemTaxRateAction": {
        "title": "CartSetLineItemTaxRateAction",
        "includePath": "types/cart/updates/CartSetLineItemTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "externalTaxRate": {
                "title": "externalTaxRate",
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxrate",
        "type": "string"
      },
      "CartSetLineItemTotalPriceAction": {
        "title": "CartSetLineItemTotalPriceAction",
        "includePath": "types/cart/updates/CartSetLineItemTotalPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "externalTotalPrice": {
                "title": "externalTotalPrice",
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-totalprice",
        "type": "string"
      },
      "CartSetLocaleAction": {
        "title": "CartSetLocaleAction",
        "includePath": "types/cart/updates/CartSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "title": "locale",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-locale",
        "type": "string"
      },
      "CartSetShippingAddressAction": {
        "title": "CartSetShippingAddressAction",
        "includePath": "types/cart/updates/CartSetShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-address",
        "type": "string"
      },
      "CartSetShippingMethodAction": {
        "title": "CartSetShippingMethodAction",
        "includePath": "types/cart/updates/CartSetShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shippingMethod": {
                "title": "shippingMethod",
                "$ref": "#/components/schemas/TypeReference"
              },
              "externalTaxRate": {
                "title": "externalTaxRate",
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-method",
        "type": "string"
      },
      "CartSetShippingMethodTaxAmountAction": {
        "title": "CartSetShippingMethodTaxAmountAction",
        "includePath": "types/cart/updates/CartSetShippingMethodTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "externalTaxAmount": {
                "title": "externalTaxAmount",
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxamount",
        "type": "string"
      },
      "CartSetShippingMethodTaxRateAction": {
        "title": "CartSetShippingMethodTaxRateAction",
        "includePath": "types/cart/updates/CartSetShippingMethodTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "externalTaxRate": {
                "title": "externalTaxRate",
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxrate",
        "type": "string"
      },
      "CartSetShippingRateInputAction": {
        "title": "CartSetShippingRateInputAction",
        "includePath": "types/cart/updates/CartSetShippingRateInputAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shippingRateInput": {
                "title": "shippingRateInput",
                "$ref": "#/components/schemas/ShippingRateInputDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-rate-input",
        "type": "string"
      },
      "CartUpdateItemShippingAddressAction": {
        "title": "CartUpdateItemShippingAddressAction",
        "includePath": "types/cart/updates/CartUpdateItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#update-itemshippingaddress",
        "type": "string"
      },
      "Category": {
        "title": "Category",
        "includePath": "types/category/Category.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "changeSlug"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "ancestors": {
                "title": "ancestors",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryReference"
                }
              },
              "parent": {
                "title": "parent",
                "$ref": "#/components/schemas/CategoryReference",
                "x-annotation-hasUpdateAction": {
                  "action": "changeParent",
                  "required": true
                }
              },
              "orderHint": {
                "title": "orderHint",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "changeOrderHint",
                  "docsAnchor": "change-orderhint"
                }
              },
              "externalId": {
                "title": "externalId",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setExternalId"
              },
              "metaTitle": {
                "title": "metaTitle",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setMetaTitle"
              },
              "metaDescription": {
                "title": "metaDescription",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setMetaDescription"
              },
              "metaKeywords": {
                "title": "metaKeywords",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setMetaKeywords"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "assets": {
                "title": "assets",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Asset"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addAsset",
                    "fields": {
                      "asset": "AssetDraft",
                      "position?": {
                        "type": "number",
                        "format": "int32"
                      }
                    }
                  },
                  {
                    "action": "removeAsset",
                    "fields": {
                      "assetId?": "string",
                      "assetKey?": "string"
                    }
                  },
                  {
                    "action": "setAssetKey",
                    "fields": {
                      "assetId": "string",
                      "assetKey?": "string"
                    }
                  },
                  {
                    "action": "changeAssetOrder",
                    "fields": {
                      "assetOrder": "string[]"
                    }
                  },
                  {
                    "action": "changeAssetName",
                    "fields": {
                      "assetId?": "string",
                      "assetKey?": "string",
                      "name": "LocalizedString"
                    }
                  },
                  {
                    "action": "setAssetDescription",
                    "fields": {
                      "assetId?": "string",
                      "assetKey?": "string",
                      "description?": "LocalizedString"
                    }
                  },
                  {
                    "action": "setAssetTags",
                    "fields": {
                      "assetId?": "string",
                      "assetKey?": "string",
                      "tags?": "string[]"
                    }
                  },
                  {
                    "action": "setAssetSources",
                    "fields": {
                      "assetId?": "string",
                      "assetKey?": "string",
                      "sources": "AssetSource[]"
                    }
                  },
                  {
                    "action": "setAssetCustomType",
                    "fields": {
                      "assetId?": "string",
                      "assetKey?": "string",
                      "type": "TypeReference",
                      "fields": "object"
                    }
                  },
                  {
                    "action": "setAssetCustomField",
                    "fields": {
                      "assetId?": "string",
                      "assetKey?": "string",
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category",
        "x-annotation-updateType": "CategoryUpdate",
        "type": "string"
      },
      "CategoryDraft": {
        "title": "CategoryDraft",
        "includePath": "types/category/CategoryDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "slug": {
            "title": "slug",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "parent": {
            "title": "parent",
            "$ref": "#/components/schemas/CategoryReference"
          },
          "orderHint": {
            "title": "orderHint",
            "type": "string"
          },
          "externalId": {
            "title": "externalId",
            "type": "string"
          },
          "metaTitle": {
            "title": "metaTitle",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaDescription": {
            "title": "metaDescription",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaKeywords": {
            "title": "metaKeywords",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "assets": {
            "title": "assets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDraft"
            }
          },
          "key": {
            "title": "key",
            "type": "string"
          }
        },
        "required": [
          "name",
          "slug"
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#categorydraft"
      },
      "CategoryPagedQueryResponse": {
        "title": "CategoryPagedQueryResponse",
        "includePath": "types/category/CategoryPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "type": "string"
      },
      "CategoryReference": {
        "title": "CategoryReference",
        "includePath": "types/category/CategoryReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Category"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category",
        "type": "string"
      },
      "CategoryUpdate": {
        "title": "CategoryUpdate",
        "includePath": "types/category/CategoryUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "type": "string"
      },
      "CategoryUpdateAction": {
        "title": "CategoryUpdateAction",
        "includePath": "types/category/CategoryUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Category"
      },
      "CategoryAddAssetAction": {
        "title": "CategoryAddAssetAction",
        "includePath": "types/category/updates/CategoryAddAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "asset": {
                "title": "asset",
                "$ref": "#/components/schemas/AssetDraft"
              },
              "position": {
                "title": "position",
                "format": "int32",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#add-asset",
        "type": "string"
      },
      "CategoryChangeAssetNameAction": {
        "title": "CategoryChangeAssetNameAction",
        "includePath": "types/category/updates/CategoryChangeAssetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-asset-name",
        "type": "string"
      },
      "CategoryChangeAssetOrderAction": {
        "title": "CategoryChangeAssetOrderAction",
        "includePath": "types/category/updates/CategoryChangeAssetOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetOrder": {
                "title": "assetOrder",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-asset-order",
        "type": "string"
      },
      "CategoryChangeNameAction": {
        "title": "CategoryChangeNameAction",
        "includePath": "types/category/updates/CategoryChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-name",
        "x-annotation-postman-example": "{\n  \"action\": \"changeName\",\n  \"name\": {\n    \"en\": \"new category name\"\n  }\n}\n",
        "type": "string"
      },
      "CategoryChangeOrderHintAction": {
        "title": "CategoryChangeOrderHintAction",
        "includePath": "types/category/updates/CategoryChangeOrderHintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "orderHint": {
                "title": "orderHint",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-orderhint",
        "type": "string"
      },
      "CategoryChangeParentAction": {
        "title": "CategoryChangeParentAction",
        "includePath": "types/category/updates/CategoryChangeParentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "parent": {
                "title": "parent",
                "$ref": "#/components/schemas/CategoryReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-parent",
        "type": "string"
      },
      "CategoryChangeSlugAction": {
        "title": "CategoryChangeSlugAction",
        "includePath": "types/category/updates/CategoryChangeSlugAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-slug",
        "type": "string"
      },
      "CategoryRemoveAssetAction": {
        "title": "CategoryRemoveAssetAction",
        "includePath": "types/category/updates/CategoryRemoveAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#remove-asset",
        "type": "string"
      },
      "CategorySetAssetCustomFieldAction": {
        "title": "CategorySetAssetCustomFieldAction",
        "includePath": "types/category/updates/CategorySetAssetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-custom-field",
        "type": "string"
      },
      "CategorySetAssetCustomTypeAction": {
        "title": "CategorySetAssetCustomTypeAction",
        "includePath": "types/category/updates/CategorySetAssetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-custom-type",
        "type": "string"
      },
      "CategorySetAssetDescriptionAction": {
        "title": "CategorySetAssetDescriptionAction",
        "includePath": "types/category/updates/CategorySetAssetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-description",
        "type": "string"
      },
      "CategorySetAssetKeyAction": {
        "title": "CategorySetAssetKeyAction",
        "includePath": "types/category/updates/CategorySetAssetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-key",
        "type": "string"
      },
      "CategorySetAssetSourcesAction": {
        "title": "CategorySetAssetSourcesAction",
        "includePath": "types/category/updates/CategorySetAssetSourcesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "sources": {
                "title": "sources",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssetSource"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-sources",
        "type": "string"
      },
      "CategorySetAssetTagsAction": {
        "title": "CategorySetAssetTagsAction",
        "includePath": "types/category/updates/CategorySetAssetTagsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "tags": {
                "title": "tags",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-tags",
        "type": "string"
      },
      "CategorySetCustomFieldAction": {
        "title": "CategorySetCustomFieldAction",
        "includePath": "types/category/updates/CategorySetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-customfield",
        "type": "string"
      },
      "CategorySetCustomTypeAction": {
        "title": "CategorySetCustomTypeAction",
        "includePath": "types/category/updates/CategorySetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-custom-type",
        "type": "string"
      },
      "CategorySetDescriptionAction": {
        "title": "CategorySetDescriptionAction",
        "includePath": "types/category/updates/CategorySetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-description",
        "type": "string"
      },
      "CategorySetExternalIdAction": {
        "title": "CategorySetExternalIdAction",
        "includePath": "types/category/updates/CategorySetExternalIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "externalId": {
                "title": "externalId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-external-id",
        "type": "string"
      },
      "CategorySetKeyAction": {
        "title": "CategorySetKeyAction",
        "includePath": "types/category/updates/CategorySetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-key",
        "type": "string"
      },
      "CategorySetMetaDescriptionAction": {
        "title": "CategorySetMetaDescriptionAction",
        "includePath": "types/category/updates/CategorySetMetaDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "metaDescription": {
                "title": "metaDescription",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-description",
        "type": "string"
      },
      "CategorySetMetaKeywordsAction": {
        "title": "CategorySetMetaKeywordsAction",
        "includePath": "types/category/updates/CategorySetMetaKeywordsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "metaKeywords": {
                "title": "metaKeywords",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-keywords",
        "type": "string"
      },
      "CategorySetMetaTitleAction": {
        "title": "CategorySetMetaTitleAction",
        "includePath": "types/category/updates/CategorySetMetaTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "metaTitle": {
                "title": "metaTitle",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-title",
        "type": "string"
      },
      "Channel": {
        "title": "Channel",
        "includePath": "types/channel/Channel.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeKey"
              },
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setRoles",
                    "fields": {
                      "roles": "ChannelRoleEnum[]"
                    }
                  },
                  {
                    "action": "addRoles",
                    "fields": {
                      "roles": "ChannelRoleEnum[]"
                    }
                  },
                  {
                    "action": "removeRoles",
                    "fields": {
                      "roles": "ChannelRoleEnum[]"
                    }
                  }
                ]
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasUpdateAction": {
                  "action": "changeName",
                  "required": true
                }
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasUpdateAction": {
                  "action": "changeDescription",
                  "required": true
                }
              },
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address",
                "x-annotation-hasSimpleUpdateAction": "setAddress"
              },
              "reviewRatingStatistics": {
                "title": "reviewRatingStatistics",
                "$ref": "#/components/schemas/ReviewRatingStatistics"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "geoLocation": {
                "title": "geoLocation",
                "type": "object",
                "x-annotation-hasUpdateAction": {
                  "action": "setGeoLocation",
                  "docsAnchor": "set-geolocation"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel",
        "x-annotation-updateType": "ChannelUpdate",
        "type": "string"
      },
      "ChannelDraft": {
        "title": "ChannelDraft",
        "includePath": "types/channel/ChannelDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "roles": {
            "title": "roles",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelRoleEnum"
            }
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "address": {
            "title": "address",
            "$ref": "#/components/schemas/Address"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "geoLocation": {
            "title": "geoLocation",
            "type": "object"
          }
        },
        "required": [
          "key"
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channeldraft"
      },
      "ChannelPagedQueryResponse": {
        "title": "ChannelPagedQueryResponse",
        "includePath": "types/channel/ChannelPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Channel"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "type": "string"
      },
      "ChannelReference": {
        "title": "ChannelReference",
        "includePath": "types/channel/ChannelReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Channel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel",
        "type": "string"
      },
      "ChannelRoleEnum": {
        "title": "ChannelRoleEnum",
        "enum": [
          "InventorySupply",
          "ProductDistribution",
          "OrderExport",
          "OrderImport",
          "Primary"
        ],
        "includePath": "types/channel/ChannelRoleEnum.raml",
        "type": "string",
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channelroleenum"
      },
      "ChannelUpdate": {
        "title": "ChannelUpdate",
        "includePath": "types/channel/ChannelUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "type": "string"
      },
      "ChannelUpdateAction": {
        "title": "ChannelUpdateAction",
        "includePath": "types/channel/ChannelUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Channel"
      },
      "ChannelAddRolesAction": {
        "title": "ChannelAddRolesAction",
        "includePath": "types/channel/updates/ChannelAddRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#add-roles",
        "type": "string"
      },
      "ChannelChangeDescriptionAction": {
        "title": "ChannelChangeDescriptionAction",
        "includePath": "types/channel/updates/ChannelChangeDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-description",
        "type": "string"
      },
      "ChannelChangeKeyAction": {
        "title": "ChannelChangeKeyAction",
        "includePath": "types/channel/updates/ChannelChangeKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-key",
        "type": "string"
      },
      "ChannelChangeNameAction": {
        "title": "ChannelChangeNameAction",
        "includePath": "types/channel/updates/ChannelChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-name",
        "type": "string"
      },
      "ChannelRemoveRolesAction": {
        "title": "ChannelRemoveRolesAction",
        "includePath": "types/channel/updates/ChannelRemoveRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#remove-roles",
        "type": "string"
      },
      "ChannelSetAddressAction": {
        "title": "ChannelSetAddressAction",
        "includePath": "types/channel/updates/ChannelSetAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-address",
        "type": "string"
      },
      "ChannelSetCustomFieldAction": {
        "title": "ChannelSetCustomFieldAction",
        "includePath": "types/channel/updates/ChannelSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-customfield",
        "type": "string"
      },
      "ChannelSetCustomTypeAction": {
        "title": "ChannelSetCustomTypeAction",
        "includePath": "types/channel/updates/ChannelSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-custom-type",
        "type": "string"
      },
      "ChannelSetGeoLocationAction": {
        "title": "ChannelSetGeoLocationAction",
        "includePath": "types/channel/updates/ChannelSetGeoLocationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "geoLocation": {
                "title": "geoLocation",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-geolocation",
        "type": "string"
      },
      "ChannelSetRolesAction": {
        "title": "ChannelSetRolesAction",
        "includePath": "types/channel/updates/ChannelSetRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-roles",
        "type": "string"
      },
      "Address": {
        "title": "Address",
        "includePath": "types/common/Address.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "title": {
            "title": "title",
            "type": "string"
          },
          "salutation": {
            "title": "salutation",
            "type": "string"
          },
          "firstName": {
            "title": "firstName",
            "type": "string"
          },
          "lastName": {
            "title": "lastName",
            "type": "string"
          },
          "streetName": {
            "title": "streetName",
            "type": "string"
          },
          "streetNumber": {
            "title": "streetNumber",
            "type": "string"
          },
          "additionalStreetInfo": {
            "title": "additionalStreetInfo",
            "type": "string"
          },
          "postalCode": {
            "title": "postalCode",
            "type": "string"
          },
          "city": {
            "title": "city",
            "type": "string"
          },
          "region": {
            "title": "region",
            "type": "string"
          },
          "state": {
            "title": "state",
            "type": "string"
          },
          "country": {
            "title": "country",
            "$ref": "#/components/schemas/CountryCode"
          },
          "company": {
            "title": "company",
            "type": "string"
          },
          "department": {
            "title": "department",
            "type": "string"
          },
          "building": {
            "title": "building",
            "type": "string"
          },
          "apartment": {
            "title": "apartment",
            "type": "string"
          },
          "pOBox": {
            "title": "pOBox",
            "type": "string"
          },
          "phone": {
            "title": "phone",
            "type": "string"
          },
          "mobile": {
            "title": "mobile",
            "type": "string"
          },
          "email": {
            "title": "email",
            "type": "string"
          },
          "fax": {
            "title": "fax",
            "type": "string"
          },
          "additionalAddressInfo": {
            "title": "additionalAddressInfo",
            "type": "string"
          },
          "externalId": {
            "title": "externalId",
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#address"
      },
      "Asset": {
        "title": "Asset",
        "includePath": "types/common/Asset.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "sources": {
            "title": "sources",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSource"
            }
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "key": {
            "title": "key",
            "type": "string"
          }
        },
        "required": [
          "id",
          "sources",
          "name"
        ],
        "x-annotation-package": "Common"
      },
      "AssetDimensions": {
        "title": "AssetDimensions",
        "includePath": "types/common/AssetDimensions.raml",
        "type": "object",
        "properties": {
          "w": {
            "title": "w",
            "type": "number"
          },
          "h": {
            "title": "h",
            "type": "number"
          }
        },
        "required": [
          "w",
          "h"
        ],
        "x-annotation-package": "Common"
      },
      "AssetDraft": {
        "title": "AssetDraft",
        "includePath": "types/common/AssetDraft.raml",
        "type": "object",
        "properties": {
          "sources": {
            "title": "sources",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSource"
            }
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "tags": {
            "title": "tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "key": {
            "title": "key",
            "type": "string"
          }
        },
        "required": [
          "sources",
          "name"
        ],
        "x-annotation-package": "Common"
      },
      "AssetSource": {
        "title": "AssetSource",
        "includePath": "types/common/AssetSource.raml",
        "type": "object",
        "properties": {
          "uri": {
            "title": "uri",
            "type": "string"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "dimensions": {
            "title": "dimensions",
            "$ref": "#/components/schemas/AssetDimensions"
          },
          "contentType": {
            "title": "contentType",
            "type": "string"
          }
        },
        "required": [
          "uri"
        ],
        "x-annotation-package": "Common"
      },
      "CentPrecisionMoney": {
        "title": "CentPrecisionMoney",
        "includePath": "types/common/CentPrecisionMoney.raml",
        "$ref": "#/components/schemas/TypedMoney",
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
      },
      "CountryCode": {
        "title": "CountryCode",
        "pattern": "^[A-Z]{2}$",
        "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n",
        "includePath": "types/common/CountryCode.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "CurrencyCode": {
        "title": "CurrencyCode",
        "pattern": "^[A-Z]{3}$",
        "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n",
        "includePath": "types/common/CurrencyCode.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "DiscountedPrice": {
        "title": "DiscountedPrice",
        "includePath": "types/common/DiscountedPrice.raml",
        "type": "object",
        "properties": {
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/Money"
          },
          "discount": {
            "title": "discount",
            "$ref": "#/components/schemas/ProductDiscountReference"
          }
        },
        "required": [
          "value",
          "discount"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#discountedprice"
      },
      "GeoJson": {
        "title": "GeoJson",
        "includePath": "types/common/GeoJson.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          },
          "coordinates": {
            "title": "coordinates",
            "type": "array"
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "x-annotation-package": "Common"
      },
      "GeoJsonPoint": {
        "title": "GeoJsonPoint",
        "includePath": "types/common/GeoJsonPoint.raml",
        "$ref": "#/components/schemas/GeoJson",
        "x-annotation-package": "Common"
      },
      "HighPrecisionMoney": {
        "title": "HighPrecisionMoney",
        "includePath": "types/common/HighPrecisionMoney.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypedMoney"
          },
          {
            "properties": {
              "preciseAmount": {
                "title": "preciseAmount",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money",
        "type": "string"
      },
      "Image": {
        "title": "Image",
        "includePath": "types/common/Image.raml",
        "type": "object",
        "properties": {
          "url": {
            "title": "url",
            "type": "string"
          },
          "dimensions": {
            "title": "dimensions",
            "$ref": "#/components/schemas/ImageDimensions"
          },
          "label": {
            "title": "label",
            "type": "string"
          }
        },
        "required": [
          "url",
          "dimensions"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
      },
      "ImageDimensions": {
        "title": "ImageDimensions",
        "includePath": "types/common/ImageDimensions.raml",
        "type": "object",
        "properties": {
          "w": {
            "title": "w",
            "type": "number"
          },
          "h": {
            "title": "h",
            "type": "number"
          }
        },
        "required": [
          "w",
          "h"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
      },
      "Locale": {
        "title": "Locale",
        "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
        "description": "A locale of [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).\n",
        "includePath": "types/common/Locale.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "LocalizedString": {
        "title": "LocalizedString",
        "includePath": "types/common/LocalizedString.raml",
        "type": "object",
        "additionalProperties": {
          "title": "/^[a-z]{2}(-[A-Z]{2})?$/",
          "required": true,
          "type": "string"
        },
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#localizedstring",
        "x-annotation-asMap": {
          "key": "string",
          "value": "string"
        }
      },
      "Money": {
        "title": "Money",
        "includePath": "types/common/Money.raml",
        "type": "object",
        "properties": {
          "centAmount": {
            "title": "centAmount",
            "format": "int64",
            "type": "number"
          },
          "currencyCode": {
            "title": "currencyCode",
            "$ref": "#/components/schemas/CurrencyCode"
          }
        },
        "required": [
          "centAmount",
          "currencyCode"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#basemoney"
      },
      "MoneyType": {
        "title": "MoneyType",
        "enum": [
          "centPrecision",
          "highPrecision"
        ],
        "includePath": "types/common/MoneyType.raml",
        "type": "string",
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
      },
      "Price": {
        "title": "Price",
        "includePath": "types/common/Price.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/Money"
          },
          "country": {
            "title": "country",
            "$ref": "#/components/schemas/CountryCode"
          },
          "customerGroup": {
            "title": "customerGroup",
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "channel": {
            "title": "channel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "validFrom": {
            "title": "validFrom",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "title": "validUntil",
            "type": "string",
            "format": "date-time"
          },
          "discounted": {
            "title": "discounted",
            "$ref": "#/components/schemas/DiscountedPrice"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "tiers": {
            "title": "tiers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTier"
            }
          }
        },
        "required": [
          "value"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#price"
      },
      "PriceDraft": {
        "title": "PriceDraft",
        "includePath": "types/common/PriceDraft.raml",
        "type": "object",
        "properties": {
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/Money"
          },
          "country": {
            "title": "country",
            "$ref": "#/components/schemas/CountryCode"
          },
          "customerGroup": {
            "title": "customerGroup",
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "channel": {
            "title": "channel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "validFrom": {
            "title": "validFrom",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "title": "validUntil",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "tiers": {
            "title": "tiers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTier"
            }
          }
        },
        "required": [
          "value"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#pricedraft"
      },
      "PriceTier": {
        "title": "PriceTier",
        "includePath": "types/common/PriceTier.raml",
        "type": "object",
        "properties": {
          "minimumQuantity": {
            "title": "minimumQuantity",
            "format": "int64",
            "type": "number"
          },
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "minimumQuantity",
          "value"
        ],
        "x-annotation-package": "Common"
      },
      "Reference": {
        "title": "Reference",
        "includePath": "types/common/Reference.raml",
        "discriminator": {
          "propertyName": "typeId"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceIdentifier"
          },
          {
            "properties": {
              "typeId": {
                "title": "typeId",
                "$ref": "#/components/schemas/ReferenceTypeId"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference",
        "type": "string"
      },
      "ReferenceTypeId": {
        "title": "ReferenceTypeId",
        "enum": [
          "cart",
          "cart-discount",
          "category",
          "channel",
          "customer",
          "customer-group",
          "discount-code",
          "key-value-document",
          "payment",
          "product",
          "product-type",
          "product-discount",
          "order",
          "review",
          "shopping-list",
          "shipping-method",
          "state",
          "tax-category",
          "type",
          "zone",
          "inventory-entry"
        ],
        "includePath": "types/common/ReferenceTypeId.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "Resource": {
        "title": "Resource",
        "includePath": "types/common/Resource.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "x-annotation-identifier": true
          },
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          },
          "createdAt": {
            "title": "createdAt",
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "title": "lastModifiedAt",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "version",
          "createdAt",
          "lastModifiedAt"
        ],
        "x-annotation-package": "Common"
      },
      "ResourceIdentifier": {
        "title": "ResourceIdentifier",
        "includePath": "types/common/ResourceIdentifier.raml",
        "type": "object",
        "properties": {
          "typeId": {
            "title": "typeId",
            "$ref": "#/components/schemas/ReferenceTypeId"
          },
          "id": {
            "title": "id",
            "type": "string"
          },
          "key": {
            "title": "key",
            "type": "string"
          }
        },
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#resourceidentifier"
      },
      "ScopedPrice": {
        "title": "ScopedPrice",
        "includePath": "types/common/ScopedPrice.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "currentValue": {
            "title": "currentValue",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "country": {
            "title": "country",
            "$ref": "#/components/schemas/CountryCode"
          },
          "customerGroup": {
            "title": "customerGroup",
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "channel": {
            "title": "channel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "validFrom": {
            "title": "validFrom",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "title": "validUntil",
            "type": "string",
            "format": "date-time"
          },
          "discounted": {
            "title": "discounted",
            "$ref": "#/components/schemas/DiscountedPrice"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          }
        },
        "required": [
          "id",
          "value",
          "currentValue"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#scopedprice"
      },
      "TypedMoney": {
        "title": "TypedMoney",
        "includePath": "types/common/TypedMoney.raml",
        "discriminator": {
          "propertyName": "type"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Money"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/MoneyType"
              },
              "fractionDigits": {
                "title": "fractionDigits",
                "maximum": 12,
                "format": "int32",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money",
        "type": "string"
      },
      "CustomObject": {
        "title": "CustomObject",
        "includePath": "types/custom-object/CustomObject.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "container": {
                "title": "container",
                "type": "string"
              },
              "key": {
                "title": "key",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomObject",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#customobject",
        "type": "string"
      },
      "CustomObjectDraft": {
        "title": "CustomObjectDraft",
        "includePath": "types/custom-object/CustomObjectDraft.raml",
        "type": "object",
        "properties": {
          "container": {
            "title": "container",
            "type": "string"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "value": {
            "title": "value",
            "type": "string"
          },
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "container",
          "key",
          "value"
        ],
        "x-annotation-package": "CustomObject",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#create-a-customobject"
      },
      "CustomObjectPagedQueryResponse": {
        "title": "CustomObjectPagedQueryResponse",
        "includePath": "types/custom-object/CustomObjectPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomObject"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomObject",
        "type": "string"
      },
      "CustomObjectReference": {
        "title": "CustomObjectReference",
        "includePath": "types/custom-object/CustomObjectReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/CustomObject"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomObject",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference-types",
        "type": "string"
      },
      "CustomerGroup": {
        "title": "CustomerGroup",
        "includePath": "types/customer-group/CustomerGroup.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "name": {
                "title": "name",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup",
        "x-annotation-updateType": "CustomerGroupUpdate",
        "type": "string"
      },
      "CustomerGroupDraft": {
        "title": "CustomerGroupDraft",
        "includePath": "types/customer-group/CustomerGroupDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "groupName": {
            "title": "groupName",
            "type": "string"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          }
        },
        "required": [
          "groupName"
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#create-a-customergroup"
      },
      "CustomerGroupPagedQueryResponse": {
        "title": "CustomerGroupPagedQueryResponse",
        "includePath": "types/customer-group/CustomerGroupPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "type": "string"
      },
      "CustomerGroupReference": {
        "title": "CustomerGroupReference",
        "includePath": "types/customer-group/CustomerGroupReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/CustomerGroup"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup",
        "type": "string"
      },
      "CustomerGroupUpdate": {
        "title": "CustomerGroupUpdate",
        "includePath": "types/customer-group/CustomerGroupUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerGroupUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "type": "string"
      },
      "CustomerGroupUpdateAction": {
        "title": "CustomerGroupUpdateAction",
        "includePath": "types/customer-group/CustomerGroupUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "CustomerGroup"
      },
      "CustomerGroupChangeNameAction": {
        "title": "CustomerGroupChangeNameAction",
        "includePath": "types/customer-group/updates/CustomerGroupChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#change-name",
        "type": "string"
      },
      "CustomerGroupSetCustomFieldAction": {
        "title": "CustomerGroupSetCustomFieldAction",
        "includePath": "types/customer-group/updates/CustomerGroupSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-customfield",
        "type": "string"
      },
      "CustomerGroupSetCustomTypeAction": {
        "title": "CustomerGroupSetCustomTypeAction",
        "includePath": "types/customer-group/updates/CustomerGroupSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-custom-type",
        "type": "string"
      },
      "CustomerGroupSetKeyAction": {
        "title": "CustomerGroupSetKeyAction",
        "includePath": "types/customer-group/updates/CustomerGroupSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-key",
        "type": "string"
      },
      "AnonymousCartSignInMode": {
        "title": "AnonymousCartSignInMode",
        "enum": [
          "MergeWithExistingCustomerCart",
          "UseAsNewActiveCustomerCart"
        ],
        "includePath": "types/customer/AnonymousCartSignInMode.raml",
        "type": "string",
        "x-annotation-package": "Customer"
      },
      "Customer": {
        "title": "Customer",
        "includePath": "types/customer/Customer.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "customerNumber": {
                "title": "customerNumber",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setCustomerNumber"
              },
              "email": {
                "title": "email",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeEmail"
              },
              "password": {
                "title": "password",
                "type": "string"
              },
              "firstName": {
                "title": "firstName",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setFirstName"
              },
              "lastName": {
                "title": "lastName",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setLastName"
              },
              "middleName": {
                "title": "middleName",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setMiddleName"
              },
              "title": {
                "title": "title",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setTitle"
              },
              "dateOfBirth": {
                "title": "dateOfBirth",
                "type": "string",
                "format": "date",
                "x-annotation-hasSimpleUpdateAction": "setDateOfBirth"
              },
              "companyName": {
                "title": "companyName",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setCompanyName"
              },
              "vatId": {
                "title": "vatId",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setVatId"
              },
              "addresses": {
                "title": "addresses",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addAddress",
                    "fields": {
                      "address": "Address"
                    }
                  },
                  {
                    "action": "changeAddress",
                    "fields": {
                      "addressId": "string",
                      "address": "Address"
                    }
                  },
                  {
                    "action": "removeAddress",
                    "fields": {
                      "addressId": "string"
                    }
                  }
                ]
              },
              "defaultShippingAddressId": {
                "title": "defaultShippingAddressId",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "setDefaultShippingAddress",
                  "fields": {
                    "addressId?": "string"
                  }
                }
              },
              "shippingAddressIds": {
                "title": "shippingAddressIds",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addShippingAddressId",
                    "fields": {
                      "addressId": "string"
                    }
                  },
                  {
                    "action": "removeShippingAddressId",
                    "fields": {
                      "addressId": "string"
                    }
                  }
                ]
              },
              "defaultBillingAddressId": {
                "title": "defaultBillingAddressId",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "setDefaultBillingAddress",
                  "fields": {
                    "addressId?": "string"
                  }
                }
              },
              "billingAddressIds": {
                "title": "billingAddressIds",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addBillingAddressId",
                    "fields": {
                      "addressId": "string"
                    }
                  },
                  {
                    "action": "removeBillingAddressId",
                    "fields": {
                      "addressId": "string"
                    }
                  }
                ]
              },
              "isEmailVerified": {
                "title": "isEmailVerified",
                "type": "boolean"
              },
              "externalId": {
                "title": "externalId",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setExternalId"
              },
              "customerGroup": {
                "title": "customerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference",
                "x-annotation-hasUpdateAction": {
                  "action": "setCustomerGroup",
                  "docsAnchor": "set-customergroup"
                }
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "locale": {
                "title": "locale",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setLocale"
              },
              "salutation": {
                "title": "salutation",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setSalutation"
              },
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer",
        "x-annotation-updateType": "CustomerUpdate",
        "type": "string"
      },
      "CustomerChangePassword": {
        "title": "CustomerChangePassword",
        "includePath": "types/customer/CustomerChangePassword.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          },
          "currentPassword": {
            "title": "currentPassword",
            "type": "string"
          },
          "newPassword": {
            "title": "newPassword",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version",
          "currentPassword",
          "newPassword"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerCreateEmailToken": {
        "title": "CustomerCreateEmailToken",
        "includePath": "types/customer/CustomerCreateEmailToken.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          },
          "ttlMinutes": {
            "title": "ttlMinutes",
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "id",
          "ttlMinutes"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerCreatePasswordResetToken": {
        "title": "CustomerCreatePasswordResetToken",
        "includePath": "types/customer/CustomerCreatePasswordResetToken.raml",
        "type": "object",
        "properties": {
          "email": {
            "title": "email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerDraft": {
        "title": "CustomerDraft",
        "includePath": "types/customer/CustomerDraft.raml",
        "type": "object",
        "properties": {
          "customerNumber": {
            "title": "customerNumber",
            "type": "string"
          },
          "email": {
            "title": "email",
            "type": "string"
          },
          "password": {
            "title": "password",
            "type": "string"
          },
          "firstName": {
            "title": "firstName",
            "type": "string"
          },
          "lastName": {
            "title": "lastName",
            "type": "string"
          },
          "middleName": {
            "title": "middleName",
            "type": "string"
          },
          "title": {
            "title": "title",
            "type": "string"
          },
          "anonymousCartId": {
            "title": "anonymousCartId",
            "type": "string"
          },
          "anonymousId": {
            "title": "anonymousId",
            "type": "string"
          },
          "dateOfBirth": {
            "title": "dateOfBirth",
            "type": "string",
            "format": "date"
          },
          "companyName": {
            "title": "companyName",
            "type": "string"
          },
          "vatId": {
            "title": "vatId",
            "type": "string"
          },
          "addresses": {
            "title": "addresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "defaultShippingAddress": {
            "title": "defaultShippingAddress",
            "format": "int64",
            "type": "number"
          },
          "shippingAddresses": {
            "title": "shippingAddresses",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "defaultBillingAddress": {
            "title": "defaultBillingAddress",
            "format": "int64",
            "type": "number"
          },
          "billingAddresses": {
            "title": "billingAddresses",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "isEmailVerified": {
            "title": "isEmailVerified",
            "type": "boolean"
          },
          "externalId": {
            "title": "externalId",
            "type": "string"
          },
          "customerGroup": {
            "title": "customerGroup",
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "locale": {
            "title": "locale",
            "type": "string"
          },
          "salutation": {
            "title": "salutation",
            "type": "string"
          },
          "key": {
            "title": "key",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customerdraft"
      },
      "CustomerEmailVerify": {
        "title": "CustomerEmailVerify",
        "includePath": "types/customer/CustomerEmailVerify.raml",
        "type": "object",
        "properties": {
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          },
          "tokenValue": {
            "title": "tokenValue",
            "type": "string"
          }
        },
        "required": [
          "tokenValue"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerPagedQueryResponse": {
        "title": "CustomerPagedQueryResponse",
        "includePath": "types/customer/CustomerPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "type": "string"
      },
      "CustomerReference": {
        "title": "CustomerReference",
        "includePath": "types/customer/CustomerReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Customer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer",
        "type": "string"
      },
      "CustomerResetPassword": {
        "title": "CustomerResetPassword",
        "includePath": "types/customer/CustomerResetPassword.raml",
        "type": "object",
        "properties": {
          "tokenValue": {
            "title": "tokenValue",
            "type": "string"
          },
          "newPassword": {
            "title": "newPassword",
            "type": "string"
          },
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "tokenValue",
          "newPassword"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerSignInResult": {
        "title": "CustomerSignInResult",
        "includePath": "types/customer/CustomerSignInResult.raml",
        "type": "object",
        "properties": {
          "customer": {
            "title": "customer",
            "$ref": "#/components/schemas/Customer"
          },
          "cart": {
            "title": "cart",
            "type": "object"
          }
        },
        "required": [
          "customer"
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customersigninresult"
      },
      "CustomerSignin": {
        "title": "CustomerSignin",
        "includePath": "types/customer/CustomerSignin.raml",
        "type": "object",
        "properties": {
          "email": {
            "title": "email",
            "type": "string"
          },
          "password": {
            "title": "password",
            "type": "string"
          },
          "anonymousCartId": {
            "title": "anonymousCartId",
            "type": "string"
          },
          "anonymousCartSignInMode": {
            "title": "anonymousCartSignInMode",
            "$ref": "#/components/schemas/AnonymousCartSignInMode"
          },
          "anonymousId": {
            "title": "anonymousId",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerToken": {
        "title": "CustomerToken",
        "includePath": "types/customer/CustomerToken.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "createdAt": {
            "title": "createdAt",
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "title": "lastModifiedAt",
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "title": "customerId",
            "type": "string"
          },
          "expiresAt": {
            "title": "expiresAt",
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "title": "value",
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "customerId",
          "expiresAt",
          "value"
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customertoken"
      },
      "CustomerUpdate": {
        "title": "CustomerUpdate",
        "includePath": "types/customer/CustomerUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "type": "string"
      },
      "CustomerUpdateAction": {
        "title": "CustomerUpdateAction",
        "includePath": "types/customer/CustomerUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Customer"
      },
      "CustomerAddAddressAction": {
        "title": "CustomerAddAddressAction",
        "includePath": "types/customer/updates/CustomerAddAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-address",
        "type": "string"
      },
      "CustomerAddBillingAddressIdAction": {
        "title": "CustomerAddBillingAddressIdAction",
        "includePath": "types/customer/updates/CustomerAddBillingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-billing-address-id",
        "type": "string"
      },
      "CustomerAddShippingAddressIdAction": {
        "title": "CustomerAddShippingAddressIdAction",
        "includePath": "types/customer/updates/CustomerAddShippingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-shipping-address-id",
        "type": "string"
      },
      "CustomerChangeAddressAction": {
        "title": "CustomerChangeAddressAction",
        "includePath": "types/customer/updates/CustomerChangeAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              },
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-address",
        "type": "string"
      },
      "CustomerChangeEmailAction": {
        "title": "CustomerChangeEmailAction",
        "includePath": "types/customer/updates/CustomerChangeEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "email": {
                "title": "email",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-email",
        "type": "string"
      },
      "CustomerRemoveAddressAction": {
        "title": "CustomerRemoveAddressAction",
        "includePath": "types/customer/updates/CustomerRemoveAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-address",
        "type": "string"
      },
      "CustomerRemoveBillingAddressIdAction": {
        "title": "CustomerRemoveBillingAddressIdAction",
        "includePath": "types/customer/updates/CustomerRemoveBillingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-billing-address-id",
        "type": "string"
      },
      "CustomerRemoveShippingAddressIdAction": {
        "title": "CustomerRemoveShippingAddressIdAction",
        "includePath": "types/customer/updates/CustomerRemoveShippingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-shipping-address-id",
        "type": "string"
      },
      "CustomerSetCompanyNameAction": {
        "title": "CustomerSetCompanyNameAction",
        "includePath": "types/customer/updates/CustomerSetCompanyNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "companyName": {
                "title": "companyName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-company-name",
        "type": "string"
      },
      "CustomerSetCustomFieldAction": {
        "title": "CustomerSetCustomFieldAction",
        "includePath": "types/customer/updates/CustomerSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customfield",
        "type": "string"
      },
      "CustomerSetCustomTypeAction": {
        "title": "CustomerSetCustomTypeAction",
        "includePath": "types/customer/updates/CustomerSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-custom-type",
        "type": "string"
      },
      "CustomerSetCustomerGroupAction": {
        "title": "CustomerSetCustomerGroupAction",
        "includePath": "types/customer/updates/CustomerSetCustomerGroupAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "customerGroup": {
                "title": "customerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customergroup",
        "type": "string"
      },
      "CustomerSetCustomerNumberAction": {
        "title": "CustomerSetCustomerNumberAction",
        "includePath": "types/customer/updates/CustomerSetCustomerNumberAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "customerNumber": {
                "title": "customerNumber",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customer-number",
        "type": "string"
      },
      "CustomerSetDateOfBirthAction": {
        "title": "CustomerSetDateOfBirthAction",
        "includePath": "types/customer/updates/CustomerSetDateOfBirthAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "dateOfBirth": {
                "title": "dateOfBirth",
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-date-of-birth",
        "type": "string"
      },
      "CustomerSetDefaultBillingAddressAction": {
        "title": "CustomerSetDefaultBillingAddressAction",
        "includePath": "types/customer/updates/CustomerSetDefaultBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-billing-address",
        "type": "string"
      },
      "CustomerSetDefaultShippingAddressAction": {
        "title": "CustomerSetDefaultShippingAddressAction",
        "includePath": "types/customer/updates/CustomerSetDefaultShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "title": "addressId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-shipping-address",
        "type": "string"
      },
      "CustomerSetExternalIdAction": {
        "title": "CustomerSetExternalIdAction",
        "includePath": "types/customer/updates/CustomerSetExternalIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "externalId": {
                "title": "externalId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-external-id",
        "type": "string"
      },
      "CustomerSetFirstNameAction": {
        "title": "CustomerSetFirstNameAction",
        "includePath": "types/customer/updates/CustomerSetFirstNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "firstName": {
                "title": "firstName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-first-name",
        "type": "string"
      },
      "CustomerSetKeyAction": {
        "title": "CustomerSetKeyAction",
        "includePath": "types/customer/updates/CustomerSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-key",
        "type": "string"
      },
      "CustomerSetLastNameAction": {
        "title": "CustomerSetLastNameAction",
        "includePath": "types/customer/updates/CustomerSetLastNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "lastName": {
                "title": "lastName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-last-name",
        "type": "string"
      },
      "CustomerSetLocaleAction": {
        "title": "CustomerSetLocaleAction",
        "includePath": "types/customer/updates/CustomerSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "title": "locale",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-locale",
        "type": "string"
      },
      "CustomerSetMiddleNameAction": {
        "title": "CustomerSetMiddleNameAction",
        "includePath": "types/customer/updates/CustomerSetMiddleNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "middleName": {
                "title": "middleName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-middle-name",
        "type": "string"
      },
      "CustomerSetSalutationAction": {
        "title": "CustomerSetSalutationAction",
        "includePath": "types/customer/updates/CustomerSetSalutationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "salutation": {
                "title": "salutation",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-salutation",
        "type": "string"
      },
      "CustomerSetTitleAction": {
        "title": "CustomerSetTitleAction",
        "includePath": "types/customer/updates/CustomerSetTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "title": {
                "title": "title",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-title",
        "type": "string"
      },
      "CustomerSetVatIdAction": {
        "title": "CustomerSetVatIdAction",
        "includePath": "types/customer/updates/CustomerSetVatIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "vatId": {
                "title": "vatId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-vat-id",
        "type": "string"
      },
      "DiscountCode": {
        "title": "DiscountCode",
        "includePath": "types/discount-code/DiscountCode.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setName"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "code": {
                "title": "code",
                "type": "string"
              },
              "cartDiscounts": {
                "title": "cartDiscounts",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                },
                "x-annotation-hasUpdateAction": {
                  "action": "changeCartDiscounts",
                  "docsAnchor": "change-cartdiscounts"
                }
              },
              "cartPredicate": {
                "title": "cartPredicate",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setCartPredicate"
              },
              "isActive": {
                "title": "isActive",
                "type": "boolean",
                "x-annotation-hasUpdateAction": {
                  "action": "changeIsActive",
                  "docsAnchor": "change-isactive"
                }
              },
              "references": {
                "title": "references",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                }
              },
              "maxApplications": {
                "title": "maxApplications",
                "format": "int64",
                "type": "number",
                "x-annotation-hasSimpleUpdateAction": "setMaxApplications"
              },
              "maxApplicationsPerCustomer": {
                "title": "maxApplicationsPerCustomer",
                "format": "int64",
                "type": "number",
                "x-annotation-hasSimpleUpdateAction": "setMaxApplicationsPerCustomer"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "groups": {
                "title": "groups",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-annotation-hasSimpleUpdateAction": "changeGroups"
              },
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time",
                "x-annotation-hasUpdateAction": {
                  "action": "setValidFrom",
                  "docsAnchor": "set-validfrom"
                }
              },
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time",
                "x-annotation-hasUpdateAction": {
                  "action": "setValidUntil",
                  "docsAnchor": "set-validuntil"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode",
        "x-annotation-updateType": "DiscountCodeUpdate",
        "x-annotation-hasUpdateActions": [
          {
            "action": "setValidFromAndUntil",
            "fields": {
              "validFrom?": {
                "type": "datetime"
              },
              "validUntil?": {
                "type": "datetime"
              }
            }
          }
        ],
        "type": "string"
      },
      "DiscountCodeDraft": {
        "title": "DiscountCodeDraft",
        "includePath": "types/discount-code/DiscountCodeDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "code": {
            "title": "code",
            "type": "string"
          },
          "cartDiscounts": {
            "title": "cartDiscounts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartDiscountReference"
            }
          },
          "cartPredicate": {
            "title": "cartPredicate",
            "type": "string"
          },
          "isActive": {
            "title": "isActive",
            "type": "boolean"
          },
          "maxApplications": {
            "title": "maxApplications",
            "format": "int64",
            "type": "number"
          },
          "maxApplicationsPerCustomer": {
            "title": "maxApplicationsPerCustomer",
            "format": "int64",
            "type": "number"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "groups": {
            "title": "groups",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validFrom": {
            "title": "validFrom",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "title": "validUntil",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "code",
          "cartDiscounts"
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcodedraft"
      },
      "DiscountCodePagedQueryResponse": {
        "title": "DiscountCodePagedQueryResponse",
        "includePath": "types/discount-code/DiscountCodePagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "type": "string"
      },
      "DiscountCodeReference": {
        "title": "DiscountCodeReference",
        "includePath": "types/discount-code/DiscountCodeReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/DiscountCode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode",
        "type": "string"
      },
      "DiscountCodeUpdate": {
        "title": "DiscountCodeUpdate",
        "includePath": "types/discount-code/DiscountCodeUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCodeUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "type": "string"
      },
      "DiscountCodeUpdateAction": {
        "title": "DiscountCodeUpdateAction",
        "includePath": "types/discount-code/DiscountCodeUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "DiscountCode"
      },
      "DiscountCodeChangeCartDiscountsAction": {
        "title": "DiscountCodeChangeCartDiscountsAction",
        "includePath": "types/discount-code/updates/DiscountCodeChangeCartDiscountsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "cartDiscounts": {
                "title": "cartDiscounts",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-cartdiscounts",
        "type": "string"
      },
      "DiscountCodeChangeGroupsAction": {
        "title": "DiscountCodeChangeGroupsAction",
        "includePath": "types/discount-code/updates/DiscountCodeChangeGroupsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "groups": {
                "title": "groups",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-groups",
        "type": "string"
      },
      "DiscountCodeChangeIsActiveAction": {
        "title": "DiscountCodeChangeIsActiveAction",
        "includePath": "types/discount-code/updates/DiscountCodeChangeIsActiveAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "isActive": {
                "title": "isActive",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-isactive",
        "type": "string"
      },
      "DiscountCodeSetCartPredicateAction": {
        "title": "DiscountCodeSetCartPredicateAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetCartPredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "cartPredicate": {
                "title": "cartPredicate",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-cart-predicate",
        "type": "string"
      },
      "DiscountCodeSetCustomFieldAction": {
        "title": "DiscountCodeSetCustomFieldAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-customfield",
        "type": "string"
      },
      "DiscountCodeSetCustomTypeAction": {
        "title": "DiscountCodeSetCustomTypeAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-custom-type",
        "type": "string"
      },
      "DiscountCodeSetDescriptionAction": {
        "title": "DiscountCodeSetDescriptionAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-description",
        "type": "string"
      },
      "DiscountCodeSetMaxApplicationsAction": {
        "title": "DiscountCodeSetMaxApplicationsAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetMaxApplicationsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "maxApplications": {
                "title": "maxApplications",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications",
        "type": "string"
      },
      "DiscountCodeSetMaxApplicationsPerCustomerAction": {
        "title": "DiscountCodeSetMaxApplicationsPerCustomerAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetMaxApplicationsPerCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "maxApplicationsPerCustomer": {
                "title": "maxApplicationsPerCustomer",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications-per-customer",
        "type": "string"
      },
      "DiscountCodeSetNameAction": {
        "title": "DiscountCodeSetNameAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-name",
        "type": "string"
      },
      "DiscountCodeSetValidFromAction": {
        "title": "DiscountCodeSetValidFromAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetValidFromAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validfrom",
        "type": "string"
      },
      "DiscountCodeSetValidFromAndUntilAction": {
        "title": "DiscountCodeSetValidFromAndUntilAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetValidFromAndUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-valid-from-and-until",
        "type": "string"
      },
      "DiscountCodeSetValidUntilAction": {
        "title": "DiscountCodeSetValidUntilAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetValidUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validuntil",
        "type": "string"
      },
      "AccessDeniedError": {
        "title": "AccessDeniedError",
        "includePath": "types/error/AccessDeniedError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "ConcurrentModificationError": {
        "title": "ConcurrentModificationError",
        "includePath": "types/error/ConcurrentModificationError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "currentVersion": {
                "title": "currentVersion",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DiscountCodeNonApplicableError": {
        "title": "DiscountCodeNonApplicableError",
        "includePath": "types/error/DiscountCodeNonApplicableError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "DuplicateAttributeValueError": {
        "title": "DuplicateAttributeValueError",
        "includePath": "types/error/DuplicateAttributeValueError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "attribute": {
                "title": "attribute",
                "$ref": "#/components/schemas/Attribute"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateAttributeValuesError": {
        "title": "DuplicateAttributeValuesError",
        "includePath": "types/error/DuplicateAttributeValuesError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "attributes": {
                "title": "attributes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attribute"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateFieldError": {
        "title": "DuplicateFieldError",
        "includePath": "types/error/DuplicateFieldError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "field": {
                "title": "field",
                "type": "string"
              },
              "duplicateValue": {
                "title": "duplicateValue",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicatePriceScopeError": {
        "title": "DuplicatePriceScopeError",
        "includePath": "types/error/DuplicatePriceScopeError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "conflictingPrices": {
                "title": "conflictingPrices",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateVariantValuesError": {
        "title": "DuplicateVariantValuesError",
        "includePath": "types/error/DuplicateVariantValuesError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "variantValues": {
                "title": "variantValues",
                "$ref": "#/components/schemas/VariantValues"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "ErrorObject": {
        "title": "ErrorObject",
        "includePath": "types/error/ErrorObject.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "code"
        },
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          },
          "message": {
            "title": "message",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-annotation-package": "Error"
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "includePath": "types/error/ErrorResponse.raml",
        "type": "object",
        "properties": {
          "statusCode": {
            "title": "statusCode",
            "type": "integer"
          },
          "message": {
            "title": "message",
            "type": "string"
          },
          "error": {
            "title": "error",
            "type": "string"
          },
          "error_description": {
            "title": "error_description",
            "type": "string"
          },
          "errors": {
            "title": "errors",
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "statusCode",
          "message"
        ],
        "x-annotation-package": "Error"
      },
      "InsufficientScopeError": {
        "title": "InsufficientScopeError",
        "includePath": "types/error/InsufficientScopeError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidCredentialsError": {
        "title": "InvalidCredentialsError",
        "includePath": "types/error/InvalidCredentialsError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidCurrentPasswordError": {
        "title": "InvalidCurrentPasswordError",
        "includePath": "types/error/InvalidCurrentPasswordError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidFieldError": {
        "title": "InvalidFieldError",
        "includePath": "types/error/InvalidFieldError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "field": {
                "title": "field",
                "type": "string"
              },
              "invalidValue": {
                "title": "invalidValue",
                "type": "string"
              },
              "allowedValues": {
                "title": "allowedValues",
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "InvalidItemShippingDetailsError": {
        "title": "InvalidItemShippingDetailsError",
        "includePath": "types/error/InvalidItemShippingDetailsError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "subject": {
                "title": "subject",
                "type": "string"
              },
              "itemId": {
                "title": "itemId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "InvalidOperationError": {
        "title": "InvalidOperationError",
        "includePath": "types/error/InvalidOperationError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidSubjectError": {
        "title": "InvalidSubjectError",
        "includePath": "types/error/InvalidSubjectError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidTokenError": {
        "title": "InvalidTokenError",
        "includePath": "types/error/InvalidTokenError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "OutOfStockError": {
        "title": "OutOfStockError",
        "includePath": "types/error/OutOfStockError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "lineItems": {
                "title": "lineItems",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "skus": {
                "title": "skus",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "PriceChangedError": {
        "title": "PriceChangedError",
        "includePath": "types/error/PriceChangedError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "lineItems": {
                "title": "lineItems",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "shipping": {
                "title": "shipping",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "RequiredFieldError": {
        "title": "RequiredFieldError",
        "includePath": "types/error/RequiredFieldError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "field": {
                "title": "field",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "ResourceNotFoundError": {
        "title": "ResourceNotFoundError",
        "includePath": "types/error/ResourceNotFoundError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "VariantValues": {
        "title": "VariantValues",
        "includePath": "types/error/VariantValues.raml",
        "type": "object",
        "properties": {
          "sku": {
            "title": "sku",
            "type": "string"
          },
          "prices": {
            "title": "prices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "attributes": {
            "title": "attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          }
        },
        "required": [
          "prices",
          "attributes"
        ],
        "x-annotation-package": "Error"
      },
      "Extension": {
        "title": "Extension",
        "includePath": "types/extension/Extension.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "destination": {
                "title": "destination",
                "$ref": "#/components/schemas/ExtensionDestination",
                "x-annotation-hasSimpleUpdateAction": "changeDestination"
              },
              "triggers": {
                "title": "triggers",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExtensionTrigger"
                },
                "x-annotation-hasSimpleUpdateAction": "changeTriggers"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html",
        "x-annotation-updateType": "ExtensionUpdate",
        "type": "string"
      },
      "ExtensionAWSLambdaDestination": {
        "title": "ExtensionAWSLambdaDestination",
        "includePath": "types/extension/ExtensionAWSLambdaDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionDestination"
          },
          {
            "properties": {
              "arn": {
                "title": "arn",
                "type": "string"
              },
              "accessKey": {
                "title": "accessKey",
                "type": "string"
              },
              "accessSecret": {
                "title": "accessSecret",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionAction": {
        "title": "ExtensionAction",
        "enum": [
          "Create",
          "Update"
        ],
        "includePath": "types/extension/ExtensionAction.raml",
        "type": "string",
        "x-annotation-package": "Extension"
      },
      "ExtensionAuthorizationHeaderAuthentication": {
        "title": "ExtensionAuthorizationHeaderAuthentication",
        "includePath": "types/extension/ExtensionAuthorizationHeaderAuthentication.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionHttpDestinationAuthentication"
          },
          {
            "properties": {
              "headerValue": {
                "title": "headerValue",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionAzureFunctionsAuthentication": {
        "title": "ExtensionAzureFunctionsAuthentication",
        "includePath": "types/extension/ExtensionAzureFunctionsAuthentication.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionHttpDestinationAuthentication"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionDestination": {
        "title": "ExtensionDestination",
        "includePath": "types/extension/ExtensionDestination.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionDraft": {
        "title": "ExtensionDraft",
        "includePath": "types/extension/ExtensionDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "destination": {
            "title": "destination",
            "$ref": "#/components/schemas/ExtensionDestination"
          },
          "triggers": {
            "title": "triggers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionTrigger"
            }
          }
        },
        "required": [
          "destination",
          "triggers"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionHttpDestination": {
        "title": "ExtensionHttpDestination",
        "includePath": "types/extension/ExtensionHttpDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionDestination"
          },
          {
            "properties": {
              "url": {
                "title": "url",
                "type": "string"
              },
              "authentication": {
                "title": "authentication",
                "$ref": "#/components/schemas/ExtensionHttpDestinationAuthentication"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionHttpDestinationAuthentication": {
        "title": "ExtensionHttpDestinationAuthentication",
        "includePath": "types/extension/ExtensionHttpDestinationAuthentication.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionInput": {
        "title": "ExtensionInput",
        "includePath": "types/extension/ExtensionInput.raml",
        "type": "object",
        "properties": {
          "action": {
            "title": "action",
            "$ref": "#/components/schemas/ExtensionAction"
          },
          "resource": {
            "title": "resource",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "required": [
          "action",
          "resource"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionPagedQueryResponse": {
        "title": "ExtensionPagedQueryResponse",
        "includePath": "types/extension/ExtensionPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionResourceTypeId": {
        "title": "ExtensionResourceTypeId",
        "enum": [
          "cart",
          "order",
          "payment",
          "customer"
        ],
        "includePath": "types/extension/ExtensionResourceTypeId.raml",
        "type": "string",
        "x-annotation-package": "Extension"
      },
      "ExtensionTrigger": {
        "title": "ExtensionTrigger",
        "includePath": "types/extension/ExtensionTrigger.raml",
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "title": "resourceTypeId",
            "$ref": "#/components/schemas/ExtensionResourceTypeId"
          },
          "actions": {
            "title": "actions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionAction"
            }
          }
        },
        "required": [
          "resourceTypeId",
          "actions"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionUpdate": {
        "title": "ExtensionUpdate",
        "includePath": "types/extension/ExtensionUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExtensionUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionUpdateAction": {
        "title": "ExtensionUpdateAction",
        "includePath": "types/extension/ExtensionUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Extension"
      },
      "ExtensionChangeDestinationAction": {
        "title": "ExtensionChangeDestinationAction",
        "includePath": "types/extension/updates/ExtensionChangeDestinationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionUpdateAction"
          },
          {
            "properties": {
              "destination": {
                "title": "destination",
                "$ref": "#/components/schemas/ExtensionDestination"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#change-destination",
        "type": "string"
      },
      "ExtensionChangeTriggersAction": {
        "title": "ExtensionChangeTriggersAction",
        "includePath": "types/extension/updates/ExtensionChangeTriggersAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionUpdateAction"
          },
          {
            "properties": {
              "triggers": {
                "title": "triggers",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExtensionTrigger"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#change-triggers",
        "type": "string"
      },
      "ExtensionSetKeyAction": {
        "title": "ExtensionSetKeyAction",
        "includePath": "types/extension/updates/ExtensionSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#set-key",
        "type": "string"
      },
      "InventoryEntry": {
        "title": "InventoryEntry",
        "includePath": "types/inventory/InventoryEntry.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "supplyChannel": {
                "title": "supplyChannel",
                "$ref": "#/components/schemas/ChannelReference",
                "x-annotation-hasUpdateAction": {
                  "action": "setSupplyChannel",
                  "docsAnchor": "set-supplychannel"
                }
              },
              "quantityOnStock": {
                "title": "quantityOnStock",
                "format": "int64",
                "type": "number",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addQuantity",
                    "fields": {
                      "quantity": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  },
                  {
                    "action": "removeQuantity",
                    "fields": {
                      "quantity": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  },
                  {
                    "action": "changeQuantity",
                    "fields": {
                      "quantity": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  }
                ]
              },
              "availableQuantity": {
                "title": "availableQuantity",
                "format": "int64",
                "type": "number"
              },
              "restockableInDays": {
                "title": "restockableInDays",
                "format": "int64",
                "type": "number",
                "x-annotation-hasUpdateAction": {
                  "action": "setRestockableInDays",
                  "docsAnchor": "set-restockableindays"
                }
              },
              "expectedDelivery": {
                "title": "expectedDelivery",
                "type": "string",
                "format": "date-time",
                "x-annotation-hasUpdateAction": {
                  "action": "setExpectedDelivery",
                  "docsAnchor": "set-expecteddelivery"
                }
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentry",
        "x-annotation-updateType": "InventoryUpdate",
        "type": "string"
      },
      "InventoryEntryDraft": {
        "title": "InventoryEntryDraft",
        "includePath": "types/inventory/InventoryEntryDraft.raml",
        "type": "object",
        "properties": {
          "sku": {
            "title": "sku",
            "type": "string"
          },
          "supplyChannel": {
            "title": "supplyChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "quantityOnStock": {
            "title": "quantityOnStock",
            "format": "int64",
            "type": "number"
          },
          "restockableInDays": {
            "title": "restockableInDays",
            "format": "int64",
            "type": "number"
          },
          "expectedDelivery": {
            "title": "expectedDelivery",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          }
        },
        "required": [
          "sku",
          "quantityOnStock"
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentrydraft"
      },
      "InventoryEntryReference": {
        "title": "InventoryEntryReference",
        "includePath": "types/inventory/InventoryEntryReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/InventoryEntry"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "type": "string"
      },
      "InventoryPagedQueryResponse": {
        "title": "InventoryPagedQueryResponse",
        "includePath": "types/inventory/InventoryPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryEntry"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "type": "string"
      },
      "InventoryUpdate": {
        "title": "InventoryUpdate",
        "includePath": "types/inventory/InventoryUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "type": "string"
      },
      "InventoryUpdateAction": {
        "title": "InventoryUpdateAction",
        "includePath": "types/inventory/InventoryUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Inventory"
      },
      "InventoryAddQuantityAction": {
        "title": "InventoryAddQuantityAction",
        "includePath": "types/inventory/updates/InventoryAddQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#add-quantity",
        "type": "string"
      },
      "InventoryChangeQuantityAction": {
        "title": "InventoryChangeQuantityAction",
        "includePath": "types/inventory/updates/InventoryChangeQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#change-quantity",
        "type": "string"
      },
      "InventoryRemoveQuantityAction": {
        "title": "InventoryRemoveQuantityAction",
        "includePath": "types/inventory/updates/InventoryRemoveQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#remove-quantity",
        "type": "string"
      },
      "InventorySetCustomFieldAction": {
        "title": "InventorySetCustomFieldAction",
        "includePath": "types/inventory/updates/InventorySetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-customfield",
        "type": "string"
      },
      "InventorySetCustomTypeAction": {
        "title": "InventorySetCustomTypeAction",
        "includePath": "types/inventory/updates/InventorySetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-custom-type",
        "type": "string"
      },
      "InventorySetExpectedDeliveryAction": {
        "title": "InventorySetExpectedDeliveryAction",
        "includePath": "types/inventory/updates/InventorySetExpectedDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "expectedDelivery": {
                "title": "expectedDelivery",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-expecteddelivery",
        "type": "string"
      },
      "InventorySetRestockableInDaysAction": {
        "title": "InventorySetRestockableInDaysAction",
        "includePath": "types/inventory/updates/InventorySetRestockableInDaysAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "restockableInDays": {
                "title": "restockableInDays",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-restockableindays",
        "type": "string"
      },
      "InventorySetSupplyChannelAction": {
        "title": "InventorySetSupplyChannelAction",
        "includePath": "types/inventory/updates/InventorySetSupplyChannelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryUpdateAction"
          },
          {
            "properties": {
              "supplyChannel": {
                "title": "supplyChannel",
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-supplychannel",
        "type": "string"
      },
      "MyCartDraft": {
        "title": "MyCartDraft",
        "includePath": "types/me/MyCartDraft.raml",
        "type": "object",
        "properties": {
          "currency": {
            "title": "currency",
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "customerEmail": {
            "title": "customerEmail",
            "type": "string"
          },
          "country": {
            "title": "country",
            "type": "string"
          },
          "inventoryMode": {
            "title": "inventoryMode",
            "$ref": "#/components/schemas/InventoryMode"
          },
          "lineItems": {
            "title": "lineItems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyLineItemDraft"
            }
          },
          "shippingAddress": {
            "title": "shippingAddress",
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "title": "billingAddress",
            "$ref": "#/components/schemas/Address"
          },
          "shippingMethod": {
            "title": "shippingMethod",
            "$ref": "#/components/schemas/ShippingMethodReference"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "locale": {
            "title": "locale",
            "type": "string"
          },
          "taxMode": {
            "title": "taxMode",
            "$ref": "#/components/schemas/TaxMode"
          },
          "deleteDaysAfterLastModification": {
            "title": "deleteDaysAfterLastModification",
            "format": "int64",
            "type": "number"
          },
          "itemShippingAddresses": {
            "title": "itemShippingAddresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "required": [
          "currency"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mycartdraft"
      },
      "MyCustomerDraft": {
        "title": "MyCustomerDraft",
        "includePath": "types/me/MyCustomerDraft.raml",
        "type": "object",
        "properties": {
          "email": {
            "title": "email",
            "type": "string"
          },
          "password": {
            "title": "password",
            "type": "string"
          },
          "firstName": {
            "title": "firstName",
            "type": "string"
          },
          "lastName": {
            "title": "lastName",
            "type": "string"
          },
          "middleName": {
            "title": "middleName",
            "type": "string"
          },
          "title": {
            "title": "title",
            "type": "string"
          },
          "dateOfBirth": {
            "title": "dateOfBirth",
            "type": "string",
            "format": "date"
          },
          "companyName": {
            "title": "companyName",
            "type": "string"
          },
          "vatId": {
            "title": "vatId",
            "type": "string"
          },
          "addresses": {
            "title": "addresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "defaultShippingAddress": {
            "title": "defaultShippingAddress",
            "format": "int64",
            "type": "number"
          },
          "defaultBillingAddress": {
            "title": "defaultBillingAddress",
            "format": "int64",
            "type": "number"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "locale": {
            "title": "locale",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#mycustomerdraft"
      },
      "MyLineItemDraft": {
        "title": "MyLineItemDraft",
        "includePath": "types/me/MyLineItemDraft.raml",
        "type": "object",
        "properties": {
          "productId": {
            "title": "productId",
            "type": "string"
          },
          "variantId": {
            "title": "variantId",
            "format": "int64",
            "type": "number"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "supplyChannel": {
            "title": "supplyChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "distributionChannel": {
            "title": "distributionChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "shippingDetails": {
            "title": "shippingDetails",
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          }
        },
        "required": [
          "productId",
          "variantId",
          "quantity"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mylineitemdraft"
      },
      "MyOrderFromCartDraft": {
        "title": "MyOrderFromCartDraft",
        "includePath": "types/me/MyOrderFromCartDraft.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "x-annotation-package": "Me"
      },
      "CategoryCreatedMessage": {
        "title": "CategoryCreatedMessage",
        "includePath": "types/message/CategoryCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "category": {
                "title": "category",
                "$ref": "#/components/schemas/Category"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categorycreated-message",
        "type": "string"
      },
      "CategorySlugChangedMessage": {
        "title": "CategorySlugChangedMessage",
        "includePath": "types/message/CategorySlugChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categoryslugchanged-message",
        "type": "string"
      },
      "CustomLineItemStateTransitionMessage": {
        "title": "CustomLineItemStateTransitionMessage",
        "includePath": "types/message/CustomLineItemStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "transitionDate": {
                "title": "transitionDate",
                "type": "string",
                "format": "date-time"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "title": "fromState",
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "title": "toState",
                "$ref": "#/components/schemas/StateReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customlineitemstatetransition-message",
        "type": "string"
      },
      "CustomerAddressAddedMessage": {
        "title": "CustomerAddressAddedMessage",
        "includePath": "types/message/CustomerAddressAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressadded-message",
        "type": "string"
      },
      "CustomerAddressChangedMessage": {
        "title": "CustomerAddressChangedMessage",
        "includePath": "types/message/CustomerAddressChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddresschanged-message",
        "type": "string"
      },
      "CustomerAddressRemovedMessage": {
        "title": "CustomerAddressRemovedMessage",
        "includePath": "types/message/CustomerAddressRemovedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressremoved-message",
        "type": "string"
      },
      "CustomerCompanyNameSetMessage": {
        "title": "CustomerCompanyNameSetMessage",
        "includePath": "types/message/CustomerCompanyNameSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "companyName": {
                "title": "companyName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercompanynameset-message",
        "type": "string"
      },
      "CustomerCreatedMessage": {
        "title": "CustomerCreatedMessage",
        "includePath": "types/message/CustomerCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/Customer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercreated-message",
        "type": "string"
      },
      "CustomerDateOfBirthSetMessage": {
        "title": "CustomerDateOfBirthSetMessage",
        "includePath": "types/message/CustomerDateOfBirthSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "dateOfBirth": {
                "title": "dateOfBirth",
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerdateofbirthset-message",
        "type": "string"
      },
      "CustomerEmailChangedMessage": {
        "title": "CustomerEmailChangedMessage",
        "includePath": "types/message/CustomerEmailChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "email": {
                "title": "email",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailchanged-message",
        "type": "string"
      },
      "CustomerEmailVerifiedMessage": {
        "title": "CustomerEmailVerifiedMessage",
        "includePath": "types/message/CustomerEmailVerifiedMessage.raml",
        "$ref": "#/components/schemas/Message",
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailverified-message"
      },
      "CustomerGroupSetMessage": {
        "title": "CustomerGroupSetMessage",
        "includePath": "types/message/CustomerGroupSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customerGroup": {
                "title": "customerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customergroupset-message",
        "type": "string"
      },
      "DeliveryAddedMessage": {
        "title": "DeliveryAddedMessage",
        "includePath": "types/message/DeliveryAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "delivery": {
                "title": "delivery",
                "$ref": "#/components/schemas/Delivery"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryadded-message",
        "type": "string"
      },
      "DeliveryAddressSetMessage": {
        "title": "DeliveryAddressSetMessage",
        "includePath": "types/message/DeliveryAddressSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddressset-message",
        "type": "string"
      },
      "DeliveryItemsUpdatedMessage": {
        "title": "DeliveryItemsUpdatedMessage",
        "includePath": "types/message/DeliveryItemsUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "items": {
                "title": "items",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "DeliveryRemovedMessage": {
        "title": "DeliveryRemovedMessage",
        "includePath": "types/message/DeliveryRemovedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "delivery": {
                "title": "delivery",
                "$ref": "#/components/schemas/Delivery"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "InventoryEntryDeletedMessage": {
        "title": "InventoryEntryDeletedMessage",
        "includePath": "types/message/InventoryEntryDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "supplyChannel": {
                "title": "supplyChannel",
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrydeleted-message",
        "type": "string"
      },
      "LineItemStateTransitionMessage": {
        "title": "LineItemStateTransitionMessage",
        "includePath": "types/message/LineItemStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "transitionDate": {
                "title": "transitionDate",
                "type": "string",
                "format": "date-time"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "title": "fromState",
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "title": "toState",
                "$ref": "#/components/schemas/StateReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#lineitemstatetransition-message",
        "type": "string"
      },
      "Message": {
        "title": "Message",
        "includePath": "types/message/Message.raml",
        "discriminator": {
          "propertyName": "type"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "sequenceNumber": {
                "title": "sequenceNumber",
                "format": "int64",
                "type": "number"
              },
              "resource": {
                "title": "resource",
                "$ref": "#/components/schemas/Reference"
              },
              "resourceVersion": {
                "title": "resourceVersion",
                "format": "int64",
                "type": "number"
              },
              "type": {
                "title": "type",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#message",
        "type": "string"
      },
      "MessageConfiguration": {
        "title": "MessageConfiguration",
        "includePath": "types/message/MessageConfiguration.raml",
        "type": "object",
        "properties": {
          "enabled": {
            "title": "enabled",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "x-annotation-package": "Message"
      },
      "MessagePagedQueryResponse": {
        "title": "MessagePagedQueryResponse",
        "includePath": "types/message/MessagePagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderBillingAddressSetMessage": {
        "title": "OrderBillingAddressSetMessage",
        "includePath": "types/message/OrderBillingAddressSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderbillingaddressset-message",
        "type": "string"
      },
      "OrderCreatedMessage": {
        "title": "OrderCreatedMessage",
        "includePath": "types/message/OrderCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "order": {
                "title": "order",
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreated-message",
        "type": "string"
      },
      "OrderCustomerEmailSetMessage": {
        "title": "OrderCustomerEmailSetMessage",
        "includePath": "types/message/OrderCustomerEmailSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "email": {
                "title": "email",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercustomeremailset-message",
        "type": "string"
      },
      "OrderCustomerSetMessage": {
        "title": "OrderCustomerSetMessage",
        "includePath": "types/message/OrderCustomerSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/CustomerReference"
              },
              "customerGroup": {
                "title": "customerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "oldCustomer": {
                "title": "oldCustomer",
                "$ref": "#/components/schemas/CustomerReference"
              },
              "oldCustomerGroup": {
                "title": "oldCustomerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomeremailset-message",
        "type": "string"
      },
      "OrderDeletedMessage": {
        "title": "OrderDeletedMessage",
        "includePath": "types/message/OrderDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "order": {
                "title": "order",
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderdeleted-message",
        "type": "string"
      },
      "OrderImportedMessage": {
        "title": "OrderImportedMessage",
        "includePath": "types/message/OrderImportedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "order": {
                "title": "order",
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderimported-message",
        "type": "string"
      },
      "OrderPaymentChangedMessage": {
        "title": "OrderPaymentChangedMessage",
        "includePath": "types/message/OrderPaymentChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "paymentState": {
                "title": "paymentState",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderpaymentstatechanged-message",
        "type": "string"
      },
      "OrderReturnInfoAddedMessage": {
        "title": "OrderReturnInfoAddedMessage",
        "includePath": "types/message/OrderReturnInfoAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "returnInfo": {
                "title": "returnInfo",
                "$ref": "#/components/schemas/ReturnInfo"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderReturnShipmentStateChangedMessage": {
        "title": "OrderReturnShipmentStateChangedMessage",
        "includePath": "types/message/OrderReturnShipmentStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "returnItemId": {
                "title": "returnItemId",
                "type": "string"
              },
              "returnShipmentState": {
                "title": "returnShipmentState",
                "$ref": "#/components/schemas/ReturnShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderShipmentStateChangedMessage": {
        "title": "OrderShipmentStateChangedMessage",
        "includePath": "types/message/OrderShipmentStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "shipmentState": {
                "title": "shipmentState",
                "$ref": "#/components/schemas/ShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderShippingAddressSetMessage": {
        "title": "OrderShippingAddressSetMessage",
        "includePath": "types/message/OrderShippingAddressSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordershippingaddressset-message",
        "type": "string"
      },
      "OrderStateChangedMessage": {
        "title": "OrderStateChangedMessage",
        "includePath": "types/message/OrderStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "orderState": {
                "title": "orderState",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatechanged-message",
        "type": "string"
      },
      "OrderStateTransitionMessage": {
        "title": "OrderStateTransitionMessage",
        "includePath": "types/message/OrderStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatetransition-message",
        "type": "string"
      },
      "ParcelAddedToDeliveryMessage": {
        "title": "ParcelAddedToDeliveryMessage",
        "includePath": "types/message/ParcelAddedToDeliveryMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "delivery": {
                "title": "delivery",
                "$ref": "#/components/schemas/Delivery"
              },
              "parcel": {
                "title": "parcel",
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#parceladdedtodelivery-message",
        "type": "string"
      },
      "ParcelItemsUpdatedMessage": {
        "title": "ParcelItemsUpdatedMessage",
        "includePath": "types/message/ParcelItemsUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "parcelId": {
                "title": "parcelId",
                "type": "string"
              },
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "items": {
                "title": "items",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelMeasurementsUpdatedMessage": {
        "title": "ParcelMeasurementsUpdatedMessage",
        "includePath": "types/message/ParcelMeasurementsUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "parcelId": {
                "title": "parcelId",
                "type": "string"
              },
              "measurements": {
                "title": "measurements",
                "$ref": "#/components/schemas/ParcelMeasurements"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelRemovedFromDeliveryMessage": {
        "title": "ParcelRemovedFromDeliveryMessage",
        "includePath": "types/message/ParcelRemovedFromDeliveryMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "parcel": {
                "title": "parcel",
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelTrackingDataUpdatedMessage": {
        "title": "ParcelTrackingDataUpdatedMessage",
        "includePath": "types/message/ParcelTrackingDataUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "parcelId": {
                "title": "parcelId",
                "type": "string"
              },
              "trackingData": {
                "title": "trackingData",
                "$ref": "#/components/schemas/TrackingData"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "PaymentCreatedMessage": {
        "title": "PaymentCreatedMessage",
        "includePath": "types/message/PaymentCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "payment": {
                "title": "payment",
                "$ref": "#/components/schemas/Payment"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentcreated-message",
        "type": "string"
      },
      "PaymentInteractionAddedMessage": {
        "title": "PaymentInteractionAddedMessage",
        "includePath": "types/message/PaymentInteractionAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "interaction": {
                "title": "interaction",
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentinteractionadded-message",
        "type": "string"
      },
      "PaymentStatusInterfaceCodeSetMessage": {
        "title": "PaymentStatusInterfaceCodeSetMessage",
        "includePath": "types/message/PaymentStatusInterfaceCodeSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "paymentId": {
                "title": "paymentId",
                "type": "string"
              },
              "interfaceCode": {
                "title": "interfaceCode",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusinterfacecodeset-message",
        "type": "string"
      },
      "PaymentStatusStateTransitionMessage": {
        "title": "PaymentStatusStateTransitionMessage",
        "includePath": "types/message/PaymentStatusStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusstatetransition-message",
        "type": "string"
      },
      "PaymentTransactionAddedMessage": {
        "title": "PaymentTransactionAddedMessage",
        "includePath": "types/message/PaymentTransactionAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "transaction": {
                "title": "transaction",
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionadded-message",
        "type": "string"
      },
      "PaymentTransactionStateChangedMessage": {
        "title": "PaymentTransactionStateChangedMessage",
        "includePath": "types/message/PaymentTransactionStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "transactionId": {
                "title": "transactionId",
                "type": "string"
              },
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/TransactionState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionstatechanged-message",
        "type": "string"
      },
      "ProductCreatedMessage": {
        "title": "ProductCreatedMessage",
        "includePath": "types/message/ProductCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "productProjection": {
                "title": "productProjection",
                "$ref": "#/components/schemas/ProductProjection"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productcreated-message",
        "type": "string"
      },
      "ProductDeletedMessage": {
        "title": "ProductDeletedMessage",
        "includePath": "types/message/ProductDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "removedImageUrls": {
                "title": "removedImageUrls",
                "type": "array"
              },
              "currentProjection": {
                "title": "currentProjection",
                "$ref": "#/components/schemas/ProductProjection"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productdeleted-message",
        "type": "string"
      },
      "ProductImageAddedMessage": {
        "title": "ProductImageAddedMessage",
        "includePath": "types/message/ProductImageAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "image": {
                "title": "image",
                "$ref": "#/components/schemas/Image"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productimageadded-message",
        "type": "string"
      },
      "ProductPublishedMessage": {
        "title": "ProductPublishedMessage",
        "includePath": "types/message/ProductPublishedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "removedImageUrls": {
                "title": "removedImageUrls",
                "type": "array"
              },
              "productProjection": {
                "title": "productProjection",
                "$ref": "#/components/schemas/ProductProjection"
              },
              "scope": {
                "title": "scope",
                "$ref": "#/components/schemas/ProductPublishScope"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productpublished-message",
        "type": "string"
      },
      "ProductRevertedStagedChangesMessage": {
        "title": "ProductRevertedStagedChangesMessage",
        "includePath": "types/message/ProductRevertedStagedChangesMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "removedImageUrls": {
                "title": "removedImageUrls",
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productrevertedstagedchanges-message",
        "type": "string"
      },
      "ProductSlugChangedMessage": {
        "title": "ProductSlugChangedMessage",
        "includePath": "types/message/ProductSlugChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productslugchanged-message",
        "type": "string"
      },
      "ProductStateTransitionMessage": {
        "title": "ProductStateTransitionMessage",
        "includePath": "types/message/ProductStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productstatetransition-message",
        "type": "string"
      },
      "ProductUnpublishedMessage": {
        "title": "ProductUnpublishedMessage",
        "includePath": "types/message/ProductUnpublishedMessage.raml",
        "$ref": "#/components/schemas/Message",
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productunpublished-message"
      },
      "ProductVariantDeletedMessage": {
        "title": "ProductVariantDeletedMessage",
        "includePath": "types/message/ProductVariantDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "removedImageUrls": {
                "title": "removedImageUrls",
                "type": "array"
              },
              "variant": {
                "title": "variant",
                "$ref": "#/components/schemas/ProductVariant"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantdeleted-message",
        "type": "string"
      },
      "ReviewCreatedMessage": {
        "title": "ReviewCreatedMessage",
        "includePath": "types/message/ReviewCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "review": {
                "title": "review",
                "$ref": "#/components/schemas/Review"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewcreated-message",
        "type": "string"
      },
      "ReviewRatingSetMessage": {
        "title": "ReviewRatingSetMessage",
        "includePath": "types/message/ReviewRatingSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "oldRating": {
                "title": "oldRating",
                "type": "number"
              },
              "newRating": {
                "title": "newRating",
                "type": "number"
              },
              "includedInStatistics": {
                "title": "includedInStatistics",
                "type": "boolean"
              },
              "target": {
                "title": "target",
                "$ref": "#/components/schemas/Reference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewratingset-message",
        "type": "string"
      },
      "ReviewStateTransitionMessage": {
        "title": "ReviewStateTransitionMessage",
        "includePath": "types/message/ReviewStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "oldState": {
                "title": "oldState",
                "$ref": "#/components/schemas/StateReference"
              },
              "newState": {
                "title": "newState",
                "$ref": "#/components/schemas/StateReference"
              },
              "oldIncludedInStatistics": {
                "title": "oldIncludedInStatistics",
                "type": "boolean"
              },
              "newIncludedInStatistics": {
                "title": "newIncludedInStatistics",
                "type": "boolean"
              },
              "target": {
                "title": "target",
                "$ref": "#/components/schemas/Reference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewstatetransition-message",
        "type": "string"
      },
      "Delivery": {
        "title": "Delivery",
        "includePath": "types/order/Delivery.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "createdAt": {
            "title": "createdAt",
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "title": "items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItem"
            }
          },
          "parcels": {
            "title": "parcels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parcel"
            }
          },
          "address": {
            "title": "address",
            "$ref": "#/components/schemas/Address"
          }
        },
        "required": [
          "id",
          "createdAt",
          "items",
          "parcels"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#delivery"
      },
      "DeliveryItem": {
        "title": "DeliveryItem",
        "includePath": "types/order/DeliveryItem.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          }
        },
        "required": [
          "id",
          "quantity"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#deliveryitem"
      },
      "DiscountedLineItemPriceDraft": {
        "title": "DiscountedLineItemPriceDraft",
        "includePath": "types/order/DiscountedLineItemPriceDraft.raml",
        "type": "object",
        "properties": {
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/Money"
          },
          "includedDiscounts": {
            "title": "includedDiscounts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPortion"
            }
          }
        },
        "required": [
          "value",
          "includedDiscounts"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"
      },
      "ItemState": {
        "title": "ItemState",
        "includePath": "types/order/ItemState.raml",
        "type": "object",
        "properties": {
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "state": {
            "title": "state",
            "$ref": "#/components/schemas/StateReference"
          }
        },
        "required": [
          "quantity",
          "state"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#itemstate"
      },
      "LineItemImportDraft": {
        "title": "LineItemImportDraft",
        "includePath": "types/order/LineItemImportDraft.raml",
        "type": "object",
        "properties": {
          "productId": {
            "title": "productId",
            "type": "string"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "variant": {
            "title": "variant",
            "$ref": "#/components/schemas/ProductVariantImportDraft"
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/PriceDraft"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "state": {
            "title": "state",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemState"
            }
          },
          "supplyChannel": {
            "title": "supplyChannel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "taxRate": {
            "title": "taxRate",
            "$ref": "#/components/schemas/TaxRate"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "shippingDetails": {
            "title": "shippingDetails",
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          }
        },
        "required": [
          "name",
          "variant",
          "price",
          "quantity"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#lineitemimportdraft"
      },
      "Order": {
        "title": "Order",
        "includePath": "types/order/Order.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "completedAt": {
                "title": "completedAt",
                "type": "string",
                "format": "date-time"
              },
              "orderNumber": {
                "title": "orderNumber",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setOrderNumber"
              },
              "customerId": {
                "title": "customerId",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setCustomerId"
              },
              "customerEmail": {
                "title": "customerEmail",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "setCustomerEmail",
                  "fields": {
                    "email?": "string"
                  }
                }
              },
              "anonymousId": {
                "title": "anonymousId",
                "type": "string"
              },
              "lineItems": {
                "title": "lineItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "transitionLineItemState",
                    "docsAnchor": "change-the-state-of-lineitem-according-to-allowed-transitions",
                    "fields": {
                      "lineItemId": "string",
                      "quantity": {
                        "type": "number",
                        "format": "int64"
                      },
                      "fromState": "StateReference",
                      "toState": "StateReference",
                      "actualTransitionDate?": "datetime"
                    }
                  },
                  {
                    "action": "importLineItemState",
                    "docsAnchor": "import-state-for-lineitems",
                    "fields": {
                      "lineItemId": "string",
                      "state": "ItemState[]"
                    }
                  },
                  {
                    "action": "setLineItemCustomType",
                    "docsAnchor": "set-lineitem-custom-type",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "type?": {
                        "type": "TypeReference"
                      },
                      "fields?": {
                        "type": "FieldContainer"
                      }
                    }
                  },
                  {
                    "action": "setLineItemCustomField",
                    "docsAnchor": "set-lineitem-customfield",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value?": {
                        "type": "any"
                      }
                    }
                  },
                  {
                    "action": "setLineItemShippingDetails",
                    "docsAnchor": "set-lineitemshippingdetails",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "shippingDetails?": {
                        "type": "ItemShippingDetailsDraft"
                      }
                    }
                  }
                ]
              },
              "customLineItems": {
                "title": "customLineItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomLineItem"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "importCustomLineItemState",
                    "docsAnchor": "import-state-for-customlineitems",
                    "fields": {
                      "customLineItemId": "string",
                      "state": "ItemState[]"
                    }
                  },
                  {
                    "action": "setCustomLineItemCustomType",
                    "docsAnchor": "set-customlineitem-custom-type",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "type?": {
                        "type": "TypeReference"
                      },
                      "fields?": {
                        "type": "FieldContainer"
                      }
                    }
                  },
                  {
                    "action": "setCustomLineItemCustomField",
                    "docsAnchor": "set-customlineitem-customfield",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value?": {
                        "type": "any"
                      }
                    }
                  },
                  {
                    "action": "setCustomLineItemShippingDetails",
                    "docsAnchor": "set-customlineitemshippingdetails",
                    "fields": {
                      "customLineItemId": {
                        "type": "string"
                      },
                      "shippingDetails?": {
                        "type": "ItemShippingDetailsDraft"
                      }
                    }
                  },
                  {
                    "action": "transitionCustomLineItemState",
                    "docsAnchor": "change-the-state-of-customlineitem-according-to-allowed-transitions",
                    "fields": {
                      "customLineItemId": "string",
                      "quantity": {
                        "type": "number",
                        "format": "int64"
                      },
                      "fromState": "StateReference",
                      "toState": "StateReference",
                      "actualTransitionDate?": "datetime"
                    }
                  }
                ]
              },
              "totalPrice": {
                "title": "totalPrice",
                "$ref": "#/components/schemas/Money"
              },
              "taxedPrice": {
                "title": "taxedPrice",
                "$ref": "#/components/schemas/TaxedPrice"
              },
              "shippingAddress": {
                "title": "shippingAddress",
                "$ref": "#/components/schemas/Address",
                "x-annotation-hasUpdateAction": {
                  "action": "setShippingAddress",
                  "fields": {
                    "address?": "Address"
                  }
                }
              },
              "billingAddress": {
                "title": "billingAddress",
                "$ref": "#/components/schemas/Address",
                "x-annotation-hasUpdateAction": {
                  "action": "setBillingAddress",
                  "fields": {
                    "address?": "Address"
                  }
                }
              },
              "taxMode": {
                "title": "taxMode",
                "$ref": "#/components/schemas/TaxMode"
              },
              "taxRoundingMode": {
                "title": "taxRoundingMode",
                "$ref": "#/components/schemas/RoundingMode"
              },
              "customerGroup": {
                "title": "customerGroup",
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "country": {
                "title": "country",
                "type": "string"
              },
              "orderState": {
                "title": "orderState",
                "$ref": "#/components/schemas/OrderState",
                "x-annotation-hasUpdateAction": {
                  "action": "changeOrderState",
                  "docsAnchor": "change-orderstate"
                }
              },
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference",
                "x-annotation-hasUpdateAction": {
                  "action": "transitionState",
                  "fields": {
                    "state": "StateReference",
                    "force?": "boolean"
                  }
                }
              },
              "shipmentState": {
                "title": "shipmentState",
                "$ref": "#/components/schemas/ShipmentState",
                "x-annotation-hasUpdateAction": {
                  "action": "changeShipmentState",
                  "docsAnchor": "change-shipmentstate"
                }
              },
              "paymentState": {
                "title": "paymentState",
                "$ref": "#/components/schemas/PaymentState",
                "x-annotation-hasUpdateAction": {
                  "action": "changePaymentState",
                  "docsAnchor": "change-paymentstate"
                }
              },
              "shippingInfo": {
                "title": "shippingInfo",
                "$ref": "#/components/schemas/ShippingInfo",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addDelivery",
                    "fields": {
                      "items?": "DeliveryItem[]",
                      "address?": "Address",
                      "parcels?": "ParcelDraft[]"
                    }
                  },
                  {
                    "action": "setDeliveryAddress",
                    "fields": {
                      "deliveryId": "string",
                      "address?": "Address"
                    }
                  },
                  {
                    "action": "addParcelToDelivery",
                    "docsAnchor": "add-parcel",
                    "fields": {
                      "deliveryId": "string",
                      "measurements?": "ParcelMeasurements",
                      "trackingData?": "TrackingData",
                      "items?": "DeliveryItem[]"
                    }
                  },
                  {
                    "action": "setDeliveryItems",
                    "fields": {
                      "deliveryId": "string",
                      "items": "DeliveryItem[]"
                    }
                  },
                  {
                    "action": "removeParcelFromDelivery",
                    "fields": {
                      "parcelId": "string"
                    }
                  },
                  {
                    "action": "removeDelivery",
                    "fields": {
                      "deliveryId": "string"
                    }
                  },
                  {
                    "action": "setParcelMeasurements",
                    "fields": {
                      "parcelId": "string",
                      "measurements?": "ParcelMeasurements"
                    }
                  },
                  {
                    "action": "setParcelTrackingData",
                    "fields": {
                      "parcelId": "string",
                      "trackingData?": "TrackingData"
                    }
                  },
                  {
                    "action": "setParcelItems",
                    "fields": {
                      "parcelId": "string",
                      "items": "DeliveryItem[]"
                    }
                  }
                ]
              },
              "syncInfo": {
                "title": "syncInfo",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SyncInfo"
                },
                "x-annotation-hasUpdateAction": {
                  "action": "updateSyncInfo",
                  "docsAnchor": "update-syncinfo",
                  "fields": {
                    "channel": "ChannelReference",
                    "externalId?": "string",
                    "syncedAt?": "datetime"
                  }
                }
              },
              "returnInfo": {
                "title": "returnInfo",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReturnInfo"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addReturnInfo",
                    "docsAnchor": "add-returninfo",
                    "fields": {
                      "returnTrackingId?": "string",
                      "items": "ReturnItemDraft[]",
                      "returnDate?": "datetime"
                    }
                  },
                  {
                    "action": "setReturnShipmentState",
                    "docsAnchor": "set-returnshipmentstate",
                    "fields": {
                      "returnItemId": "string",
                      "shipmentState": "ReturnShipmentState"
                    }
                  },
                  {
                    "action": "setReturnPaymentState",
                    "docsAnchor": "set-returnpaymentstate",
                    "fields": {
                      "returnItemId": "string",
                      "paymentState": "ReturnPaymentState"
                    }
                  }
                ]
              },
              "discountCodes": {
                "title": "discountCodes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCodeInfo"
                }
              },
              "lastMessageSequenceNumber": {
                "title": "lastMessageSequenceNumber",
                "format": "int64",
                "type": "number"
              },
              "cart": {
                "title": "cart",
                "$ref": "#/components/schemas/CartReference"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "paymentInfo": {
                "title": "paymentInfo",
                "$ref": "#/components/schemas/PaymentInfo",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addPayment",
                    "fields": {
                      "payment": "PaymentReference"
                    }
                  },
                  {
                    "action": "removePayment",
                    "fields": {
                      "payment": "PaymentReference"
                    }
                  }
                ]
              },
              "locale": {
                "title": "locale",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setLocale"
              },
              "inventoryMode": {
                "title": "inventoryMode",
                "$ref": "#/components/schemas/InventoryMode"
              },
              "origin": {
                "title": "origin",
                "$ref": "#/components/schemas/CartOrigin"
              },
              "taxCalculationMode": {
                "title": "taxCalculationMode",
                "$ref": "#/components/schemas/TaxCalculationMode"
              },
              "shippingRateInput": {
                "title": "shippingRateInput",
                "$ref": "#/components/schemas/ShippingRateInput"
              },
              "itemShippingAddresses": {
                "title": "itemShippingAddresses",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addItemShippingAddress",
                    "docsAnchor": "add-itemshippingaddress",
                    "fields": {
                      "address": "Address"
                    }
                  },
                  {
                    "action": "removeItemShippingAddress",
                    "docsAnchor": "remove-itemshippingaddress",
                    "fields": {
                      "addressKey": "string"
                    }
                  },
                  {
                    "action": "updateItemShippingAddress",
                    "docsAnchor": "update-itemshippingaddress",
                    "fields": {
                      "address": "Address"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order",
        "x-annotation-updateType": "OrderUpdate",
        "type": "string"
      },
      "OrderFromCartDraft": {
        "title": "OrderFromCartDraft",
        "includePath": "types/order/OrderFromCartDraft.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          },
          "orderNumber": {
            "title": "orderNumber",
            "type": "string"
          },
          "paymentState": {
            "title": "paymentState",
            "$ref": "#/components/schemas/PaymentState"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "x-annotation-package": "Order"
      },
      "OrderImportDraft": {
        "title": "OrderImportDraft",
        "includePath": "types/order/OrderImportDraft.raml",
        "type": "object",
        "properties": {
          "orderNumber": {
            "title": "orderNumber",
            "type": "string"
          },
          "customerId": {
            "title": "customerId",
            "type": "string"
          },
          "customerEmail": {
            "title": "customerEmail",
            "type": "string"
          },
          "lineItems": {
            "title": "lineItems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemImportDraft"
            }
          },
          "customLineItems": {
            "title": "customLineItems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomLineItemDraft"
            }
          },
          "totalPrice": {
            "title": "totalPrice",
            "$ref": "#/components/schemas/Money"
          },
          "taxedPrice": {
            "title": "taxedPrice",
            "$ref": "#/components/schemas/TaxedPrice"
          },
          "shippingAddress": {
            "title": "shippingAddress",
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "title": "billingAddress",
            "$ref": "#/components/schemas/Address"
          },
          "customerGroup": {
            "title": "customerGroup",
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "country": {
            "title": "country",
            "type": "string"
          },
          "orderState": {
            "title": "orderState",
            "$ref": "#/components/schemas/OrderState"
          },
          "shipmentState": {
            "title": "shipmentState",
            "$ref": "#/components/schemas/ShipmentState"
          },
          "paymentState": {
            "title": "paymentState",
            "$ref": "#/components/schemas/PaymentState"
          },
          "shippingInfo": {
            "title": "shippingInfo",
            "$ref": "#/components/schemas/ShippingInfoDraft"
          },
          "completedAt": {
            "title": "completedAt",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "inventoryMode": {
            "title": "inventoryMode",
            "$ref": "#/components/schemas/InventoryMode"
          },
          "taxRoundingMode": {
            "title": "taxRoundingMode",
            "$ref": "#/components/schemas/RoundingMode"
          },
          "itemShippingAddresses": {
            "title": "itemShippingAddresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "required": [
          "totalPrice"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#orderimportdraft"
      },
      "OrderPagedQueryResponse": {
        "title": "OrderPagedQueryResponse",
        "includePath": "types/order/OrderPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "type": "string"
      },
      "OrderReference": {
        "title": "OrderReference",
        "includePath": "types/order/OrderReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order",
        "type": "string"
      },
      "OrderState": {
        "title": "OrderState",
        "enum": [
          "Open",
          "Confirmed",
          "Complete",
          "Cancelled"
        ],
        "includePath": "types/order/OrderState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#orderstate"
      },
      "OrderUpdate": {
        "title": "OrderUpdate",
        "includePath": "types/order/OrderUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "type": "string"
      },
      "OrderUpdateAction": {
        "title": "OrderUpdateAction",
        "includePath": "types/order/OrderUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Order"
      },
      "Parcel": {
        "title": "Parcel",
        "includePath": "types/order/Parcel.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "createdAt": {
            "title": "createdAt",
            "type": "string",
            "format": "date-time"
          },
          "measurements": {
            "title": "measurements",
            "$ref": "#/components/schemas/ParcelMeasurements",
            "x-annotation-hasUpdateAction": {
              "action": "setParcelMeasurements",
              "fields": {
                "parcelId": {
                  "type": "string"
                },
                "measurements?": {
                  "type": "ParcelMeasurements"
                }
              }
            }
          },
          "trackingData": {
            "title": "trackingData",
            "$ref": "#/components/schemas/TrackingData"
          },
          "items": {
            "title": "items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItem"
            }
          }
        },
        "required": [
          "id",
          "createdAt"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcel"
      },
      "ParcelDraft": {
        "title": "ParcelDraft",
        "includePath": "types/order/ParcelDraft.raml",
        "type": "object",
        "properties": {
          "measurements": {
            "title": "measurements",
            "$ref": "#/components/schemas/ParcelMeasurements"
          },
          "trackingData": {
            "title": "trackingData",
            "$ref": "#/components/schemas/TrackingData"
          },
          "items": {
            "title": "items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItem"
            }
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parceldraft"
      },
      "ParcelMeasurements": {
        "title": "ParcelMeasurements",
        "includePath": "types/order/ParcelMeasurements.raml",
        "type": "object",
        "properties": {
          "heightInMillimeter": {
            "title": "heightInMillimeter",
            "type": "number"
          },
          "lengthInMillimeter": {
            "title": "lengthInMillimeter",
            "type": "number"
          },
          "widthInMillimeter": {
            "title": "widthInMillimeter",
            "type": "number"
          },
          "weightInGram": {
            "title": "weightInGram",
            "type": "number"
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcelmeasurements"
      },
      "PaymentInfo": {
        "title": "PaymentInfo",
        "includePath": "types/order/PaymentInfo.raml",
        "type": "object",
        "properties": {
          "payments": {
            "title": "payments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentReference"
            }
          }
        },
        "required": [
          "payments"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentinfo"
      },
      "PaymentState": {
        "title": "PaymentState",
        "enum": [
          "BalanceDue",
          "Failed",
          "Pending",
          "CreditOwed",
          "Paid"
        ],
        "includePath": "types/order/PaymentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentstate"
      },
      "ProductVariantImportDraft": {
        "title": "ProductVariantImportDraft",
        "includePath": "types/order/ProductVariantImportDraft.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "format": "int64",
            "type": "number"
          },
          "sku": {
            "title": "sku",
            "type": "string"
          },
          "prices": {
            "title": "prices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "attributes": {
            "title": "attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "images": {
            "title": "images",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#productvariantimportdraft"
      },
      "ReturnInfo": {
        "title": "ReturnInfo",
        "includePath": "types/order/ReturnInfo.raml",
        "type": "object",
        "properties": {
          "items": {
            "title": "items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReturnItem"
            }
          },
          "returnTrackingId": {
            "title": "returnTrackingId",
            "type": "string"
          },
          "returnDate": {
            "title": "returnDate",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "items"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returninfo"
      },
      "ReturnItem": {
        "title": "ReturnItem",
        "includePath": "types/order/ReturnItem.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "quantity": {
            "title": "quantity",
            "format": "int64",
            "type": "number"
          },
          "lineItemId": {
            "title": "lineItemId",
            "type": "string"
          },
          "comment": {
            "title": "comment",
            "type": "string"
          },
          "shipmentState": {
            "title": "shipmentState",
            "$ref": "#/components/schemas/ReturnShipmentState"
          },
          "paymentState": {
            "title": "paymentState",
            "$ref": "#/components/schemas/ReturnPaymentState"
          },
          "lastModifiedAt": {
            "title": "lastModifiedAt",
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "title": "createdAt",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "quantity",
          "lineItemId",
          "shipmentState",
          "paymentState",
          "lastModifiedAt",
          "createdAt"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem"
      },
      "ReturnItemDraft": {
        "title": "ReturnItemDraft",
        "includePath": "types/order/ReturnItemDraft.raml",
        "type": "object",
        "properties": {
          "quantity": {
            "title": "quantity",
            "format": "int64",
            "type": "number"
          },
          "lineItemId": {
            "title": "lineItemId",
            "type": "string"
          },
          "comment": {
            "title": "comment",
            "type": "string"
          },
          "shipmentState": {
            "title": "shipmentState",
            "$ref": "#/components/schemas/ReturnShipmentState"
          }
        },
        "required": [
          "quantity",
          "lineItemId",
          "shipmentState"
        ],
        "x-annotation-package": "Order"
      },
      "ReturnPaymentState": {
        "title": "ReturnPaymentState",
        "enum": [
          "NonRefundable",
          "Initial",
          "Refunded",
          "NotRefunded"
        ],
        "includePath": "types/order/ReturnPaymentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnpaymentstate"
      },
      "ReturnShipmentState": {
        "title": "ReturnShipmentState",
        "enum": [
          "Advised",
          "Returned",
          "BackInStock",
          "Unusable"
        ],
        "includePath": "types/order/ReturnShipmentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnshipmentstate"
      },
      "ShipmentState": {
        "title": "ShipmentState",
        "enum": [
          "Shipped",
          "Ready",
          "Pending",
          "Delayed",
          "Partial",
          "Backorder"
        ],
        "includePath": "types/order/ShipmentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#shipmentstate"
      },
      "ShippingInfoDraft": {
        "title": "ShippingInfoDraft",
        "includePath": "types/order/ShippingInfoDraft.raml",
        "type": "object",
        "properties": {
          "shippingMethodName": {
            "title": "shippingMethodName",
            "type": "string"
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/Money"
          },
          "shippingRate": {
            "title": "shippingRate",
            "$ref": "#/components/schemas/ShippingRateDraft"
          },
          "taxedPrice": {
            "title": "taxedPrice",
            "$ref": "#/components/schemas/TaxedItemPriceDraft"
          },
          "taxRate": {
            "title": "taxRate",
            "$ref": "#/components/schemas/TaxRate"
          },
          "taxCategory": {
            "title": "taxCategory",
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "shippingMethod": {
            "title": "shippingMethod",
            "$ref": "#/components/schemas/ShippingMethodReference"
          },
          "deliveries": {
            "title": "deliveries",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Delivery"
            }
          },
          "discountedPrice": {
            "title": "discountedPrice",
            "$ref": "#/components/schemas/DiscountedLineItemPriceDraft"
          },
          "shippingMethodState": {
            "title": "shippingMethodState",
            "$ref": "#/components/schemas/ShippingMethodState"
          }
        },
        "required": [
          "shippingMethodName",
          "price",
          "shippingRate"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippinginfo"
      },
      "SyncInfo": {
        "title": "SyncInfo",
        "includePath": "types/order/SyncInfo.raml",
        "type": "object",
        "properties": {
          "channel": {
            "title": "channel",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "externalId": {
            "title": "externalId",
            "type": "string"
          },
          "syncedAt": {
            "title": "syncedAt",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "channel",
          "syncedAt"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#syncinfo"
      },
      "TaxedItemPriceDraft": {
        "title": "TaxedItemPriceDraft",
        "includePath": "types/order/TaxedItemPriceDraft.raml",
        "type": "object",
        "properties": {
          "totalNet": {
            "title": "totalNet",
            "$ref": "#/components/schemas/Money"
          },
          "totalGross": {
            "title": "totalGross",
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "totalNet",
          "totalGross"
        ],
        "x-annotation-package": "Order"
      },
      "TrackingData": {
        "title": "TrackingData",
        "includePath": "types/order/TrackingData.raml",
        "type": "object",
        "properties": {
          "trackingId": {
            "title": "trackingId",
            "type": "string"
          },
          "carrier": {
            "title": "carrier",
            "type": "string"
          },
          "provider": {
            "title": "provider",
            "type": "string"
          },
          "providerTransaction": {
            "title": "providerTransaction",
            "type": "string"
          },
          "isReturn": {
            "title": "isReturn",
            "type": "boolean"
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#trackingdata"
      },
      "OrderAddDeliveryAction": {
        "title": "OrderAddDeliveryAction",
        "includePath": "types/order/updates/OrderAddDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "items": {
                "title": "items",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              },
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              },
              "parcels": {
                "title": "parcels",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelDraft"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-delivery",
        "type": "string"
      },
      "OrderAddItemShippingAddressAction": {
        "title": "OrderAddItemShippingAddressAction",
        "includePath": "types/order/updates/OrderAddItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-itemshippingaddress",
        "type": "string"
      },
      "OrderAddParcelToDeliveryAction": {
        "title": "OrderAddParcelToDeliveryAction",
        "includePath": "types/order/updates/OrderAddParcelToDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "measurements": {
                "title": "measurements",
                "$ref": "#/components/schemas/ParcelMeasurements"
              },
              "trackingData": {
                "title": "trackingData",
                "$ref": "#/components/schemas/TrackingData"
              },
              "items": {
                "title": "items",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-parcel",
        "type": "string"
      },
      "OrderAddPaymentAction": {
        "title": "OrderAddPaymentAction",
        "includePath": "types/order/updates/OrderAddPaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "title": "payment",
                "$ref": "#/components/schemas/PaymentReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-payment",
        "type": "string"
      },
      "OrderAddReturnInfoAction": {
        "title": "OrderAddReturnInfoAction",
        "includePath": "types/order/updates/OrderAddReturnInfoAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "returnTrackingId": {
                "title": "returnTrackingId",
                "type": "string"
              },
              "items": {
                "title": "items",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReturnItemDraft"
                }
              },
              "returnDate": {
                "title": "returnDate",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-returninfo",
        "type": "string"
      },
      "OrderChangeOrderStateAction": {
        "title": "OrderChangeOrderStateAction",
        "includePath": "types/order/updates/OrderChangeOrderStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "orderState": {
                "title": "orderState",
                "$ref": "#/components/schemas/OrderState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-orderstate",
        "type": "string"
      },
      "OrderChangePaymentStateAction": {
        "title": "OrderChangePaymentStateAction",
        "includePath": "types/order/updates/OrderChangePaymentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "paymentState": {
                "title": "paymentState",
                "$ref": "#/components/schemas/PaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-paymentstate",
        "type": "string"
      },
      "OrderChangeShipmentStateAction": {
        "title": "OrderChangeShipmentStateAction",
        "includePath": "types/order/updates/OrderChangeShipmentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "shipmentState": {
                "title": "shipmentState",
                "$ref": "#/components/schemas/ShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-shipmentstate",
        "type": "string"
      },
      "OrderImportCustomLineItemStateAction": {
        "title": "OrderImportCustomLineItemStateAction",
        "includePath": "types/order/updates/OrderImportCustomLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "state": {
                "title": "state",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemState"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-customlineitems",
        "type": "string"
      },
      "OrderImportLineItemStateAction": {
        "title": "OrderImportLineItemStateAction",
        "includePath": "types/order/updates/OrderImportLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "state": {
                "title": "state",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemState"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-lineitems",
        "type": "string"
      },
      "OrderRemoveDeliveryAction": {
        "title": "OrderRemoveDeliveryAction",
        "includePath": "types/order/updates/OrderRemoveDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-delivery",
        "type": "string"
      },
      "OrderRemoveItemShippingAddressAction": {
        "title": "OrderRemoveItemShippingAddressAction",
        "includePath": "types/order/updates/OrderRemoveItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "addressKey": {
                "title": "addressKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-itemshippingaddress",
        "type": "string"
      },
      "OrderRemoveParcelFromDeliveryAction": {
        "title": "OrderRemoveParcelFromDeliveryAction",
        "includePath": "types/order/updates/OrderRemoveParcelFromDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "title": "parcelId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-parcel-from-delivery",
        "type": "string"
      },
      "OrderRemovePaymentAction": {
        "title": "OrderRemovePaymentAction",
        "includePath": "types/order/updates/OrderRemovePaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "title": "payment",
                "$ref": "#/components/schemas/PaymentReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-payment",
        "type": "string"
      },
      "OrderSetBillingAddressAction": {
        "title": "OrderSetBillingAddressAction",
        "includePath": "types/order/updates/OrderSetBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-billing-address",
        "type": "string"
      },
      "OrderSetCustomFieldAction": {
        "title": "OrderSetCustomFieldAction",
        "includePath": "types/order/updates/OrderSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customfield",
        "type": "string"
      },
      "OrderSetCustomLineItemCustomFieldAction": {
        "title": "OrderSetCustomLineItemCustomFieldAction",
        "includePath": "types/order/updates/OrderSetCustomLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitem-customfield",
        "type": "string"
      },
      "OrderSetCustomLineItemCustomTypeAction": {
        "title": "OrderSetCustomLineItemCustomTypeAction",
        "includePath": "types/order/updates/OrderSetCustomLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitem-custom-type",
        "type": "string"
      },
      "OrderSetCustomLineItemShippingDetailsAction": {
        "title": "OrderSetCustomLineItemShippingDetailsAction",
        "includePath": "types/order/updates/OrderSetCustomLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "shippingDetails": {
                "title": "shippingDetails",
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitemshippingdetails",
        "type": "string"
      },
      "OrderSetCustomTypeAction": {
        "title": "OrderSetCustomTypeAction",
        "includePath": "types/order/updates/OrderSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-custom-type",
        "type": "string"
      },
      "OrderSetCustomerEmailAction": {
        "title": "OrderSetCustomerEmailAction",
        "includePath": "types/order/updates/OrderSetCustomerEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "email": {
                "title": "email",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customer-email",
        "type": "string"
      },
      "OrderSetCustomerIdAction": {
        "title": "OrderSetCustomerIdAction",
        "includePath": "types/order/updates/OrderSetCustomerIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customerId": {
                "title": "customerId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customer-id",
        "type": "string"
      },
      "OrderSetDeliveryAddressAction": {
        "title": "OrderSetDeliveryAddressAction",
        "includePath": "types/order/updates/OrderSetDeliveryAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-delivery-address",
        "type": "string"
      },
      "OrderSetDeliveryItemsAction": {
        "title": "OrderSetDeliveryItemsAction",
        "includePath": "types/order/updates/OrderSetDeliveryItemsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "title": "deliveryId",
                "type": "string"
              },
              "items": {
                "title": "items",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-delivery-items",
        "type": "string"
      },
      "OrderSetLineItemCustomFieldAction": {
        "title": "OrderSetLineItemCustomFieldAction",
        "includePath": "types/order/updates/OrderSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitem-customfield",
        "type": "string"
      },
      "OrderSetLineItemCustomTypeAction": {
        "title": "OrderSetLineItemCustomTypeAction",
        "includePath": "types/order/updates/OrderSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitem-custom-type",
        "type": "string"
      },
      "OrderSetLineItemShippingDetailsAction": {
        "title": "OrderSetLineItemShippingDetailsAction",
        "includePath": "types/order/updates/OrderSetLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "shippingDetails": {
                "title": "shippingDetails",
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitemshippingdetails",
        "type": "string"
      },
      "OrderSetLocaleAction": {
        "title": "OrderSetLocaleAction",
        "includePath": "types/order/updates/OrderSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "title": "locale",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-locale",
        "type": "string"
      },
      "OrderSetOrderNumberAction": {
        "title": "OrderSetOrderNumberAction",
        "includePath": "types/order/updates/OrderSetOrderNumberAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "orderNumber": {
                "title": "orderNumber",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-order-number",
        "type": "string"
      },
      "OrderSetParcelItemsAction": {
        "title": "OrderSetParcelItemsAction",
        "includePath": "types/order/updates/OrderSetParcelItemsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "title": "parcelId",
                "type": "string"
              },
              "items": {
                "title": "items",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-items",
        "type": "string"
      },
      "OrderSetParcelMeasurementsAction": {
        "title": "OrderSetParcelMeasurementsAction",
        "includePath": "types/order/updates/OrderSetParcelMeasurementsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "title": "parcelId",
                "type": "string"
              },
              "measurements": {
                "title": "measurements",
                "$ref": "#/components/schemas/ParcelMeasurements"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-measurements",
        "type": "string"
      },
      "OrderSetParcelTrackingDataAction": {
        "title": "OrderSetParcelTrackingDataAction",
        "includePath": "types/order/updates/OrderSetParcelTrackingDataAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "title": "parcelId",
                "type": "string"
              },
              "trackingData": {
                "title": "trackingData",
                "$ref": "#/components/schemas/TrackingData"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-tracking-data",
        "type": "string"
      },
      "OrderSetReturnPaymentStateAction": {
        "title": "OrderSetReturnPaymentStateAction",
        "includePath": "types/order/updates/OrderSetReturnPaymentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "returnItemId": {
                "title": "returnItemId",
                "type": "string"
              },
              "paymentState": {
                "title": "paymentState",
                "$ref": "#/components/schemas/ReturnPaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnpaymentstate",
        "type": "string"
      },
      "OrderSetReturnShipmentStateAction": {
        "title": "OrderSetReturnShipmentStateAction",
        "includePath": "types/order/updates/OrderSetReturnShipmentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "returnItemId": {
                "title": "returnItemId",
                "type": "string"
              },
              "shipmentState": {
                "title": "shipmentState",
                "$ref": "#/components/schemas/ReturnShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnshipmentstate",
        "type": "string"
      },
      "OrderSetShippingAddressAction": {
        "title": "OrderSetShippingAddressAction",
        "includePath": "types/order/updates/OrderSetShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-shipping-address",
        "type": "string"
      },
      "OrderTransitionCustomLineItemStateAction": {
        "title": "OrderTransitionCustomLineItemStateAction",
        "includePath": "types/order/updates/OrderTransitionCustomLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "title": "customLineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "title": "fromState",
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "title": "toState",
                "$ref": "#/components/schemas/StateReference"
              },
              "actualTransitionDate": {
                "title": "actualTransitionDate",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-customlineitem-according-to-allowed-transitions",
        "type": "string"
      },
      "OrderTransitionLineItemStateAction": {
        "title": "OrderTransitionLineItemStateAction",
        "includePath": "types/order/updates/OrderTransitionLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "title": "fromState",
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "title": "toState",
                "$ref": "#/components/schemas/StateReference"
              },
              "actualTransitionDate": {
                "title": "actualTransitionDate",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-lineitem-according-to-allowed-transitions",
        "type": "string"
      },
      "OrderTransitionStateAction": {
        "title": "OrderTransitionStateAction",
        "includePath": "types/order/updates/OrderTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#transition-state",
        "type": "string"
      },
      "OrderUpdateItemShippingAddressAction": {
        "title": "OrderUpdateItemShippingAddressAction",
        "includePath": "types/order/updates/OrderUpdateItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "title": "address",
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#update-itemshippingaddress",
        "type": "string"
      },
      "OrderUpdateSyncInfoAction": {
        "title": "OrderUpdateSyncInfoAction",
        "includePath": "types/order/updates/OrderUpdateSyncInfoAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "channel": {
                "title": "channel",
                "$ref": "#/components/schemas/ChannelReference"
              },
              "externalId": {
                "title": "externalId",
                "type": "string"
              },
              "syncedAt": {
                "title": "syncedAt",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#update-syncinfo",
        "type": "string"
      },
      "Payment": {
        "title": "Payment",
        "includePath": "types/payment/Payment.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/CustomerReference",
                "x-annotation-hasSimpleUpdateAction": "setCustomer"
              },
              "anonymousId": {
                "title": "anonymousId",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "setAnonymousId",
                  "docsAnchor": "set-anonymousid"
                }
              },
              "externalId": {
                "title": "externalId",
                "type": "string",
                "x-annotation-deprecated": true
              },
              "interfaceId": {
                "title": "interfaceId",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "setInterfaceId",
                  "docsAnchor": "set-interfaceid",
                  "required": true
                }
              },
              "amountPlanned": {
                "title": "amountPlanned",
                "$ref": "#/components/schemas/TypedMoney",
                "x-annotation-hasUpdateAction": {
                  "action": "changeAmountPlanned",
                  "docsAnchor": "change-amountplanned",
                  "fields": {
                    "amount": "Money"
                  }
                }
              },
              "amountAuthorized": {
                "title": "amountAuthorized",
                "$ref": "#/components/schemas/TypedMoney",
                "x-annotation-deprecated": true
              },
              "authorizedUntil": {
                "title": "authorizedUntil",
                "type": "string",
                "x-annotation-deprecated": true
              },
              "amountPaid": {
                "title": "amountPaid",
                "$ref": "#/components/schemas/TypedMoney",
                "x-annotation-deprecated": true
              },
              "amountRefunded": {
                "title": "amountRefunded",
                "$ref": "#/components/schemas/TypedMoney",
                "x-annotation-deprecated": true
              },
              "paymentMethodInfo": {
                "title": "paymentMethodInfo",
                "$ref": "#/components/schemas/PaymentMethodInfo",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setMethodInfoInterface",
                    "docsAnchor": "set-methodinfointerface",
                    "fields": {
                      "interface": "string"
                    }
                  },
                  {
                    "action": "setMethodInfoMethod",
                    "docsAnchor": "set-methodinfomethod",
                    "fields": {
                      "method?": "string"
                    }
                  },
                  {
                    "action": "setMethodInfoName",
                    "docsAnchor": "set-methodinfoname",
                    "fields": {
                      "name?": "LocalizedString"
                    }
                  }
                ]
              },
              "paymentStatus": {
                "title": "paymentStatus",
                "$ref": "#/components/schemas/PaymentStatus",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setStatusInterfaceCode",
                    "docsAnchor": "set-statusinterfacecode",
                    "fields": {
                      "interfaceCode?": "string"
                    }
                  },
                  {
                    "action": "setStatusInterfaceText",
                    "docsAnchor": "set-statusinterfacetext",
                    "fields": {
                      "interfaceText": "string"
                    }
                  },
                  {
                    "action": "transitionState",
                    "fields": {
                      "state": "StateReference",
                      "force?": "boolean"
                    }
                  }
                ]
              },
              "transactions": {
                "title": "transactions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Transaction"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addTransaction",
                    "fields": {
                      "transaction": "TransactionDraft"
                    }
                  },
                  {
                    "action": "changeTransactionState",
                    "docsAnchor": "change-transactionstate",
                    "fields": {
                      "transactionId": "string",
                      "state": "TransactionState"
                    }
                  },
                  {
                    "action": "changeTransactionInteractionId",
                    "docsAnchor": "change-transactioninteractionid",
                    "fields": {
                      "transactionId": "string",
                      "interactionId": "string"
                    }
                  }
                ]
              },
              "interfaceInteractions": {
                "title": "interfaceInteractions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFields"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addInterfaceInteraction",
                    "docsAnchor": "add-interfaceinteraction",
                    "fields": {
                      "type": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  }
                ]
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment",
        "x-annotation-updateType": "PaymentUpdate",
        "type": "string"
      },
      "PaymentDraft": {
        "title": "PaymentDraft",
        "includePath": "types/payment/PaymentDraft.raml",
        "type": "object",
        "properties": {
          "customer": {
            "title": "customer",
            "$ref": "#/components/schemas/CustomerReference"
          },
          "anonymousId": {
            "title": "anonymousId",
            "type": "string"
          },
          "externalId": {
            "title": "externalId",
            "type": "string"
          },
          "interfaceId": {
            "title": "interfaceId",
            "type": "string"
          },
          "amountPlanned": {
            "title": "amountPlanned",
            "$ref": "#/components/schemas/Money"
          },
          "amountAuthorized": {
            "title": "amountAuthorized",
            "$ref": "#/components/schemas/Money"
          },
          "authorizedUntil": {
            "title": "authorizedUntil",
            "type": "string"
          },
          "amountPaid": {
            "title": "amountPaid",
            "$ref": "#/components/schemas/Money"
          },
          "amountRefunded": {
            "title": "amountRefunded",
            "$ref": "#/components/schemas/Money"
          },
          "paymentMethodInfo": {
            "title": "paymentMethodInfo",
            "$ref": "#/components/schemas/PaymentMethodInfo"
          },
          "paymentStatus": {
            "title": "paymentStatus",
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "transactions": {
            "title": "transactions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDraft"
            }
          },
          "interfaceInteractions": {
            "title": "interfaceInteractions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldsDraft"
            }
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "key": {
            "title": "key",
            "type": "string"
          }
        },
        "required": [
          "amountPlanned"
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentdraft"
      },
      "PaymentMethodInfo": {
        "title": "PaymentMethodInfo",
        "includePath": "types/payment/PaymentMethodInfo.raml",
        "type": "object",
        "properties": {
          "paymentInterface": {
            "title": "paymentInterface",
            "type": "string"
          },
          "method": {
            "title": "method",
            "type": "string"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          }
        },
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentmethodinfo"
      },
      "PaymentPagedQueryResponse": {
        "title": "PaymentPagedQueryResponse",
        "includePath": "types/payment/PaymentPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "type": "string"
      },
      "PaymentReference": {
        "title": "PaymentReference",
        "includePath": "types/payment/PaymentReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Payment"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment",
        "type": "string"
      },
      "PaymentStatus": {
        "title": "PaymentStatus",
        "includePath": "types/payment/PaymentStatus.raml",
        "type": "object",
        "properties": {
          "interfaceCode": {
            "title": "interfaceCode",
            "type": "string"
          },
          "interfaceText": {
            "title": "interfaceText",
            "type": "string"
          },
          "state": {
            "title": "state",
            "$ref": "#/components/schemas/StateReference"
          }
        },
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentstatus"
      },
      "PaymentUpdate": {
        "title": "PaymentUpdate",
        "includePath": "types/payment/PaymentUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "type": "string"
      },
      "PaymentUpdateAction": {
        "title": "PaymentUpdateAction",
        "includePath": "types/payment/PaymentUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Payment"
      },
      "Transaction": {
        "title": "Transaction",
        "includePath": "types/payment/Transaction.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "timestamp": {
            "title": "timestamp",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/TransactionType"
          },
          "amount": {
            "title": "amount",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "interactionId": {
            "title": "interactionId",
            "type": "string"
          },
          "state": {
            "title": "state",
            "$ref": "#/components/schemas/TransactionState"
          }
        },
        "required": [
          "id",
          "type",
          "amount"
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transaction"
      },
      "TransactionDraft": {
        "title": "TransactionDraft",
        "includePath": "types/payment/TransactionDraft.raml",
        "type": "object",
        "properties": {
          "timestamp": {
            "title": "timestamp",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/TransactionType"
          },
          "amount": {
            "title": "amount",
            "$ref": "#/components/schemas/Money"
          },
          "interactionId": {
            "title": "interactionId",
            "type": "string"
          },
          "state": {
            "title": "state",
            "$ref": "#/components/schemas/TransactionState"
          }
        },
        "required": [
          "type",
          "amount"
        ],
        "x-annotation-package": "Payment"
      },
      "TransactionState": {
        "title": "TransactionState",
        "enum": [
          "Initial",
          "Pending",
          "Success",
          "Failure"
        ],
        "includePath": "types/payment/TransactionState.raml",
        "type": "string",
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactionstate"
      },
      "TransactionType": {
        "title": "TransactionType",
        "enum": [
          "Authorization",
          "CancelAuthorization",
          "Charge",
          "Refund",
          "Chargeback"
        ],
        "includePath": "types/payment/TransactionType.raml",
        "type": "string",
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactiontype"
      },
      "PaymentAddInterfaceInteractionAction": {
        "title": "PaymentAddInterfaceInteractionAction",
        "includePath": "types/payment/updates/PaymentAddInterfaceInteractionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-interfaceinteraction",
        "type": "string"
      },
      "PaymentAddTransactionAction": {
        "title": "PaymentAddTransactionAction",
        "includePath": "types/payment/updates/PaymentAddTransactionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "transaction": {
                "title": "transaction",
                "$ref": "#/components/schemas/TransactionDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-transaction",
        "type": "string"
      },
      "PaymentChangeAmountPlannedAction": {
        "title": "PaymentChangeAmountPlannedAction",
        "includePath": "types/payment/updates/PaymentChangeAmountPlannedAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "title": "amount",
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-amountplanned",
        "type": "string"
      },
      "PaymentChangeTransactionInteractionIdAction": {
        "title": "PaymentChangeTransactionInteractionIdAction",
        "includePath": "types/payment/updates/PaymentChangeTransactionInteractionIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "transactionId": {
                "title": "transactionId",
                "type": "string"
              },
              "interactionId": {
                "title": "interactionId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactioninteractionid",
        "type": "string"
      },
      "PaymentChangeTransactionStateAction": {
        "title": "PaymentChangeTransactionStateAction",
        "includePath": "types/payment/updates/PaymentChangeTransactionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "transactionId": {
                "title": "transactionId",
                "type": "string"
              },
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/TransactionState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactionstate",
        "type": "string"
      },
      "PaymentChangeTransactionTimestampAction": {
        "title": "PaymentChangeTransactionTimestampAction",
        "includePath": "types/payment/updates/PaymentChangeTransactionTimestampAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "timestamp": {
                "title": "timestamp",
                "type": "string",
                "format": "date-time"
              },
              "transactionId": {
                "title": "transactionId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactiontimestamp",
        "type": "string"
      },
      "PaymentSetAmountPaidAction": {
        "title": "PaymentSetAmountPaidAction",
        "includePath": "types/payment/updates/PaymentSetAmountPaidAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "title": "amount",
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountpaid",
        "type": "string"
      },
      "PaymentSetAmountRefundedAction": {
        "title": "PaymentSetAmountRefundedAction",
        "includePath": "types/payment/updates/PaymentSetAmountRefundedAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "title": "amount",
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountrefunded",
        "type": "string"
      },
      "PaymentSetAnonymousIdAction": {
        "title": "PaymentSetAnonymousIdAction",
        "includePath": "types/payment/updates/PaymentSetAnonymousIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "anonymousId": {
                "title": "anonymousId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-anonymousid",
        "type": "string"
      },
      "PaymentSetAuthorizationAction": {
        "title": "PaymentSetAuthorizationAction",
        "includePath": "types/payment/updates/PaymentSetAuthorizationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "title": "amount",
                "$ref": "#/components/schemas/Money"
              },
              "until": {
                "title": "until",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-authorization",
        "type": "string"
      },
      "PaymentSetCustomFieldAction": {
        "title": "PaymentSetCustomFieldAction",
        "includePath": "types/payment/updates/PaymentSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customfield",
        "type": "string"
      },
      "PaymentSetCustomTypeAction": {
        "title": "PaymentSetCustomTypeAction",
        "includePath": "types/payment/updates/PaymentSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-custom-type",
        "type": "string"
      },
      "PaymentSetCustomerAction": {
        "title": "PaymentSetCustomerAction",
        "includePath": "types/payment/updates/PaymentSetCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/CustomerReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customer",
        "type": "string"
      },
      "PaymentSetExternalIdAction": {
        "title": "PaymentSetExternalIdAction",
        "includePath": "types/payment/updates/PaymentSetExternalIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "externalId": {
                "title": "externalId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-externalid",
        "type": "string"
      },
      "PaymentSetInterfaceIdAction": {
        "title": "PaymentSetInterfaceIdAction",
        "includePath": "types/payment/updates/PaymentSetInterfaceIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interfaceId": {
                "title": "interfaceId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-interfaceid",
        "type": "string"
      },
      "PaymentSetKeyAction": {
        "title": "PaymentSetKeyAction",
        "includePath": "types/payment/updates/PaymentSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-key",
        "type": "string"
      },
      "PaymentSetMethodInfoInterfaceAction": {
        "title": "PaymentSetMethodInfoInterfaceAction",
        "includePath": "types/payment/updates/PaymentSetMethodInfoInterfaceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interface": {
                "title": "interface",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfointerface",
        "type": "string"
      },
      "PaymentSetMethodInfoMethodAction": {
        "title": "PaymentSetMethodInfoMethodAction",
        "includePath": "types/payment/updates/PaymentSetMethodInfoMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "method": {
                "title": "method",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfomethod",
        "type": "string"
      },
      "PaymentSetMethodInfoNameAction": {
        "title": "PaymentSetMethodInfoNameAction",
        "includePath": "types/payment/updates/PaymentSetMethodInfoNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfoname",
        "type": "string"
      },
      "PaymentSetStatusInterfaceCodeAction": {
        "title": "PaymentSetStatusInterfaceCodeAction",
        "includePath": "types/payment/updates/PaymentSetStatusInterfaceCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interfaceCode": {
                "title": "interfaceCode",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacecode",
        "type": "string"
      },
      "PaymentSetStatusInterfaceTextAction": {
        "title": "PaymentSetStatusInterfaceTextAction",
        "includePath": "types/payment/updates/PaymentSetStatusInterfaceTextAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interfaceText": {
                "title": "interfaceText",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacetext",
        "type": "string"
      },
      "PaymentTransitionStateAction": {
        "title": "PaymentTransitionStateAction",
        "includePath": "types/payment/updates/PaymentTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transition-state",
        "type": "string"
      },
      "ProductDiscount": {
        "title": "ProductDiscount",
        "includePath": "types/product-discount/ProductDiscount.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/ProductDiscountValue",
                "x-annotation-hasSimpleUpdateAction": "changeValue"
              },
              "predicate": {
                "title": "predicate",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changePredicate"
              },
              "sortOrder": {
                "title": "sortOrder",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeSortOrder"
              },
              "isActive": {
                "title": "isActive",
                "type": "boolean",
                "x-annotation-hasSimpleUpdateAction": "changeIsActive"
              },
              "references": {
                "title": "references",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                }
              },
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time",
                "x-annotation-hasSimpleUpdateAction": "setValidFrom"
              },
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time",
                "x-annotation-hasSimpleUpdateAction": "setValidUntil"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount",
        "x-annotation-updateType": "ProductDiscountUpdate",
        "x-annotation-hasUpdateActions": [
          {
            "action": "setValidFromAndUntil",
            "fields": {
              "validFrom?": {
                "type": "datetime"
              },
              "validUntil?": {
                "type": "datetime"
              }
            }
          }
        ],
        "type": "string"
      },
      "ProductDiscountDraft": {
        "title": "ProductDiscountDraft",
        "includePath": "types/product-discount/ProductDiscountDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/ProductDiscountValue"
          },
          "predicate": {
            "title": "predicate",
            "type": "string"
          },
          "sortOrder": {
            "title": "sortOrder",
            "type": "string"
          },
          "isActive": {
            "title": "isActive",
            "type": "boolean"
          },
          "validFrom": {
            "title": "validFrom",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "title": "validUntil",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "value",
          "predicate",
          "sortOrder",
          "isActive"
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountdraft"
      },
      "ProductDiscountMatchQuery": {
        "title": "ProductDiscountMatchQuery",
        "includePath": "types/product-discount/ProductDiscountMatchQuery.raml",
        "type": "object",
        "properties": {
          "productId": {
            "title": "productId",
            "type": "string"
          },
          "variantId": {
            "title": "variantId",
            "format": "int32",
            "type": "number"
          },
          "staged": {
            "title": "staged",
            "type": "boolean"
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/Price"
          }
        },
        "required": [
          "productId",
          "variantId",
          "staged",
          "price"
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#get-matching-productdiscount"
      },
      "ProductDiscountPagedQueryResponse": {
        "title": "ProductDiscountPagedQueryResponse",
        "includePath": "types/product-discount/ProductDiscountPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductDiscount"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountReference": {
        "title": "ProductDiscountReference",
        "includePath": "types/product-discount/ProductDiscountReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/ProductDiscount"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount",
        "type": "string"
      },
      "ProductDiscountUpdate": {
        "title": "ProductDiscountUpdate",
        "includePath": "types/product-discount/ProductDiscountUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductDiscountUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountUpdateAction": {
        "title": "ProductDiscountUpdateAction",
        "includePath": "types/product-discount/ProductDiscountUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "ProductDiscount"
      },
      "ProductDiscountValue": {
        "title": "ProductDiscountValue",
        "includePath": "types/product-discount/ProductDiscountValue.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountvalue"
      },
      "ProductDiscountValueAbsolute": {
        "title": "ProductDiscountValueAbsolute",
        "includePath": "types/product-discount/ProductDiscountValueAbsolute.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountValue"
          },
          {
            "properties": {
              "money": {
                "title": "money",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Money"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountValueExternal": {
        "title": "ProductDiscountValueExternal",
        "includePath": "types/product-discount/ProductDiscountValueExternal.raml",
        "$ref": "#/components/schemas/ProductDiscountValue",
        "x-annotation-package": "ProductDiscount"
      },
      "ProductDiscountValueRelative": {
        "title": "ProductDiscountValueRelative",
        "includePath": "types/product-discount/ProductDiscountValueRelative.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountValue"
          },
          {
            "properties": {
              "permyriad": {
                "title": "permyriad",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountChangeIsActiveAction": {
        "title": "ProductDiscountChangeIsActiveAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeIsActiveAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "isActive": {
                "title": "isActive",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-is-active",
        "type": "string"
      },
      "ProductDiscountChangeNameAction": {
        "title": "ProductDiscountChangeNameAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-name",
        "type": "string"
      },
      "ProductDiscountChangePredicateAction": {
        "title": "ProductDiscountChangePredicateAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangePredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "predicate": {
                "title": "predicate",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-predicate",
        "type": "string"
      },
      "ProductDiscountChangeSortOrderAction": {
        "title": "ProductDiscountChangeSortOrderAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeSortOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "sortOrder": {
                "title": "sortOrder",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-sort-order",
        "type": "string"
      },
      "ProductDiscountChangeValueAction": {
        "title": "ProductDiscountChangeValueAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/ProductDiscountValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-value",
        "type": "string"
      },
      "ProductDiscountSetDescriptionAction": {
        "title": "ProductDiscountSetDescriptionAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-description",
        "type": "string"
      },
      "ProductDiscountSetValidFromAction": {
        "title": "ProductDiscountSetValidFromAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetValidFromAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-from",
        "type": "string"
      },
      "ProductDiscountSetValidFromAndUntilAction": {
        "title": "ProductDiscountSetValidFromAndUntilAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetValidFromAndUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "title": "validFrom",
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-from-and-until",
        "type": "string"
      },
      "ProductDiscountSetValidUntilAction": {
        "title": "ProductDiscountSetValidUntilAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetValidUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "validUntil": {
                "title": "validUntil",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-until",
        "type": "string"
      },
      "AttributeBooleanType": {
        "title": "AttributeBooleanType",
        "includePath": "types/product-type/AttributeBooleanType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#booleantype"
      },
      "AttributeConstraintEnum": {
        "title": "AttributeConstraintEnum",
        "enum": [
          "None",
          "Unique",
          "CombinationUnique",
          "SameForAll"
        ],
        "includePath": "types/product-type/AttributeConstraintEnum.raml",
        "type": "string",
        "x-annotation-package": "ProductType"
      },
      "AttributeConstraintEnumDraft": {
        "title": "AttributeConstraintEnumDraft",
        "enum": [
          "None"
        ],
        "includePath": "types/product-type/AttributeConstraintEnumDraft.raml",
        "type": "string",
        "x-annotation-package": "ProductType"
      },
      "AttributeDateTimeType": {
        "title": "AttributeDateTimeType",
        "includePath": "types/product-type/AttributeDateTimeType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetimetype"
      },
      "AttributeDateType": {
        "title": "AttributeDateType",
        "includePath": "types/product-type/AttributeDateType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetype"
      },
      "AttributeDefinition": {
        "title": "AttributeDefinition",
        "includePath": "types/product-type/AttributeDefinition.raml",
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "type": "object"
          },
          "name": {
            "title": "name",
            "type": "string"
          },
          "label": {
            "title": "label",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "isRequired": {
            "title": "isRequired",
            "type": "boolean"
          },
          "attributeConstraint": {
            "title": "attributeConstraint",
            "$ref": "#/components/schemas/AttributeConstraintEnum"
          },
          "inputTip": {
            "title": "inputTip",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "inputHint": {
            "title": "inputHint",
            "$ref": "#/components/schemas/TextInputHint"
          },
          "isSearchable": {
            "title": "isSearchable",
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "name",
          "label",
          "isRequired",
          "attributeConstraint",
          "inputHint",
          "isSearchable"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributedefinition"
      },
      "AttributeDefinitionDraft": {
        "title": "AttributeDefinitionDraft",
        "includePath": "types/product-type/AttributeDefinitionDraft.raml",
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "type": "object"
          },
          "name": {
            "title": "name",
            "type": "string"
          },
          "label": {
            "title": "label",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "isRequired": {
            "title": "isRequired",
            "type": "boolean"
          },
          "attributeConstraint": {
            "title": "attributeConstraint",
            "$ref": "#/components/schemas/AttributeConstraintEnum"
          },
          "inputTip": {
            "title": "inputTip",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "inputHint": {
            "title": "inputHint",
            "$ref": "#/components/schemas/TextInputHint"
          },
          "isSearchable": {
            "title": "isSearchable",
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "name",
          "label",
          "isRequired"
        ],
        "x-annotation-package": "ProductType"
      },
      "AttributeEnumType": {
        "title": "AttributeEnumType",
        "includePath": "types/product-type/AttributeEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "values": {
                "title": "values",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributePlainEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#enumtype",
        "type": "string"
      },
      "AttributeLocalizableTextType": {
        "title": "AttributeLocalizableTextType",
        "includePath": "types/product-type/AttributeLocalizableTextType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizabletexttype"
      },
      "AttributeLocalizedEnumType": {
        "title": "AttributeLocalizedEnumType",
        "includePath": "types/product-type/AttributeLocalizedEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "values": {
                "title": "values",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizableenumtype",
        "type": "string"
      },
      "AttributeLocalizedEnumValue": {
        "title": "AttributeLocalizedEnumValue",
        "includePath": "types/product-type/AttributeLocalizedEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "label": {
            "title": "label",
            "$ref": "#/components/schemas/LocalizedString"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizedenumvalue"
      },
      "AttributeMoneyType": {
        "title": "AttributeMoneyType",
        "includePath": "types/product-type/AttributeMoneyType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#moneytype"
      },
      "AttributeNestedType": {
        "title": "AttributeNestedType",
        "includePath": "types/product-type/AttributeNestedType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "typeReference": {
                "title": "typeReference",
                "$ref": "#/components/schemas/ProductTypeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#nestedtype",
        "type": "string"
      },
      "AttributeNumberType": {
        "title": "AttributeNumberType",
        "includePath": "types/product-type/AttributeNumberType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#numbertype"
      },
      "AttributePlainEnumValue": {
        "title": "AttributePlainEnumValue",
        "includePath": "types/product-type/AttributePlainEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "label": {
            "title": "label",
            "type": "string"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#plainenumvalue"
      },
      "AttributeReferenceType": {
        "title": "AttributeReferenceType",
        "includePath": "types/product-type/AttributeReferenceType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "referenceTypeId": {
                "title": "referenceTypeId",
                "$ref": "#/components/schemas/ReferenceTypeId"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#referencetype",
        "type": "string"
      },
      "AttributeSetType": {
        "title": "AttributeSetType",
        "includePath": "types/product-type/AttributeSetType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "elementType": {
                "title": "elementType",
                "$ref": "#/components/schemas/AttributeType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#settype",
        "type": "string"
      },
      "AttributeTextType": {
        "title": "AttributeTextType",
        "includePath": "types/product-type/AttributeTextType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#texttype"
      },
      "AttributeTimeType": {
        "title": "AttributeTimeType",
        "includePath": "types/product-type/AttributeTimeType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#timetype"
      },
      "AttributeType": {
        "title": "AttributeType",
        "includePath": "types/product-type/AttributeType.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "name"
        },
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributetype"
      },
      "ProductType": {
        "title": "ProductType",
        "includePath": "types/product-type/ProductType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "name": {
                "title": "name",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "description": {
                "title": "description",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeDescription"
              },
              "attributes": {
                "title": "attributes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addAttributeDefinition",
                    "docsAnchor": "add-attributedefinition",
                    "fields": {
                      "attribute": "AttributeDefinitionDraft"
                    }
                  },
                  {
                    "action": "removeAttributeDefinition",
                    "docsAnchor": "remove-attributedefinition",
                    "fields": {
                      "name": "string"
                    }
                  },
                  {
                    "action": "changeAttributeName",
                    "docsAnchor": "change-attributedefinition-name",
                    "fields": {
                      "attributeName": "string",
                      "newAttributeName": "string"
                    }
                  },
                  {
                    "action": "changeLabel",
                    "docsAnchor": "change-attributedefinition-label",
                    "fields": {
                      "attributeName": "string",
                      "label": "LocalizedString"
                    }
                  },
                  {
                    "action": "setInputTip",
                    "docsAnchor": "set-attributedefinition-inputtip",
                    "fields": {
                      "attributeName": "string",
                      "inputTip?": "LocalizedString"
                    }
                  },
                  {
                    "action": "addPlainEnumValue",
                    "docsAnchor": "add-plainenumvalue-to-attributedefinition",
                    "fields": {
                      "attributeName": "string",
                      "value": "AttributePlainEnumValue"
                    }
                  },
                  {
                    "action": "addLocalizedEnumValue",
                    "docsAnchor": "add-localizableenumvalue-to-attributedefinition",
                    "fields": {
                      "attributeName": "string",
                      "value": "AttributeLocalizedEnumValue"
                    }
                  },
                  {
                    "action": "removeEnumValues",
                    "docsAnchor": "remove-enumvalues-from-attributedefinition",
                    "fields": {
                      "attributeName": "string",
                      "keys": "string[]"
                    }
                  },
                  {
                    "action": "changeAttributeOrder",
                    "docsAnchor": "change-the-order-of-attributedefinitions",
                    "fields": {
                      "attributes": "AttributeDefinition[]"
                    }
                  },
                  {
                    "action": "changePlainEnumValueOrder",
                    "docsAnchor": "change-the-order-of-enumvalues",
                    "fields": {
                      "attributeName": "string",
                      "values": "AttributePlainEnumValue[]"
                    }
                  },
                  {
                    "action": "changeLocalizedEnumValueOrder",
                    "docsAnchor": "change-the-order-of-localizedenumvalues",
                    "fields": {
                      "attributeName": "string",
                      "values": "AttributeLocalizedEnumValue[]"
                    }
                  },
                  {
                    "action": "changeEnumKey",
                    "docsAnchor": "change-the-key-of-an-enumvalue",
                    "fields": {
                      "attributeName": "string",
                      "key": "string",
                      "newKey": "string"
                    }
                  },
                  {
                    "action": "changePlainEnumValueLabel",
                    "docsAnchor": "change-the-label-of-an-enumvalue",
                    "fields": {
                      "attributeName": "string",
                      "newValue": "AttributePlainEnumValue"
                    }
                  },
                  {
                    "action": "changeLocalizedEnumValueLabel",
                    "docsAnchor": "change-the-label-of-an-enumvalue",
                    "fields": {
                      "attributeName": "string",
                      "newValue": "AttributeLocalizedEnumValue"
                    }
                  },
                  {
                    "action": "changeIsSearchable",
                    "docsAnchor": "change-attributedefinition-issearchable",
                    "fields": {
                      "attributeName": "string",
                      "isSearchable": "boolean"
                    }
                  },
                  {
                    "action": "changeInputHint",
                    "docsAnchor": "change-attributedefinition-inputhint",
                    "fields": {
                      "attributeName": "string",
                      "newValue": "TextInputHint"
                    }
                  },
                  {
                    "action": "changeAttributeConstraint",
                    "docsAnchor": "change-attributedefinition-attributeconstraint",
                    "fields": {
                      "attributeName": "string",
                      "newValue": "AttributeConstraintEnumDraft"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype",
        "x-annotation-updateType": "ProductTypeUpdate",
        "type": "string"
      },
      "ProductTypeDraft": {
        "title": "ProductTypeDraft",
        "includePath": "types/product-type/ProductTypeDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "name": {
            "title": "name",
            "type": "string"
          },
          "description": {
            "title": "description",
            "type": "string"
          },
          "attributes": {
            "title": "attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDefinitionDraft"
            }
          }
        },
        "required": [
          "name",
          "description"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttypedraft"
      },
      "ProductTypePagedQueryResponse": {
        "title": "ProductTypePagedQueryResponse",
        "includePath": "types/product-type/ProductTypePagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "type": "string"
      },
      "ProductTypeReference": {
        "title": "ProductTypeReference",
        "includePath": "types/product-type/ProductTypeReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/ProductType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype",
        "type": "string"
      },
      "ProductTypeUpdate": {
        "title": "ProductTypeUpdate",
        "includePath": "types/product-type/ProductTypeUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductTypeUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "type": "string"
      },
      "ProductTypeUpdateAction": {
        "title": "ProductTypeUpdateAction",
        "includePath": "types/product-type/ProductTypeUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "ProductType"
      },
      "TextInputHint": {
        "title": "TextInputHint",
        "enum": [
          "SingleLine",
          "MultiLine"
        ],
        "includePath": "types/product-type/TextInputHint.raml",
        "type": "string",
        "x-annotation-package": "ProductType"
      },
      "ProductTypeAddAttributeDefinitionAction": {
        "title": "ProductTypeAddAttributeDefinitionAction",
        "includePath": "types/product-type/updates/ProductTypeAddAttributeDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attribute": {
                "title": "attribute",
                "$ref": "#/components/schemas/AttributeDefinitionDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-attributedefinition",
        "type": "string"
      },
      "ProductTypeAddLocalizedEnumValueAction": {
        "title": "ProductTypeAddLocalizedEnumValueAction",
        "includePath": "types/product-type/updates/ProductTypeAddLocalizedEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-localizableenumvalue-to-attributedefinition",
        "type": "string"
      },
      "ProductTypeAddPlainEnumValueAction": {
        "title": "ProductTypeAddPlainEnumValueAction",
        "includePath": "types/product-type/updates/ProductTypeAddPlainEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/AttributePlainEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-plainenumvalue-to-attributedefinition",
        "type": "string"
      },
      "ProductTypeChangeAttributeConstraintAction": {
        "title": "ProductTypeChangeAttributeConstraintAction",
        "includePath": "types/product-type/updates/ProductTypeChangeAttributeConstraintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "newValue": {
                "title": "newValue",
                "$ref": "#/components/schemas/AttributeConstraintEnumDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-attributeconstraint",
        "type": "string"
      },
      "ProductTypeChangeAttributeNameAction": {
        "title": "ProductTypeChangeAttributeNameAction",
        "includePath": "types/product-type/updates/ProductTypeChangeAttributeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "newAttributeName": {
                "title": "newAttributeName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-name",
        "type": "string"
      },
      "ProductTypeChangeAttributeOrderAction": {
        "title": "ProductTypeChangeAttributeOrderAction",
        "includePath": "types/product-type/updates/ProductTypeChangeAttributeOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributes": {
                "title": "attributes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-attributedefinitions",
        "type": "string"
      },
      "ProductTypeChangeDescriptionAction": {
        "title": "ProductTypeChangeDescriptionAction",
        "includePath": "types/product-type/updates/ProductTypeChangeDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-description",
        "type": "string"
      },
      "ProductTypeChangeEnumKeyAction": {
        "title": "ProductTypeChangeEnumKeyAction",
        "includePath": "types/product-type/updates/ProductTypeChangeEnumKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "key": {
                "title": "key",
                "type": "string"
              },
              "newKey": {
                "title": "newKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-key-of-an-enumvalue",
        "type": "string"
      },
      "ProductTypeChangeInputHintAction": {
        "title": "ProductTypeChangeInputHintAction",
        "includePath": "types/product-type/updates/ProductTypeChangeInputHintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "newValue": {
                "title": "newValue",
                "$ref": "#/components/schemas/TextInputHint"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-inputhint",
        "type": "string"
      },
      "ProductTypeChangeIsSearchableAction": {
        "title": "ProductTypeChangeIsSearchableAction",
        "includePath": "types/product-type/updates/ProductTypeChangeIsSearchableAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "isSearchable": {
                "title": "isSearchable",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-issearchable",
        "type": "string"
      },
      "ProductTypeChangeLabelAction": {
        "title": "ProductTypeChangeLabelAction",
        "includePath": "types/product-type/updates/ProductTypeChangeLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "label": {
                "title": "label",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-label",
        "type": "string"
      },
      "ProductTypeChangeLocalizedEnumValueLabelAction": {
        "title": "ProductTypeChangeLocalizedEnumValueLabelAction",
        "includePath": "types/product-type/updates/ProductTypeChangeLocalizedEnumValueLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "newValue": {
                "title": "newValue",
                "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-label-of-an-enumvalue",
        "type": "string"
      },
      "ProductTypeChangeLocalizedEnumValueOrderAction": {
        "title": "ProductTypeChangeLocalizedEnumValueOrderAction",
        "includePath": "types/product-type/updates/ProductTypeChangeLocalizedEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "values": {
                "title": "values",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-localizedenumvalues",
        "type": "string"
      },
      "ProductTypeChangeNameAction": {
        "title": "ProductTypeChangeNameAction",
        "includePath": "types/product-type/updates/ProductTypeChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-name",
        "type": "string"
      },
      "ProductTypeChangePlainEnumValueLabelAction": {
        "title": "ProductTypeChangePlainEnumValueLabelAction",
        "includePath": "types/product-type/updates/ProductTypeChangePlainEnumValueLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "newValue": {
                "title": "newValue",
                "$ref": "#/components/schemas/AttributePlainEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-label-of-an-enumvalue",
        "type": "string"
      },
      "ProductTypeChangePlainEnumValueOrderAction": {
        "title": "ProductTypeChangePlainEnumValueOrderAction",
        "includePath": "types/product-type/updates/ProductTypeChangePlainEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "values": {
                "title": "values",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributePlainEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-enumvalues",
        "type": "string"
      },
      "ProductTypeRemoveAttributeDefinitionAction": {
        "title": "ProductTypeRemoveAttributeDefinitionAction",
        "includePath": "types/product-type/updates/ProductTypeRemoveAttributeDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-attributedefinition",
        "type": "string"
      },
      "ProductTypeRemoveEnumValuesAction": {
        "title": "ProductTypeRemoveEnumValuesAction",
        "includePath": "types/product-type/updates/ProductTypeRemoveEnumValuesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "keys": {
                "title": "keys",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-enumvalues-from-attributedefinition",
        "type": "string"
      },
      "ProductTypeSetInputTipAction": {
        "title": "ProductTypeSetInputTipAction",
        "includePath": "types/product-type/updates/ProductTypeSetInputTipAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "title": "attributeName",
                "type": "string"
              },
              "inputTip": {
                "title": "inputTip",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-attributedefinition-inputtip",
        "type": "string"
      },
      "ProductTypeSetKeyAction": {
        "title": "ProductTypeSetKeyAction",
        "includePath": "types/product-type/updates/ProductTypeSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-key",
        "type": "string"
      },
      "Attribute": {
        "title": "Attribute",
        "includePath": "types/product/Attribute.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "x-annotation-identifier": true,
            "x-annotation-elementIdentifier": true
          },
          "value": {
            "title": "value",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#attribute"
      },
      "AttributeValue": {
        "title": "AttributeValue",
        "includePath": "types/product/AttributeValue.raml",
        "type": "object",
        "x-annotation-package": "Product"
      },
      "CategoryOrderHints": {
        "title": "CategoryOrderHints",
        "includePath": "types/product/CategoryOrderHints.raml",
        "type": "object",
        "additionalProperties": {
          "title": "/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/",
          "required": true,
          "type": "string"
        },
        "x-annotation-package": "Product",
        "x-annotation-asMap": {
          "key": "string",
          "value": "string"
        }
      },
      "CustomTokenizer": {
        "title": "CustomTokenizer",
        "includePath": "types/product/CustomTokenizer.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SuggestTokenizer"
          },
          {
            "properties": {
              "inputs": {
                "title": "inputs",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "FacetResult": {
        "title": "FacetResult",
        "includePath": "types/product/FacetResult.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/FacetTypes"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Product"
      },
      "FacetResultRange": {
        "title": "FacetResultRange",
        "includePath": "types/product/FacetResultRange.raml",
        "type": "object",
        "properties": {
          "from": {
            "title": "from",
            "type": "number"
          },
          "fromStr": {
            "title": "fromStr",
            "type": "string"
          },
          "to": {
            "title": "to",
            "type": "number"
          },
          "toStr": {
            "title": "toStr",
            "type": "string"
          },
          "count": {
            "title": "count",
            "format": "int64",
            "type": "number"
          },
          "productCount": {
            "title": "productCount",
            "format": "int64",
            "type": "number"
          },
          "total": {
            "title": "total",
            "format": "int64",
            "type": "number"
          },
          "min": {
            "title": "min",
            "type": "number"
          },
          "max": {
            "title": "max",
            "type": "number"
          },
          "mean": {
            "title": "mean",
            "type": "number"
          }
        },
        "required": [
          "from",
          "fromStr",
          "to",
          "toStr",
          "count",
          "total",
          "min",
          "max",
          "mean"
        ],
        "x-annotation-package": "Product"
      },
      "FacetResultTerm": {
        "title": "FacetResultTerm",
        "includePath": "types/product/FacetResultTerm.raml",
        "type": "object",
        "properties": {
          "term": {
            "title": "term",
            "type": "string"
          },
          "count": {
            "title": "count",
            "format": "int64",
            "type": "number"
          },
          "productCount": {
            "title": "productCount",
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "term",
          "count"
        ],
        "x-annotation-package": "Product"
      },
      "FacetResults": {
        "title": "FacetResults",
        "includePath": "types/product/FacetResults.raml",
        "type": "object",
        "additionalProperties": {
          "title": "/^[a-z].*$/",
          "required": true,
          "type": "object"
        },
        "x-annotation-package": "Product"
      },
      "FacetTypes": {
        "title": "FacetTypes",
        "enum": [
          "terms",
          "range",
          "filter"
        ],
        "includePath": "types/product/FacetTypes.raml",
        "type": "string",
        "x-annotation-package": "Product"
      },
      "FilteredFacetResult": {
        "title": "FilteredFacetResult",
        "includePath": "types/product/FilteredFacetResult.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FacetResult"
          },
          {
            "properties": {
              "count": {
                "title": "count",
                "format": "int64",
                "type": "number"
              },
              "productCount": {
                "title": "productCount",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "Product": {
        "title": "Product",
        "includePath": "types/product/Product.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "productType": {
                "title": "productType",
                "$ref": "#/components/schemas/ProductTypeReference"
              },
              "masterData": {
                "title": "masterData",
                "$ref": "#/components/schemas/ProductCatalogData"
              },
              "taxCategory": {
                "title": "taxCategory",
                "$ref": "#/components/schemas/TaxCategoryReference",
                "x-annotation-hasUpdateAction": {
                  "action": "setTaxCategory",
                  "docsAnchor": "set-taxcategory"
                }
              },
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "reviewRatingStatistics": {
                "title": "reviewRatingStatistics",
                "$ref": "#/components/schemas/ReviewRatingStatistics"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product",
        "x-annotation-updateType": "ProductUpdate",
        "x-annotation-hasUpdateActions": [
          {
            "action": "revertStagedChanges"
          },
          {
            "action": "revertStagedVariantChanges",
            "fields": {
              "variantId": {
                "type": "number",
                "format": "int64"
              }
            }
          },
          {
            "action": "publish",
            "fields": {
              "scope?": "ProductPublishScope"
            }
          },
          {
            "action": "unpublish"
          }
        ],
        "type": "string"
      },
      "ProductCatalogData": {
        "title": "ProductCatalogData",
        "includePath": "types/product/ProductCatalogData.raml",
        "type": "object",
        "properties": {
          "published": {
            "title": "published",
            "type": "boolean"
          },
          "current": {
            "title": "current",
            "$ref": "#/components/schemas/ProductData"
          },
          "staged": {
            "title": "staged",
            "$ref": "#/components/schemas/ProductData"
          },
          "hasStagedChanges": {
            "title": "hasStagedChanges",
            "type": "boolean"
          }
        },
        "required": [
          "published",
          "current",
          "staged",
          "hasStagedChanges"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productcatalogdata"
      },
      "ProductData": {
        "title": "ProductData",
        "includePath": "types/product/ProductData.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString",
            "x-annotation-hasUpdateAction": {
              "action": "changeName",
              "fields": {
                "name": "LocalizedString",
                "staged?": "boolean"
              }
            }
          },
          "categories": {
            "title": "categories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryReference"
            },
            "x-annotation-hasUpdateActions": [
              {
                "action": "addToCategory",
                "fields": {
                  "category": "CategoryReference",
                  "orderHint?": "string",
                  "staged?": "boolean"
                }
              },
              {
                "action": "removeFromCategory",
                "fields": {
                  "category": "CategoryReference",
                  "staged?": "boolean"
                }
              }
            ]
          },
          "categoryOrderHints": {
            "title": "categoryOrderHints",
            "$ref": "#/components/schemas/CategoryOrderHints",
            "x-annotation-hasUpdateAction": {
              "action": "setCategoryOrderHint",
              "fields": {
                "categoryId": "string",
                "orderHint?": "string",
                "staged?": "boolean"
              }
            }
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString",
            "x-annotation-hasUpdateAction": {
              "action": "setDescription",
              "fields": {
                "description?": "LocalizedString",
                "staged?": "boolean"
              }
            }
          },
          "slug": {
            "title": "slug",
            "$ref": "#/components/schemas/LocalizedString",
            "x-annotation-hasUpdateAction": {
              "action": "changeSlug",
              "fields": {
                "slug": "LocalizedString",
                "staged?": "boolean"
              }
            }
          },
          "metaTitle": {
            "title": "metaTitle",
            "$ref": "#/components/schemas/LocalizedString",
            "x-annotation-hasUpdateAction": {
              "action": "setMetaTitle",
              "fields": {
                "metaTitle?": "LocalizedString",
                "staged?": "boolean"
              }
            }
          },
          "metaDescription": {
            "title": "metaDescription",
            "$ref": "#/components/schemas/LocalizedString",
            "x-annotation-hasUpdateAction": {
              "action": "setMetaDescription",
              "fields": {
                "metaDescription?": "LocalizedString",
                "staged?": "boolean"
              }
            }
          },
          "metaKeywords": {
            "title": "metaKeywords",
            "$ref": "#/components/schemas/LocalizedString",
            "x-annotation-hasUpdateAction": {
              "action": "setMetaKeywords",
              "fields": {
                "metaKeywords?": "LocalizedString",
                "staged?": "boolean"
              }
            }
          },
          "masterVariant": {
            "title": "masterVariant",
            "$ref": "#/components/schemas/ProductVariant",
            "x-annotation-hasUpdateAction": {
              "action": "changeMasterVariant",
              "fields": {
                "variantId?": {
                  "type": "number",
                  "format": "int64"
                },
                "sku": "string",
                "staged?": "boolean"
              }
            }
          },
          "variants": {
            "title": "variants",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariant"
            },
            "x-annotation-hasUpdateActions": [
              {
                "action": "addVariant",
                "docsAnchor": "add-productvariant",
                "fields": {
                  "sku?": "string",
                  "key?": "string",
                  "prices?": "PriceDraft[]",
                  "images?": "Image[]",
                  "attributes?": "Attribute[]",
                  "staged?": "boolean"
                }
              },
              {
                "action": "removeVariant",
                "docsAnchor": "remove-productvariant",
                "fields": {
                  "id?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean"
                }
              }
            ]
          },
          "searchKeywords": {
            "title": "searchKeywords",
            "$ref": "#/components/schemas/SearchKeywords",
            "x-annotation-hasUpdateAction": {
              "action": "setSearchKeywords",
              "docsAnchor": "set-searchkeywords",
              "fields": {
                "searchKeywords": "SearchKeywords",
                "staged?": "boolean"
              }
            }
          }
        },
        "required": [
          "name",
          "categories",
          "slug",
          "masterVariant",
          "variants",
          "searchKeywords"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdata"
      },
      "ProductDraft": {
        "title": "ProductDraft",
        "includePath": "types/product/ProductDraft.raml",
        "type": "object",
        "properties": {
          "productType": {
            "title": "productType",
            "$ref": "#/components/schemas/ProductTypeReference"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "slug": {
            "title": "slug",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "categories": {
            "title": "categories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryReference"
            }
          },
          "categoryOrderHints": {
            "title": "categoryOrderHints",
            "$ref": "#/components/schemas/CategoryOrderHints"
          },
          "metaTitle": {
            "title": "metaTitle",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaDescription": {
            "title": "metaDescription",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaKeywords": {
            "title": "metaKeywords",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "masterVariant": {
            "title": "masterVariant",
            "$ref": "#/components/schemas/ProductVariantDraft"
          },
          "variants": {
            "title": "variants",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantDraft"
            }
          },
          "taxCategory": {
            "title": "taxCategory",
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "searchKeywords": {
            "title": "searchKeywords",
            "$ref": "#/components/schemas/SearchKeywords"
          },
          "state": {
            "title": "state",
            "$ref": "#/components/schemas/StateReference"
          },
          "publish": {
            "title": "publish",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "slug"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdraft"
      },
      "ProductPagedQueryResponse": {
        "title": "ProductPagedQueryResponse",
        "includePath": "types/product/ProductPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "ProductProjection": {
        "title": "ProductProjection",
        "includePath": "types/product/ProductProjection.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              },
              "productType": {
                "title": "productType",
                "$ref": "#/components/schemas/ProductTypeReference"
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "categories": {
                "title": "categories",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryReference"
                }
              },
              "categoryOrderHints": {
                "title": "categoryOrderHints",
                "$ref": "#/components/schemas/CategoryOrderHints"
              },
              "metaTitle": {
                "title": "metaTitle",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "metaDescription": {
                "title": "metaDescription",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "metaKeywords": {
                "title": "metaKeywords",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "searchKeywords": {
                "title": "searchKeywords",
                "$ref": "#/components/schemas/SearchKeywords"
              },
              "hasStagedChanges": {
                "title": "hasStagedChanges",
                "type": "boolean"
              },
              "published": {
                "title": "published",
                "type": "boolean"
              },
              "masterVariant": {
                "title": "masterVariant",
                "$ref": "#/components/schemas/ProductVariant"
              },
              "variants": {
                "title": "variants",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductVariant"
                }
              },
              "taxCategory": {
                "title": "taxCategory",
                "$ref": "#/components/schemas/TaxCategoryReference"
              },
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "reviewRatingStatistics": {
                "title": "reviewRatingStatistics",
                "$ref": "#/components/schemas/ReviewRatingStatistics"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productProjections.html#productprojection",
        "type": "string"
      },
      "ProductProjectionPagedQueryResponse": {
        "title": "ProductProjectionPagedQueryResponse",
        "includePath": "types/product/ProductProjectionPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductProjection"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "ProductProjectionPagedSearchResponse": {
        "title": "ProductProjectionPagedSearchResponse",
        "includePath": "types/product/ProductProjectionPagedSearchResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductProjection"
                }
              },
              "facets": {
                "title": "facets",
                "$ref": "#/components/schemas/FacetResults"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "ProductPublishScope": {
        "title": "ProductPublishScope",
        "enum": [
          "All",
          "Prices"
        ],
        "includePath": "types/product/ProductPublishScope.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
      },
      "ProductReference": {
        "title": "ProductReference",
        "includePath": "types/product/ProductReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Product"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product",
        "type": "string"
      },
      "ProductUpdate": {
        "title": "ProductUpdate",
        "includePath": "types/product/ProductUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "ProductUpdateAction": {
        "title": "ProductUpdateAction",
        "includePath": "types/product/ProductUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Product"
      },
      "ProductVariant": {
        "title": "ProductVariant",
        "includePath": "types/product/ProductVariant.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "format": "int64",
            "type": "number"
          },
          "sku": {
            "title": "sku",
            "type": "string",
            "x-annotation-hasUpdateAction": {
              "action": "setSku",
              "fields": {
                "variantId": {
                  "type": "number",
                  "format": "int64"
                },
                "sku?": "string",
                "staged?": "boolean"
              }
            }
          },
          "key": {
            "title": "key",
            "type": "string",
            "x-annotation-hasUpdateAction": {
              "action": "setProductVariantKey",
              "docsAnchor": "set-productvariant-key",
              "fields": {
                "variantId?": {
                  "type": "number",
                  "format": "int64"
                },
                "sku?": "string",
                "key?": "string",
                "staged?": "boolean"
              }
            }
          },
          "prices": {
            "title": "prices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            },
            "x-annotation-hasUpdateActions": [
              {
                "action": "addPrice",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "price": "PriceDraft",
                  "staged?": "boolean"
                }
              },
              {
                "action": "setPrices",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "prices": "PriceDraft[]",
                  "staged?": "boolean"
                }
              },
              {
                "action": "changePrice",
                "fields": {
                  "priceId": "string",
                  "price": "PriceDraft",
                  "staged?": "boolean"
                }
              },
              {
                "action": "removePrice",
                "fields": {
                  "priceId": "string",
                  "staged?": "boolean"
                }
              },
              {
                "action": "setProductPriceCustomType",
                "fields": {
                  "priceId": "string",
                  "staged?": "boolean",
                  "type?": "TypeReference",
                  "fields?": "FieldContainer"
                }
              },
              {
                "action": "setProductPriceCustomField",
                "docsAnchor": "set-customfield",
                "fields": {
                  "priceId": "string",
                  "staged?": "boolean",
                  "name": "string",
                  "value?": "any"
                }
              },
              {
                "action": "setDiscountedPrice",
                "fields": {
                  "priceId": "string",
                  "staged?": "boolean",
                  "discounted?": "DiscountedPrice"
                }
              }
            ]
          },
          "attributes": {
            "title": "attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "x-annotation-hasUpdateActions": [
              {
                "action": "setAttribute",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "name": "string",
                  "value?": "any",
                  "staged?": "boolean"
                }
              },
              {
                "action": "setAttributeInAllVariants",
                "fields": {
                  "name": "string",
                  "value?": "any",
                  "staged?": "boolean"
                }
              }
            ]
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/Price"
          },
          "images": {
            "title": "images",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "x-annotation-hasUpdateActions": [
              {
                "action": "addExternalImage",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "image": "Image",
                  "staged?": "boolean"
                }
              },
              {
                "action": "moveImageToPosition",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "imageUrl": "string",
                  "position": {
                    "type": "number",
                    "format": "int64"
                  },
                  "staged?": "boolean"
                }
              },
              {
                "action": "removeImage",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "imageUrl": "string",
                  "staged?": "boolean"
                }
              },
              {
                "action": "setImageLabel",
                "fields": {
                  "sku?": {
                    "type": "string"
                  },
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "label?": {
                    "type": "string"
                  },
                  "staged?": {
                    "type": "boolean"
                  }
                }
              }
            ]
          },
          "assets": {
            "title": "assets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "x-annotation-hasUpdateActions": [
              {
                "action": "addAsset",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "asset": "AssetDraft",
                  "position?": {
                    "type": "number",
                    "format": "int32"
                  }
                }
              },
              {
                "action": "removeAsset",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId?": "string",
                  "assetKey?": "string"
                }
              },
              {
                "action": "setAssetKey",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId": "string",
                  "assetKey?": "string"
                }
              },
              {
                "action": "changeAssetOrder",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetOrder": "string[]"
                }
              },
              {
                "action": "changeAssetName",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId?": "string",
                  "assetKey?": "string",
                  "name": "LocalizedString"
                }
              },
              {
                "action": "setAssetDescription",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId?": "string",
                  "assetKey?": "string",
                  "description?": "LocalizedString"
                }
              },
              {
                "action": "setAssetTags",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId?": "string",
                  "assetKey?": "string",
                  "tags?": "string[]"
                }
              },
              {
                "action": "setAssetSources",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId?": "string",
                  "assetKey?": "string",
                  "sources": "AssetSource[]"
                }
              },
              {
                "action": "setAssetCustomType",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId?": "string",
                  "assetKey?": "string",
                  "type": "TypeReference",
                  "fields": "object"
                }
              },
              {
                "action": "setAssetCustomField",
                "fields": {
                  "variantId?": {
                    "type": "number",
                    "format": "int64"
                  },
                  "sku?": "string",
                  "staged?": "boolean",
                  "assetId?": "string",
                  "assetKey?": "string",
                  "name": "string",
                  "value?": "any"
                }
              }
            ]
          },
          "availability": {
            "title": "availability",
            "$ref": "#/components/schemas/ProductVariantAvailability"
          },
          "isMatchingVariant": {
            "title": "isMatchingVariant",
            "type": "boolean"
          },
          "scopedPrice": {
            "title": "scopedPrice",
            "$ref": "#/components/schemas/ScopedPrice"
          },
          "scopedPriceDiscounted": {
            "title": "scopedPriceDiscounted",
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariant"
      },
      "ProductVariantAvailability": {
        "title": "ProductVariantAvailability",
        "includePath": "types/product/ProductVariantAvailability.raml",
        "type": "object",
        "properties": {
          "isOnStock": {
            "title": "isOnStock",
            "type": "boolean"
          },
          "restockableInDays": {
            "title": "restockableInDays",
            "format": "int64",
            "type": "number"
          },
          "availableQuantity": {
            "title": "availableQuantity",
            "format": "int64",
            "type": "number"
          },
          "channels": {
            "title": "channels",
            "$ref": "#/components/schemas/ProductVariantChannelAvailabilityMap"
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantavailability"
      },
      "ProductVariantChannelAvailability": {
        "title": "ProductVariantChannelAvailability",
        "includePath": "types/product/ProductVariantChannelAvailability.raml",
        "type": "object",
        "properties": {
          "isOnStock": {
            "title": "isOnStock",
            "type": "boolean"
          },
          "restockableInDays": {
            "title": "restockableInDays",
            "format": "int64",
            "type": "number"
          },
          "availableQuantity": {
            "title": "availableQuantity",
            "format": "int64",
            "type": "number"
          }
        },
        "x-annotation-package": "Product"
      },
      "ProductVariantChannelAvailabilityMap": {
        "title": "ProductVariantChannelAvailabilityMap",
        "includePath": "types/product/ProductVariantChannelAvailabilityMap.raml",
        "type": "object",
        "additionalProperties": {
          "title": "//",
          "required": true,
          "$ref": "#/components/schemas/ProductVariantChannelAvailability"
        },
        "x-annotation-package": "Product"
      },
      "ProductVariantDraft": {
        "title": "ProductVariantDraft",
        "includePath": "types/product/ProductVariantDraft.raml",
        "type": "object",
        "properties": {
          "sku": {
            "title": "sku",
            "type": "string"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "prices": {
            "title": "prices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDraft"
            }
          },
          "attributes": {
            "title": "attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "images": {
            "title": "images",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "assets": {
            "title": "assets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDraft"
            }
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantdraft"
      },
      "RangeFacetResult": {
        "title": "RangeFacetResult",
        "includePath": "types/product/RangeFacetResult.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FacetResult"
          },
          {
            "properties": {
              "ranges": {
                "title": "ranges",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FacetResultRange"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "SearchKeyword": {
        "title": "SearchKeyword",
        "includePath": "types/product/SearchKeyword.raml",
        "type": "object",
        "properties": {
          "text": {
            "title": "text",
            "type": "string"
          },
          "suggestTokenizer": {
            "title": "suggestTokenizer",
            "type": "object"
          }
        },
        "required": [
          "text"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeyword"
      },
      "SearchKeywords": {
        "title": "SearchKeywords",
        "includePath": "types/product/SearchKeywords.raml",
        "type": "object",
        "additionalProperties": {
          "title": "/^[a-z]{2}(-[A-Z]{2})?$/",
          "required": true,
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/SearchKeyword"
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeywords"
      },
      "SuggestTokenizer": {
        "title": "SuggestTokenizer",
        "includePath": "types/product/SuggestTokenizer.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "enum": [
              "whitespace",
              "custom"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product-search-keywords-suggest-examples"
      },
      "Suggestion": {
        "title": "Suggestion",
        "includePath": "types/product/Suggestion.raml",
        "type": "object",
        "properties": {
          "text": {
            "title": "text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestion"
      },
      "SuggestionResult": {
        "title": "SuggestionResult",
        "includePath": "types/product/SuggestionResult.raml",
        "type": "object",
        "additionalProperties": {
          "title": "/searchKeywords.[a-z]{2}(-[A-Z]{2})?/",
          "required": true,
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Suggestion"
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestionresult"
      },
      "TermFacetResult": {
        "title": "TermFacetResult",
        "includePath": "types/product/TermFacetResult.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FacetResult"
          },
          {
            "properties": {
              "dataType": {
                "title": "dataType",
                "$ref": "#/components/schemas/TermFacetResultType"
              },
              "missing": {
                "title": "missing",
                "format": "int64",
                "type": "number"
              },
              "total": {
                "title": "total",
                "format": "int64",
                "type": "number"
              },
              "other": {
                "title": "other",
                "format": "int64",
                "type": "number"
              },
              "terms": {
                "title": "terms",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FacetResultTerm"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "TermFacetResultType": {
        "title": "TermFacetResultType",
        "enum": [
          "text",
          "date",
          "time",
          "datetime",
          "boolean",
          "number"
        ],
        "includePath": "types/product/TermFacetResultType.raml",
        "type": "string",
        "x-annotation-package": "Product"
      },
      "WhitespaceTokenizer": {
        "title": "WhitespaceTokenizer",
        "includePath": "types/product/WhitespaceTokenizer.raml",
        "$ref": "#/components/schemas/SuggestTokenizer",
        "x-annotation-package": "Product"
      },
      "ProductAddAssetAction": {
        "title": "ProductAddAssetAction",
        "includePath": "types/product/updates/ProductAddAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "asset": {
                "title": "asset",
                "$ref": "#/components/schemas/AssetDraft"
              },
              "position": {
                "title": "position",
                "format": "int32",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-asset",
        "type": "string"
      },
      "ProductAddExternalImageAction": {
        "title": "ProductAddExternalImageAction",
        "includePath": "types/product/updates/ProductAddExternalImageAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "image": {
                "title": "image",
                "$ref": "#/components/schemas/Image"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-external-image",
        "type": "string"
      },
      "ProductAddPriceAction": {
        "title": "ProductAddPriceAction",
        "includePath": "types/product/updates/ProductAddPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "price": {
                "title": "price",
                "$ref": "#/components/schemas/PriceDraft"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-price",
        "type": "string"
      },
      "ProductAddToCategoryAction": {
        "title": "ProductAddToCategoryAction",
        "includePath": "types/product/updates/ProductAddToCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "category": {
                "title": "category",
                "$ref": "#/components/schemas/CategoryReference"
              },
              "orderHint": {
                "title": "orderHint",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-to-category",
        "type": "string"
      },
      "ProductAddVariantAction": {
        "title": "ProductAddVariantAction",
        "includePath": "types/product/updates/ProductAddVariantAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "key": {
                "title": "key",
                "type": "string"
              },
              "prices": {
                "title": "prices",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PriceDraft"
                }
              },
              "images": {
                "title": "images",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "attributes": {
                "title": "attributes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attribute"
                }
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-productvariant",
        "type": "string"
      },
      "ProductChangeAssetNameAction": {
        "title": "ProductChangeAssetNameAction",
        "includePath": "types/product/updates/ProductChangeAssetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-name",
        "type": "string"
      },
      "ProductChangeAssetOrderAction": {
        "title": "ProductChangeAssetOrderAction",
        "includePath": "types/product/updates/ProductChangeAssetOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetOrder": {
                "title": "assetOrder",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-order",
        "type": "string"
      },
      "ProductChangeMasterVariantAction": {
        "title": "ProductChangeMasterVariantAction",
        "includePath": "types/product/updates/ProductChangeMasterVariantAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-master-variant",
        "type": "string"
      },
      "ProductChangeNameAction": {
        "title": "ProductChangeNameAction",
        "includePath": "types/product/updates/ProductChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-name",
        "type": "string"
      },
      "ProductChangePriceAction": {
        "title": "ProductChangePriceAction",
        "includePath": "types/product/updates/ProductChangePriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "title": "priceId",
                "type": "string"
              },
              "price": {
                "title": "price",
                "$ref": "#/components/schemas/PriceDraft"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-price",
        "type": "string"
      },
      "ProductChangeSlugAction": {
        "title": "ProductChangeSlugAction",
        "includePath": "types/product/updates/ProductChangeSlugAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-slug",
        "type": "string"
      },
      "ProductLegacySetSkuAction": {
        "title": "ProductLegacySetSkuAction",
        "includePath": "types/product/updates/ProductLegacySetSkuAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "variantId": {
                "title": "variantId",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "ProductMoveImageToPositionAction": {
        "title": "ProductMoveImageToPositionAction",
        "includePath": "types/product/updates/ProductMoveImageToPositionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "imageUrl": {
                "title": "imageUrl",
                "type": "string"
              },
              "position": {
                "title": "position",
                "format": "int64",
                "type": "number"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#move-image-to-position",
        "type": "string"
      },
      "ProductPublishAction": {
        "title": "ProductPublishAction",
        "includePath": "types/product/updates/ProductPublishAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "scope": {
                "title": "scope",
                "$ref": "#/components/schemas/ProductPublishScope"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#publish",
        "type": "string"
      },
      "ProductRemoveAssetAction": {
        "title": "ProductRemoveAssetAction",
        "includePath": "types/product/updates/ProductRemoveAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-asset",
        "type": "string"
      },
      "ProductRemoveFromCategoryAction": {
        "title": "ProductRemoveFromCategoryAction",
        "includePath": "types/product/updates/ProductRemoveFromCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "category": {
                "title": "category",
                "$ref": "#/components/schemas/CategoryReference"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-from-category",
        "type": "string"
      },
      "ProductRemoveImageAction": {
        "title": "ProductRemoveImageAction",
        "includePath": "types/product/updates/ProductRemoveImageAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "imageUrl": {
                "title": "imageUrl",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-image",
        "type": "string"
      },
      "ProductRemovePriceAction": {
        "title": "ProductRemovePriceAction",
        "includePath": "types/product/updates/ProductRemovePriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "title": "priceId",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-price",
        "type": "string"
      },
      "ProductRemoveVariantAction": {
        "title": "ProductRemoveVariantAction",
        "includePath": "types/product/updates/ProductRemoveVariantAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "id": {
                "title": "id",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-productvariant",
        "type": "string"
      },
      "ProductRevertStagedChangesAction": {
        "title": "ProductRevertStagedChangesAction",
        "includePath": "types/product/updates/ProductRevertStagedChangesAction.raml",
        "$ref": "#/components/schemas/ProductUpdateAction",
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-changes"
      },
      "ProductRevertStagedVariantChangesAction": {
        "title": "ProductRevertStagedVariantChangesAction",
        "includePath": "types/product/updates/ProductRevertStagedVariantChangesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-variant-changes",
        "type": "string"
      },
      "ProductSetAssetCustomFieldAction": {
        "title": "ProductSetAssetCustomFieldAction",
        "includePath": "types/product/updates/ProductSetAssetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-field",
        "type": "string"
      },
      "ProductSetAssetCustomTypeAction": {
        "title": "ProductSetAssetCustomTypeAction",
        "includePath": "types/product/updates/ProductSetAssetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-type",
        "type": "string"
      },
      "ProductSetAssetDescriptionAction": {
        "title": "ProductSetAssetDescriptionAction",
        "includePath": "types/product/updates/ProductSetAssetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-description",
        "type": "string"
      },
      "ProductSetAssetKeyAction": {
        "title": "ProductSetAssetKeyAction",
        "includePath": "types/product/updates/ProductSetAssetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-key",
        "type": "string"
      },
      "ProductSetAssetSourcesAction": {
        "title": "ProductSetAssetSourcesAction",
        "includePath": "types/product/updates/ProductSetAssetSourcesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "sources": {
                "title": "sources",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssetSource"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-sources",
        "type": "string"
      },
      "ProductSetAssetTagsAction": {
        "title": "ProductSetAssetTagsAction",
        "includePath": "types/product/updates/ProductSetAssetTagsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "assetId": {
                "title": "assetId",
                "type": "string"
              },
              "assetKey": {
                "title": "assetKey",
                "type": "string"
              },
              "tags": {
                "title": "tags",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-tags",
        "type": "string"
      },
      "ProductSetAttributeAction": {
        "title": "ProductSetAttributeAction",
        "includePath": "types/product/updates/ProductSetAttributeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute",
        "type": "string"
      },
      "ProductSetAttributeInAllVariantsAction": {
        "title": "ProductSetAttributeInAllVariantsAction",
        "includePath": "types/product/updates/ProductSetAttributeInAllVariantsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute-in-all-variants",
        "type": "string"
      },
      "ProductSetCategoryOrderHintAction": {
        "title": "ProductSetCategoryOrderHintAction",
        "includePath": "types/product/updates/ProductSetCategoryOrderHintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "categoryId": {
                "title": "categoryId",
                "type": "string"
              },
              "orderHint": {
                "title": "orderHint",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-category-order-hint",
        "type": "string"
      },
      "ProductSetDescriptionAction": {
        "title": "ProductSetDescriptionAction",
        "includePath": "types/product/updates/ProductSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-description",
        "type": "string"
      },
      "ProductSetDiscountedPriceAction": {
        "title": "ProductSetDiscountedPriceAction",
        "includePath": "types/product/updates/ProductSetDiscountedPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "title": "priceId",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "discounted": {
                "title": "discounted",
                "$ref": "#/components/schemas/DiscountedPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-discounted-price",
        "type": "string"
      },
      "ProductSetImageLabelAction": {
        "title": "ProductSetImageLabelAction",
        "includePath": "types/product/updates/ProductSetImageLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "imageUrl": {
                "title": "imageUrl",
                "type": "string"
              },
              "label": {
                "title": "label",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-image-label",
        "type": "string"
      },
      "ProductSetKeyAction": {
        "title": "ProductSetKeyAction",
        "includePath": "types/product/updates/ProductSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-key",
        "type": "string"
      },
      "ProductSetMetaDescriptionAction": {
        "title": "ProductSetMetaDescriptionAction",
        "includePath": "types/product/updates/ProductSetMetaDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "metaDescription": {
                "title": "metaDescription",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-description",
        "type": "string"
      },
      "ProductSetMetaKeywordsAction": {
        "title": "ProductSetMetaKeywordsAction",
        "includePath": "types/product/updates/ProductSetMetaKeywordsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "metaKeywords": {
                "title": "metaKeywords",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-keywords",
        "type": "string"
      },
      "ProductSetMetaTitleAction": {
        "title": "ProductSetMetaTitleAction",
        "includePath": "types/product/updates/ProductSetMetaTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "metaTitle": {
                "title": "metaTitle",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-title",
        "type": "string"
      },
      "ProductSetPricesAction": {
        "title": "ProductSetPricesAction",
        "includePath": "types/product/updates/ProductSetPricesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "prices": {
                "title": "prices",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PriceDraft"
                }
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-prices",
        "type": "string"
      },
      "ProductSetProductPriceCustomFieldAction": {
        "title": "ProductSetProductPriceCustomFieldAction",
        "includePath": "types/product/updates/ProductSetProductPriceCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "title": "priceId",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-customfield",
        "type": "string"
      },
      "ProductSetProductPriceCustomTypeAction": {
        "title": "ProductSetProductPriceCustomTypeAction",
        "includePath": "types/product/updates/ProductSetProductPriceCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "title": "priceId",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-product-price-custom-type",
        "type": "string"
      },
      "ProductSetProductVariantKeyAction": {
        "title": "ProductSetProductVariantKeyAction",
        "includePath": "types/product/updates/ProductSetProductVariantKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "key": {
                "title": "key",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-productvariant-key",
        "type": "string"
      },
      "ProductSetSearchKeywordsAction": {
        "title": "ProductSetSearchKeywordsAction",
        "includePath": "types/product/updates/ProductSetSearchKeywordsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "searchKeywords": {
                "title": "searchKeywords",
                "$ref": "#/components/schemas/SearchKeywords"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-searchkeywords",
        "type": "string"
      },
      "ProductSetSkuAction": {
        "title": "ProductSetSkuAction",
        "includePath": "types/product/updates/ProductSetSkuAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "staged": {
                "title": "staged",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-sku",
        "type": "string"
      },
      "ProductSetTaxCategoryAction": {
        "title": "ProductSetTaxCategoryAction",
        "includePath": "types/product/updates/ProductSetTaxCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "taxCategory": {
                "title": "taxCategory",
                "$ref": "#/components/schemas/TaxCategoryReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-taxcategory",
        "type": "string"
      },
      "ProductTransitionStateAction": {
        "title": "ProductTransitionStateAction",
        "includePath": "types/product/updates/ProductTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#transition-state",
        "type": "string"
      },
      "ProductUnpublishAction": {
        "title": "ProductUnpublishAction",
        "includePath": "types/product/updates/ProductUnpublishAction.raml",
        "$ref": "#/components/schemas/ProductUpdateAction",
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#unpublish"
      },
      "CartClassificationType": {
        "title": "CartClassificationType",
        "includePath": "types/project/CartClassificationType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInputType"
          },
          {
            "properties": {
              "values": {
                "title": "values",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartclassification",
        "type": "string"
      },
      "CartScoreType": {
        "title": "CartScoreType",
        "includePath": "types/project/CartScoreType.raml",
        "$ref": "#/components/schemas/ShippingRateInputType",
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartscore"
      },
      "CartValueType": {
        "title": "CartValueType",
        "includePath": "types/project/CartValueType.raml",
        "$ref": "#/components/schemas/ShippingRateInputType",
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartvalue"
      },
      "Project": {
        "title": "Project",
        "includePath": "types/project/Project.raml",
        "type": "object",
        "properties": {
          "version": {
            "title": "version",
            "format": "int64",
            "type": "number"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "name": {
            "title": "name",
            "type": "string",
            "x-annotation-hasSimpleUpdateAction": "changeName"
          },
          "countries": {
            "title": "countries",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "x-annotation-hasSimpleUpdateAction": "changeCountries"
          },
          "currencies": {
            "title": "currencies",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyCode"
            },
            "x-annotation-hasSimpleUpdateAction": "changeCurrencies"
          },
          "languages": {
            "title": "languages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Locale"
            },
            "x-annotation-hasSimpleUpdateAction": "changeLanguages"
          },
          "createdAt": {
            "title": "createdAt",
            "type": "string",
            "format": "date-time"
          },
          "trialUntil": {
            "title": "trialUntil",
            "type": "string"
          },
          "messages": {
            "title": "messages",
            "$ref": "#/components/schemas/MessageConfiguration",
            "x-annotation-hasUpdateAction": {
              "action": "changeMessagesEnabled",
              "fields": {
                "messagesEnabled": "boolean"
              }
            }
          },
          "shippingRateInputType": {
            "title": "shippingRateInputType",
            "$ref": "#/components/schemas/ShippingRateInputType",
            "x-annotation-hasUpdateAction": {
              "action": "setShippingRateInputType",
              "docsAnchor": "set-shippingrateinputtype"
            }
          }
        },
        "required": [
          "version",
          "key",
          "name",
          "countries",
          "currencies",
          "languages",
          "createdAt",
          "messages"
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#project",
        "x-annotation-updateType": "ProjectUpdate"
      },
      "ProjectUpdate": {
        "title": "ProjectUpdate",
        "includePath": "types/project/ProjectUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "type": "string"
      },
      "ProjectUpdateAction": {
        "title": "ProjectUpdateAction",
        "includePath": "types/project/ProjectUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Project"
      },
      "ShippingRateInputType": {
        "title": "ShippingRateInputType",
        "includePath": "types/project/ShippingRateInputType.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/ShippingRateTierType"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#shippingrateinputtype"
      },
      "ProjectChangeCountriesAction": {
        "title": "ProjectChangeCountriesAction",
        "includePath": "types/project/updates/ProjectChangeCountriesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "countries": {
                "title": "countries",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-countries",
        "type": "string"
      },
      "ProjectChangeCurrenciesAction": {
        "title": "ProjectChangeCurrenciesAction",
        "includePath": "types/project/updates/ProjectChangeCurrenciesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "currencies": {
                "title": "currencies",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CurrencyCode"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-currencies",
        "type": "string"
      },
      "ProjectChangeLanguagesAction": {
        "title": "ProjectChangeLanguagesAction",
        "includePath": "types/project/updates/ProjectChangeLanguagesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "languages": {
                "title": "languages",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Locale"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-languages",
        "type": "string"
      },
      "ProjectChangeMessagesEnabledAction": {
        "title": "ProjectChangeMessagesEnabledAction",
        "includePath": "types/project/updates/ProjectChangeMessagesEnabledAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "messagesEnabled": {
                "title": "messagesEnabled",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-messages-enabled",
        "type": "string"
      },
      "ProjectChangeNameAction": {
        "title": "ProjectChangeNameAction",
        "includePath": "types/project/updates/ProjectChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-name",
        "type": "string"
      },
      "ProjectSetShippingRateInputTypeAction": {
        "title": "ProjectSetShippingRateInputTypeAction",
        "includePath": "types/project/updates/ProjectSetShippingRateInputTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "shippingRateInputType": {
                "title": "shippingRateInputType",
                "$ref": "#/components/schemas/ShippingRateInputType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#set-shippingrateinputtype",
        "type": "string"
      },
      "Review": {
        "title": "Review",
        "includePath": "types/review/Review.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "uniquenessValue": {
                "title": "uniquenessValue",
                "type": "string"
              },
              "locale": {
                "title": "locale",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setLocale"
              },
              "authorName": {
                "title": "authorName",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setAuthorName"
              },
              "title": {
                "title": "title",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setTitle"
              },
              "text": {
                "title": "text",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setText"
              },
              "target": {
                "title": "target",
                "type": "object",
                "x-annotation-hasSimpleUpdateAction": "setTarget"
              },
              "includedInStatistics": {
                "title": "includedInStatistics",
                "type": "boolean"
              },
              "rating": {
                "title": "rating",
                "minimum": -100,
                "maximum": 100,
                "format": "int8",
                "type": "number",
                "x-annotation-hasSimpleUpdateAction": "setRating"
              },
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference",
                "x-annotation-hasUpdateAction": {
                  "action": "transitionState",
                  "fields": {
                    "state": "StateReference",
                    "force?": "boolean"
                  }
                }
              },
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/CustomerReference",
                "x-annotation-hasSimpleUpdateAction": "setCustomer"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#review",
        "x-annotation-updateType": "ReviewUpdate",
        "type": "string"
      },
      "ReviewDraft": {
        "title": "ReviewDraft",
        "includePath": "types/review/ReviewDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "uniquenessValue": {
            "title": "uniquenessValue",
            "type": "string"
          },
          "locale": {
            "title": "locale",
            "type": "string"
          },
          "authorName": {
            "title": "authorName",
            "type": "string"
          },
          "title": {
            "title": "title",
            "type": "string"
          },
          "text": {
            "title": "text",
            "type": "string"
          },
          "target": {
            "title": "target",
            "type": "object"
          },
          "state": {
            "title": "state",
            "type": "object"
          },
          "rating": {
            "title": "rating",
            "minimum": -100,
            "maximum": 100,
            "format": "int8",
            "type": "number"
          },
          "customer": {
            "title": "customer",
            "$ref": "#/components/schemas/CustomerReference"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          }
        },
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewdraft"
      },
      "ReviewPagedQueryResponse": {
        "title": "ReviewPagedQueryResponse",
        "includePath": "types/review/ReviewPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "type": "string"
      },
      "ReviewRatingStatistics": {
        "title": "ReviewRatingStatistics",
        "includePath": "types/review/ReviewRatingStatistics.raml",
        "type": "object",
        "properties": {
          "averageRating": {
            "title": "averageRating",
            "type": "number"
          },
          "highestRating": {
            "title": "highestRating",
            "type": "number"
          },
          "lowestRating": {
            "title": "lowestRating",
            "type": "number"
          },
          "count": {
            "title": "count",
            "type": "integer"
          },
          "ratingsDistribution": {
            "title": "ratingsDistribution",
            "type": "object"
          }
        },
        "required": [
          "averageRating",
          "highestRating",
          "lowestRating",
          "count",
          "ratingsDistribution"
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewratingstatistics"
      },
      "ReviewReference": {
        "title": "ReviewReference",
        "includePath": "types/review/ReviewReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Review"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "type": "string"
      },
      "ReviewUpdate": {
        "title": "ReviewUpdate",
        "includePath": "types/review/ReviewUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReviewUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "type": "string"
      },
      "ReviewUpdateAction": {
        "title": "ReviewUpdateAction",
        "includePath": "types/review/ReviewUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Review"
      },
      "ReviewSetAuthorNameAction": {
        "title": "ReviewSetAuthorNameAction",
        "includePath": "types/review/updates/ReviewSetAuthorNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "authorName": {
                "title": "authorName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-author-name",
        "type": "string"
      },
      "ReviewSetCustomFieldAction": {
        "title": "ReviewSetCustomFieldAction",
        "includePath": "types/review/updates/ReviewSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-customfield",
        "type": "string"
      },
      "ReviewSetCustomTypeAction": {
        "title": "ReviewSetCustomTypeAction",
        "includePath": "types/review/updates/ReviewSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-custom-type",
        "type": "string"
      },
      "ReviewSetCustomerAction": {
        "title": "ReviewSetCustomerAction",
        "includePath": "types/review/updates/ReviewSetCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/CustomerReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-customer",
        "type": "string"
      },
      "ReviewSetKeyAction": {
        "title": "ReviewSetKeyAction",
        "includePath": "types/review/updates/ReviewSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-key",
        "type": "string"
      },
      "ReviewSetLocaleAction": {
        "title": "ReviewSetLocaleAction",
        "includePath": "types/review/updates/ReviewSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "title": "locale",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-locale",
        "type": "string"
      },
      "ReviewSetRatingAction": {
        "title": "ReviewSetRatingAction",
        "includePath": "types/review/updates/ReviewSetRatingAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "rating": {
                "title": "rating",
                "format": "int8",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-rating",
        "type": "string"
      },
      "ReviewSetTargetAction": {
        "title": "ReviewSetTargetAction",
        "includePath": "types/review/updates/ReviewSetTargetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "target": {
                "title": "target",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-target",
        "type": "string"
      },
      "ReviewSetTextAction": {
        "title": "ReviewSetTextAction",
        "includePath": "types/review/updates/ReviewSetTextAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "text": {
                "title": "text",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-text",
        "type": "string"
      },
      "ReviewSetTitleAction": {
        "title": "ReviewSetTitleAction",
        "includePath": "types/review/updates/ReviewSetTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "title": {
                "title": "title",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-title",
        "type": "string"
      },
      "ReviewTransitionStateAction": {
        "title": "ReviewTransitionStateAction",
        "includePath": "types/review/updates/ReviewTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "state": {
                "title": "state",
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "title": "force",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#transition-state",
        "type": "string"
      },
      "CartClassificationTier": {
        "title": "CartClassificationTier",
        "includePath": "types/shipping-method/CartClassificationTier.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRatePriceTier"
          },
          {
            "properties": {
              "value": {
                "title": "value",
                "type": "string"
              },
              "price": {
                "title": "price",
                "$ref": "#/components/schemas/Money"
              },
              "isMatching": {
                "title": "isMatching",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartclassification",
        "type": "string"
      },
      "CartScoreTier": {
        "title": "CartScoreTier",
        "includePath": "types/shipping-method/CartScoreTier.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRatePriceTier"
          },
          {
            "properties": {
              "score": {
                "title": "score",
                "type": "number"
              },
              "price": {
                "title": "price",
                "$ref": "#/components/schemas/Money"
              },
              "priceFunction": {
                "title": "priceFunction",
                "$ref": "#/components/schemas/PriceFunction"
              },
              "isMatching": {
                "title": "isMatching",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartscore-with-fixed-price",
        "type": "string"
      },
      "CartValueTier": {
        "title": "CartValueTier",
        "includePath": "types/shipping-method/CartValueTier.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRatePriceTier"
          },
          {
            "properties": {
              "minimumCentAmount": {
                "title": "minimumCentAmount",
                "format": "int64",
                "type": "integer"
              },
              "price": {
                "title": "price",
                "$ref": "#/components/schemas/Money"
              },
              "isMatching": {
                "title": "isMatching",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartvalue",
        "type": "string"
      },
      "PriceFunction": {
        "title": "PriceFunction",
        "includePath": "types/shipping-method/PriceFunction.raml",
        "type": "object",
        "properties": {
          "currencyCode": {
            "title": "currencyCode",
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "function": {
            "title": "function",
            "type": "string"
          }
        },
        "required": [
          "currencyCode",
          "function"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#pricefunction"
      },
      "ShippingMethod": {
        "title": "ShippingMethod",
        "includePath": "types/shipping-method/ShippingMethod.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "name": {
                "title": "name",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "description": {
                "title": "description",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "taxCategory": {
                "title": "taxCategory",
                "$ref": "#/components/schemas/TaxCategoryReference",
                "x-annotation-hasUpdateAction": {
                  "action": "changeTaxCategory",
                  "docsAnchor": "change-taxcategory"
                }
              },
              "zoneRates": {
                "title": "zoneRates",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ZoneRate"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addShippingRate",
                    "docsAnchor": "add-shippingrate",
                    "fields": {
                      "zone": "ZoneReference",
                      "shippingRate": "ShippingRateDraft"
                    }
                  },
                  {
                    "action": "removeShippingRate",
                    "docsAnchor": "remove-shippingrate",
                    "fields": {
                      "zone": "ZoneReference",
                      "shippingRate": "ShippingRateDraft"
                    }
                  },
                  {
                    "action": "addZone",
                    "fields": {
                      "zone": "ZoneReference"
                    }
                  },
                  {
                    "action": "removeZone",
                    "fields": {
                      "zone": "ZoneReference"
                    }
                  }
                ]
              },
              "isDefault": {
                "title": "isDefault",
                "type": "boolean",
                "x-annotation-hasUpdateAction": {
                  "action": "changeIsDefault",
                  "docsAnchor": "change-isdefault"
                }
              },
              "predicate": {
                "title": "predicate",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setPredicate"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod",
        "x-annotation-updateType": "ShippingMethodUpdate",
        "type": "string"
      },
      "ShippingMethodDraft": {
        "title": "ShippingMethodDraft",
        "includePath": "types/shipping-method/ShippingMethodDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "name": {
            "title": "name",
            "type": "string"
          },
          "description": {
            "title": "description",
            "type": "string"
          },
          "taxCategory": {
            "title": "taxCategory",
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "zoneRates": {
            "title": "zoneRates",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneRateDraft"
            }
          },
          "isDefault": {
            "title": "isDefault",
            "type": "boolean"
          },
          "predicate": {
            "title": "predicate",
            "type": "string"
          }
        },
        "required": [
          "name",
          "taxCategory",
          "zoneRates",
          "isDefault"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethoddraft"
      },
      "ShippingMethodPagedQueryResponse": {
        "title": "ShippingMethodPagedQueryResponse",
        "includePath": "types/shipping-method/ShippingMethodPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "type": "string"
      },
      "ShippingMethodReference": {
        "title": "ShippingMethodReference",
        "includePath": "types/shipping-method/ShippingMethodReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/ShippingMethod"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod",
        "type": "string"
      },
      "ShippingMethodUpdate": {
        "title": "ShippingMethodUpdate",
        "includePath": "types/shipping-method/ShippingMethodUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingMethodUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "type": "string"
      },
      "ShippingMethodUpdateAction": {
        "title": "ShippingMethodUpdateAction",
        "includePath": "types/shipping-method/ShippingMethodUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "ShippingMethod"
      },
      "ShippingRate": {
        "title": "ShippingRate",
        "includePath": "types/shipping-method/ShippingRate.raml",
        "type": "object",
        "properties": {
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "freeAbove": {
            "title": "freeAbove",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "isMatching": {
            "title": "isMatching",
            "type": "boolean"
          },
          "tiers": {
            "title": "tiers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRatePriceTier"
            }
          }
        },
        "required": [
          "price",
          "tiers"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
      },
      "ShippingRateDraft": {
        "title": "ShippingRateDraft",
        "includePath": "types/shipping-method/ShippingRateDraft.raml",
        "type": "object",
        "properties": {
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/Money"
          },
          "freeAbove": {
            "title": "freeAbove",
            "$ref": "#/components/schemas/Money"
          },
          "tiers": {
            "title": "tiers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRatePriceTier"
            }
          }
        },
        "required": [
          "price"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratedraft"
      },
      "ShippingRatePriceTier": {
        "title": "ShippingRatePriceTier",
        "includePath": "types/shipping-method/ShippingRatePriceTier.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/ShippingRateTierType"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
      },
      "ShippingRateTierType": {
        "title": "ShippingRateTierType",
        "enum": [
          "CartValue",
          "CartClassification",
          "CartScore"
        ],
        "includePath": "types/shipping-method/ShippingRateTierType.raml",
        "type": "string",
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratepricetier"
      },
      "ZoneRate": {
        "title": "ZoneRate",
        "includePath": "types/shipping-method/ZoneRate.raml",
        "type": "object",
        "properties": {
          "zone": {
            "title": "zone",
            "$ref": "#/components/schemas/ZoneReference"
          },
          "shippingRates": {
            "title": "shippingRates",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRate"
            }
          }
        },
        "required": [
          "zone",
          "shippingRates"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zonerate"
      },
      "ZoneRateDraft": {
        "title": "ZoneRateDraft",
        "includePath": "types/shipping-method/ZoneRateDraft.raml",
        "type": "object",
        "properties": {
          "zone": {
            "title": "zone",
            "$ref": "#/components/schemas/ZoneReference"
          },
          "shippingRates": {
            "title": "shippingRates",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRateDraft"
            }
          }
        },
        "required": [
          "zone",
          "shippingRates"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zoneratedraft"
      },
      "ShippingMethodAddShippingRateAction": {
        "title": "ShippingMethodAddShippingRateAction",
        "includePath": "types/shipping-method/updates/ShippingMethodAddShippingRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "title": "zone",
                "$ref": "#/components/schemas/ZoneReference"
              },
              "shippingRate": {
                "title": "shippingRate",
                "$ref": "#/components/schemas/ShippingRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-shippingrate",
        "type": "string"
      },
      "ShippingMethodAddZoneAction": {
        "title": "ShippingMethodAddZoneAction",
        "includePath": "types/shipping-method/updates/ShippingMethodAddZoneAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "title": "zone",
                "$ref": "#/components/schemas/ZoneReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-zone",
        "type": "string"
      },
      "ShippingMethodChangeIsDefaultAction": {
        "title": "ShippingMethodChangeIsDefaultAction",
        "includePath": "types/shipping-method/updates/ShippingMethodChangeIsDefaultAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "isDefault": {
                "title": "isDefault",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-isdefault",
        "type": "string"
      },
      "ShippingMethodChangeNameAction": {
        "title": "ShippingMethodChangeNameAction",
        "includePath": "types/shipping-method/updates/ShippingMethodChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-name",
        "type": "string"
      },
      "ShippingMethodChangeTaxCategoryAction": {
        "title": "ShippingMethodChangeTaxCategoryAction",
        "includePath": "types/shipping-method/updates/ShippingMethodChangeTaxCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "taxCategory": {
                "title": "taxCategory",
                "$ref": "#/components/schemas/TaxCategoryReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-taxcategory",
        "type": "string"
      },
      "ShippingMethodRemoveShippingRateAction": {
        "title": "ShippingMethodRemoveShippingRateAction",
        "includePath": "types/shipping-method/updates/ShippingMethodRemoveShippingRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "title": "zone",
                "$ref": "#/components/schemas/ZoneReference"
              },
              "shippingRate": {
                "title": "shippingRate",
                "$ref": "#/components/schemas/ShippingRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-shippingrate",
        "type": "string"
      },
      "ShippingMethodRemoveZoneAction": {
        "title": "ShippingMethodRemoveZoneAction",
        "includePath": "types/shipping-method/updates/ShippingMethodRemoveZoneAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "title": "zone",
                "$ref": "#/components/schemas/ZoneReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-zone",
        "type": "string"
      },
      "ShippingMethodSetDescriptionAction": {
        "title": "ShippingMethodSetDescriptionAction",
        "includePath": "types/shipping-method/updates/ShippingMethodSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-description",
        "type": "string"
      },
      "ShippingMethodSetKeyAction": {
        "title": "ShippingMethodSetKeyAction",
        "includePath": "types/shipping-method/updates/ShippingMethodSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-key",
        "type": "string"
      },
      "ShippingMethodSetPredicateAction": {
        "title": "ShippingMethodSetPredicateAction",
        "includePath": "types/shipping-method/updates/ShippingMethodSetPredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "predicate": {
                "title": "predicate",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-predicate",
        "type": "string"
      },
      "ShoppingList": {
        "title": "ShoppingList",
        "includePath": "types/shopping-list/ShoppingList.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFields",
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setCustomType",
                    "fields": {
                      "type?": "TypeReference",
                      "fields?": "FieldContainer"
                    }
                  },
                  {
                    "action": "setCustomField",
                    "docsAnchor": "set-customfield",
                    "fields": {
                      "name": "string",
                      "value?": "any"
                    }
                  }
                ]
              },
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/CustomerReference",
                "x-annotation-hasSimpleUpdateAction": "setCustomer"
              },
              "deleteDaysAfterLastModification": {
                "title": "deleteDaysAfterLastModification",
                "format": "int64",
                "type": "number",
                "x-annotation-hasUpdateAction": {
                  "action": "setDeleteDaysAfterLastModification",
                  "docsAnchor": "set-deletedaysafterlastmodification"
                }
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "lineItems": {
                "title": "lineItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShoppingListLineItem"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addLineItem",
                    "docsAnchor": "add-lineitem",
                    "fields": {
                      "sku?": {
                        "type": "string"
                      },
                      "productId?": {
                        "type": "string"
                      },
                      "variantId?": {
                        "type": "number",
                        "format": "int64"
                      },
                      "quantity?": {
                        "type": "number",
                        "format": "int64"
                      },
                      "addedAt?": {
                        "type": "datetime"
                      },
                      "custom?": {
                        "type": "CustomFieldsDraft"
                      }
                    }
                  },
                  {
                    "action": "removeLineItem",
                    "docsAnchor": "remove-lineitem",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "quantity?": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  },
                  {
                    "action": "changeLineItemQuantity",
                    "docsAnchor": "change-lineitem-quantity",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  },
                  {
                    "action": "changeLineItemsOrder",
                    "docsAnchor": "change-lineitems-order",
                    "fields": {
                      "lineItemOrder": {
                        "type": "string[]"
                      }
                    }
                  },
                  {
                    "action": "setLineItemCustomType",
                    "docsAnchor": "set-lineitem-custom-type",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "type?": {
                        "type": "TypeReference"
                      },
                      "fields?": {
                        "type": "FieldContainer"
                      }
                    }
                  },
                  {
                    "action": "setLineItemCustomField",
                    "docsAnchor": "set-lineitem-customfield",
                    "fields": {
                      "lineItemId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value?": {
                        "type": "any"
                      }
                    }
                  }
                ]
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setSlug"
              },
              "textLineItems": {
                "title": "textLineItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TextLineItem"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addTextLineItem",
                    "docsAnchor": "add-textlineitem",
                    "fields": {
                      "name": {
                        "type": "LocalizedString"
                      },
                      "description?": {
                        "type": "LocalizedString"
                      },
                      "quantity?": {
                        "type": "number",
                        "format": "int64"
                      },
                      "addedAt?": {
                        "type": "datetime"
                      },
                      "custom?": {
                        "type": "CustomFieldsDraft"
                      }
                    }
                  },
                  {
                    "action": "removeTextLineItem",
                    "docsAnchor": "remove-textlineitem",
                    "fields": {
                      "textLineItemId": {
                        "type": "string"
                      },
                      "quantity?": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  },
                  {
                    "action": "changeTextLineItemQuantity",
                    "docsAnchor": "change-textlineitem-quantity",
                    "fields": {
                      "textLineItemId": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  },
                  {
                    "action": "changeTextLineItemName",
                    "docsAnchor": "change-textlineitem-name",
                    "fields": {
                      "textLineItemId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "LocalizedString"
                      }
                    }
                  },
                  {
                    "action": "setTextLineItemDescription",
                    "docsAnchor": "set-textlineitem-description",
                    "fields": {
                      "textLineItemId": {
                        "type": "string"
                      },
                      "description?": {
                        "type": "LocalizedString"
                      }
                    }
                  },
                  {
                    "action": "changeTextLineItemsOrder",
                    "docsAnchor": "change-textlineitems-order",
                    "fields": {
                      "textLineItemOrder": {
                        "type": "string[]"
                      }
                    }
                  },
                  {
                    "action": "setTextLineItemCustomType",
                    "docsAnchor": "set-textlineitem-custom-type",
                    "fields": {
                      "textLineItemId": {
                        "type": "string"
                      },
                      "type?": {
                        "type": "TypeReference"
                      },
                      "fields?": {
                        "type": "FieldContainer"
                      }
                    }
                  },
                  {
                    "action": "setTextLineItemCustomField",
                    "docsAnchor": "set-textlineitem-customfield",
                    "fields": {
                      "textLineItemId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value?": {
                        "type": "any"
                      }
                    }
                  }
                ]
              },
              "anonymousId": {
                "title": "anonymousId",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "setAnonymousId",
                  "docsAnchor": "set-anonymousid"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingList",
        "x-annotation-updateType": "ShoppingListUpdate",
        "type": "string"
      },
      "ShoppingListDraft": {
        "title": "ShoppingListDraft",
        "includePath": "types/shopping-list/ShoppingListDraft.raml",
        "type": "object",
        "properties": {
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "customer": {
            "title": "customer",
            "$ref": "#/components/schemas/CustomerReference"
          },
          "deleteDaysAfterLastModification": {
            "title": "deleteDaysAfterLastModification",
            "format": "int64",
            "type": "number"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "lineItems": {
            "title": "lineItems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingListLineItemDraft"
            }
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "slug": {
            "title": "slug",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "textLineItems": {
            "title": "textLineItems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextLineItemDraft"
            }
          },
          "anonymousId": {
            "title": "anonymousId",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingListDraft"
      },
      "ShoppingListLineItem": {
        "title": "ShoppingListLineItem",
        "includePath": "types/shopping-list/ShoppingListLineItem.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "title": "addedAt",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "deactivatedAt": {
            "title": "deactivatedAt",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "id",
            "type": "string"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productId": {
            "title": "productId",
            "type": "string"
          },
          "productSlug": {
            "title": "productSlug",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productType": {
            "title": "productType",
            "$ref": "#/components/schemas/ProductTypeReference"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "variant": {
            "title": "variant",
            "$ref": "#/components/schemas/ProductVariant"
          },
          "variantId": {
            "title": "variantId",
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "addedAt",
          "id",
          "name",
          "productId",
          "productType",
          "quantity"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListLineItemDraft": {
        "title": "ShoppingListLineItemDraft",
        "includePath": "types/shopping-list/ShoppingListLineItemDraft.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "title": "addedAt",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "sku": {
            "title": "sku",
            "type": "string"
          },
          "productId": {
            "title": "productId",
            "type": "string"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          },
          "variantId": {
            "title": "variantId",
            "format": "int64",
            "type": "number"
          }
        },
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListPagedQueryResponse": {
        "title": "ShoppingListPagedQueryResponse",
        "includePath": "types/shopping-list/ShoppingListPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShoppingList"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "type": "string"
      },
      "ShoppingListReference": {
        "title": "ShoppingListReference",
        "includePath": "types/shopping-list/ShoppingListReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/ShoppingList"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shopping-lists.html#shopping-list",
        "type": "string"
      },
      "ShoppingListSetTextLineItemCustomFieldAction": {
        "title": "ShoppingListSetTextLineItemCustomFieldAction",
        "includePath": "types/shopping-list/ShoppingListSetTextLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "textLineItemId": {
                "title": "textLineItemId",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-customfield",
        "type": "string"
      },
      "ShoppingListUpdate": {
        "title": "ShoppingListUpdate",
        "includePath": "types/shopping-list/ShoppingListUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShoppingListUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "type": "string"
      },
      "ShoppingListUpdateAction": {
        "title": "ShoppingListUpdateAction",
        "includePath": "types/shopping-list/ShoppingListUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "ShoppingList"
      },
      "TextLineItem": {
        "title": "TextLineItem",
        "includePath": "types/shopping-list/TextLineItem.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "title": "addedAt",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFields"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "id": {
            "title": "id",
            "type": "string"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          }
        },
        "required": [
          "addedAt",
          "id",
          "name",
          "quantity"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "TextLineItemDraft": {
        "title": "TextLineItemDraft",
        "includePath": "types/shopping-list/TextLineItemDraft.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "title": "addedAt",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "title": "custom",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "quantity": {
            "title": "quantity",
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListAddLineItemAction": {
        "title": "ShoppingListAddLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListAddLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "title": "sku",
                "type": "string"
              },
              "productId": {
                "title": "productId",
                "type": "string"
              },
              "variantId": {
                "title": "variantId",
                "format": "int64",
                "type": "number"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              },
              "addedAt": {
                "title": "addedAt",
                "type": "string",
                "format": "date-time"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFieldsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-lineitem",
        "type": "string"
      },
      "ShoppingListAddTextLineItemAction": {
        "title": "ShoppingListAddTextLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListAddTextLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              },
              "addedAt": {
                "title": "addedAt",
                "type": "string",
                "format": "date-time"
              },
              "custom": {
                "title": "custom",
                "$ref": "#/components/schemas/CustomFieldsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-textlineitem",
        "type": "string"
      },
      "ShoppingListChangeLineItemQuantityAction": {
        "title": "ShoppingListChangeLineItemQuantityAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitem-quantity",
        "type": "string"
      },
      "ShoppingListChangeLineItemsOrderAction": {
        "title": "ShoppingListChangeLineItemsOrderAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeLineItemsOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemOrder": {
                "title": "lineItemOrder",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitems-order",
        "type": "string"
      },
      "ShoppingListChangeNameAction": {
        "title": "ShoppingListChangeNameAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-name",
        "type": "string"
      },
      "ShoppingListChangeTextLineItemNameAction": {
        "title": "ShoppingListChangeTextLineItemNameAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeTextLineItemNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "title": "textLineItemId",
                "type": "string"
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-name",
        "type": "string"
      },
      "ShoppingListChangeTextLineItemQuantityAction": {
        "title": "ShoppingListChangeTextLineItemQuantityAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeTextLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "title": "textLineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-quantity",
        "type": "string"
      },
      "ShoppingListChangeTextLineItemsOrderAction": {
        "title": "ShoppingListChangeTextLineItemsOrderAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeTextLineItemsOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemOrder": {
                "title": "textLineItemOrder",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitems-order",
        "type": "string"
      },
      "ShoppingListRemoveLineItemAction": {
        "title": "ShoppingListRemoveLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListRemoveLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-lineitem",
        "type": "string"
      },
      "ShoppingListRemoveTextLineItemAction": {
        "title": "ShoppingListRemoveTextLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListRemoveTextLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "title": "textLineItemId",
                "type": "string"
              },
              "quantity": {
                "title": "quantity",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-textlineitem",
        "type": "string"
      },
      "ShoppingListSetAnonymousIdAction": {
        "title": "ShoppingListSetAnonymousIdAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetAnonymousIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "anonymousId": {
                "title": "anonymousId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-anonymousid",
        "type": "string"
      },
      "ShoppingListSetCustomFieldAction": {
        "title": "ShoppingListSetCustomFieldAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customfield",
        "type": "string"
      },
      "ShoppingListSetCustomTypeAction": {
        "title": "ShoppingListSetCustomTypeAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-custom-type",
        "type": "string"
      },
      "ShoppingListSetCustomerAction": {
        "title": "ShoppingListSetCustomerAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "customer": {
                "title": "customer",
                "$ref": "#/components/schemas/CustomerReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customer",
        "type": "string"
      },
      "ShoppingListSetDeleteDaysAfterLastModificationAction": {
        "title": "ShoppingListSetDeleteDaysAfterLastModificationAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetDeleteDaysAfterLastModificationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "deleteDaysAfterLastModification": {
                "title": "deleteDaysAfterLastModification",
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-deletedaysafterlastmodification",
        "type": "string"
      },
      "ShoppingListSetDescriptionAction": {
        "title": "ShoppingListSetDescriptionAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-description",
        "type": "string"
      },
      "ShoppingListSetKeyAction": {
        "title": "ShoppingListSetKeyAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-key",
        "type": "string"
      },
      "ShoppingListSetLineItemCustomFieldAction": {
        "title": "ShoppingListSetLineItemCustomFieldAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "name": {
                "title": "name",
                "type": "string"
              },
              "value": {
                "title": "value",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-customfield",
        "type": "string"
      },
      "ShoppingListSetLineItemCustomTypeAction": {
        "title": "ShoppingListSetLineItemCustomTypeAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "title": "lineItemId",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-custom-type",
        "type": "string"
      },
      "ShoppingListSetSlugAction": {
        "title": "ShoppingListSetSlugAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetSlugAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "slug": {
                "title": "slug",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-slug",
        "type": "string"
      },
      "ShoppingListSetTextLineItemCustomTypeAction": {
        "title": "ShoppingListSetTextLineItemCustomTypeAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetTextLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "title": "textLineItemId",
                "type": "string"
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/TypeReference"
              },
              "fields": {
                "title": "fields",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-custom-type",
        "type": "string"
      },
      "ShoppingListSetTextLineItemDescriptionAction": {
        "title": "ShoppingListSetTextLineItemDescriptionAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetTextLineItemDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "title": "textLineItemId",
                "type": "string"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-description",
        "type": "string"
      },
      "State": {
        "title": "State",
        "includePath": "types/state/State.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasUpdateAction": {
                  "action": "changeKey",
                  "docsAnchor": "change-state-key"
                }
              },
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/StateTypeEnum",
                "x-annotation-hasUpdateAction": {
                  "action": "changeType",
                  "docsAnchor": "change-state-type"
                }
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasUpdateAction": {
                  "action": "setName",
                  "required": true,
                  "docsAnchor": "set-state-name"
                }
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasUpdateAction": {
                  "action": "setDescription",
                  "required": true,
                  "docsAnchor": "set-state-description"
                }
              },
              "initial": {
                "title": "initial",
                "type": "boolean",
                "x-annotation-hasUpdateAction": {
                  "action": "changeInitial",
                  "docsAnchor": "change-initial-state"
                }
              },
              "builtIn": {
                "title": "builtIn",
                "type": "boolean"
              },
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "setRoles",
                    "docsAnchor": "set-state-roles",
                    "fields": {
                      "roles": "StateRoleEnum[]"
                    }
                  },
                  {
                    "action": "addRoles",
                    "docsAnchor": "add-state-roles",
                    "fields": {
                      "roles": "StateRoleEnum[]"
                    }
                  },
                  {
                    "action": "removeRoles",
                    "docsAnchor": "remove-state-roles",
                    "fields": {
                      "roles": "StateRoleEnum[]"
                    }
                  }
                ]
              },
              "transitions": {
                "title": "transitions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateReference"
                },
                "x-annotation-hasSimpleUpdateAction": "setTransitions"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state",
        "x-annotation-updateType": "StateUpdate",
        "type": "string"
      },
      "StateDraft": {
        "title": "StateDraft",
        "includePath": "types/state/StateDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/StateTypeEnum"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "initial": {
            "title": "initial",
            "type": "boolean"
          },
          "roles": {
            "title": "roles",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRoleEnum"
            }
          },
          "transitions": {
            "title": "transitions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateReference"
            }
          }
        },
        "required": [
          "key",
          "type"
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#statedraft"
      },
      "StatePagedQueryResponse": {
        "title": "StatePagedQueryResponse",
        "includePath": "types/state/StatePagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/State"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "type": "string"
      },
      "StateReference": {
        "title": "StateReference",
        "includePath": "types/state/StateReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/State"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state",
        "type": "string"
      },
      "StateRoleEnum": {
        "title": "StateRoleEnum",
        "enum": [
          "ReviewIncludedInStatistics"
        ],
        "includePath": "types/state/StateRoleEnum.raml",
        "type": "string",
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#staterole"
      },
      "StateTypeEnum": {
        "title": "StateTypeEnum",
        "enum": [
          "OrderState",
          "LineItemState",
          "ProductState",
          "ReviewState",
          "PaymentState"
        ],
        "includePath": "types/state/StateTypeEnum.raml",
        "type": "string",
        "x-annotation-package": "State"
      },
      "StateUpdate": {
        "title": "StateUpdate",
        "includePath": "types/state/StateUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "type": "string"
      },
      "StateUpdateAction": {
        "title": "StateUpdateAction",
        "includePath": "types/state/StateUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "State"
      },
      "StateAddRolesAction": {
        "title": "StateAddRolesAction",
        "includePath": "types/state/updates/StateAddRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#add-state-roles",
        "type": "string"
      },
      "StateChangeInitialAction": {
        "title": "StateChangeInitialAction",
        "includePath": "types/state/updates/StateChangeInitialAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "initial": {
                "title": "initial",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-initial-state",
        "type": "string"
      },
      "StateChangeKeyAction": {
        "title": "StateChangeKeyAction",
        "includePath": "types/state/updates/StateChangeKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-key",
        "type": "string"
      },
      "StateChangeTypeAction": {
        "title": "StateChangeTypeAction",
        "includePath": "types/state/updates/StateChangeTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "type": {
                "title": "type",
                "$ref": "#/components/schemas/StateTypeEnum"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-type",
        "type": "string"
      },
      "StateRemoveRolesAction": {
        "title": "StateRemoveRolesAction",
        "includePath": "types/state/updates/StateRemoveRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#remove-state-roles",
        "type": "string"
      },
      "StateSetDescriptionAction": {
        "title": "StateSetDescriptionAction",
        "includePath": "types/state/updates/StateSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-description",
        "type": "string"
      },
      "StateSetNameAction": {
        "title": "StateSetNameAction",
        "includePath": "types/state/updates/StateSetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-name",
        "type": "string"
      },
      "StateSetRolesAction": {
        "title": "StateSetRolesAction",
        "includePath": "types/state/updates/StateSetRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "title": "roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-roles",
        "type": "string"
      },
      "StateSetTransitionsAction": {
        "title": "StateSetTransitionsAction",
        "includePath": "types/state/updates/StateSetTransitionsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "transitions": {
                "title": "transitions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-transitions",
        "type": "string"
      },
      "AzureEventGridDestination": {
        "title": "AzureEventGridDestination",
        "includePath": "types/subscription/AzureEventGridDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "uri": {
                "title": "uri",
                "type": "string"
              },
              "accessKey": {
                "title": "accessKey",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "AzureServiceBusDestination": {
        "title": "AzureServiceBusDestination",
        "includePath": "types/subscription/AzureServiceBusDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "connectionString": {
                "title": "connectionString",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "ChangeSubscription": {
        "title": "ChangeSubscription",
        "includePath": "types/subscription/ChangeSubscription.raml",
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "title": "resourceTypeId",
            "type": "string"
          }
        },
        "required": [
          "resourceTypeId"
        ],
        "x-annotation-package": "Subscription"
      },
      "Destination": {
        "title": "Destination",
        "includePath": "types/subscription/Destination.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "title": "type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Subscription"
      },
      "GoogleCloudPubSubDestination": {
        "title": "GoogleCloudPubSubDestination",
        "includePath": "types/subscription/GoogleCloudPubSubDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "projectId": {
                "title": "projectId",
                "type": "string"
              },
              "topic": {
                "title": "topic",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "IronMqDestination": {
        "title": "IronMqDestination",
        "includePath": "types/subscription/IronMqDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "uri": {
                "title": "uri",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "MessageDelivery": {
        "title": "MessageDelivery",
        "includePath": "types/subscription/MessageDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "id": {
                "title": "id",
                "type": "string"
              },
              "version": {
                "title": "version",
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "title": "createdAt",
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "title": "lastModifiedAt",
                "type": "string",
                "format": "date-time"
              },
              "sequenceNumber": {
                "title": "sequenceNumber",
                "format": "int64",
                "type": "number"
              },
              "resourceVersion": {
                "title": "resourceVersion",
                "format": "int64",
                "type": "number"
              },
              "payloadNotIncluded": {
                "title": "payloadNotIncluded",
                "$ref": "#/components/schemas/PayloadNotIncluded"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#message-subscription-payload",
        "type": "string"
      },
      "MessageSubscription": {
        "title": "MessageSubscription",
        "includePath": "types/subscription/MessageSubscription.raml",
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "title": "resourceTypeId",
            "type": "string"
          },
          "types": {
            "title": "types",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "resourceTypeId"
        ],
        "x-annotation-package": "Subscription"
      },
      "PayloadNotIncluded": {
        "title": "PayloadNotIncluded",
        "includePath": "types/subscription/PayloadNotIncluded.raml",
        "type": "object",
        "properties": {
          "reason": {
            "title": "reason",
            "type": "string"
          },
          "payloadType": {
            "title": "payloadType",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "payloadType"
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#payloadnotincluded"
      },
      "ResourceCreatedDelivery": {
        "title": "ResourceCreatedDelivery",
        "includePath": "types/subscription/ResourceCreatedDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "version": {
                "title": "version",
                "format": "int64",
                "type": "number"
              },
              "modifiedAt": {
                "title": "modifiedAt",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcecreated-payload",
        "type": "string"
      },
      "ResourceDeletedDelivery": {
        "title": "ResourceDeletedDelivery",
        "includePath": "types/subscription/ResourceDeletedDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "version": {
                "title": "version",
                "format": "int64",
                "type": "number"
              },
              "modifiedAt": {
                "title": "modifiedAt",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcedeleted-payload",
        "type": "string"
      },
      "ResourceUpdatedDelivery": {
        "title": "ResourceUpdatedDelivery",
        "includePath": "types/subscription/ResourceUpdatedDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "version": {
                "title": "version",
                "format": "int64",
                "type": "number"
              },
              "oldVersion": {
                "title": "oldVersion",
                "format": "int64",
                "type": "number"
              },
              "modifiedAt": {
                "title": "modifiedAt",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourceupdated-payload",
        "type": "string"
      },
      "SnsDestination": {
        "title": "SnsDestination",
        "includePath": "types/subscription/SnsDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "accessKey": {
                "title": "accessKey",
                "type": "string"
              },
              "accessSecret": {
                "title": "accessSecret",
                "type": "string"
              },
              "topicArn": {
                "title": "topicArn",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "SqsDestination": {
        "title": "SqsDestination",
        "includePath": "types/subscription/SqsDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "accessKey": {
                "title": "accessKey",
                "type": "string"
              },
              "accessSecret": {
                "title": "accessSecret",
                "type": "string"
              },
              "queueURL": {
                "title": "queueURL",
                "type": "string"
              },
              "region": {
                "title": "region",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "Subscription": {
        "title": "Subscription",
        "includePath": "types/subscription/Subscription.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "changes": {
                "title": "changes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChangeSubscription"
                },
                "x-annotation-hasUpdateAction": {
                  "action": "setChanges",
                  "required": false
                }
              },
              "destination": {
                "title": "destination",
                "$ref": "#/components/schemas/Destination",
                "x-annotation-hasSimpleUpdateAction": "changeDestination"
              },
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              },
              "messages": {
                "title": "messages",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MessageSubscription"
                },
                "x-annotation-hasUpdateAction": {
                  "action": "setMessages",
                  "required": false
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscription",
        "x-annotation-updateType": "SubscriptionUpdate",
        "type": "string"
      },
      "SubscriptionDelivery": {
        "title": "SubscriptionDelivery",
        "includePath": "types/subscription/SubscriptionDelivery.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "notificationType"
        },
        "properties": {
          "projectKey": {
            "title": "projectKey",
            "type": "string"
          },
          "notificationType": {
            "title": "notificationType",
            "type": "string"
          },
          "resource": {
            "title": "resource",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "required": [
          "projectKey",
          "notificationType",
          "resource"
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#delivery"
      },
      "SubscriptionDraft": {
        "title": "SubscriptionDraft",
        "includePath": "types/subscription/SubscriptionDraft.raml",
        "type": "object",
        "properties": {
          "changes": {
            "title": "changes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeSubscription"
            }
          },
          "destination": {
            "title": "destination",
            "$ref": "#/components/schemas/Destination"
          },
          "key": {
            "title": "key",
            "type": "string"
          },
          "messages": {
            "title": "messages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscription"
            }
          }
        },
        "required": [
          "destination"
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscriptiondraft"
      },
      "SubscriptionPagedQueryResponse": {
        "title": "SubscriptionPagedQueryResponse",
        "includePath": "types/subscription/SubscriptionPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "SubscriptionUpdate": {
        "title": "SubscriptionUpdate",
        "includePath": "types/subscription/SubscriptionUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "SubscriptionUpdateAction": {
        "title": "SubscriptionUpdateAction",
        "includePath": "types/subscription/SubscriptionUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Subscription"
      },
      "SubscriptionChangeDestinationAction": {
        "title": "SubscriptionChangeDestinationAction",
        "includePath": "types/subscription/updates/SubscriptionChangeDestinationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "destination": {
                "title": "destination",
                "$ref": "#/components/schemas/Destination"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#change-destination",
        "type": "string"
      },
      "SubscriptionSetChangesAction": {
        "title": "SubscriptionSetChangesAction",
        "includePath": "types/subscription/updates/SubscriptionSetChangesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "changes": {
                "title": "changes",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChangeSubscription"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-changes",
        "type": "string"
      },
      "SubscriptionSetKeyAction": {
        "title": "SubscriptionSetKeyAction",
        "includePath": "types/subscription/updates/SubscriptionSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-key",
        "type": "string"
      },
      "SubscriptionSetMessagesAction": {
        "title": "SubscriptionSetMessagesAction",
        "includePath": "types/subscription/updates/SubscriptionSetMessagesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "messages": {
                "title": "messages",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MessageSubscription"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-messages",
        "type": "string"
      },
      "SubRate": {
        "title": "SubRate",
        "includePath": "types/tax-category/SubRate.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          },
          "amount": {
            "title": "amount",
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          }
        },
        "required": [
          "name",
          "amount"
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#subrate"
      },
      "TaxCategory": {
        "title": "TaxCategory",
        "includePath": "types/tax-category/TaxCategory.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "description": {
                "title": "description",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "rates": {
                "title": "rates",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxRate"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addTaxRate",
                    "fields": {
                      "taxRate": "TaxRateDraft"
                    }
                  },
                  {
                    "action": "replaceTaxRate",
                    "fields": {
                      "taxRateId": "string",
                      "taxRate": "TaxRateDraft"
                    }
                  },
                  {
                    "action": "removeTaxRate",
                    "fields": {
                      "taxRateId": "string"
                    }
                  }
                ]
              },
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setKey"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory",
        "x-annotation-updateType": "TaxCategoryUpdate",
        "type": "string"
      },
      "TaxCategoryDraft": {
        "title": "TaxCategoryDraft",
        "includePath": "types/tax-category/TaxCategoryDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          },
          "description": {
            "title": "description",
            "type": "string"
          },
          "rates": {
            "title": "rates",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRateDraft"
            }
          },
          "key": {
            "title": "key",
            "type": "string"
          }
        },
        "required": [
          "name",
          "rates"
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategorydraft"
      },
      "TaxCategoryPagedQueryResponse": {
        "title": "TaxCategoryPagedQueryResponse",
        "includePath": "types/tax-category/TaxCategoryPagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "type": "string"
      },
      "TaxCategoryReference": {
        "title": "TaxCategoryReference",
        "includePath": "types/tax-category/TaxCategoryReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/TaxCategory"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory",
        "type": "string"
      },
      "TaxCategoryUpdate": {
        "title": "TaxCategoryUpdate",
        "includePath": "types/tax-category/TaxCategoryUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxCategoryUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "type": "string"
      },
      "TaxCategoryUpdateAction": {
        "title": "TaxCategoryUpdateAction",
        "includePath": "types/tax-category/TaxCategoryUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "TaxCategory"
      },
      "TaxRate": {
        "title": "TaxRate",
        "includePath": "types/tax-category/TaxRate.raml",
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string"
          },
          "name": {
            "title": "name",
            "type": "string"
          },
          "amount": {
            "title": "amount",
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "includedInPrice": {
            "title": "includedInPrice",
            "type": "boolean"
          },
          "country": {
            "title": "country",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "title": "state",
            "type": "string"
          },
          "subRates": {
            "title": "subRates",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubRate"
            }
          }
        },
        "required": [
          "name",
          "amount",
          "includedInPrice",
          "country"
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxrate"
      },
      "TaxRateDraft": {
        "title": "TaxRateDraft",
        "includePath": "types/tax-category/TaxRateDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          },
          "amount": {
            "title": "amount",
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "includedInPrice": {
            "title": "includedInPrice",
            "type": "boolean"
          },
          "country": {
            "title": "country",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "title": "state",
            "type": "string"
          },
          "subRates": {
            "title": "subRates",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubRate"
            }
          }
        },
        "required": [
          "name",
          "includedInPrice",
          "country"
        ],
        "x-annotation-package": "TaxCategory"
      },
      "TaxCategoryAddTaxRateAction": {
        "title": "TaxCategoryAddTaxRateAction",
        "includePath": "types/tax-category/updates/TaxCategoryAddTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "taxRate": {
                "title": "taxRate",
                "$ref": "#/components/schemas/TaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#add-tax-rate",
        "type": "string"
      },
      "TaxCategoryChangeNameAction": {
        "title": "TaxCategoryChangeNameAction",
        "includePath": "types/tax-category/updates/TaxCategoryChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#change-name",
        "type": "string"
      },
      "TaxCategoryRemoveTaxRateAction": {
        "title": "TaxCategoryRemoveTaxRateAction",
        "includePath": "types/tax-category/updates/TaxCategoryRemoveTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "taxRateId": {
                "title": "taxRateId",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#remove-tax-rate",
        "type": "string"
      },
      "TaxCategoryReplaceTaxRateAction": {
        "title": "TaxCategoryReplaceTaxRateAction",
        "includePath": "types/tax-category/updates/TaxCategoryReplaceTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "taxRateId": {
                "title": "taxRateId",
                "type": "string"
              },
              "taxRate": {
                "title": "taxRate",
                "$ref": "#/components/schemas/TaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#replace-tax-rate",
        "type": "string"
      },
      "TaxCategorySetDescriptionAction": {
        "title": "TaxCategorySetDescriptionAction",
        "includePath": "types/tax-category/updates/TaxCategorySetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#set-description",
        "type": "string"
      },
      "TaxCategorySetKeyAction": {
        "title": "TaxCategorySetKeyAction",
        "includePath": "types/tax-category/updates/TaxCategorySetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#set-key",
        "type": "string"
      },
      "CustomFieldBooleanType": {
        "title": "CustomFieldBooleanType",
        "includePath": "types/type/CustomFieldBooleanType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#booleantype"
      },
      "CustomFieldDateTimeType": {
        "title": "CustomFieldDateTimeType",
        "includePath": "types/type/CustomFieldDateTimeType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetimetype"
      },
      "CustomFieldDateType": {
        "title": "CustomFieldDateType",
        "includePath": "types/type/CustomFieldDateType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetype"
      },
      "CustomFieldEnumType": {
        "title": "CustomFieldEnumType",
        "includePath": "types/type/CustomFieldEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "values": {
                "title": "values",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#enumtype",
        "type": "string"
      },
      "CustomFieldEnumValue": {
        "title": "CustomFieldEnumValue",
        "includePath": "types/type/CustomFieldEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "label": {
            "title": "label",
            "type": "string"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "Type"
      },
      "CustomFieldLocalizedEnumType": {
        "title": "CustomFieldLocalizedEnumType",
        "includePath": "types/type/CustomFieldLocalizedEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "values": {
                "title": "values",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedenumtype",
        "type": "string"
      },
      "CustomFieldLocalizedEnumValue": {
        "title": "CustomFieldLocalizedEnumValue",
        "includePath": "types/type/CustomFieldLocalizedEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "label": {
            "title": "label",
            "$ref": "#/components/schemas/LocalizedString"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "Type"
      },
      "CustomFieldLocalizedStringType": {
        "title": "CustomFieldLocalizedStringType",
        "includePath": "types/type/CustomFieldLocalizedStringType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedstringtype"
      },
      "CustomFieldMoneyType": {
        "title": "CustomFieldMoneyType",
        "includePath": "types/type/CustomFieldMoneyType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#moneytype"
      },
      "CustomFieldNumberType": {
        "title": "CustomFieldNumberType",
        "includePath": "types/type/CustomFieldNumberType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#numbertype"
      },
      "CustomFieldReferenceType": {
        "title": "CustomFieldReferenceType",
        "includePath": "types/type/CustomFieldReferenceType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "referenceTypeId": {
                "title": "referenceTypeId",
                "$ref": "#/components/schemas/ReferenceTypeId"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#referencetype",
        "type": "string"
      },
      "CustomFieldSetType": {
        "title": "CustomFieldSetType",
        "includePath": "types/type/CustomFieldSetType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "elementType": {
                "title": "elementType",
                "$ref": "#/components/schemas/FieldType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#settype",
        "type": "string"
      },
      "CustomFieldStringType": {
        "title": "CustomFieldStringType",
        "includePath": "types/type/CustomFieldStringType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#stringtype"
      },
      "CustomFieldTimeType": {
        "title": "CustomFieldTimeType",
        "includePath": "types/type/CustomFieldTimeType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#timetype"
      },
      "CustomFields": {
        "title": "CustomFields",
        "includePath": "types/type/CustomFields.raml",
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/TypeReference"
          },
          "fields": {
            "title": "fields",
            "$ref": "#/components/schemas/FieldContainer"
          }
        },
        "required": [
          "type",
          "fields"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#custom"
      },
      "CustomFieldsDraft": {
        "title": "CustomFieldsDraft",
        "includePath": "types/type/CustomFieldsDraft.raml",
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "type": "object"
          },
          "fields": {
            "title": "fields",
            "$ref": "#/components/schemas/FieldContainer"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfieldsdraft"
      },
      "FieldContainer": {
        "title": "FieldContainer",
        "includePath": "types/type/FieldContainer.raml",
        "type": "object",
        "additionalProperties": {
          "title": "//",
          "required": true,
          "type": "string"
        },
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfields",
        "x-annotation-asMap": {
          "key": "string",
          "value": "any"
        }
      },
      "FieldDefinition": {
        "title": "FieldDefinition",
        "includePath": "types/type/FieldDefinition.raml",
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "type": "object"
          },
          "name": {
            "title": "name",
            "type": "string"
          },
          "label": {
            "title": "label",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "required": {
            "title": "required",
            "type": "boolean"
          },
          "inputHint": {
            "title": "inputHint",
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "label",
          "required"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fielddefinition"
      },
      "FieldType": {
        "title": "FieldType",
        "includePath": "types/type/FieldType.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "name"
        },
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fieldtype"
      },
      "ResourceTypeId": {
        "title": "ResourceTypeId",
        "enum": [
          "asset",
          "category",
          "channel",
          "customer",
          "order",
          "inventory-entry",
          "line-item",
          "custom-line-item",
          "product-price",
          "payment",
          "payment-interface-interaction",
          "review",
          "shopping-list",
          "shopping-list-text-line-item",
          "discount-code",
          "cart-discount",
          "customer-group"
        ],
        "includePath": "types/type/ResourceTypeId.raml",
        "type": "string",
        "x-annotation-package": "Type"
      },
      "Type": {
        "title": "Type",
        "includePath": "types/type/Type.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeKey"
              },
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "resourceTypeIds": {
                "title": "resourceTypeIds",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResourceTypeId"
                }
              },
              "fieldDefinitions": {
                "title": "fieldDefinitions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldDefinition"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addFieldDefinition",
                    "docsAnchor": "add-fielddefinition",
                    "fields": {
                      "fieldDefinition": "FieldDefinition"
                    }
                  },
                  {
                    "action": "removeFieldDefinition",
                    "docsAnchor": "remove-fielddefinition",
                    "fields": {
                      "fieldName": "string"
                    }
                  },
                  {
                    "action": "changeLabel",
                    "fields": {
                      "fieldName": "string",
                      "label": "LocalizedString"
                    }
                  },
                  {
                    "action": "addEnumValue",
                    "docsAnchor": "add-enumvalue-to-fielddefinition",
                    "fields": {
                      "fieldName": "string",
                      "value": "CustomFieldEnumValue"
                    }
                  },
                  {
                    "action": "addLocalizedEnumValue",
                    "docsAnchor": "add-localizedenumvalue-to-fielddefinition",
                    "fields": {
                      "fieldName": "string",
                      "value": "CustomFieldLocalizedEnumValue"
                    }
                  },
                  {
                    "action": "changeFieldDefinitionOrder",
                    "docsAnchor": "change-the-order-of-fielddefinitions",
                    "fields": {
                      "fieldNames": "string[]"
                    }
                  },
                  {
                    "action": "changeEnumValueOrder",
                    "docsAnchor": "change-the-order-of-enumvalues",
                    "fields": {
                      "fieldName": "string",
                      "keys": "string[]"
                    }
                  },
                  {
                    "action": "changeLocalizedEnumValueOrder",
                    "docsAnchor": "change-the-order-of-localizedenumvalues",
                    "fields": {
                      "fieldName": "string",
                      "keys": "string[]"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type",
        "x-annotation-updateType": "TypeUpdate",
        "type": "string"
      },
      "TypeDraft": {
        "title": "TypeDraft",
        "includePath": "types/type/TypeDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "title": "key",
            "type": "string"
          },
          "name": {
            "title": "name",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "title": "description",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "resourceTypeIds": {
            "title": "resourceTypeIds",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceTypeId"
            }
          },
          "fieldDefinitions": {
            "title": "fieldDefinitions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinition"
            }
          }
        },
        "required": [
          "key",
          "name",
          "resourceTypeIds"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#typedraft"
      },
      "TypePagedQueryResponse": {
        "title": "TypePagedQueryResponse",
        "includePath": "types/type/TypePagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Type"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "type": "string"
      },
      "TypeReference": {
        "title": "TypeReference",
        "includePath": "types/type/TypeReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Type"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type",
        "type": "string"
      },
      "TypeUpdate": {
        "title": "TypeUpdate",
        "includePath": "types/type/TypeUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypeUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "type": "string"
      },
      "TypeUpdateAction": {
        "title": "TypeUpdateAction",
        "includePath": "types/type/TypeUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Type"
      },
      "TypeAddEnumValueAction": {
        "title": "TypeAddEnumValueAction",
        "includePath": "types/type/updates/TypeAddEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "title": "fieldName",
                "type": "string"
              },
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/CustomFieldEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-enumvalue-to-fielddefinition",
        "type": "string"
      },
      "TypeAddFieldDefinitionAction": {
        "title": "TypeAddFieldDefinitionAction",
        "includePath": "types/type/updates/TypeAddFieldDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldDefinition": {
                "title": "fieldDefinition",
                "$ref": "#/components/schemas/FieldDefinition"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-fielddefinition",
        "type": "string"
      },
      "TypeAddLocalizedEnumValueAction": {
        "title": "TypeAddLocalizedEnumValueAction",
        "includePath": "types/type/updates/TypeAddLocalizedEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "title": "fieldName",
                "type": "string"
              },
              "value": {
                "title": "value",
                "$ref": "#/components/schemas/CustomFieldLocalizedEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-localizedenumvalue-to-fielddefinition",
        "type": "string"
      },
      "TypeChangeEnumValueOrderAction": {
        "title": "TypeChangeEnumValueOrderAction",
        "includePath": "types/type/updates/TypeChangeEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "title": "fieldName",
                "type": "string"
              },
              "keys": {
                "title": "keys",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-enumvalues",
        "type": "string"
      },
      "TypeChangeFieldDefinitionLabelAction": {
        "title": "TypeChangeFieldDefinitionLabelAction",
        "includePath": "types/type/updates/TypeChangeFieldDefinitionLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "title": "fieldName",
                "type": "string"
              },
              "label": {
                "title": "label",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "type": "string"
      },
      "TypeChangeFieldDefinitionOrderAction": {
        "title": "TypeChangeFieldDefinitionOrderAction",
        "includePath": "types/type/updates/TypeChangeFieldDefinitionOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldNames": {
                "title": "fieldNames",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-fielddefinitions",
        "type": "string"
      },
      "TypeChangeKeyAction": {
        "title": "TypeChangeKeyAction",
        "includePath": "types/type/updates/TypeChangeKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "key": {
                "title": "key",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-key",
        "type": "string"
      },
      "TypeChangeLabelAction": {
        "title": "TypeChangeLabelAction",
        "includePath": "types/type/updates/TypeChangeLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "title": "fieldName",
                "type": "string"
              },
              "label": {
                "title": "label",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-label",
        "type": "string"
      },
      "TypeChangeLocalizedEnumValueOrderAction": {
        "title": "TypeChangeLocalizedEnumValueOrderAction",
        "includePath": "types/type/updates/TypeChangeLocalizedEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "title": "fieldName",
                "type": "string"
              },
              "keys": {
                "title": "keys",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-localizedenumvalues",
        "type": "string"
      },
      "TypeChangeNameAction": {
        "title": "TypeChangeNameAction",
        "includePath": "types/type/updates/TypeChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-name",
        "type": "string"
      },
      "TypeRemoveFieldDefinitionAction": {
        "title": "TypeRemoveFieldDefinitionAction",
        "includePath": "types/type/updates/TypeRemoveFieldDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "title": "fieldName",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#remove-fielddefinition",
        "type": "string"
      },
      "TypeSetDescriptionAction": {
        "title": "TypeSetDescriptionAction",
        "includePath": "types/type/updates/TypeSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#set-description",
        "type": "string"
      },
      "Location": {
        "title": "Location",
        "includePath": "types/zone/Location.raml",
        "type": "object",
        "properties": {
          "country": {
            "title": "country",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "title": "state",
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#location"
      },
      "Zone": {
        "title": "Zone",
        "includePath": "types/zone/Zone.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "changeName"
              },
              "description": {
                "title": "description",
                "type": "string",
                "x-annotation-hasSimpleUpdateAction": "setDescription"
              },
              "locations": {
                "title": "locations",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                },
                "x-annotation-hasUpdateActions": [
                  {
                    "action": "addLocation",
                    "fields": {
                      "location": "Location"
                    }
                  },
                  {
                    "action": "removeLocation",
                    "fields": {
                      "location": "Location"
                    }
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone",
        "x-annotation-updateType": "ZoneUpdate",
        "type": "string"
      },
      "ZoneDraft": {
        "title": "ZoneDraft",
        "includePath": "types/zone/ZoneDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string"
          },
          "description": {
            "title": "description",
            "type": "string"
          },
          "locations": {
            "title": "locations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          }
        },
        "required": [
          "name",
          "locations"
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zonedraft"
      },
      "ZonePagedQueryResponse": {
        "title": "ZonePagedQueryResponse",
        "includePath": "types/zone/ZonePagedQueryResponse.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedQueryResponse"
          },
          {
            "properties": {
              "results": {
                "title": "results",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "type": "string"
      },
      "ZoneReference": {
        "title": "ZoneReference",
        "includePath": "types/zone/ZoneReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "title": "obj",
                "$ref": "#/components/schemas/Zone"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone",
        "type": "string"
      },
      "ZoneUpdate": {
        "title": "ZoneUpdate",
        "includePath": "types/zone/ZoneUpdate.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Update"
          },
          {
            "properties": {
              "actions": {
                "title": "actions",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ZoneUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "type": "string"
      },
      "ZoneUpdateAction": {
        "title": "ZoneUpdateAction",
        "includePath": "types/zone/ZoneUpdateAction.raml",
        "discriminator": {
          "propertyName": "action"
        },
        "$ref": "#/components/schemas/UpdateAction",
        "x-annotation-package": "Zone"
      },
      "ZoneAddLocationAction": {
        "title": "ZoneAddLocationAction",
        "includePath": "types/zone/updates/ZoneAddLocationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "location": {
                "title": "location",
                "$ref": "#/components/schemas/Location"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#add-location",
        "type": "string"
      },
      "ZoneChangeNameAction": {
        "title": "ZoneChangeNameAction",
        "includePath": "types/zone/updates/ZoneChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "name": {
                "title": "name",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#change-name",
        "type": "string"
      },
      "ZoneRemoveLocationAction": {
        "title": "ZoneRemoveLocationAction",
        "includePath": "types/zone/updates/ZoneRemoveLocationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "location": {
                "title": "location",
                "$ref": "#/components/schemas/Location"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#remove-location",
        "type": "string"
      },
      "ZoneSetDescriptionAction": {
        "title": "ZoneSetDescriptionAction",
        "includePath": "types/zone/updates/ZoneSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "description": {
                "title": "description",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#set-description",
        "type": "string"
      }
    },
    "responses": {
      "trait_errorable_400": {
        "description": "## Bad Request\n\nA 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.\nBad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or\na parameter that references another resource that does not exist. Clients need to resolve the problems mentioned\nin the response before re-sending the request.\n\nThe following general error codes can appear in responses with the HTTP status code `400`:\n\n* `InvalidInput`\n  Invalid input has been sent to the service.\n  The client application should validate the input according to the constraints described in the error message\n  before sending the request.\n\n* `InvalidOperation`\n  The resource(s) involved in the request are not in a valid state for the operation. The client application\n  should validate the constraints described in the error message before sending the request.\n\n* `InvalidField`\n  A field has an invalid value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n  * `invalidValue` - *\n    The invalid value.\n  * `allowedValues` - Array of * - Optional\n    A fixed set of allowed values for the field, if any.\n\n* `RequiredField`\n  A required field is missing a value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n\n* `DuplicateField`\n  A value for a field conflicts with an existing duplicate value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n  * `duplicateValue` - *\n    The offending duplicate value.\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_errorable_404": {
        "description": "## Not Found\n\nA 404 indicates that the addressed resource was not found / does not exist.\n\nThe following general error codes can appear in responses with the HTTP status code `404`:\n\n* `ResourceNotFound`\n  The resource addressed by the request URL does not exist.\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_errorable_500": {
        "description": "## Internal Server Error\n\nA 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent\nrequests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs\nto be reported and resolved.\n\nThe following general error codes can appear in responses with the HTTP status code `500`:\n\n* `General`\n  A server-side problem occurred that is not further specified.\n  These errors [should be reported](http://support.sphere.io/){:target=\"_blank\"}.\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_errorable_503": {
        "description": "## Service Unavailable\n\nThe following general error codes can appear in responses with the HTTP status code `503`:\n\n* `OverCapacity`\n  The service is having trouble handling the load. The client application should retry the request with\n  exponential backoff up to a point where further delay is unacceptable.\n\n* `PendingOperation`\n  A previous conflicting operation is still pending and needs to finish before the request can succeed.\n  The client application should retry the request with exponential backoff up to a point where further delay\n  is unaceptable. If these errors persist, [should be reported](http://support.sphere.io/){:target=\"_blank\"}.\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_deprecatable_200": {
        "description": "",
        "headers": {
          "X-DEPRECATION-NOTICE": {
            "description": "As the SPHERE.IO platform evolves, some features are superseded by better implementations and should not\nbe used anymore. The goal of our deprecation process is to communicate at runtime with users if they happen\nto use such deprecated feature. To achieve this in a non breaking fashion SPHERE.IO uses an additionnal\ncustom HTTP header called \"X-DEPRECATION-NOTICE\" with a specific message relative to the deprecation.\n",
            "displayName": "X-DEPRECATION-NOTICE",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "trait_conflicting_409": {
        "description": "## Conflict\n\nA 409 indicates that the resource targeted by the request (with the intention to modify or delete the resource),\nwas modified since the last time the client has requested it. As a reaction, the client will usually want to\nrequest the newest version of the resource to see what has changed and may then decide to apply the same or other\nchanges to the new version, or discard his changes entirely.\n\nConflicts indicate a concurrent modification and usually occur on versioned resources, for which the client has\nto include the version of the resource whenever he intends to apply modifications to it.\n\nThe following general error codes can appear in responses with the HTTP status code `409`:\n\n* `ConcurrentModification`\n  The request conflicts with the current state of the involved resource(s).\n  Typically, the request attempts to modify a resource that is out of date,\n  i.e. that has been modified by another client since the last time it was retrieved.\n  The client application should resolve the conflict (with or without involving the end-user)\n  before retrying the request.\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "trait_expandable_expand": {
        "name": "expand",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_query_where": {
        "name": "where",
        "in": "query",
        "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_sortable_sort": {
        "name": "sort",
        "in": "query",
        "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_paging_limit": {
        "name": "limit",
        "in": "query",
        "description": "Number of results returned",
        "schema": {
          "type": "number"
        }
      },
      "trait_paging_offset": {
        "name": "offset",
        "in": "query",
        "description": "Number of results skipped",
        "schema": {
          "type": "number"
        }
      },
      "trait_paging_withTotal": {
        "name": "withTotal",
        "in": "query",
        "description": "Calculate total number of results",
        "schema": {
          "type": "boolean"
        }
      },
      "trait_versioned_version": {
        "name": "version",
        "in": "query",
        "required": true,
        "description": "Last seen version of the resource",
        "schema": {
          "type": "number"
        }
      },
      "trait_priceSelecting_priceCurrency": {
        "name": "priceCurrency",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_priceCountry": {
        "name": "priceCountry",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_priceCustomerGroup": {
        "name": "priceCustomerGroup",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_priceChannel": {
        "name": "priceChannel",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_dataErasure_dataErasure": {
        "name": "dataErasure",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "oauth_2_0": {
        "description": "HTTP API authorization uses [OAuth2](http://tools.ietf.org/html/rfc6750){:target=\"_blank\"}.\n\nClients must obtain an access token from the auth service using one of\nthe authorization flows described below, before they are able to make authorized requests\nto other SPHERE.IO services. On successful completion of an authorization flow,\na client will be given an `access_token`, which they need to include in requests\nto authorized service endpoints via the HTTP `Authorization` header like this:\n",
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.sphere.io/oauth/token",
            "scopes": {
              "manage_project:{projectKey}": "",
              "manage_products:{projectKey}": "",
              "view_products:{projectKey}": "",
              "manage_orders:{projectKey}": "",
              "view_orders:{projectKey}": "",
              "manage_customers:{projectKey}": "",
              "view_customers:{projectKey}": "",
              "manage_payments:{projectKey}": "",
              "view_payments:{projectKey}": "",
              "manage_subscriptions:{projectKey}": "",
              "manage_extensions:{projectKey}": "",
              "manage_types:{projectKey}": "",
              "view_types:{projectKey}": "",
              "view_shopping_lists:{projectKey}": "",
              "manage_shopping_lists:{projectKey}": "",
              "manage_my_orders:{projectKey}": "",
              "manage_my_profile:{projectKey}": "",
              "view_project_settings:{projectKey}": ""
            }
          }
        }
      }
    },
    "links": {},
    "callbacks": {}
  }
}