{
  "openapi": "3.0.0",
  "info": {
    "title": "Commercetools",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.europe-west1.gcp.commercetools.com/"
    }
  ],
  "paths": {
    "/{projectKey}": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "version": 1,
                  "key": "test-project",
                  "name": "Some project name",
                  "countries": [
                    "DE",
                    "US"
                  ],
                  "currencies": [
                    "EUR"
                  ],
                  "languages": [
                    "en"
                  ],
                  "createdAt": "2013-11-01T15:14:34.325Z",
                  "trialUntil": "2013-11-01T15:14:34.325Z",
                  "messages": {
                    "enabled": false
                  },
                  "carts": {
                    "countryTaxRateFallbackEnabled": false
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          }
        },
        "description": "Update project",
        "operationId": "Update project settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The Endpoint is responding a limited set of information about settings and configuration of the project.\n",
        "operationId": "Get project settings",
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Project",
      "x-annotation-methodName": "withProjectKey"
    },
    "/{projectKey}/carts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query carts",
        "operationId": "Query carts",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creating a cart can fail with an InvalidOperation if the referenced shipping method in the\nCartDraft has a predicate which does not match the cart.\n",
        "operationId": "Create Cart",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currency": "EUR"
              },
              "schema": {
                "includePath": "resources/carts.raml",
                "$ref": "#/components/schemas/CartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Cart",
      "x-annotation-deleteable": "Cart",
      "x-annotation-createable": "CartDraft"
    },
    "/{projectKey}/carts/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Cart by ID",
        "operationId": "Update Cart by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CartUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n",
        "operationId": "Get Cart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Cart by ID",
        "operationId": "Delete Cart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/carts/replicate": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Replicate cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/carts.raml",
                "$ref": "#/components/schemas/ReplicaCartDraft"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/carts/customer-id={customerId}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Retrieves the active cart of the customer that has been modified most recently.\nIt does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.\n\nThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\nsend an Update request with the Recalculate update action instead.\n",
        "operationId": "Get Cart by customerId",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withCustomerId"
    },
    "/{projectKey}/cart-discounts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query cart-discounts",
        "operationId": "Query cart-discounts",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z",
                  "name": {
                    "en": "Summer Sale"
                  },
                  "value": {
                    "type": "relative",
                    "permyriad": 1000
                  },
                  "cartPredicate": "1=1",
                  "target": {
                    "type": "lineItems",
                    "predicate": "1=1"
                  },
                  "sortOrder": "0.1",
                  "isActive": true,
                  "requiresDiscountCode": false,
                  "references": [],
                  "stackingMode": "Stacking"
                },
                "schema": {
                  "$ref": "#/components/schemas/CartDiscount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create CartDiscount",
        "operationId": "Create CartDiscount",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": {
                  "en": "Summer Sale"
                },
                "value": {
                  "type": "relative",
                  "permyriad": 1000
                },
                "cartPredicate": "1=1",
                "target": {
                  "type": "lineItems",
                  "predicate": "1=1"
                },
                "sortOrder": "0.1",
                "isActive": true,
                "requiresDiscountCode": false
              },
              "schema": {
                "includePath": "resources/cart-discounts.raml",
                "$ref": "#/components/schemas/CartDiscountDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "CartDiscount",
      "x-annotation-deleteable": "CartDiscount",
      "x-annotation-createable": "CartDiscountDraft"
    },
    "/{projectKey}/cart-discounts/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update CartDiscount by key",
        "operationId": "Update CartDiscount by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "relative",
                      "permyriad": 1000
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CartDiscountUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CartDiscount by key",
        "operationId": "Get CartDiscount by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CartDiscount by key",
        "operationId": "Delete CartDiscount by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/cart-discounts/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update CartDiscount by ID",
        "operationId": "Update CartDiscount by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "relative",
                      "permyriad": 1000
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CartDiscountUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CartDiscount by ID",
        "operationId": "Get CartDiscount by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CartDiscount by ID",
        "operationId": "Delete CartDiscount by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_cart_discounts:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/categories": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query categories",
        "operationId": "Query categories",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": {
                    "en": "Hats"
                  },
                  "slug": {
                    "en": "hats"
                  },
                  "parent": {
                    "typeId": "category",
                    "id": "123456"
                  },
                  "ancestors": [],
                  "orderHint": "0.000013833188755841543727840",
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creating a category produces the CategoryCreated message.",
        "operationId": "Create Category",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": {
                  "en": "Top hat"
                },
                "slug": {
                  "en": "top-hat"
                },
                "orderHint": "0.1"
              },
              "schema": {
                "includePath": "resources/categories.raml",
                "$ref": "#/components/schemas/CategoryDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Category",
      "x-annotation-deleteable": "Category",
      "x-annotation-createable": "CategoryDraft"
    },
    "/{projectKey}/categories/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Category by key",
        "operationId": "Update Category by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Category by key",
        "operationId": "Get Category by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Category by key",
        "operationId": "Delete Category by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/categories/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Category by ID",
        "operationId": "Update Category by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Category by ID",
        "operationId": "Get Category by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_categories:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Category by ID",
        "operationId": "Delete Category by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_categories:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/channels": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query channels",
        "operationId": "Query channels",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "ac390383-370f-43f8-a534-db1604cb96a8",
                  "key": "commercetools",
                  "version": 1,
                  "roles": [
                    "InventorySupply"
                  ],
                  "createdAt": "2015-05-28T09:48:35.023Z",
                  "lastModifiedAt": "2015-05-28T09:48:35.023Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Channel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Channel",
        "operationId": "Create Channel",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "commercetools",
                "roles": [
                  "InventorySupply"
                ]
              },
              "schema": {
                "includePath": "resources/channels.raml",
                "$ref": "#/components/schemas/ChannelDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Channel",
      "x-annotation-deleteable": "Channel",
      "x-annotation-createable": "ChannelDraft"
    },
    "/{projectKey}/channels/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Channel by ID",
        "operationId": "Update Channel by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ChannelUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Channel by ID",
        "operationId": "Get Channel by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Channel by ID",
        "operationId": "Delete Channel by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/customers": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query customers",
        "operationId": "Query customers",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creates a customer. If an anonymous cart is passed in,\nthen the cart is assigned to the created customer and the version number of the Cart will increase.\nIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer.\n",
        "operationId": "Create Customer",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "email": "<random>@example.com",
                "firstName": "John",
                "lastName": "Doe",
                "password": "secret123"
              },
              "schema": {
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Customer",
      "x-annotation-deleteable": "Customer",
      "x-annotation-createable": "CustomerDraft"
    },
    "/{projectKey}/customers/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Customer by key",
        "operationId": "Update Customer by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by key",
        "operationId": "Get Customer by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Customer by key",
        "operationId": "Delete Customer by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/customers/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Customer by ID",
        "operationId": "Update Customer by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by ID",
        "operationId": "Get Customer by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Customer by ID",
        "operationId": "Delete Customer by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/customers/password-token={passwordToken}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by passwordToken",
        "operationId": "Get customer by password verification token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "passwordToken",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withPasswordToken"
    },
    "/{projectKey}/customers/email-token={emailToken}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by emailToken",
        "operationId": "Get customer by email verification token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "emailToken",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withEmailToken"
    },
    "/{projectKey}/customers/email-token": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create a Token for verifying the Customer's Email",
        "operationId": "Create a Token for verifying the Customer's Email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerCreateEmailToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/customers/email/confirm": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Verifies customer's email using a token.",
        "operationId": "Verifies customer's email.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerEmailVerify"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/customers/password": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Change a customers password",
        "operationId": "Change a customers password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerChangePassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/customers/password/reset": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Set a new password using a token.",
        "operationId": "Reset Customer's Password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerResetPassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/customers/password-token": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerToken"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.\n",
        "operationId": "Create a Token for Resetting the Customer's Password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/customers.raml",
                "$ref": "#/components/schemas/CustomerCreatePasswordResetToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/customer-groups": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query customer-groups",
        "operationId": "Query customer-groups",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "aef9cf41-94ad-4794-8122-62d308900430",
                  "version": 2,
                  "name": "Webshop user",
                  "createdAt": "2017-01-10T06:51:25.896Z",
                  "lastModifiedAt": "2017-01-10T06:51:25.946Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create CustomerGroup",
        "operationId": "Create CustomerGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "groupName": "Webshop user"
              },
              "schema": {
                "includePath": "resources/customer-groups.raml",
                "$ref": "#/components/schemas/CustomerGroupDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "CustomerGroup",
      "x-annotation-deleteable": "CustomerGroup",
      "x-annotation-createable": "CustomerGroupDraft"
    },
    "/{projectKey}/customer-groups/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Updates a customer group by Key.",
        "operationId": "Update CustomerGroup by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerGroupUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Gets a customer group by Key.",
        "operationId": "Get CustomerGroup by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CustomerGroup by key",
        "operationId": "Delete CustomerGroup by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/customer-groups/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update CustomerGroup by ID",
        "operationId": "Update CustomerGroup by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerGroupUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CustomerGroup by ID",
        "operationId": "Get CustomerGroup by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CustomerGroup by ID",
        "operationId": "Delete CustomerGroup by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customer_groups:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/discount-codes": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query discount-codes",
        "operationId": "Query discount-codes",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "3b3327a4-06c2-4129-8d87-83d5ce53e038",
                  "version": 2,
                  "code": "SAVE10",
                  "name": {
                    "en": "Save10"
                  },
                  "cartDiscounts": [
                    {
                      "typeId": "cart-discount",
                      "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                    }
                  ],
                  "isActive": true,
                  "cartPredicate": "1=1",
                  "references": [],
                  "groups": [],
                  "createdAt": "2015-09-15T09:02:29.323Z",
                  "lastModifiedAt": "2015-09-15T09:04:06.910Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create DiscountCode",
        "operationId": "Create DiscountCode",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "code": "SAVE10",
                "name": {
                  "en": "Save10"
                },
                "cartDiscounts": [
                  {
                    "typeId": "cart-discount",
                    "id": "fdbaf4ea-fbc9-4fea-bac4-1d7e6c1995b3"
                  }
                ],
                "isActive": true,
                "cartPredicate": "1=1"
              },
              "schema": {
                "includePath": "resources/discount-codes.raml",
                "$ref": "#/components/schemas/DiscountCodeDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "DiscountCode",
      "x-annotation-deleteable": "DiscountCode",
      "x-annotation-createable": "DiscountCodeDraft"
    },
    "/{projectKey}/discount-codes/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update DiscountCode by ID",
        "operationId": "Update DiscountCode by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/DiscountCodeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get DiscountCode by ID",
        "operationId": "Get DiscountCode by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete DiscountCode by ID",
        "operationId": "Delete DiscountCode by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/inventory": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query inventory",
        "operationId": "Query inventory",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "aea4caed-accf-4667-adfe-be08ba6fdf91",
                  "version": 1,
                  "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                  "quantityOnStock": 4,
                  "availableQuantity": 4,
                  "createdAt": "2015-03-11T13:36:20.720Z",
                  "lastModifiedAt": "2015-03-11T13:36:20.720Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create InventoryEntry",
        "operationId": "Create InventoryEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1421832124541",
                "quantityOnStock": 4,
                "availableQuantity": 4
              },
              "schema": {
                "includePath": "resources/inventory.raml",
                "$ref": "#/components/schemas/InventoryEntryDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "InventoryEntry",
      "x-annotation-deleteable": "InventoryEntry",
      "x-annotation-createable": "InventoryEntryDraft"
    },
    "/{projectKey}/inventory/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update InventoryEntry by ID",
        "operationId": "Update InventoryEntry by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addQuantity",
                    "quantity": 4
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/InventoryEntryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get InventoryEntry by ID",
        "operationId": "Get InventoryEntry by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete InventoryEntry by ID",
        "operationId": "Delete InventoryEntry by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/orders": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query orders",
        "operationId": "Query orders",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creates an order from a Cart.\nThe cart must have a shipping address set before creating an order.\nWhen using the Platform TaxMode, the shipping address is used for tax calculation.\n",
        "operationId": "Create Order",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "schema": {
                "includePath": "resources/orders.raml",
                "$ref": "#/components/schemas/OrderFromCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Order",
      "x-annotation-deleteable": "Order",
      "x-annotation-createable": "OrderFromCartDraft"
    },
    "/{projectKey}/orders/order-number={orderNumber}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Order by orderNumber",
        "operationId": "Update Order by orderNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "In case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\nit should be provided in URL-encoded format.\n",
        "operationId": "Get Order by orderNumber",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Order by orderNumber",
        "operationId": "Delete Order by orderNumber",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "orderNumber",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withOrderNumber"
    },
    "/{projectKey}/orders/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Order by ID",
        "operationId": "Update Order by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Order by ID",
        "operationId": "Get Order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Order by ID",
        "operationId": "Delete Order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/orders/edits": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query edits",
        "operationId": "Query edits",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "df20c5ea-b114-4aab-b330-740b0e9f3099",
                  "version": 1,
                  "resource": {
                    "typeId": "order",
                    "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                  },
                  "key": "order-edit-key",
                  "createdAt": "2018-10-04T15:22:31.639Z",
                  "lastModifiedAt": "2018-10-04T15:22:31.639Z",
                  "stagedActions": [
                    {
                      "action": "setCustomerEmail",
                      "email": "user@localhost"
                    }
                  ],
                  "result": {
                    "preview": {
                      "type": "Order",
                      "id": "ed454f4e-c43a-485f-a86f-046c691b1363",
                      "version": 3,
                      "customerId": "bf5d96ce-4704-45b2-8842-d409dd34cdfc",
                      "customerEmail": "user@localhost",
                      "createdAt": "2018-05-15T12:40:17.301Z",
                      "lastModifiedAt": "2018-05-15T12:40:17.301Z",
                      "totalPrice": {
                        "type": "centPrecision",
                        "currencyCode": "EUR",
                        "centAmount": 3970,
                        "fractionDigits": 2
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3336,
                          "fractionDigits": 2
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 3970,
                          "fractionDigits": 2
                        },
                        "taxPortions": [
                          {
                            "rate": 0.19,
                            "amount": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 634,
                              "fractionDigits": 2
                            },
                            "name": "19% MwSt"
                          }
                        ]
                      },
                      "country": "DE",
                      "orderState": "Open",
                      "syncInfo": [],
                      "returnInfo": [],
                      "refusedGifts": [],
                      "shippingInfo": {
                        "shippingMethodName": "DHL",
                        "price": {
                          "type": "centPrecision",
                          "currencyCode": "EUR",
                          "centAmount": 570,
                          "fractionDigits": 2
                        },
                        "shippingRate": {
                          "price": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          },
                          "tiers": []
                        },
                        "taxRate": {
                          "name": "19% MwSt",
                          "amount": 0.19,
                          "includedInPrice": true,
                          "country": "DE",
                          "id": "rrsT1Jbw",
                          "subRates": []
                        },
                        "taxCategory": {
                          "typeId": "tax-category",
                          "id": "fdeb9625-10f8-476c-a549-5d5c6d1bd412"
                        },
                        "deliveries": [],
                        "shippingMethod": {
                          "typeId": "shipping-method",
                          "id": "d18b3f77-92de-4893-b6e3-b5c9c8c1eb96"
                        },
                        "taxedPrice": {
                          "totalNet": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 479,
                            "fractionDigits": 2
                          },
                          "totalGross": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 570,
                            "fractionDigits": 2
                          }
                        },
                        "shippingMethodState": "MatchesCart"
                      },
                      "taxMode": "Platform",
                      "inventoryMode": "None",
                      "taxRoundingMode": "HalfEven",
                      "taxCalculationMode": "LineItemLevel",
                      "origin": "Customer",
                      "lineItems": [
                        {
                          "id": "31099128-dba8-40a7-bb6c-d12857149ff8",
                          "productId": "d6d0c517-572e-4d26-b80e-ffce825334a4",
                          "name": {
                            "en": "GIRLS HARTBREAK CREW"
                          },
                          "productType": {
                            "typeId": "product-type",
                            "id": "6dc75271-b0e5-4ae9-9158-faa1fff65f7b",
                            "version": 2
                          },
                          "productSlug": {
                            "en": "girls-hartbreak-crew1522841378290"
                          },
                          "variant": {
                            "id": 1,
                            "sku": "sku_GIRLS_HARTBREAK_CREW_variant1_1522841378290",
                            "prices": [
                              {
                                "value": {
                                  "type": "centPrecision",
                                  "currencyCode": "EUR",
                                  "centAmount": 3400,
                                  "fractionDigits": 2
                                },
                                "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                              }
                            ],
                            "images": [
                              {
                                "url": "https://www.commercetools.com/cli/data/253234387_1.jpg",
                                "dimensions": {
                                  "w": 1400,
                                  "h": 1400
                                }
                              }
                            ],
                            "attributes": [],
                            "assets": []
                          },
                          "price": {
                            "value": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            },
                            "id": "b5595b13-bbb8-44ab-a2e2-89c18edf1b22"
                          },
                          "quantity": 1,
                          "discountedPricePerQuantity": [],
                          "taxRate": {
                            "name": "19% MwSt",
                            "amount": 0.19,
                            "includedInPrice": true,
                            "country": "DE",
                            "id": "rrsT1Jbw",
                            "subRates": []
                          },
                          "state": [
                            {
                              "quantity": 1,
                              "state": {
                                "typeId": "state",
                                "id": "60a64e06-b4e8-4205-a0f3-94bc203e2d6d"
                              }
                            }
                          ],
                          "priceMode": "Platform",
                          "totalPrice": {
                            "type": "centPrecision",
                            "currencyCode": "EUR",
                            "centAmount": 3400,
                            "fractionDigits": 2
                          },
                          "taxedPrice": {
                            "totalNet": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 2857,
                              "fractionDigits": 2
                            },
                            "totalGross": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3400,
                              "fractionDigits": 2
                            }
                          },
                          "lineItemMode": "Standard"
                        }
                      ],
                      "customLineItems": [],
                      "transactionFee": true,
                      "discountCodes": [],
                      "lastMessageSequenceNumber": 3,
                      "cart": {
                        "typeId": "cart",
                        "id": "6c97e772-9769-4419-8adc-501c7c5b6088"
                      },
                      "shippingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "billingAddress": {
                        "id": "51RkSh-E",
                        "salutation": "Mr",
                        "firstName": "user",
                        "lastName": "lastname",
                        "streetName": "streetname",
                        "streetNumber": "2",
                        "postalCode": "101256",
                        "city": "Berlin",
                        "country": "DE",
                        "building": "34",
                        "pOBox": "12344",
                        "email": "user@example.org"
                      },
                      "itemShippingAddresses": []
                    },
                    "messagePayloads": [
                      {
                        "email": "user@localhost",
                        "type": "OrderCustomerEmailSet"
                      },
                      {
                        "edit": {
                          "typeId": "order-edit",
                          "id": "df20c5ea-b114-4aab-b330-740b0e9f3099"
                        },
                        "result": {
                          "type": "Applied",
                          "appliedAt": "2018-10-04T15:29:14.091Z",
                          "excerptBeforeEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 1
                          },
                          "excerptAfterEdit": {
                            "totalPrice": {
                              "type": "centPrecision",
                              "currencyCode": "EUR",
                              "centAmount": 3970,
                              "fractionDigits": 2
                            },
                            "taxedPrice": {
                              "totalNet": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3336,
                                "fractionDigits": 2
                              },
                              "totalGross": {
                                "type": "centPrecision",
                                "currencyCode": "EUR",
                                "centAmount": 3970,
                                "fractionDigits": 2
                              },
                              "taxPortions": [
                                {
                                  "rate": 0.19,
                                  "amount": {
                                    "type": "centPrecision",
                                    "currencyCode": "EUR",
                                    "centAmount": 634,
                                    "fractionDigits": 2
                                  },
                                  "name": "19% MwSt"
                                }
                              ]
                            },
                            "version": 3
                          }
                        },
                        "type": "OrderEditApplied"
                      }
                    ],
                    "type": "PreviewSuccess"
                  },
                  "comment": "sample-comment"
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderEdit"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create OrderEdit",
        "operationId": "Create OrderEdit",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "order-edit-key",
                "resource": {
                  "typeId": "order",
                  "id": "ed454f4e-c43a-485f-a86f-046c691b1363"
                },
                "stagedActions": [
                  {
                    "action": "setCustomerEmail",
                    "email": "user@localhost"
                  }
                ],
                "comment": "sample-comment"
              },
              "schema": {
                "includePath": "resources/orders.raml",
                "$ref": "#/components/schemas/OrderEditDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "OrderEdit",
      "x-annotation-deleteable": "OrderEdit",
      "x-annotation-createable": "OrderEditDraft"
    },
    "/{projectKey}/orders/edits/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update OrderEdit by key",
        "operationId": "Update OrderEdit by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 7,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "another-key"
                  },
                  {
                    "action": "addStagedAction",
                    "stagedAction": {
                      "action": "setCountry",
                      "country": "ES"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderEditUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get OrderEdit by key",
        "operationId": "Get OrderEdit by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete OrderEdit by key",
        "operationId": "Delete OrderEdit by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/orders/edits/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update OrderEdit by ID",
        "operationId": "Update OrderEdit by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 7,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "another-key"
                  },
                  {
                    "action": "addStagedAction",
                    "stagedAction": {
                      "action": "setCountry",
                      "country": "ES"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderEditUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get OrderEdit by ID",
        "operationId": "Get OrderEdit by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete OrderEdit by ID",
        "operationId": "Delete OrderEdit by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/orders/edits/{ID}/apply": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Apply order edit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/orders.raml",
                "$ref": "#/components/schemas/OrderEditApply"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_order_edits:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/orders/import": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create an Order by Import",
        "operationId": "Create an Order by Import",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "orderNumber": "100000001",
                "totalPrice": {
                  "centAmount": 1000,
                  "currencyCode": "EUR"
                }
              },
              "schema": {
                "includePath": "resources/orders.raml",
                "$ref": "#/components/schemas/OrderImportDraft"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "importOrder"
    },
    "/{projectKey}/products": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "You can use the query endpoint to get the full representations of products.\nREMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,\nthe query API lacks like sorting on custom attributes, etc.\n",
        "operationId": "Query products",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "To create a new product, send a representation that is going to become the initial staged representation\nof the new product in the master catalog. If price selection query parameters are provided,\nthe selected prices will be added to the response.\n",
        "operationId": "Create Product",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "productType": {
                  "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                  "typeId": "product-type"
                },
                "categories": [
                  {
                    "typeId": "category",
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919"
                  }
                ],
                "name": {
                  "en": "Some Product"
                },
                "slug": {
                  "en": "product_slug_<random-uuid>"
                },
                "masterVariant": {
                  "sku": "SKU-1",
                  "prices": [
                    {
                      "value": {
                        "currencyCode": "EUR",
                        "centAmount": 4200
                      }
                    }
                  ],
                  "images": [
                    {
                      "url": "http://my.custom.cdn.net/master.png",
                      "label": "Master Image",
                      "dimensions": {
                        "w": 303,
                        "h": 197
                      }
                    }
                  ]
                },
                "variants": [
                  {
                    "images": [
                      {
                        "url": "http://my.custom.cdn.net/variant.png",
                        "label": "Variant Image",
                        "dimensions": {
                          "w": 303,
                          "h": 197
                        }
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "includePath": "resources/products.raml",
                "$ref": "#/components/schemas/ProductDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Product",
      "x-annotation-deleteable": "Product",
      "x-annotation-createable": "ProductDraft"
    },
    "/{projectKey}/products/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Product by key",
        "operationId": "Update Product by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 2,
                "actions": [
                  {
                    "action": "setDescription",
                    "description": {
                      "en": "The best product ever!"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Gets the full representation of a product by Key.",
        "operationId": "Get Product by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Product by key",
        "operationId": "Delete Product by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/products/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Product by ID",
        "operationId": "Update Product by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 2,
                "actions": [
                  {
                    "action": "setDescription",
                    "description": {
                      "en": "The best product ever!"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Gets the full representation of a product by ID.",
        "operationId": "Get Product by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Product by ID",
        "operationId": "Delete Product by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/products/{ID}/images": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "e7ba4c75-b1bb-483d-94d8-2c4a10f78472",
                  "version": 2,
                  "masterData": {
                    "current": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    },
                    "hasStagedChanges": false,
                    "published": true,
                    "staged": {
                      "categories": [
                        {
                          "id": "cf6d790a-f027-4f46-9a2b-4bc9a31066fb",
                          "typeId": "category"
                        }
                      ],
                      "description": {
                        "en": "Sample description"
                      },
                      "masterVariant": {
                        "attributes": [],
                        "id": 1,
                        "images": [
                          {
                            "dimensions": {
                              "h": 1400,
                              "w": 1400
                            },
                            "url": "https://commercetools.com/cli/data/253245821_1.jpg"
                          }
                        ],
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "centAmount": 10000,
                              "currencyCode": "EUR"
                            },
                            "id": "753472a3-ddff-4e0f-a93b-2eb29c90ba54"
                          }
                        ],
                        "sku": "sku_MB_PREMIUM_TECH_T_variant1_1369226795424"
                      },
                      "name": {
                        "en": "MB PREMIUM TECH T"
                      },
                      "slug": {
                        "en": "mb-premium-tech-t1369226795424"
                      },
                      "variants": [],
                      "searchKeywords": {}
                    }
                  },
                  "productType": {
                    "id": "24f510c3-f334-4099-94e2-d6224a8eb919",
                    "typeId": "product-type"
                  },
                  "taxCategory": {
                    "id": "f1e10e3a-45eb-49d8-ad0b-fdf984202f59",
                    "typeId": "tax-category"
                  },
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "description": "Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.\n",
        "operationId": "Upload a product image",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/products.raml",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "enum": [
                "image/jpeg",
                "image/png",
                "image/gif"
              ],
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "staged",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/payments": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query payments",
        "operationId": "Query payments",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "externalId": "123456",
                  "interfaceId": "789011",
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "paymentStatus": {},
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ],
                  "interfaceInteractions": [],
                  "createdAt": "2015-10-20T08:54:11.480Z",
                  "lastModifiedAt": "2015-10-20T08:54:11.480Z",
                  "lastMessageSequenceNumber": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "To create a payment object a payment draft object has to be given with the request.",
        "operationId": "Create Payment",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "externalId": "123456",
                "interfaceId": "789011",
                "amountPlanned": {
                  "currencyCode": "USD",
                  "centAmount": 1000
                },
                "paymentMethodInfo": {
                  "paymentInterface": "STRIPE",
                  "method": "CREDIT_CARD",
                  "name": {
                    "en": "Credit Card"
                  }
                },
                "transactions": [
                  {
                    "timestamp": "2015-10-20T08:54:24.000Z",
                    "type": "Charge",
                    "amount": {
                      "currencyCode": "USD",
                      "centAmount": 1000
                    },
                    "state": "Pending"
                  }
                ]
              },
              "schema": {
                "includePath": "resources/payments.raml",
                "$ref": "#/components/schemas/PaymentDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Payment",
      "x-annotation-deleteable": "Payment",
      "x-annotation-createable": "PaymentDraft"
    },
    "/{projectKey}/payments/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Payment by key",
        "operationId": "Update Payment by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setInterfaceId",
                    "interfaceId": "12334567890123456"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Payment by key",
        "operationId": "Get Payment by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Payment by key",
        "operationId": "Delete Payment by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/payments/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Payment by ID",
        "operationId": "Update Payment by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setInterfaceId",
                    "interfaceId": "12334567890123456"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Payment by ID",
        "operationId": "Get Payment by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Payment by ID",
        "operationId": "Delete Payment by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-discounts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query product-discounts",
        "operationId": "Query product-discounts",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "d7a204f9-7746-4857-b17e-71f1235a691a",
                  "version": 2,
                  "value": {
                    "type": "absolute",
                    "money": [
                      {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 100
                      }
                    ],
                    "id": "3544d4a3-1279-443c-8699-4220753bf6f5"
                  },
                  "predicate": "1=1",
                  "name": {
                    "en": "test-discount1"
                  },
                  "description": {
                    "en": "test-discount1"
                  },
                  "isActive": false,
                  "sortOrder": "0.9534",
                  "references": [],
                  "createdAt": "2016-02-24T09:44:57.858Z",
                  "lastModifiedAt": "2016-02-24T09:44:57.939Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductDiscount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ProductDiscount",
        "operationId": "Create ProductDiscount",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "value": {
                  "type": "absolute",
                  "money": [
                    {
                      "currencyCode": "EUR",
                      "centAmount": 100
                    }
                  ]
                },
                "predicate": "1=1",
                "name": {
                  "en": "test-discount1"
                },
                "description": {
                  "en": "test-discount1"
                },
                "isActive": false,
                "sortOrder": "0.9534"
              },
              "schema": {
                "includePath": "resources/product-discounts.raml",
                "$ref": "#/components/schemas/ProductDiscountDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "ProductDiscount",
      "x-annotation-deleteable": "ProductDiscount",
      "x-annotation-createable": "ProductDiscountDraft"
    },
    "/{projectKey}/product-discounts/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ProductDiscount by key",
        "operationId": "Update ProductDiscount by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "absolute",
                      "money": [
                        {
                          "currencyCode": "EUR",
                          "centAmount": 100
                        }
                      ]
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductDiscountUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductDiscount by key",
        "operationId": "Get ProductDiscount by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ProductDiscount by key",
        "operationId": "Delete ProductDiscount by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/product-discounts/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ProductDiscount by ID",
        "operationId": "Update ProductDiscount by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeValue",
                    "value": {
                      "type": "absolute",
                      "money": [
                        {
                          "currencyCode": "EUR",
                          "centAmount": 100
                        }
                      ]
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductDiscountUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductDiscount by ID",
        "operationId": "Get ProductDiscount by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ProductDiscount by ID",
        "operationId": "Delete ProductDiscount by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-discounts/matching": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get matching product discounts",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "productId": "123456",
                "variantId": 1,
                "staged": false,
                "price": {
                  "value": {
                    "type": "centPrecision",
                    "centAmount": 100,
                    "currencyCode": "EUR",
                    "fractionDigits": 2
                  },
                  "id": "2474c2c3-d424-49af-b90a-b71bc74cf51b"
                }
              },
              "schema": {
                "includePath": "resources/product-discounts.raml",
                "$ref": "#/components/schemas/ProductDiscountMatchQuery"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/product-types": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query product-types",
        "operationId": "Query product-types",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2f93298-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "name": "test_product_type",
                  "description": "Test product type.",
                  "attributes": [
                    {
                      "type": {
                        "name": "text"
                      },
                      "isSearchable": false,
                      "inputHint": "SingleLine",
                      "name": "size",
                      "label": {
                        "en": "The right size is important."
                      },
                      "isRequired": false,
                      "attributeConstraint": "CombinationUnique"
                    }
                  ],
                  "createdAt": "1970-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1970-01-01T00:00:00.001Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ProductType",
        "operationId": "Create ProductType",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "test_product_type",
                "description": "Test product type.",
                "attributes": [
                  {
                    "type": {
                      "name": "text"
                    },
                    "isSearchable": false,
                    "inputHint": "SingleLine",
                    "name": "size",
                    "label": {
                      "en": "The right size is important."
                    },
                    "isRequired": false,
                    "attributeConstraint": "CombinationUnique"
                  }
                ]
              },
              "schema": {
                "includePath": "resources/product-types.raml",
                "$ref": "#/components/schemas/ProductTypeDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "ProductType",
      "x-annotation-deleteable": "ProductType",
      "x-annotation-createable": "ProductTypeDraft"
    },
    "/{projectKey}/product-types/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ProductType by key",
        "operationId": "Update ProductType by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "new-product-type-name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductTypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductType by key",
        "operationId": "Get ProductType by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ProductType by key",
        "operationId": "Delete ProductType by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/product-types/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ProductType by ID",
        "operationId": "Update ProductType by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "new-product-type-name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ProductTypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ProductType by ID",
        "operationId": "Get ProductType by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ProductType by ID",
        "operationId": "Delete ProductType by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/shipping-methods": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query shipping-methods",
        "operationId": "Query shipping-methods",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "eb8991df-2dcd-4e24-83fe-5df46ec04422",
                  "version": 3,
                  "name": "DHL",
                  "description": "Standard delivery",
                  "taxCategory": {
                    "typeId": "tax-category",
                    "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                  },
                  "zoneRates": [
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "EUR",
                            "centAmount": 570
                          },
                          "tiers": []
                        }
                      ]
                    },
                    {
                      "zone": {
                        "typeId": "zone",
                        "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                      },
                      "shippingRates": [
                        {
                          "price": {
                            "type": "centPrecision",
                            "fractionDigits": 2,
                            "currencyCode": "USD",
                            "centAmount": 990
                          },
                          "tiers": []
                        }
                      ]
                    }
                  ],
                  "isDefault": false,
                  "createdAt": "2015-01-21T09:22:04.320Z",
                  "lastModifiedAt": "2016-02-24T13:36:56.748Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ShippingMethod",
        "operationId": "Create ShippingMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "DHL",
                "description": "Standard delivery",
                "taxCategory": {
                  "typeId": "tax-category",
                  "id": "5a21f15b-34f8-4b7f-9407-d1eb82a73eba"
                },
                "zoneRates": [
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "5cb532be-c680-43ab-ba14-b664bb03dc35"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "currencyCode": "EUR",
                          "centAmount": 570
                        }
                      }
                    ]
                  },
                  {
                    "zone": {
                      "typeId": "zone",
                      "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b"
                    },
                    "shippingRates": [
                      {
                        "price": {
                          "currencyCode": "USD",
                          "centAmount": 990
                        }
                      }
                    ]
                  }
                ],
                "isDefault": false
              },
              "schema": {
                "includePath": "resources/shipping-methods.raml",
                "$ref": "#/components/schemas/ShippingMethodDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "ShippingMethod",
      "x-annotation-deleteable": "ShippingMethod",
      "x-annotation-createable": "ShippingMethodDraft"
    },
    "/{projectKey}/shipping-methods/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ShippingMethod by key",
        "operationId": "Update ShippingMethod by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ShippingMethod by key",
        "operationId": "Get ShippingMethod by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShippingMethod by key",
        "operationId": "Delete ShippingMethod by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/shipping-methods/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ShippingMethod by ID",
        "operationId": "Update ShippingMethod by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ShippingMethod by ID",
        "operationId": "Get ShippingMethod by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShippingMethod by ID",
        "operationId": "Delete ShippingMethod by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/shipping-methods/matching-cart": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get ShippingMethods for a cart",
        "parameters": [
          {
            "name": "cartId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/shipping-methods/matching-orderedit": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get ShippingMethods for an order edit",
        "parameters": [
          {
            "name": "orderEditId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/shipping-methods/matching-location": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get ShippingMethods for a location",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/reviews": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query reviews",
        "operationId": "Query reviews",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "919d5ab5-bf99-4bda-a6fd-ab3ee8123456",
                  "version": 1,
                  "includedInStatistics": true,
                  "authorName": "John Doe",
                  "title": "Incredible",
                  "text": "Best product ever",
                  "rating": 5,
                  "target": {
                    "typeId": "product",
                    "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                  },
                  "customer": {
                    "typeId": "customer",
                    "id": "8a8b3e43-b9b0-4b30-8c27-58148123456"
                  },
                  "custom": {
                    "type": {
                      "typeId": "type",
                      "id": "3939dd9c-0884-4bfa-99c2-40b426123456"
                    },
                    "fields": {
                      "authorMail": "john.doe@example.com"
                    }
                  },
                  "createdAt": "2016-10-20T06:48:53.829Z",
                  "lastModifiedAt": "2016-10-20T06:48:53.829Z",
                  "lastMessageSequenceNumber": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Review",
        "operationId": "Create Review",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "authorName": "John Doe",
                "title": "Incredible",
                "text": "Best product ever",
                "rating": 5,
                "target": {
                  "typeId": "product",
                  "id": "8fddacac-6ef5-4e66-af6e-124452123456"
                }
              },
              "schema": {
                "includePath": "resources/reviews.raml",
                "$ref": "#/components/schemas/ReviewDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Review",
      "x-annotation-deleteable": "Review",
      "x-annotation-createable": "ReviewDraft"
    },
    "/{projectKey}/reviews/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Review by key",
        "operationId": "Update Review by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setAuthorName",
                    "authorName": "John Doe"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ReviewUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Review by key",
        "operationId": "Get Review by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Review by key",
        "operationId": "Delete Review by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/reviews/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Review by ID",
        "operationId": "Update Review by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setAuthorName",
                    "authorName": "John Doe"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ReviewUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Review by ID",
        "operationId": "Get Review by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Review by ID",
        "operationId": "Delete Review by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/shopping-lists": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query shopping-lists",
        "operationId": "Query shopping-lists",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/ShoppingList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ShoppingList",
        "operationId": "Create ShoppingList",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": {
                  "en": "test"
                },
                "key": "test"
              },
              "schema": {
                "includePath": "resources/shopping-lists.raml",
                "$ref": "#/components/schemas/ShoppingListDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "ShoppingList",
      "x-annotation-deleteable": "ShoppingList",
      "x-annotation-createable": "ShoppingListDraft"
    },
    "/{projectKey}/shopping-lists/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update a shopping list found by its Key.",
        "operationId": "Update ShoppingList by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShoppingListUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Gets a shopping list by Key.",
        "operationId": "Get ShoppingList by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShoppingList by key",
        "operationId": "Delete ShoppingList by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/shopping-lists/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update ShoppingList by ID",
        "operationId": "Update ShoppingList by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ShoppingListUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Gets a shopping list by ID.",
        "operationId": "Get ShoppingList by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ShoppingList by ID",
        "operationId": "Delete ShoppingList by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/states": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query states",
        "operationId": "Query states",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                  "version": 1,
                  "key": "Initial",
                  "type": "LineItemState",
                  "roles": [],
                  "name": {
                    "en": "Initial"
                  },
                  "description": {
                    "en": "Initial is the first that (custom) line item gets after it's creation"
                  },
                  "builtIn": true,
                  "initial": true,
                  "createdAt": "2015-01-21T09:22:03.906Z",
                  "lastModifiedAt": "2015-01-21T09:22:03.906Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create State",
        "operationId": "Create State",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "test-state",
                "type": "ProductState",
                "roles": [],
                "initial": true
              },
              "schema": {
                "includePath": "resources/states.raml",
                "$ref": "#/components/schemas/StateDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "State",
      "x-annotation-deleteable": "State",
      "x-annotation-createable": "StateDraft"
    },
    "/{projectKey}/states/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update State by ID",
        "operationId": "Update State by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/StateUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get State by ID",
        "operationId": "Get State by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete State by ID",
        "operationId": "Delete State by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/subscriptions": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query subscriptions",
        "operationId": "Query subscriptions",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "destination": {
                    "type": "IronMQ",
                    "uri": "https://queue-uri"
                  },
                  "messages": [
                    {
                      "resourceTypeId": "product",
                      "types": []
                    }
                  ],
                  "changes": [],
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "key": "test-queue",
                  "format": {
                    "type": "Platform"
                  },
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "lastMessageSequenceNumber": 0,
                  "status": "Healthy"
                },
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.\nIn order to test that the destination is correctly configured, a test message will be put into the queue.\nIf the message could not be delivered, the subscription will not be created.\nThe payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.\nCurrently, a maximum of 25 subscriptions can be created per project.\n",
        "operationId": "Create Subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "destination": {
                  "type": "IronMQ",
                  "uri": "https://queue-uri"
                },
                "messages": [
                  {
                    "resourceTypeId": "product",
                    "types": []
                  }
                ],
                "key": "test-queue"
              },
              "schema": {
                "includePath": "resources/subscriptions.raml",
                "$ref": "#/components/schemas/SubscriptionDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Subscription",
      "x-annotation-deleteable": "Subscription",
      "x-annotation-createable": "SubscriptionDraft"
    },
    "/{projectKey}/subscriptions/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Subscription by key",
        "operationId": "Update Subscription by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "queue-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Retrieves the representation of a subscription by its key.",
        "operationId": "Get Subscription by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Subscription by key",
        "operationId": "Delete Subscription by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/subscriptions/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Subscription by ID",
        "operationId": "Update Subscription by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "queue-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Retrieves the representation of a subscription by its id.",
        "operationId": "Get Subscription by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Subscription by ID",
        "operationId": "Delete Subscription by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_subscriptions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/tax-categories": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query tax-categories",
        "operationId": "Query tax-categories",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c60f7377-2643-4e99-adb5-b2909657444d",
                  "version": 1,
                  "name": "test-tax-category",
                  "rates": [
                    {
                      "name": "test-tax-category",
                      "amount": 0.2,
                      "includedInPrice": true,
                      "country": "DE",
                      "id": "vWTk7VjT",
                      "subRates": []
                    }
                  ],
                  "createdAt": "2016-02-24T15:33:40.811Z",
                  "lastModifiedAt": "2016-02-24T15:33:40.811Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create TaxCategory",
        "operationId": "Create TaxCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "test-tax-category",
                "rates": [
                  {
                    "name": "test-tax-category",
                    "amount": 0.2,
                    "includedInPrice": true,
                    "country": "DE"
                  }
                ]
              },
              "schema": {
                "includePath": "resources/tax-categories.raml",
                "$ref": "#/components/schemas/TaxCategoryDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "TaxCategory",
      "x-annotation-deleteable": "TaxCategory",
      "x-annotation-createable": "TaxCategoryDraft"
    },
    "/{projectKey}/tax-categories/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update TaxCategory by key",
        "operationId": "Update TaxCategory by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/TaxCategoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get TaxCategory by key",
        "operationId": "Get TaxCategory by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete TaxCategory by key",
        "operationId": "Delete TaxCategory by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/tax-categories/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update TaxCategory by ID",
        "operationId": "Update TaxCategory by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/TaxCategoryUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get TaxCategory by ID",
        "operationId": "Get TaxCategory by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete TaxCategory by ID",
        "operationId": "Delete TaxCategory by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_tax_categories:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/types": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query types",
        "operationId": "Query types",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "3ae9bcca-df23-443e-bd22-0c592f9694fa",
                  "version": 1,
                  "key": "lineitemtype",
                  "name": {
                    "en": "lineitem"
                  },
                  "description": {
                    "en": "description"
                  },
                  "resourceTypeIds": [
                    "line-item"
                  ],
                  "fieldDefinitions": [
                    {
                      "name": "offer_name",
                      "label": {
                        "en": "offer_name"
                      },
                      "required": false,
                      "type": {
                        "name": "String"
                      },
                      "inputHint": "SingleLine"
                    }
                  ],
                  "createdAt": "2015-10-07T06:56:19.217Z",
                  "lastModifiedAt": "2015-10-07T06:56:19.217Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Type"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Type",
        "operationId": "Create Type",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "lineitemtype",
                "name": {
                  "en": "lineitem"
                },
                "description": {
                  "en": "description"
                },
                "resourceTypeIds": [
                  "line-item"
                ],
                "fieldDefinitions": [
                  {
                    "name": "offer_name",
                    "label": {
                      "en": "offer_name"
                    },
                    "required": false,
                    "type": {
                      "name": "String"
                    },
                    "inputHint": "SingleLine"
                  }
                ]
              },
              "schema": {
                "includePath": "resources/types.raml",
                "$ref": "#/components/schemas/TypeDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Type",
      "x-annotation-deleteable": "Type",
      "x-annotation-createable": "TypeDraft"
    },
    "/{projectKey}/types/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Type by key",
        "operationId": "Update Type by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/TypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Type by key",
        "operationId": "Get Type by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Type by key",
        "operationId": "Delete Type by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/types/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Type by ID",
        "operationId": "Update Type by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/TypeUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Type by ID",
        "operationId": "Get Type by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_types:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Type by ID",
        "operationId": "Delete Type by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_types:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/zones": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query zones",
        "operationId": "Query zones",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "ebe01381-82be-4e63-9993-d1eb8f8e588b",
                  "version": 1,
                  "name": "US",
                  "key": "us-zone",
                  "locations": [
                    {
                      "country": "US"
                    }
                  ],
                  "createdAt": "2015-01-21T09:22:04.275Z",
                  "lastModifiedAt": "2015-01-21T09:22:04.275Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Zone",
        "operationId": "Create Zone",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "US",
                "locations": [
                  {
                    "country": "US"
                  }
                ]
              },
              "schema": {
                "includePath": "resources/zones.raml",
                "$ref": "#/components/schemas/ZoneDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Zone",
      "x-annotation-deleteable": "Zone",
      "x-annotation-createable": "ZoneDraft"
    },
    "/{projectKey}/zones/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Zone by key",
        "operationId": "Update Zone by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ZoneUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Zone by key",
        "operationId": "Get Zone by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Zone by key",
        "operationId": "Delete Zone by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/zones/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Zone by ID",
        "operationId": "Update Zone by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": "New Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ZoneUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Zone by ID",
        "operationId": "Get Zone by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Zone by ID",
        "operationId": "Delete Zone by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/extensions": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query extensions",
        "operationId": "Query extensions",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "8062243c-46fc-40b5-88a4-75e2216aef75",
                  "version": 1,
                  "createdAt": "2017-01-25T14:14:22.417Z",
                  "lastModifiedAt": "2017-01-25T14:14:22.417Z",
                  "destination": {
                    "type": "HTTP",
                    "url": "https://example.azurewebsites.net/api/extension",
                    "authentication": {
                      "type": "AzureFunctions",
                      "key": "some-azure-function-code"
                    }
                  },
                  "triggers": [
                    {
                      "resourceTypeId": "cart",
                      "actions": [
                        "Create",
                        "Update"
                      ]
                    }
                  ],
                  "key": "my-extension"
                },
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Currently, a maximum of 25 extensions can be created per project.",
        "operationId": "Create Extension",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "destination": {
                  "type": "HTTP",
                  "url": "https://example.azurewebsites.net/api/extension",
                  "authentication": {
                    "type": "AzureFunctions",
                    "key": "some-azure-function-code"
                  }
                },
                "triggers": [
                  {
                    "resourceTypeId": "cart",
                    "actions": [
                      "Create",
                      "Update"
                    ]
                  }
                ],
                "key": "my-extension"
              },
              "schema": {
                "includePath": "resources/extensions.raml",
                "$ref": "#/components/schemas/ExtensionDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Extension",
      "x-annotation-deleteable": "Extension",
      "x-annotation-createable": "ExtensionDraft"
    },
    "/{projectKey}/extensions/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Extension by key",
        "operationId": "Update Extension by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "my-new-extension-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ExtensionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Retrieves the representation of an extension by its key.",
        "operationId": "Get Extension by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Extension by key",
        "operationId": "Delete Extension by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/extensions/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Extension by ID",
        "operationId": "Update Extension by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setKey",
                    "key": "my-new-extension-key"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ExtensionUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Retrieves the representation of an extension by its id.",
        "operationId": "Get Extension by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Extension by ID",
        "operationId": "Delete Extension by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_extensions:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/stores": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query stores",
        "operationId": "Query stores",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_stores:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "c2f93299-c967-44af-8c2a-d2220bf39eb2",
                  "version": 1,
                  "key": "random-key-12314",
                  "name": {
                    "en": "big store"
                  },
                  "createdAt": "1971-01-01T00:00:00.001Z",
                  "lastModifiedAt": "1972-01-01T00:00:00.001Z",
                  "distributionChannels": []
                },
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Store",
        "operationId": "Create Store",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "key": "random-key-123",
                "name": {
                  "en": "main store"
                }
              },
              "schema": {
                "includePath": "resources/stores.raml",
                "$ref": "#/components/schemas/StoreDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Store",
      "x-annotation-deleteable": "Store",
      "x-annotation-createable": "StoreDraft"
    },
    "/{projectKey}/stores/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Store by key",
        "operationId": "Update Store by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/StoreUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Store by key",
        "operationId": "Get Store by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_stores:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Store by key",
        "operationId": "Delete Store by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/stores/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Store by ID",
        "operationId": "Update Store by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/StoreUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Store by ID",
        "operationId": "Get Store by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_stores:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Store by ID",
        "operationId": "Delete Store by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_stores:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/in-store/key={storeKey}/carts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Queries carts in a specific Store. The {storeKey} path parameter maps to a Store's key.",
        "operationId": "Query carts",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint the cart's store field is always set to the store specified in the path parameter.\nCreating a cart can fail with an InvalidOperation if the referenced shipping method\nin the CartDraft has a predicate which does not match the cart.\n",
        "operationId": "Create Cart",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currency": "EUR"
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Cart",
      "x-annotation-deleteable": "Cart",
      "x-annotation-createable": "CartDraft"
    },
    "/{projectKey}/in-store/key={storeKey}/carts/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n",
        "operationId": "Update Cart by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CartUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Returns a cart by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the cart exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nThe cart may not contain up-to-date prices, discounts etc.\nIf you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.\n",
        "operationId": "Get Cart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Cart by ID",
        "operationId": "Delete Cart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Retrieves the active cart of the customer that has been modified most recently in a specific Store.\nThe {storeKey} path parameter maps to a Store's key.\n\nIf the cart exists in the commercetools project but does not have the store field, or the store field\nreferences a different store, this method returns a ResourceNotFound error.\n\nThe cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,\nsend an Update request with the Recalculate update action instead.\n",
        "operationId": "Get Cart by customerId",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withCustomerId"
    },
    "/{projectKey}/in-store/key={storeKey}/orders": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Queries orders in a specific Store. The {storeKey} path parameter maps to a Store's key.",
        "operationId": "Query orders",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creates an order from a Cart from a specific Store. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint the orders's store field is always set to the store specified in the path parameter.\nThe cart must have a shipping address set before creating an order. When using the Platform TaxMode,\nthe shipping address is used for tax calculation.\n",
        "operationId": "Create Order",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/OrderFromCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "Order",
      "x-annotation-deleteable": "Order",
      "x-annotation-createable": "OrderFromCartDraft"
    },
    "/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nIn case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\nit should be provided in URL-encoded format.\n",
        "operationId": "Update Order by orderNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Returns an order by its order number from a specific Store.\nThe {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\nIn case the orderNumber does not match the regular expression [a-zA-Z0-9_\\-]+,\nit should be provided in URL-encoded format.\n",
        "operationId": "Get Order by orderNumber",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Order by orderNumber",
        "operationId": "Delete Order by orderNumber",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "orderNumber",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withOrderNumber"
    },
    "/{projectKey}/in-store/key={storeKey}/orders/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n",
        "operationId": "Update Order by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Returns an order by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIf the order exists in the commercetools project but does not have the store field,\nor the store field references a different store, this method returns a ResourceNotFound error.\n",
        "operationId": "Get Order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "view_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Order by ID",
        "operationId": "Delete Order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/in-store/key={storeKey}/me/carts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query carts",
        "operationId": "Query carts",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Cart",
        "operationId": "Create Cart",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currency": "EUR"
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/MyCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/me/carts/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Cart by ID",
        "operationId": "Get Cart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update Cart by ID",
        "operationId": "Update Cart by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Cart by ID",
        "operationId": "Delete Cart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/in-store/key={storeKey}/me/orders": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query orders",
        "operationId": "Query orders",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create Order",
        "operationId": "Create Order",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/MyOrderFromCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/me/orders/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Order by ID",
        "operationId": "Get Order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/in-store/key={storeKey}/me/active-cart": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get active cart",
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}",
              "manage_my_orders:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/customers": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query customers",
        "operationId": "Query customers",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creates a customer in a specific Store. The {storeKey} path parameter maps to a Store's key.\nWhen using this endpoint, if omitted,\nthe customer's stores field is set to the store specified in the path parameter.\nIf an anonymous cart is passed in as when using this method,\nthen the cart is assigned to the created customer and the version number of the Cart increases.\nIf the ID of an anonymous session is given, all carts and orders will be assigned to the created customer and\nthe store specified. If you pass in a cart with a store field specified,\nthe store field must reference the same store specified in the {storeKey} path parameter.\n",
        "operationId": "Create Customer",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "email": "<random>@example.com",
                "firstName": "John",
                "lastName": "Doe",
                "password": "secret123"
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CustomerDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by passwordToken",
        "operationId": "Get customer by password verification token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "passwordToken",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withPasswordToken"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Customer by emailToken",
        "operationId": "Get customer by email verification token",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "emailToken",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withEmailToken"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/email-token": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create a Token for verifying the Customer's Email",
        "operationId": "Create a Token for verifying the Customer's Email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CustomerCreateEmailToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/customers/email/confirm": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Verifies customer's email using a token.",
        "operationId": "Verify Customer's Email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CustomerEmailVerify"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Change a customers password",
        "operationId": "Change a customers password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CustomerChangePassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password/reset": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Set a new password using a token.",
        "operationId": "Reset Customer's Password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CustomerResetPassword"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/customers/password-token": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerToken"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The token value is used to reset the password of the customer with the given email. The token is\nvalid only for 10 minutes.\n",
        "operationId": "Create a Token for Resetting the Customer's Password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CustomerCreatePasswordResetToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/customers/key={key}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Returns a customer by its Key from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIt also considers customers that do not have the stores field.\nIf the customer exists in the commercetools project but the stores field references different stores,\nthis method returns a ResourceNotFound error.\n",
        "operationId": "Get Customer by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "If the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n",
        "operationId": "Update Customer by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Customer by key",
        "operationId": "Delete Customer by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/in-store/key={storeKey}/customers/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Returns a customer by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.\nIt also considers customers that do not have the stores field.\nIf the customer exists in the commercetools project but the stores field references different stores,\nthis method returns a ResourceNotFound error.\n",
        "operationId": "Get Customer by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_customers:{projectKey}",
              "view_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.\nIf the customer exists in the commercetools project but the stores field references a different store,\nthis method returns a ResourceNotFound error.\n",
        "operationId": "Update Customer by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete Customer by ID",
        "operationId": "Delete Customer by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/in-store/key={storeKey}/login": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Authenticate Customer (Sign In)",
        "operationId": "Authenticate Customer (Sign In)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/in-store.raml",
                "$ref": "#/components/schemas/CustomerSignin"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get ShippingMethods for a cart in a store",
        "parameters": [
          {
            "name": "cartId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}",
              "manage_customers:{projectKey}:{storeKey}",
              "view_shipping_methods:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "storeKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/in-store.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get customer",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create a customer",
        "operationId": "Create a customer",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 3,
                "actions": [
                  {
                    "action": "addAddress",
                    "address": {
                      "streetName": "Any Street",
                      "streetNumber": "1337",
                      "postalCode": "11111",
                      "city": "Any City",
                      "country": "US"
                    }
                  }
                ]
              },
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete a Customer",
        "operationId": "Delete a Customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/shopping-lists": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query shopping-lists",
        "operationId": "Query shopping-lists",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "9693f04b-5aec-467f-baa1-fc74da7d0c3d",
                  "version": 1,
                  "name": {
                    "en": "test"
                  },
                  "key": "test",
                  "lineItems": [],
                  "textLineItems": [],
                  "createdAt": "2017-03-30T11:49:40.904Z",
                  "lastModifiedAt": "2017-03-30T11:49:40.904Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/MyShoppingList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create MyShoppingList",
        "operationId": "Create MyShoppingList",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": {
                  "en": "test"
                }
              },
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/MyShoppingListDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "MyShoppingList",
      "x-annotation-deleteable": "MyShoppingList",
      "x-annotation-createable": "MyShoppingListDraft"
    },
    "/{projectKey}/me/shopping-lists/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update MyShoppingList by key",
        "operationId": "Update MyShoppingList by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/MyShoppingListUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get MyShoppingList by key",
        "operationId": "Get MyShoppingList by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete MyShoppingList by key",
        "operationId": "Delete MyShoppingList by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/me/shopping-lists/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update MyShoppingList by ID",
        "operationId": "Update MyShoppingList by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeName",
                    "name": {
                      "en": "New Name"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/MyShoppingListUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get MyShoppingList by ID",
        "operationId": "Get MyShoppingList by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete MyShoppingList by ID",
        "operationId": "Delete MyShoppingList by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_shopping_lists:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/me/payments": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query payments",
        "operationId": "Query payments",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "776f9240-09e1-4416-a34f-32fa80f0333f",
                  "version": 1,
                  "amountPlanned": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "USD",
                    "centAmount": 1000
                  },
                  "paymentMethodInfo": {
                    "paymentInterface": "STRIPE",
                    "method": "CREDIT_CARD",
                    "name": {
                      "en": "Credit Card"
                    }
                  },
                  "transactions": [
                    {
                      "id": "14748fe6-7f77-456a-96c8-913b1e4bbc9a",
                      "timestamp": "2015-10-20T08:54:24.000Z",
                      "type": "Charge",
                      "amount": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "USD",
                        "centAmount": 1000
                      },
                      "state": "Pending"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/MyPayment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create MyPayment",
        "operationId": "Create MyPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "amountPlanned": {
                  "currencyCode": "USD",
                  "centAmount": 1000
                },
                "paymentMethodInfo": {
                  "paymentInterface": "STRIPE",
                  "method": "CREDIT_CARD",
                  "name": {
                    "en": "Credit Card"
                  }
                },
                "transaction": {
                  "timestamp": "2015-10-20T08:54:24.000Z",
                  "type": "Charge",
                  "amount": {
                    "currencyCode": "USD",
                    "centAmount": 1000
                  }
                }
              },
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/MyPaymentDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-updateable": "MyPayment",
      "x-annotation-deleteable": "MyPayment",
      "x-annotation-createable": "MyPaymentDraft"
    },
    "/{projectKey}/me/payments/key={key}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update MyPayment by key",
        "operationId": "Update MyPayment by key",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setMethodInfoMethod",
                    "method": "12334567890123456"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/MyPaymentUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get MyPayment by key",
        "operationId": "Get MyPayment by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete MyPayment by key",
        "operationId": "Delete MyPayment by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/me/payments/{ID}": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update MyPayment by ID",
        "operationId": "Update MyPayment by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "setMethodInfoMethod",
                    "method": "12334567890123456"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/MyPaymentUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get MyPayment by ID",
        "operationId": "Get MyPayment by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete MyPayment by ID",
        "operationId": "Delete MyPayment by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_payments:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/me/email/confirm": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Verify Customer's Email",
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/password": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Change a customers password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/me.raml",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/password/reset": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Reset Customer's Password",
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/signup": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Signup a customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/MyCustomerDraft"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/login": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Authenticate Customer (Sign In)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/me.raml",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_my_profile:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/active-cart": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get active cart",
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/carts": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query carts",
        "operationId": "Query carts",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Cart",
                  "id": "2a3baa00-44fa-4ab8-bec7-933c31e18dcc",
                  "version": 5,
                  "createdAt": "2015-09-22T15:36:17.510Z",
                  "lastModifiedAt": "2015-09-22T15:41:55.816Z",
                  "lineItems": [
                    {
                      "id": "b925a817-d5ad-48bb-a407-29ad8e0649b5",
                      "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                      "name": {
                        "en": "SAPPHIRE"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "2543e1d8-4915-4f72-a3c9-1df9b1b0082d",
                        "version": 8
                      },
                      "productSlug": {
                        "en": "sapphire1421832124423"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "sku_SAPPHIRE_variant1_1421832124423",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 2800
                            },
                            "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                          }
                        ],
                        "images": [
                          {
                            "url": "https://www.commercetools.com/cli/data/252542005_1.jpg",
                            "dimensions": {
                              "w": 1400,
                              "h": 1400
                            }
                          }
                        ],
                        "attributes": [],
                        "assets": []
                      },
                      "price": {
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 2800
                        },
                        "id": "8da659ef-9e54-447d-9c36-84912db1848f"
                      },
                      "quantity": 2,
                      "discountedPricePerQuantity": [],
                      "state": [
                        {
                          "quantity": 2,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 5600
                      }
                    }
                  ],
                  "store": {
                    "typeId": "store",
                    "key": "test-key"
                  },
                  "cartState": "Active",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 5600
                  },
                  "customLineItems": [],
                  "discountCodes": [],
                  "inventoryMode": "None",
                  "taxMode": "Platform",
                  "taxRoundingMode": "HalfEven",
                  "taxCalculationMode": "LineItemLevel",
                  "refusedGifts": [],
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/MyCart"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create MyCart",
        "operationId": "Create MyCart",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currency": "EUR"
              },
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/MyCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/carts/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get MyCart by ID",
        "operationId": "Get MyCart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update MyCart by ID",
        "operationId": "Update MyCart by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "addLineItem",
                    "productId": "9f10dcfb-5cc9-4a18-843a-c07f7e22d01f",
                    "variantId": 1,
                    "quantity": 1
                  }
                ]
              },
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete MyCart by ID",
        "operationId": "Delete MyCart by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/me/orders": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query orders",
        "operationId": "Query orders",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "type": "Order",
                  "id": "92f5a867-bf19-47ab-982c-6720a03a3921",
                  "version": 1,
                  "createdAt": "2017-01-04T19:54:49.797Z",
                  "lastModifiedAt": "2017-01-04T19:54:49.797Z",
                  "totalPrice": {
                    "type": "centPrecision",
                    "fractionDigits": 2,
                    "currencyCode": "EUR",
                    "centAmount": 1000
                  },
                  "orderState": "Open",
                  "syncInfo": [],
                  "returnInfo": [],
                  "refusedGifts": [],
                  "taxMode": "External",
                  "inventoryMode": "None",
                  "taxRoundingMode": "HalfEven",
                  "lineItems": [
                    {
                      "id": "7297c742-d8b0-484b-aadc-1d0ba1869dc9",
                      "productId": "c5c75935-595a-4cc3-a80e-24e9a9c55094",
                      "name": {
                        "en": "MyProduct"
                      },
                      "productType": {
                        "typeId": "product-type",
                        "id": "a5c7e173-9754-4f02-9b18-a600896ae0e1",
                        "version": 21
                      },
                      "productSlug": {
                        "de": "neues-produkt-slug-1234678",
                        "en": "new-product-slug-12345678"
                      },
                      "variant": {
                        "id": 1,
                        "sku": "some-sku-123",
                        "prices": [
                          {
                            "value": {
                              "type": "centPrecision",
                              "fractionDigits": 2,
                              "currencyCode": "EUR",
                              "centAmount": 1000
                            },
                            "id": "6d36dc85-6131-495d-9f20-d00f411d4124"
                          }
                        ],
                        "images": [],
                        "attributes": [
                          {
                            "name": "text",
                            "value": "attribute-value"
                          },
                          {
                            "name": "enum",
                            "value": {
                              "key": "test",
                              "label": "test"
                            }
                          }
                        ],
                        "assets": []
                      },
                      "price": {
                        "id": "6d36dc85-6131-495d-9f20-d00f411d4124",
                        "value": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        }
                      },
                      "quantity": 1,
                      "discountedPricePerQuantity": [],
                      "taxRate": {
                        "name": "Bla",
                        "amount": 0.1,
                        "includedInPrice": false,
                        "country": "DE",
                        "subRates": []
                      },
                      "state": [
                        {
                          "quantity": 1,
                          "state": {
                            "typeId": "state",
                            "id": "7c2e2694-aefe-43d7-888e-6a99514caaca"
                          }
                        }
                      ],
                      "priceMode": "Platform",
                      "lineItemMode": "Standard",
                      "totalPrice": {
                        "type": "centPrecision",
                        "fractionDigits": 2,
                        "currencyCode": "EUR",
                        "centAmount": 1000
                      },
                      "taxedPrice": {
                        "totalNet": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1000
                        },
                        "totalGross": {
                          "type": "centPrecision",
                          "fractionDigits": 2,
                          "currencyCode": "EUR",
                          "centAmount": 1100
                        }
                      }
                    }
                  ],
                  "customLineItems": [],
                  "discountCodes": [],
                  "lastMessageSequenceNumber": 1,
                  "origin": "Customer"
                },
                "schema": {
                  "$ref": "#/components/schemas/MyOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create MyOrder",
        "operationId": "Create MyOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": "7c2e2694-aefe-43d7-888e-6a99514caaca",
                "version": 10,
                "orderNumber": "201612010001"
              },
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/MyOrderFromCartDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/me/orders/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get MyOrder by ID",
        "operationId": "Get MyOrder by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Update MyOrder by ID",
        "operationId": "Update MyOrder by ID",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "version": 1,
                "actions": [
                  {
                    "action": "changeOrderState",
                    "orderState": "Complete"
                  }
                ]
              },
              "schema": {
                "includePath": "resources/me.raml",
                "$ref": "#/components/schemas/Update"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_my_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/custom-objects": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The query endpoint allows to retrieve custom objects in a specific container or all custom objects.\nFor performance reasons, it is highly advisable to query only for custom objects in a container by using\nthe container field in the where predicate.\n",
        "operationId": "Query custom-objects",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "d8523d32-a79d-441c-90f4-744cc342126e",
                  "version": 2,
                  "container": "test-container",
                  "key": "test-key",
                  "value": "test-value",
                  "createdAt": "2016-02-18T10:36:29.468Z",
                  "lastModifiedAt": "2016-02-18T10:36:29.571Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomObject"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Creates a new custom object or updates an existing custom object.\nIf an object with the given container/key exists,\nthe object will be replaced with the new value and the version is incremented.\nIf the request contains a version and an object with the given container/key exists then the version\nmust match the version of the existing object. Concurrent updates for the same custom object still can result\nin a Conflict (409) even if the version is not provided.\nFields with null values will not be saved.\n",
        "operationId": "Create CustomObject",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "container": "test-container",
                "key": "test-key",
                "value": "test-value"
              },
              "schema": {
                "includePath": "resources/custom-objects.raml",
                "$ref": "#/components/schemas/CustomObjectDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/custom-objects/{container}/{key}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CustomObject by key",
        "operationId": "Get CustomObject by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete CustomObject by key",
        "operationId": "Delete CustomObject by key",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "container",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/custom-objects.raml",
            "type": "string"
          }
        },
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withContainerAndKey"
    },
    "/{projectKey}/custom-objects/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get CustomObject by container",
        "operationId": "Get CustomObject by container",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_orders:{projectKey}",
              "view_customers:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "409": {
            "$ref": "#/components/responses/trait_conflicting_409"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "The version control is optional. If the query contains a version, then it must match the version of the object.\n",
        "operationId": "Delete CustomObject by container",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_dataErasure_dataErasure"
          },
          {
            "$ref": "#/components/parameters/trait_versioned_version"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_products:{projectKey}",
              "manage_orders:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/custom-objects.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/graphql": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Execute a GraphQL query",
        "operationId": "GraphQL",
        "requestBody": {
          "content": {
            "application/graphql": {
              "example": {
                "query": "\n      query query_1($productId: String){\n        product(key:$productId){\n          key\n        }\n      }\n    ",
                "operationName": "query_1",
                "variables": {
                  "productId": "f8ded810-a1"
                }
              },
              "schema": {
                "includePath": "resources/graphql.raml",
                "$ref": "#/components/schemas/GraphQLRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/login": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "customer": {
                    "addresses": [],
                    "email": "<random>@example.com",
                    "firstName": "John",
                    "id": "some_123_id",
                    "isEmailVerified": false,
                    "lastName": "Doe",
                    "password": "secret123",
                    "version": 1,
                    "createdAt": "2015-07-06T13:22:33.339Z",
                    "lastModifiedAt": "2015-07-06T13:22:33.339Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomerSignInResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Authenticate Customer (Sign In). Retrieves the authenticated\ncustomer (a customer that matches the given email/password pair).\nIf used with an access token for Anonymous Sessions,\nall orders and carts belonging to the anonymousId will be assigned to the newly created customer.\nIf a cart is is returned as part of the CustomerSignInResult,\nit has been recalculated (It will have up-to-date prices, taxes and discounts,\nand invalid line items have been removed.).\n",
        "operationId": "Authenticate Customer (Sign In)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "includePath": "resources/login.raml",
                "$ref": "#/components/schemas/CustomerSignin"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "manage_customers:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/messages": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query messages",
        "operationId": "Query messages",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/messages/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get Message by ID",
        "operationId": "Get Message by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_orders:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/product-projections": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "You can use the product projections query endpoint to get the current or staged representations of Products.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.\n",
        "operationId": "Query product-projections",
        "parameters": [
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/product-projections/search": {
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Search Product Projection",
        "operationId": "Search Products",
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Search Product Projection",
        "operationId": "Search Products",
        "parameters": [
          {
            "name": "fuzzy",
            "in": "query",
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fuzzyLevel",
            "in": "query",
            "description": "Provide explicitly the fuzzy level desired if fuzzy is enabled. This value can not be higher than the one\nchosen by the platform by default.\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "markMatchingVariants",
            "in": "query",
            "required": true,
            "description": "if `markMatchingVariants` parameter is `true` those ProductVariants that match the search query have the additional\nfield `isMatchingVariant` set to `true`. For the other variants in the same product projection this field is set to `false`.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.facets",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "facet",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "/text\\.[a-z]{2}(-[A-Z]{2})?/",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-annotation-placeholderParam": {
              "paramName": "text",
              "template": "text.<locale>",
              "placeholder": "locale"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/product-projections/suggest": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "operationId": "Get suggestion keywords",
        "parameters": [
          {
            "name": "fuzzy",
            "in": "query",
            "description": "Whether to apply fuzzy search on the text to analyze.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "/searchKeywords\\.[a-z]{2}(-[A-Z]{2})?/",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-annotation-placeholderParam": {
              "paramName": "searchKeywords",
              "template": "searchKeywords.<locale>",
              "placeholder": "locale"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/product-projections/key={key}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Gets the current or staged representation of a product found by Key.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.\n",
        "operationId": "Get ProductProjection by key",
        "parameters": [
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withKey"
    },
    "/{projectKey}/product-projections/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Gets the current or staged representation of a product in a catalog by ID.\nWhen used with an API client that has the view_published_products:{projectKey} scope,\nthis endpoint only returns published (current) product projections.\n",
        "operationId": "Get ProductProjection by ID",
        "parameters": [
          {
            "name": "staged",
            "in": "query",
            "description": "Whether to query for the current or staged projections.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCurrency"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCountry"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceCustomerGroup"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_priceChannel"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_localeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_priceSelecting_storeProjection"
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_project:{projectKey}",
              "view_products:{projectKey}",
              "view_published_products:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    },
    "/{projectKey}/api-clients": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Query api-clients",
        "operationId": "Query api-clients",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
            "schema": {
              "includePath": "traits/sortable.raml",
              "type": "string"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
            "schema": {
              "includePath": "traits/query.raml",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          },
          {
            "$ref": "#/components/parameters/trait_paging_limit"
          },
          {
            "$ref": "#/components/parameters/trait_paging_offset"
          },
          {
            "$ref": "#/components/parameters/trait_paging_withTotal"
          },
          {
            "$ref": "#/components/parameters/trait_query_/^var[.][a-zA-Z0-9]+$/"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}",
              "view_api_clients:{projectKey}"
            ]
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "api-client-id",
                  "name": "api-client-name",
                  "scope": "view_products",
                  "createdAt": "2018-01-01T00:00:00.001Z",
                  "lastUsedAt": "2017-09-10",
                  "secret": "secret-passphrase"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiClient"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Create ApiClient",
        "operationId": "Create ApiClient",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "api-client-name",
                "scope": "view_products"
              },
              "schema": {
                "includePath": "resources/api-clients.raml",
                "$ref": "#/components/schemas/ApiClientDraft"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_expandable_expand"
          }
        ],
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ]
    },
    "/{projectKey}/api-clients/{ID}": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Get ApiClient by ID",
        "operationId": "Get ApiClient by ID",
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}",
              "view_api_clients:{projectKey}"
            ]
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/trait_deprecatable_200"
          },
          "400": {
            "$ref": "#/components/responses/trait_errorable_400"
          },
          "401": {
            "$ref": "#/components/responses/trait_errorable_401"
          },
          "403": {
            "$ref": "#/components/responses/trait_errorable_403"
          },
          "404": {
            "$ref": "#/components/responses/trait_errorable_404"
          },
          "500": {
            "$ref": "#/components/responses/trait_errorable_500"
          },
          "503": {
            "$ref": "#/components/responses/trait_errorable_503"
          }
        },
        "description": "Delete ApiClient by ID",
        "operationId": "Delete ApiClient by ID",
        "security": [
          {
            "oauth_2_0": [
              "manage_api_clients:{projectKey}"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "ID",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "resources/api-clients.raml",
            "type": "string"
          }
        },
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "includePath": "api.raml",
            "type": "string"
          }
        }
      ],
      "x-annotation-methodName": "withId"
    }
  },
  "components": {
    "schemas": {
      "PagedQueryResponse": {
        "title": "PagedQueryResponse",
        "includePath": "types/PagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseResource"
            }
          },
          "facets": {
            "$ref": "#/components/schemas/FacetResults"
          },
          "meta": {
            "type": "object"
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Common"
      },
      "Update": {
        "title": "Update",
        "includePath": "types/Update.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Common"
      },
      "UpdateAction": {
        "title": "UpdateAction",
        "includePath": "types/UpdateAction.raml",
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Common"
      },
      "ApiClient": {
        "title": "ApiClient",
        "includePath": "types/api-client/ApiClient.raml",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the API client.\nThis is the OAuth2 `client_id` and can be used to obtain a token.",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "description": "A whitespace separated list of the OAuth scopes.\nThis is the OAuth2 `scope` and can be used to obtain a token.",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUsedAt": {
            "description": "The last day this API Client was used to obtain a token.",
            "type": "string",
            "format": "date"
          },
          "deleteAt": {
            "description": "If set, the client will be deleted on (or shortly after) this point in time.",
            "type": "string",
            "format": "date-time"
          },
          "secret": {
            "description": "The secret is only shown once in the response of creating the API Client.\nThis is the OAuth2 `client_secret` and can be used to obtain a token.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "scope"
        ],
        "x-annotation-package": "ApiClient",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-apiClients.html#apiclient"
      },
      "ApiClientDraft": {
        "title": "ApiClientDraft",
        "includePath": "types/api-client/ApiClientDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "deleteDaysAfterCreation": {
            "format": "int64",
            "description": "If set, the client will be deleted after the specified amount of days.",
            "type": "number"
          }
        },
        "required": [
          "name",
          "scope"
        ],
        "x-annotation-package": "ApiClient",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-apiClients.html#apiclientdraft"
      },
      "ApiClientPagedQueryResponse": {
        "title": "ApiClientPagedQueryResponse",
        "includePath": "types/api-client/ApiClientPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiClient"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "ApiClient"
      },
      "CartDiscount": {
        "title": "CartDiscount",
        "includePath": "types/cart-discount/CartDiscount.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the cart discount.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the cart discount.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "key": {
                "description": "User-specific unique identifier for a cart discount.\nMust be unique across a project.",
                "type": "string"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "value": {
                "$ref": "#/components/schemas/CartDiscountValue"
              },
              "cartPredicate": {
                "description": "A valid Cart predicate.",
                "type": "string"
              },
              "target": {
                "description": "Empty when the `value` has type `giftLineItem`, otherwise a CartDiscountTarget is set.",
                "$ref": "#/components/schemas/CartDiscountTarget"
              },
              "sortOrder": {
                "description": "The string must contain a number between 0 and 1.\nAll matching cart discounts are applied to a cart in the order defined by this field.\nA discount with greater sort order is prioritized higher than a discount with lower sort order.\nThe sort order is unambiguous among all cart discounts.",
                "type": "string"
              },
              "isActive": {
                "description": "Only active discount can be applied to the cart.",
                "type": "boolean"
              },
              "validFrom": {
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time"
              },
              "requiresDiscountCode": {
                "description": "States whether the discount can only be used in a connection with a DiscountCode.",
                "type": "boolean"
              },
              "references": {
                "description": "The platform will generate this array from the predicate.\nIt contains the references of all the resources that are addressed in the predicate.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                }
              },
              "stackingMode": {
                "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.",
                "$ref": "#/components/schemas/StackingMode"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount",
        "x-annotation-updateType": "CartDiscountUpdate",
        "type": "string"
      },
      "CartDiscountCustomLineItemsTarget": {
        "title": "CartDiscountCustomLineItemsTarget",
        "includePath": "types/cart-discount/CartDiscountCustomLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountDraft": {
        "title": "CartDiscountDraft",
        "includePath": "types/cart-discount/CartDiscountDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "key": {
            "description": "User-specific unique identifier for a cart discount.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction.",
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "value": {
            "$ref": "#/components/schemas/CartDiscountValueDraft"
          },
          "cartPredicate": {
            "description": "A valid Cart predicate.",
            "type": "string"
          },
          "target": {
            "description": "Must not be set when the `value` has type `giftLineItem`, otherwise a CartDiscountTarget must be set.",
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          "sortOrder": {
            "description": "The string must contain a number between 0 and 1.\nA discount with greater sort order is prioritized higher than a discount with lower sort order.\nThe sort order must be unambiguous among all cart discounts.",
            "type": "string"
          },
          "isActive": {
            "description": "Only active discount can be applied to the cart.\nDefaults to `true`.",
            "type": "boolean"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "requiresDiscountCode": {
            "description": "States whether the discount can only be used in a connection with a DiscountCode.\nDefaults to `false`.",
            "type": "boolean"
          },
          "stackingMode": {
            "description": "Specifies whether the application of this discount causes the following discounts to be ignored.\nDefaults to Stacking.",
            "$ref": "#/components/schemas/StackingMode"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          }
        },
        "required": [
          "name",
          "value",
          "cartPredicate",
          "sortOrder",
          "requiresDiscountCode"
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
      },
      "CartDiscountLineItemsTarget": {
        "title": "CartDiscountLineItemsTarget",
        "includePath": "types/cart-discount/CartDiscountLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountPagedQueryResponse": {
        "title": "CartDiscountPagedQueryResponse",
        "includePath": "types/cart-discount/CartDiscountPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartDiscount"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountReference": {
        "title": "CartDiscountReference",
        "includePath": "types/cart-discount/CartDiscountReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/CartDiscount"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount",
        "type": "string"
      },
      "CartDiscountResourceIdentifier": {
        "title": "CartDiscountResourceIdentifier",
        "includePath": "types/cart-discount/CartDiscountResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscount"
      },
      "CartDiscountShippingCostTarget": {
        "title": "CartDiscountShippingCostTarget",
        "includePath": "types/cart-discount/CartDiscountShippingCostTarget.raml",
        "$ref": "#/components/schemas/CartDiscountTarget",
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountTarget": {
        "title": "CartDiscountTarget",
        "includePath": "types/cart-discount/CartDiscountTarget.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscounttarget"
      },
      "CartDiscountUpdate": {
        "title": "CartDiscountUpdate",
        "includePath": "types/cart-discount/CartDiscountUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartDiscountUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountUpdateAction": {
        "title": "CartDiscountUpdateAction",
        "includePath": "types/cart-discount/CartDiscountUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountValue": {
        "title": "CartDiscountValue",
        "includePath": "types/cart-discount/CartDiscountValue.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscountvalue"
      },
      "CartDiscountValueAbsolute": {
        "title": "CartDiscountValueAbsolute",
        "includePath": "types/cart-discount/CartDiscountValueAbsolute.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValue"
          },
          {
            "properties": {
              "money": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypedMoney"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountValueAbsoluteDraft": {
        "title": "CartDiscountValueAbsoluteDraft",
        "includePath": "types/cart-discount/CartDiscountValueAbsoluteDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValueDraft"
          },
          {
            "properties": {
              "money": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Money"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountValueDraft": {
        "title": "CartDiscountValueDraft",
        "includePath": "types/cart-discount/CartDiscountValueDraft.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#cartdiscountvalue"
      },
      "CartDiscountValueGiftLineItem": {
        "title": "CartDiscountValueGiftLineItem",
        "includePath": "types/cart-discount/CartDiscountValueGiftLineItem.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValue"
          },
          {
            "properties": {
              "product": {
                "$ref": "#/components/schemas/ProductReference"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelReference"
              },
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountValueGiftLineItemDraft": {
        "title": "CartDiscountValueGiftLineItemDraft",
        "includePath": "types/cart-discount/CartDiscountValueGiftLineItemDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValueDraft"
          },
          {
            "properties": {
              "product": {
                "$ref": "#/components/schemas/ProductReference"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelReference"
              },
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountValueRelative": {
        "title": "CartDiscountValueRelative",
        "includePath": "types/cart-discount/CartDiscountValueRelative.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValue"
          },
          {
            "properties": {
              "permyriad": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "CartDiscountValueRelativeDraft": {
        "title": "CartDiscountValueRelativeDraft",
        "includePath": "types/cart-discount/CartDiscountValueRelativeDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountValueDraft"
          },
          {
            "properties": {
              "permyriad": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "MultiBuyCustomLineItemsTarget": {
        "title": "MultiBuyCustomLineItemsTarget",
        "includePath": "types/cart-discount/MultiBuyCustomLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "description": "A valid custom line item target predicate. The discount will be applied to custom line items that are\nmatched by the predicate.\n",
                "type": "string"
              },
              "triggerQuantity": {
                "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
                "type": "integer"
              },
              "discountedQuantity": {
                "description": "Quantity of line items that are discounted per application of this discount.",
                "type": "integer"
              },
              "maxOccurrence": {
                "description": "Maximum number of applications of this discount.",
                "type": "integer"
              },
              "selectionMode": {
                "$ref": "#/components/schemas/SelectionMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "MultiBuyLineItemsTarget": {
        "title": "MultiBuyLineItemsTarget",
        "includePath": "types/cart-discount/MultiBuyLineItemsTarget.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountTarget"
          },
          {
            "properties": {
              "predicate": {
                "description": "A valid line item target predicate. The discount will be applied to line items that are matched by the predicate.\n",
                "type": "string"
              },
              "triggerQuantity": {
                "description": "Quantity of line items that need to be present in order to trigger an application of this discount.",
                "type": "integer"
              },
              "discountedQuantity": {
                "description": "Quantity of line items that are discounted per application of this discount.",
                "type": "integer"
              },
              "maxOccurrence": {
                "description": "Maximum number of applications of this discount.",
                "type": "integer"
              },
              "selectionMode": {
                "$ref": "#/components/schemas/SelectionMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "type": "string"
      },
      "SelectionMode": {
        "title": "SelectionMode",
        "enum": [
          "Cheapest",
          "MostExpensive"
        ],
        "includePath": "types/cart-discount/SelectionMode.raml",
        "type": "string",
        "x-annotation-package": "CartDiscount"
      },
      "StackingMode": {
        "title": "StackingMode",
        "enum": [
          "Stacking",
          "StopAfterThisDiscount"
        ],
        "includePath": "types/cart-discount/StackingMode.raml",
        "type": "string",
        "x-annotation-package": "CartDiscount"
      },
      "CartDiscountChangeCartPredicateAction": {
        "title": "CartDiscountChangeCartPredicateAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeCartPredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "cartPredicate": {
                "description": "A valid Cart predicate.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-cart-predicate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountChangeIsActiveAction": {
        "title": "CartDiscountChangeIsActiveAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeIsActiveAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "isActive": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-isactive",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountChangeNameAction": {
        "title": "CartDiscountChangeNameAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountChangeRequiresDiscountCodeAction": {
        "title": "CartDiscountChangeRequiresDiscountCodeAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeRequiresDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "requiresDiscountCode": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-requires-discountcode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountChangeSortOrderAction": {
        "title": "CartDiscountChangeSortOrderAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeSortOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "sortOrder": {
                "description": "The string must contain a number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-sort-order",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountChangeStackingModeAction": {
        "title": "CartDiscountChangeStackingModeAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeStackingModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "stackingMode": {
                "$ref": "#/components/schemas/StackingMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-stacking-mode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountChangeTargetAction": {
        "title": "CartDiscountChangeTargetAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeTargetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "target": {
                "$ref": "#/components/schemas/CartDiscountTarget"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-target",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountChangeValueAction": {
        "title": "CartDiscountChangeValueAction",
        "includePath": "types/cart-discount/updates/CartDiscountChangeValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "value": {
                "$ref": "#/components/schemas/CartDiscountValueDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#change-value",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountSetCustomFieldAction": {
        "title": "CartDiscountSetCustomFieldAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "description": "If `value` is absent or `null`, this field will be removed if it exists.\nTrying to remove a field that does not exist will fail with an `InvalidOperation` error.\nIf `value` is provided, set the `value` of the field defined by the `name`.\nThe FieldDefinition determines the format for the `value` to be provided.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountSetCustomTypeAction": {
        "title": "CartDiscountSetCustomTypeAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If absent, the custom type and any existing CustomFields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountSetDescriptionAction": {
        "title": "CartDiscountSetDescriptionAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "description": {
                "description": "If the `description` parameter is not included, the field will be emptied.",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountSetKeyAction": {
        "title": "CartDiscountSetKeyAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-key",
        "type": "string"
      },
      "CartDiscountSetValidFromAction": {
        "title": "CartDiscountSetValidFromAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetValidFromAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-from",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountSetValidFromAndUntilAction": {
        "title": "CartDiscountSetValidFromAndUntilAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetValidFromAndUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-from-and-until",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartDiscountSetValidUntilAction": {
        "title": "CartDiscountSetValidUntilAction",
        "includePath": "types/cart-discount/updates/CartDiscountSetValidUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartDiscountUpdateAction"
          },
          {
            "properties": {
              "validUntil": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CartDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-cartDiscounts.html#set-valid-until",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Cart": {
        "title": "Cart",
        "includePath": "types/cart/Cart.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the cart.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the cart.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "customerId": {
                "type": "string"
              },
              "customerEmail": {
                "type": "string"
              },
              "anonymousId": {
                "description": "Identifies carts and orders belonging to an anonymous session (the customer has not signed up/in yet).",
                "type": "string"
              },
              "store": {
                "$ref": "#/components/schemas/StoreKeyReference"
              },
              "lineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                }
              },
              "customLineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomLineItem"
                }
              },
              "totalPrice": {
                "description": "The sum of all `totalPrice` fields of the `lineItems` and `customLineItems`, as well as the `price` field of `shippingInfo` (if it exists).\n`totalPrice` may or may not include the taxes: it depends on the taxRate.includedInPrice property of each price.",
                "$ref": "#/components/schemas/TypedMoney"
              },
              "taxedPrice": {
                "description": "Not set until the shipping address is set.\nWill be set automatically in the `Platform` TaxMode.\nFor the `External` tax mode it will be set  as soon as the external tax rates for all line items, custom line items, and shipping in the cart are set.",
                "$ref": "#/components/schemas/TaxedPrice"
              },
              "cartState": {
                "$ref": "#/components/schemas/CartState"
              },
              "shippingAddress": {
                "description": "The shipping address is used to determine the eligible shipping methods and rates as well as the tax rate of the line items.",
                "$ref": "#/components/schemas/Address"
              },
              "billingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "inventoryMode": {
                "$ref": "#/components/schemas/InventoryMode"
              },
              "taxMode": {
                "$ref": "#/components/schemas/TaxMode"
              },
              "taxRoundingMode": {
                "description": "When calculating taxes for `taxedPrice`, the selected mode is used for rounding.",
                "$ref": "#/components/schemas/RoundingMode"
              },
              "taxCalculationMode": {
                "description": "When calculating taxes for `taxedPrice`, the selected mode is used for calculating the price with `LineItemLevel` (horizontally) or `UnitPriceLevel` (vertically) calculation mode.",
                "$ref": "#/components/schemas/TaxCalculationMode"
              },
              "customerGroup": {
                "description": "Set automatically when the customer is set and the customer is a member of a customer group.\nUsed for product variant\nprice selection.",
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "country": {
                "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nUsed for product variant price selection.",
                "$ref": "#/components/schemas/CountryCode"
              },
              "shippingInfo": {
                "description": "Set automatically once the ShippingMethod is set.",
                "$ref": "#/components/schemas/ShippingInfo"
              },
              "discountCodes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCodeInfo"
                }
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "paymentInfo": {
                "$ref": "#/components/schemas/PaymentInfo"
              },
              "locale": {
                "type": "string"
              },
              "deleteDaysAfterLastModification": {
                "description": "The cart will be deleted automatically if it hasn't been modified for the specified amount of days and it is in the `Active` CartState.",
                "type": "integer"
              },
              "refusedGifts": {
                "description": "Automatically filled when a line item with LineItemMode `GiftLineItem` is removed from the cart.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                }
              },
              "origin": {
                "description": "The origin field indicates how this cart was created.\nThe value `Customer` indicates, that the cart was created by the customer.",
                "$ref": "#/components/schemas/CartOrigin"
              },
              "shippingRateInput": {
                "description": "The shippingRateInput is used as an input to select a ShippingRatePriceTier.",
                "$ref": "#/components/schemas/ShippingRateInput"
              },
              "itemShippingAddresses": {
                "description": "Contains addresses for carts with multiple shipping addresses.\nLine items reference these addresses under their `shippingDetails`.\nThe addresses captured here are not used to determine eligible shipping methods or the applicable tax rate.\nOnly the cart's `shippingAddress` is used for this.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart",
        "x-annotation-updateType": "CartUpdate",
        "type": "string"
      },
      "CartDraft": {
        "title": "CartDraft",
        "includePath": "types/cart/CartDraft.raml",
        "type": "object",
        "properties": {
          "currency": {
            "description": "A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "customerId": {
            "description": "Id of an existing Customer.",
            "type": "string"
          },
          "customerEmail": {
            "type": "string"
          },
          "customerGroup": {
            "description": "Will be set automatically when the `customerId` is set and the customer is a member of a customer group.\nCan be set explicitly when no `customerId` is present.",
            "$ref": "#/components/schemas/CustomerGroupResourceIdentifier"
          },
          "anonymousId": {
            "description": "Assigns the new cart to an anonymous session (the customer has not signed up/in yet).",
            "type": "string"
          },
          "store": {
            "description": "Assigns the new cart to the store.\nThe store assignment can not be modified.",
            "$ref": "#/components/schemas/StoreResourceIdentifier"
          },
          "country": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "type": "string"
          },
          "inventoryMode": {
            "description": "Default inventory mode is `None`.",
            "$ref": "#/components/schemas/InventoryMode"
          },
          "taxMode": {
            "description": "The default tax mode is `Platform`.",
            "$ref": "#/components/schemas/TaxMode"
          },
          "taxRoundingMode": {
            "description": "The default tax rounding mode is `HalfEven`.",
            "$ref": "#/components/schemas/RoundingMode"
          },
          "taxCalculationMode": {
            "description": "The default tax calculation mode is `LineItemLevel`.",
            "$ref": "#/components/schemas/TaxCalculationMode"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemDraft"
            }
          },
          "customLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomLineItemDraft"
            }
          },
          "shippingAddress": {
            "description": "The shipping address is used to determine the eligible shipping methods and rates as well as the tax rate of the line items.",
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethodResourceIdentifier"
          },
          "externalTaxRateForShippingMethod": {
            "description": "An external tax rate can be set for the `shippingMethod` if the cart has the `External` TaxMode.",
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "locale": {
            "description": "Must be one of the languages supported for this project",
            "type": "string"
          },
          "deleteDaysAfterLastModification": {
            "format": "int64",
            "description": "The cart will be deleted automatically if it hasn't been modified for the specified amount of days and it is in the `Active` CartState.\nIf a ChangeSubscription for carts exists, a `ResourceDeleted` notification will be sent.",
            "type": "number"
          },
          "origin": {
            "description": "The default origin is `Customer`.",
            "$ref": "#/components/schemas/CartOrigin"
          },
          "shippingRateInput": {
            "description": "The shippingRateInput is used as an input to select a ShippingRatePriceTier.\nBased on the definition of ShippingRateInputType.\nIf CartClassification is defined, it must be ClassificationShippingRateInput.\nIf CartScore is defined, it must be ScoreShippingRateInput.\nOtherwise it can not bet set.",
            "$ref": "#/components/schemas/ShippingRateInputDraft"
          },
          "itemShippingAddresses": {
            "description": "Contains addresses for carts with multiple shipping addresses.\nEach address must contain a key which is unique in this cart.\nLine items will use these keys to reference the addresses under their `shippingDetails`.\nThe addresses captured here are not used to determine eligible shipping methods or the applicable tax rate.\nOnly the cart's `shippingAddress` is used for this.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "required": [
          "currency"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartdraft"
      },
      "CartOrigin": {
        "title": "CartOrigin",
        "enum": [
          "Customer",
          "Merchant"
        ],
        "includePath": "types/cart/CartOrigin.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
      },
      "CartPagedQueryResponse": {
        "title": "CartPagedQueryResponse",
        "includePath": "types/cart/CartPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cart"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Cart"
      },
      "CartReference": {
        "title": "CartReference",
        "includePath": "types/cart/CartReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Cart"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart",
        "type": "string"
      },
      "CartResourceIdentifier": {
        "title": "CartResourceIdentifier",
        "includePath": "types/cart/CartResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cart"
      },
      "CartState": {
        "title": "CartState",
        "enum": [
          "Active",
          "Merged",
          "Ordered"
        ],
        "includePath": "types/cart/CartState.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartstate"
      },
      "CartUpdate": {
        "title": "CartUpdate",
        "includePath": "types/cart/CartUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Cart"
      },
      "CartUpdateAction": {
        "title": "CartUpdateAction",
        "includePath": "types/cart/CartUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Cart"
      },
      "ClassificationShippingRateInput": {
        "title": "ClassificationShippingRateInput",
        "includePath": "types/cart/ClassificationShippingRateInput.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInput"
          },
          {
            "properties": {
              "key": {
                "type": "string"
              },
              "label": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinput",
        "type": "string"
      },
      "ClassificationShippingRateInputDraft": {
        "title": "ClassificationShippingRateInputDraft",
        "includePath": "types/cart/ClassificationShippingRateInputDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInputDraft"
          },
          {
            "properties": {
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#classificationshippingrateinputdraft",
        "type": "string"
      },
      "CustomLineItem": {
        "title": "CustomLineItem",
        "includePath": "types/cart/CustomLineItem.raml",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of this CustomLineItem.",
            "type": "string"
          },
          "name": {
            "description": "The name of this CustomLineItem.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "money": {
            "description": "The cost to add to the cart.\nThe amount can be negative.",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "taxedPrice": {
            "description": "Set once the `taxRate` is set.",
            "$ref": "#/components/schemas/TaxedItemPrice"
          },
          "totalPrice": {
            "description": "The total price of this custom line item.\nIf custom line item is discounted, then the `totalPrice` would be the discounted custom line item price multiplied by `quantity`.\nOtherwise a total price is just a `money` multiplied by the `quantity`.\n`totalPrice` may or may not include the taxes: it depends on the taxRate.includedInPrice property.",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "slug": {
            "description": "A unique String in the cart to identify this CustomLineItem.",
            "type": "string"
          },
          "quantity": {
            "description": "The amount of a CustomLineItem in the cart.\nMust be a positive integer.",
            "type": "number"
          },
          "state": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemState"
            }
          },
          "taxCategory": {
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "taxRate": {
            "description": "Will be set automatically in the `Platform` TaxMode once the shipping address is set is set.\nFor the `External` tax mode the tax rate has to be set explicitly with the ExternalTaxRateDraft.",
            "$ref": "#/components/schemas/TaxRate"
          },
          "discountedPricePerQuantity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
            }
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "shippingDetails": {
            "description": "Container for custom line item specific address(es).\nCustomLineItem fields that can be used in query predicates: `slug`, `name`, `quantity`,\n`money`, `state`, `discountedPricePerQuantity`.",
            "$ref": "#/components/schemas/ItemShippingDetails"
          }
        },
        "required": [
          "id",
          "name",
          "money",
          "totalPrice",
          "slug",
          "quantity",
          "state",
          "discountedPricePerQuantity"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitem"
      },
      "CustomLineItemDraft": {
        "title": "CustomLineItemDraft",
        "includePath": "types/cart/CustomLineItemDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "quantity": {
            "description": "The amount of a CustomLineItemin the cart.\nMust be a positive integer.",
            "type": "number"
          },
          "money": {
            "$ref": "#/components/schemas/Money"
          },
          "slug": {
            "type": "string"
          },
          "taxCategory": {
            "description": "The given tax category will be used to select a tax rate when a cart has the TaxMode `Platform`.",
            "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
          },
          "externalTaxRate": {
            "description": "An external tax rate can be set if the cart has the `External` TaxMode.",
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFields"
          },
          "shippingDetails": {
            "description": "Container for custom line item specific address(es).",
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          }
        },
        "required": [
          "name",
          "quantity",
          "money",
          "slug"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#customlineitemdraft"
      },
      "DiscountCodeInfo": {
        "title": "DiscountCodeInfo",
        "includePath": "types/cart/DiscountCodeInfo.raml",
        "type": "object",
        "properties": {
          "discountCode": {
            "$ref": "#/components/schemas/DiscountCodeReference"
          },
          "state": {
            "$ref": "#/components/schemas/DiscountCodeState"
          }
        },
        "required": [
          "discountCode",
          "state"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodereference"
      },
      "DiscountCodeState": {
        "title": "DiscountCodeState",
        "enum": [
          "NotActive",
          "DoesNotMatchCart",
          "MatchesCart",
          "MaxApplicationReached",
          "ApplicationStoppedByPreviousDiscount",
          "NotValid"
        ],
        "includePath": "types/cart/DiscountCodeState.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountcodestate"
      },
      "DiscountedLineItemPortion": {
        "title": "DiscountedLineItemPortion",
        "includePath": "types/cart/DiscountedLineItemPortion.raml",
        "type": "object",
        "properties": {
          "discount": {
            "$ref": "#/components/schemas/CartDiscountReference"
          },
          "discountedAmount": {
            "$ref": "#/components/schemas/TypedMoney"
          }
        },
        "required": [
          "discount",
          "discountedAmount"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemportion"
      },
      "DiscountedLineItemPrice": {
        "title": "DiscountedLineItemPrice",
        "includePath": "types/cart/DiscountedLineItemPrice.raml",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "includedDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPortion"
            }
          }
        },
        "required": [
          "value",
          "includedDiscounts"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"
      },
      "DiscountedLineItemPriceForQuantity": {
        "title": "DiscountedLineItemPriceForQuantity",
        "includePath": "types/cart/DiscountedLineItemPriceForQuantity.raml",
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number"
          },
          "discountedPrice": {
            "$ref": "#/components/schemas/DiscountedLineItemPrice"
          }
        },
        "required": [
          "quantity",
          "discountedPrice"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitempriceforquantity"
      },
      "ExternalLineItemTotalPrice": {
        "title": "ExternalLineItemTotalPrice",
        "includePath": "types/cart/ExternalLineItemTotalPrice.raml",
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/Money"
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "price",
          "totalPrice"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externallineitemtotalprice"
      },
      "ExternalTaxAmountDraft": {
        "title": "ExternalTaxAmountDraft",
        "includePath": "types/cart/ExternalTaxAmountDraft.raml",
        "type": "object",
        "properties": {
          "totalGross": {
            "description": "The total gross amount of the item (totalNet + taxes).",
            "$ref": "#/components/schemas/Money"
          },
          "taxRate": {
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          }
        },
        "required": [
          "totalGross",
          "taxRate"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxamountdraft"
      },
      "ExternalTaxRateDraft": {
        "title": "ExternalTaxRateDraft",
        "includePath": "types/cart/ExternalTaxRateDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "description": "Percentage in the range of [0..1].\nMust be supplied if no `subRates` are specified.\nIf `subRates` are specified\nthen the `amount` can be omitted or it must be the sum of the amounts of all `subRates`.",
            "type": "number"
          },
          "country": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "type": "string"
          },
          "state": {
            "description": "The state in the country",
            "type": "string"
          },
          "subRates": {
            "description": "For countries (e.g.\nthe US) where the total tax is a combination of multiple taxes (e.g.\nstate and local taxes).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubRate"
            }
          },
          "includedInPrice": {
            "description": "The default value for `includedInPrice` is FALSE.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "country"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#externaltaxratedraft"
      },
      "InventoryMode": {
        "title": "InventoryMode",
        "enum": [
          "TrackOnly",
          "ReserveOnOrder",
          "None"
        ],
        "includePath": "types/cart/InventoryMode.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#inventorymode"
      },
      "ItemShippingDetails": {
        "title": "ItemShippingDetails",
        "includePath": "types/cart/ItemShippingDetails.raml",
        "type": "object",
        "properties": {
          "targets": {
            "description": "Used to map what sub-quantity should be shipped to which address.\nDuplicate address keys are not allowed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemShippingTarget"
            }
          },
          "valid": {
            "description": "`true` if the quantity of the (custom) line item is equal to the sum of the sub-quantities in `targets`, `false` otherwise.\nA cart cannot be ordered when the value is `false`.\nThe error InvalidItemShippingDetails will be triggered.",
            "type": "boolean"
          }
        },
        "required": [
          "targets",
          "valid"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingdetails"
      },
      "ItemShippingDetailsDraft": {
        "title": "ItemShippingDetailsDraft",
        "includePath": "types/cart/ItemShippingDetailsDraft.raml",
        "type": "object",
        "properties": {
          "targets": {
            "description": "Used to capture one or more (custom) line item specific shipping addresses.\nBy specifying sub-quantities, it is possible to set multiple shipping addresses for one line item.\nA cart can have `shippingDetails` where the `targets` sum does not match the quantity of the line item or custom line item.\nFor the order creation and order updates the `targets` sum must match the quantity.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemShippingTarget"
            }
          }
        },
        "required": [
          "targets"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingdetailsdraft"
      },
      "ItemShippingTarget": {
        "title": "ItemShippingTarget",
        "includePath": "types/cart/ItemShippingTarget.raml",
        "type": "object",
        "properties": {
          "addressKey": {
            "description": "The key of the address in the cart's `itemShippingAddresses`",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of items that should go to the address with the specified `addressKey`.\nOnly positive values are allowed.\nUsing `0` as quantity is also possible in a draft object, but the element will not be present in the resulting ItemShippingDetails.",
            "type": "number"
          }
        },
        "required": [
          "addressKey",
          "quantity"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#itemshippingtarget"
      },
      "LineItem": {
        "title": "LineItem",
        "includePath": "types/cart/LineItem.raml",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of this LineItem.",
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "name": {
            "description": "The product name.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productSlug": {
            "description": "The slug of a product is inserted on the fly.\nIt is always up-to-date and can therefore be used to link to the product detail page of the product.\nIt is empty if the product has been deleted.\nThe slug is also empty if the cart or order is retrieved via Reference Expansion or is a snapshot in a Message.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productType": {
            "$ref": "#/components/schemas/ProductTypeReference"
          },
          "variant": {
            "description": "The variant data is saved when the variant is added to the cart, and not updated automatically.\nIt can manually be updated with the Recalculate update action.",
            "$ref": "#/components/schemas/ProductVariant"
          },
          "price": {
            "description": "The price of a line item is selected from the prices array of the product variant.\nIf the `variant` field hasn't been updated, the price may not correspond to a price in `variant.prices`.",
            "$ref": "#/components/schemas/Price"
          },
          "taxedPrice": {
            "description": "Set once the `taxRate` is set.",
            "$ref": "#/components/schemas/TaxedItemPrice"
          },
          "totalPrice": {
            "description": "The total price of this line item.\nIf the line item is discounted, then the `totalPrice` is the DiscountedLineItemPriceForQuantity multiplied by `quantity`.\nOtherwise the total price is the product price multiplied by the `quantity`.\n`totalPrice` may or may not include the taxes: it depends on the taxRate.includedInPrice property.",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "quantity": {
            "format": "int64",
            "description": "The amount of a LineItem in the cart.\nMust be a positive integer.",
            "type": "number"
          },
          "state": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemState"
            }
          },
          "taxRate": {
            "description": "Will be set automatically in the `Platform` TaxMode once the shipping address is set is set.\nFor the `External` tax mode the tax rate has to be set explicitly with the ExternalTaxRateDraft.",
            "$ref": "#/components/schemas/TaxRate"
          },
          "supplyChannel": {
            "description": "The supply channel identifies the inventory entries that should be reserved.\nThe channel has\nthe role InventorySupply.",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "distributionChannel": {
            "description": "The distribution channel is used to select a ProductPrice.\nThe channel has the role ProductDistribution.",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "discountedPricePerQuantity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
            }
          },
          "priceMode": {
            "$ref": "#/components/schemas/LineItemPriceMode"
          },
          "lineItemMode": {
            "$ref": "#/components/schemas/LineItemMode"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "shippingDetails": {
            "description": "Container for line item specific address(es).",
            "$ref": "#/components/schemas/ItemShippingDetails"
          }
        },
        "required": [
          "id",
          "productId",
          "name",
          "productType",
          "variant",
          "price",
          "totalPrice",
          "quantity",
          "state",
          "discountedPricePerQuantity",
          "priceMode",
          "lineItemMode"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitem"
      },
      "LineItemDraft": {
        "title": "LineItemDraft",
        "includePath": "types/cart/LineItemDraft.raml",
        "properties": {
          "productId": {
            "type": "string"
          },
          "variantId": {
            "format": "int64",
            "type": "number"
          },
          "sku": {
            "type": "string"
          },
          "quantity": {
            "default": 1,
            "format": "int64",
            "description": "The amount of a `LineItem`in the cart.\nMust be a positive integer.",
            "type": "number"
          },
          "supplyChannel": {
            "description": "By providing supply channel information, you can unique identify\ninventory entries that should be reserved.\nThe provided channel should have\nthe InventorySupply role.",
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "distributionChannel": {
            "description": "The channel is used to select a ProductPrice.\nThe provided channel should have the ProductDistribution role.",
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "externalTaxRate": {
            "description": "An external tax rate can be set if the cart has the `External` TaxMode.",
            "$ref": "#/components/schemas/ExternalTaxRateDraft"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "externalPrice": {
            "description": "Sets the line item `price` to the given value and sets the line item `priceMode` to `ExternalPrice` LineItemPriceMode.",
            "$ref": "#/components/schemas/Money"
          },
          "externalTotalPrice": {
            "description": "Sets the line item `price` and `totalPrice` to the given values and sets the line item `priceMode` to `ExternalTotal` LineItemPriceMode.",
            "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
          },
          "shippingDetails": {
            "description": "Container for line item specific address(es).",
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          }
        },
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#lineitemdraft",
        "x-annotation-builder": [
          {
            "paramNames": [
              "productId",
              "variantId",
              "quantity"
            ]
          },
          {
            "paramNames": [
              "sku",
              "quantity"
            ]
          }
        ],
        "type": "object"
      },
      "LineItemMode": {
        "title": "LineItemMode",
        "enum": [
          "Standard",
          "GiftLineItem"
        ],
        "includePath": "types/cart/LineItemMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "LineItemPriceMode": {
        "title": "LineItemPriceMode",
        "enum": [
          "Platform",
          "ExternalTotal",
          "ExternalPrice"
        ],
        "includePath": "types/cart/LineItemPriceMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "ReplicaCartDraft": {
        "title": "ReplicaCartDraft",
        "includePath": "types/cart/ReplicaCartDraft.raml",
        "type": "object",
        "properties": {
          "reference": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CartReference"
              },
              {
                "$ref": "#/components/schemas/OrderReference"
              }
            ]
          }
        },
        "required": [
          "reference"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#replicacartdraft"
      },
      "RoundingMode": {
        "title": "RoundingMode",
        "enum": [
          "HalfEven",
          "HalfUp",
          "HalfDown"
        ],
        "includePath": "types/cart/RoundingMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "ScoreShippingRateInput": {
        "title": "ScoreShippingRateInput",
        "includePath": "types/cart/ScoreShippingRateInput.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInput"
          },
          {
            "properties": {
              "score": {
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinput",
        "type": "string"
      },
      "ScoreShippingRateInputDraft": {
        "title": "ScoreShippingRateInputDraft",
        "includePath": "types/cart/ScoreShippingRateInputDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInputDraft"
          },
          {
            "properties": {
              "score": {
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#scoreshippingrateinputdraft",
        "type": "string"
      },
      "ShippingInfo": {
        "title": "ShippingInfo",
        "includePath": "types/cart/ShippingInfo.raml",
        "type": "object",
        "properties": {
          "shippingMethodName": {
            "type": "string"
          },
          "price": {
            "description": "Determined based on the ShippingRate and its tiered prices, and either the sum of LineItem prices or the `shippingRateInput` field.",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "shippingRate": {
            "description": "The shipping rate used to determine the price.",
            "$ref": "#/components/schemas/ShippingRate"
          },
          "taxedPrice": {
            "description": "Set once the `taxRate` is set.",
            "$ref": "#/components/schemas/TaxedItemPrice"
          },
          "taxRate": {
            "description": "Will be set automatically in the `Platform` TaxMode once the shipping address is set is set.\nFor the `External` tax mode the tax rate has to be set explicitly with the ExternalTaxRateDraft.",
            "$ref": "#/components/schemas/TaxRate"
          },
          "taxCategory": {
            "$ref": "#/components/schemas/TaxCategoryReference"
          },
          "shippingMethod": {
            "description": "Not set if custom shipping method is used.",
            "$ref": "#/components/schemas/ShippingMethodReference"
          },
          "deliveries": {
            "description": "Deliveries are compilations of information on how the articles are being delivered to the customers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Delivery"
            }
          },
          "discountedPrice": {
            "$ref": "#/components/schemas/DiscountedLineItemPrice"
          },
          "shippingMethodState": {
            "description": "Indicates whether the ShippingMethod referenced in this ShippingInfo is allowed for the cart or not.",
            "$ref": "#/components/schemas/ShippingMethodState"
          }
        },
        "required": [
          "shippingMethodName",
          "price",
          "shippingRate",
          "shippingMethodState"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippinginfo"
      },
      "ShippingMethodState": {
        "title": "ShippingMethodState",
        "enum": [
          "DoesNotMatchCart",
          "MatchesCart"
        ],
        "includePath": "types/cart/ShippingMethodState.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingmethodstate"
      },
      "ShippingRateInput": {
        "title": "ShippingRateInput",
        "includePath": "types/cart/ShippingRateInput.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinput"
      },
      "ShippingRateInputDraft": {
        "title": "ShippingRateInputDraft",
        "includePath": "types/cart/ShippingRateInputDraft.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#shippingrateinputdraft"
      },
      "TaxCalculationMode": {
        "title": "TaxCalculationMode",
        "enum": [
          "LineItemLevel",
          "UnitPriceLevel"
        ],
        "includePath": "types/cart/TaxCalculationMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "TaxMode": {
        "title": "TaxMode",
        "enum": [
          "Platform",
          "External",
          "ExternalAmount",
          "Disabled"
        ],
        "includePath": "types/cart/TaxMode.raml",
        "type": "string",
        "x-annotation-package": "Cart"
      },
      "TaxPortion": {
        "title": "TaxPortion",
        "includePath": "types/cart/TaxPortion.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rate": {
            "minimum": 0,
            "maximum": 1,
            "description": "A number in the range [0..1]",
            "type": "number"
          },
          "amount": {
            "$ref": "#/components/schemas/TypedMoney"
          }
        },
        "required": [
          "rate",
          "amount"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxportion"
      },
      "TaxPortionDraft": {
        "title": "TaxPortionDraft",
        "includePath": "types/cart/TaxPortionDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rate": {
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "rate",
          "amount"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxportion"
      },
      "TaxedItemPrice": {
        "title": "TaxedItemPrice",
        "includePath": "types/cart/TaxedItemPrice.raml",
        "type": "object",
        "properties": {
          "totalNet": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "totalGross": {
            "description": "TaxedItemPrice fields can not be used in query predicates.",
            "$ref": "#/components/schemas/TypedMoney"
          }
        },
        "required": [
          "totalNet",
          "totalGross"
        ],
        "x-annotation-package": "Cart"
      },
      "TaxedPrice": {
        "title": "TaxedPrice",
        "includePath": "types/cart/TaxedPrice.raml",
        "type": "object",
        "properties": {
          "totalNet": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "totalGross": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "taxPortions": {
            "description": "TaxedPrice fields that can be used in query predicates: `totalNet`, `totalGross`.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxPortion"
            }
          }
        },
        "required": [
          "totalNet",
          "totalGross",
          "taxPortions"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxedprice"
      },
      "TaxedPriceDraft": {
        "title": "TaxedPriceDraft",
        "includePath": "types/cart/TaxedPriceDraft.raml",
        "type": "object",
        "properties": {
          "totalNet": {
            "$ref": "#/components/schemas/TypedMoneyDraft"
          },
          "totalGross": {
            "$ref": "#/components/schemas/TypedMoneyDraft"
          },
          "taxPortions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxPortionDraft"
            }
          }
        },
        "required": [
          "totalNet",
          "totalGross",
          "taxPortions"
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#taxedprice"
      },
      "CartAddCustomLineItemAction": {
        "title": "CartAddCustomLineItemAction",
        "includePath": "types/cart/updates/CartAddCustomLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "money": {
                "$ref": "#/components/schemas/Money"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "quantity": {
                "type": "number"
              },
              "slug": {
                "type": "string"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-customlineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartAddDiscountCodeAction": {
        "title": "CartAddDiscountCodeAction",
        "includePath": "types/cart/updates/CartAddDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "code": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-discountcode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartAddItemShippingAddressAction": {
        "title": "CartAddItemShippingAddressAction",
        "includePath": "types/cart/updates/CartAddItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartAddLineItemAction": {
        "title": "CartAddLineItemAction",
        "includePath": "types/cart/updates/CartAddLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              },
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              },
              "productId": {
                "type": "string"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-lineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartAddPaymentAction": {
        "title": "CartAddPaymentAction",
        "includePath": "types/cart/updates/CartAddPaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-payment",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartAddShoppingListAction": {
        "title": "CartAddShoppingListAction",
        "includePath": "types/cart/updates/CartAddShoppingListAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shoppingList": {
                "$ref": "#/components/schemas/ShoppingListResourceIdentifier"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#add-shopping-list",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction": {
        "title": "CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction",
        "includePath": "types/cart/updates/CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "targetsDelta": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemShippingTarget"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#apply-deltatocustomlineitemshippingdetailstargets",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartApplyDeltaToLineItemShippingDetailsTargetsAction": {
        "title": "CartApplyDeltaToLineItemShippingDetailsTargetsAction",
        "includePath": "types/cart/updates/CartApplyDeltaToLineItemShippingDetailsTargetsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "targetsDelta": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemShippingTarget"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#apply-deltatolineitemshippingdetailstargets",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartChangeCustomLineItemMoneyAction": {
        "title": "CartChangeCustomLineItemMoneyAction",
        "includePath": "types/cart/updates/CartChangeCustomLineItemMoneyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "money": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-money",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartChangeCustomLineItemQuantityAction": {
        "title": "CartChangeCustomLineItemQuantityAction",
        "includePath": "types/cart/updates/CartChangeCustomLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-customlineitem-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartChangeLineItemQuantityAction": {
        "title": "CartChangeLineItemQuantityAction",
        "includePath": "types/cart/updates/CartChangeLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-lineitem-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartChangeTaxCalculationModeAction": {
        "title": "CartChangeTaxCalculationModeAction",
        "includePath": "types/cart/updates/CartChangeTaxCalculationModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "taxCalculationMode": {
                "$ref": "#/components/schemas/TaxCalculationMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-taxcalculationmode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartChangeTaxModeAction": {
        "title": "CartChangeTaxModeAction",
        "includePath": "types/cart/updates/CartChangeTaxModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "taxMode": {
                "$ref": "#/components/schemas/TaxMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-taxmode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartChangeTaxRoundingModeAction": {
        "title": "CartChangeTaxRoundingModeAction",
        "includePath": "types/cart/updates/CartChangeTaxRoundingModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "taxRoundingMode": {
                "$ref": "#/components/schemas/RoundingMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#change-tax-roundingmode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartRecalculateAction": {
        "title": "CartRecalculateAction",
        "includePath": "types/cart/updates/CartRecalculateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "updateProductData": {
                "description": "If set to `true`, the line item product data (`name`, `variant` and `productType`) will also be updated.\nIf set to `false`,\nonly the prices and tax rates of the line item will be updated.\nThe updated price of a line item may not correspond to a price in `variant.prices` anymore.",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#recalculate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartRemoveCustomLineItemAction": {
        "title": "CartRemoveCustomLineItemAction",
        "includePath": "types/cart/updates/CartRemoveCustomLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-customlineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartRemoveDiscountCodeAction": {
        "title": "CartRemoveDiscountCodeAction",
        "includePath": "types/cart/updates/CartRemoveDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-discountcode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartRemoveItemShippingAddressAction": {
        "title": "CartRemoveItemShippingAddressAction",
        "includePath": "types/cart/updates/CartRemoveItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartRemoveLineItemAction": {
        "title": "CartRemoveLineItemAction",
        "includePath": "types/cart/updates/CartRemoveLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetailsToRemove": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-lineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartRemovePaymentAction": {
        "title": "CartRemovePaymentAction",
        "includePath": "types/cart/updates/CartRemovePaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#remove-payment",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetAnonymousIdAction": {
        "title": "CartSetAnonymousIdAction",
        "includePath": "types/cart/updates/CartSetAnonymousIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "anonymousId": {
                "description": "If not set, any existing anonymous ID will be removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-anonymous-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetBillingAddressAction": {
        "title": "CartSetBillingAddressAction",
        "includePath": "types/cart/updates/CartSetBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-billing-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCartTotalTaxAction": {
        "title": "CartSetCartTotalTaxAction",
        "includePath": "types/cart/updates/CartSetCartTotalTaxAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "externalTotalGross": {
                "description": "The total gross amount of the cart (totalNet + taxes).",
                "$ref": "#/components/schemas/Money"
              },
              "externalTaxPortions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxPortionDraft"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-cart-total-tax",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCountryAction": {
        "title": "CartSetCountryAction",
        "includePath": "types/cart/updates/CartSetCountryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "country": {
                "$ref": "#/components/schemas/CountryCode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-country",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomFieldAction": {
        "title": "CartSetCustomFieldAction",
        "includePath": "types/cart/updates/CartSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomLineItemCustomFieldAction": {
        "title": "CartSetCustomLineItemCustomFieldAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomLineItemCustomTypeAction": {
        "title": "CartSetCustomLineItemCustomTypeAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomLineItemShippingDetailsAction": {
        "title": "CartSetCustomLineItemShippingDetailsAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitemshippingdetails",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomLineItemTaxAmountAction": {
        "title": "CartSetCustomLineItemTaxAmountAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "externalTaxAmount": {
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxamount",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomLineItemTaxRateAction": {
        "title": "CartSetCustomLineItemTaxRateAction",
        "includePath": "types/cart/updates/CartSetCustomLineItemTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomShippingMethodAction": {
        "title": "CartSetCustomShippingMethodAction",
        "includePath": "types/cart/updates/CartSetCustomShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shippingMethodName": {
                "type": "string"
              },
              "shippingRate": {
                "$ref": "#/components/schemas/ShippingRateDraft"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-custom-shipping-method",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomTypeAction": {
        "title": "CartSetCustomTypeAction",
        "includePath": "types/cart/updates/CartSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomerEmailAction": {
        "title": "CartSetCustomerEmailAction",
        "includePath": "types/cart/updates/CartSetCustomerEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-email",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomerGroupAction": {
        "title": "CartSetCustomerGroupAction",
        "includePath": "types/cart/updates/CartSetCustomerGroupAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-group",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetCustomerIdAction": {
        "title": "CartSetCustomerIdAction",
        "includePath": "types/cart/updates/CartSetCustomerIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "customerId": {
                "description": "If set, a customer with the given ID must exist in the project.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-customer-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetDeleteDaysAfterLastModificationAction": {
        "title": "CartSetDeleteDaysAfterLastModificationAction",
        "includePath": "types/cart/updates/CartSetDeleteDaysAfterLastModificationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "deleteDaysAfterLastModification": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-deletedaysafterlastmodification-beta",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLineItemCustomFieldAction": {
        "title": "CartSetLineItemCustomFieldAction",
        "includePath": "types/cart/updates/CartSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLineItemCustomTypeAction": {
        "title": "CartSetLineItemCustomTypeAction",
        "includePath": "types/cart/updates/CartSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLineItemPriceAction": {
        "title": "CartSetLineItemPriceAction",
        "includePath": "types/cart/updates/CartSetLineItemPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-price",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLineItemShippingDetailsAction": {
        "title": "CartSetLineItemShippingDetailsAction",
        "includePath": "types/cart/updates/CartSetLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitemshippingdetails",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLineItemTaxAmountAction": {
        "title": "CartSetLineItemTaxAmountAction",
        "includePath": "types/cart/updates/CartSetLineItemTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalTaxAmount": {
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxamount",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLineItemTaxRateAction": {
        "title": "CartSetLineItemTaxRateAction",
        "includePath": "types/cart/updates/CartSetLineItemTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-taxrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLineItemTotalPriceAction": {
        "title": "CartSetLineItemTotalPriceAction",
        "includePath": "types/cart/updates/CartSetLineItemTotalPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-lineitem-totalprice",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetLocaleAction": {
        "title": "CartSetLocaleAction",
        "includePath": "types/cart/updates/CartSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-locale",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetShippingAddressAction": {
        "title": "CartSetShippingAddressAction",
        "includePath": "types/cart/updates/CartSetShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetShippingMethodAction": {
        "title": "CartSetShippingMethodAction",
        "includePath": "types/cart/updates/CartSetShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shippingMethod": {
                "$ref": "#/components/schemas/ShippingMethodResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-method",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetShippingMethodTaxAmountAction": {
        "title": "CartSetShippingMethodTaxAmountAction",
        "includePath": "types/cart/updates/CartSetShippingMethodTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "externalTaxAmount": {
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxamount",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetShippingMethodTaxRateAction": {
        "title": "CartSetShippingMethodTaxRateAction",
        "includePath": "types/cart/updates/CartSetShippingMethodTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartSetShippingRateInputAction": {
        "title": "CartSetShippingRateInputAction",
        "includePath": "types/cart/updates/CartSetShippingRateInputAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "shippingRateInput": {
                "description": "Based on the definition of ShippingRateInputType.\nIf CartClassification is defined, it must be ClassificationShippingRateInput.\nIf CartScore is defined, it must be ScoreShippingRateInput.\nOtherwise it can not bet set.",
                "$ref": "#/components/schemas/ShippingRateInputDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#set-shipping-rate-input",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartUpdateItemShippingAddressAction": {
        "title": "CartUpdateItemShippingAddressAction",
        "includePath": "types/cart/updates/CartUpdateItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#update-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Category": {
        "title": "Category",
        "includePath": "types/category/Category.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the category.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the category.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "slug": {
                "description": "human-readable identifiers usually used as deep-link URL to the related category.\nEach slug is unique across a project, but a category can have the same slug for different languages.",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "ancestors": {
                "description": "Contains the parent path towards the root category.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryReference"
                }
              },
              "parent": {
                "description": "A category that is the parent of this category in the category tree.",
                "$ref": "#/components/schemas/CategoryReference"
              },
              "orderHint": {
                "description": "An attribute as base for a custom category order in one level.",
                "type": "string"
              },
              "externalId": {
                "type": "string"
              },
              "metaTitle": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "metaDescription": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "metaKeywords": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "assets": {
                "description": "Can be used to store images, icons or movies related to this category.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Asset"
                }
              },
              "key": {
                "description": "User-specific unique identifier for the category.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category",
        "x-annotation-updateType": "CategoryUpdate",
        "type": "string"
      },
      "CategoryDraft": {
        "title": "CategoryDraft",
        "includePath": "types/category/CategoryDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "slug": {
            "description": "human-readable identifier usually used as deep-link URL to the related category.\nAllowed are alphabetic, numeric, underscore (`_`) and hyphen (`-`) characters.\nMaximum size is 256.\n**Must be unique across a project!** The same category can have the same slug for different languages.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "parent": {
            "description": "A category that is the parent of this category in the category tree.\nThe parent can be set by its ID or by its key.",
            "$ref": "#/components/schemas/CategoryResourceIdentifier"
          },
          "orderHint": {
            "description": "An attribute as base for a custom category order in one level.\nA random value will be assigned by API if not set.",
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "metaTitle": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaDescription": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaKeywords": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDraft"
            }
          },
          "key": {
            "description": "User-defined unique identifier for the category.\nKeys can only contain alphanumeric characters (`a-Z, 0-9`), underscores and hyphens (`-, _`) and be between 2 and 256 characters.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "slug"
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#categorydraft"
      },
      "CategoryPagedQueryResponse": {
        "title": "CategoryPagedQueryResponse",
        "includePath": "types/category/CategoryPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Category"
      },
      "CategoryReference": {
        "title": "CategoryReference",
        "includePath": "types/category/CategoryReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category",
        "type": "string"
      },
      "CategoryResourceIdentifier": {
        "title": "CategoryResourceIdentifier",
        "includePath": "types/category/CategoryResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#category"
      },
      "CategoryUpdate": {
        "title": "CategoryUpdate",
        "includePath": "types/category/CategoryUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Category"
      },
      "CategoryUpdateAction": {
        "title": "CategoryUpdateAction",
        "includePath": "types/category/CategoryUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Category"
      },
      "CategoryAddAssetAction": {
        "title": "CategoryAddAssetAction",
        "includePath": "types/category/updates/CategoryAddAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "asset": {
                "$ref": "#/components/schemas/AssetDraft"
              },
              "position": {
                "format": "int32",
                "description": "When specified, the value might be `0` and should be lower than the total of the assets list.",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#add-asset",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategoryChangeAssetNameAction": {
        "title": "CategoryChangeAssetNameAction",
        "includePath": "types/category/updates/CategoryChangeAssetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-asset-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategoryChangeAssetOrderAction": {
        "title": "CategoryChangeAssetOrderAction",
        "includePath": "types/category/updates/CategoryChangeAssetOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-asset-order",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategoryChangeNameAction": {
        "title": "CategoryChangeNameAction",
        "includePath": "types/category/updates/CategoryChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategoryChangeOrderHintAction": {
        "title": "CategoryChangeOrderHintAction",
        "includePath": "types/category/updates/CategoryChangeOrderHintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "orderHint": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-orderhint",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategoryChangeParentAction": {
        "title": "CategoryChangeParentAction",
        "includePath": "types/category/updates/CategoryChangeParentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/CategoryResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-parent",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategoryChangeSlugAction": {
        "title": "CategoryChangeSlugAction",
        "includePath": "types/category/updates/CategoryChangeSlugAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "slug": {
                "description": "Allowed are alphabetic, numeric, underscore (&#95;) and hyphen (&#45;) characters.\nMaximum size is {{ site.data.api-limits.slugLength }}.",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#change-slug",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategoryRemoveAssetAction": {
        "title": "CategoryRemoveAssetAction",
        "includePath": "types/category/updates/CategoryRemoveAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#remove-asset",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetAssetCustomFieldAction": {
        "title": "CategorySetAssetCustomFieldAction",
        "includePath": "types/category/updates/CategorySetAssetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-custom-field",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetAssetCustomTypeAction": {
        "title": "CategorySetAssetCustomTypeAction",
        "includePath": "types/category/updates/CategorySetAssetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "type": {
                "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "If set, the custom fields are set to this new value.",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetAssetDescriptionAction": {
        "title": "CategorySetAssetDescriptionAction",
        "includePath": "types/category/updates/CategorySetAssetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetAssetKeyAction": {
        "title": "CategorySetAssetKeyAction",
        "includePath": "types/category/updates/CategorySetAssetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "description": "User-defined identifier for the asset.\nIf left blank or set to `null`, the asset key is unset/removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetAssetSourcesAction": {
        "title": "CategorySetAssetSourcesAction",
        "includePath": "types/category/updates/CategorySetAssetSourcesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "sources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssetSource"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-sources",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetAssetTagsAction": {
        "title": "CategorySetAssetTagsAction",
        "includePath": "types/category/updates/CategorySetAssetTagsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-asset-tags",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetCustomFieldAction": {
        "title": "CategorySetCustomFieldAction",
        "includePath": "types/category/updates/CategorySetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetCustomTypeAction": {
        "title": "CategorySetCustomTypeAction",
        "includePath": "types/category/updates/CategorySetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If absent, the custom type and any existing CustomFields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "A valid JSON object, based on the FieldDefinitions of the Type. Sets the custom fields to this value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetDescriptionAction": {
        "title": "CategorySetDescriptionAction",
        "includePath": "types/category/updates/CategorySetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetExternalIdAction": {
        "title": "CategorySetExternalIdAction",
        "includePath": "types/category/updates/CategorySetExternalIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "externalId": {
                "description": "If not defined, the external ID is unset.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-external-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetKeyAction": {
        "title": "CategorySetKeyAction",
        "includePath": "types/category/updates/CategorySetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "User-defined unique identifier for the category.\nKeys can only contain alphanumeric characters (`a-Z, 0-9`), underscores and hyphens (`-, _`) and be between 2 and 256 characters.\nIf `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetMetaDescriptionAction": {
        "title": "CategorySetMetaDescriptionAction",
        "includePath": "types/category/updates/CategorySetMetaDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "metaDescription": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetMetaKeywordsAction": {
        "title": "CategorySetMetaKeywordsAction",
        "includePath": "types/category/updates/CategorySetMetaKeywordsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "metaKeywords": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-keywords",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CategorySetMetaTitleAction": {
        "title": "CategorySetMetaTitleAction",
        "includePath": "types/category/updates/CategorySetMetaTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryUpdateAction"
          },
          {
            "properties": {
              "metaTitle": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Category",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-categories.html#set-meta-title",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Channel": {
        "title": "Channel",
        "includePath": "types/channel/Channel.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the channel.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "Any arbitrary string key that uniquely identifies this channel within the project.",
                "type": "string"
              },
              "roles": {
                "description": "The roles of this channel.\nEach channel must have at least one role.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                }
              },
              "name": {
                "description": "A human-readable name of the channel.",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "description": "A human-readable description of the channel.",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "address": {
                "description": "The address where this channel is located (e.g.\nif the channel is a physical store).",
                "$ref": "#/components/schemas/Address"
              },
              "reviewRatingStatistics": {
                "description": "Statistics about the review ratings taken into account for this channel.",
                "$ref": "#/components/schemas/ReviewRatingStatistics"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "geoLocation": {
                "description": "A GeoJSON geometry object encoding the geo location of the channel.",
                "$ref": "#/components/schemas/GeoJson"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel",
        "x-annotation-updateType": "ChannelUpdate",
        "type": "string"
      },
      "ChannelDraft": {
        "title": "ChannelDraft",
        "includePath": "types/channel/ChannelDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "roles": {
            "description": "If not specified, then channel will get InventorySupply role by default",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelRoleEnum"
            }
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/GeoJson"
          }
        },
        "required": [
          "key"
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channeldraft"
      },
      "ChannelPagedQueryResponse": {
        "title": "ChannelPagedQueryResponse",
        "includePath": "types/channel/ChannelPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Channel"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Channel"
      },
      "ChannelReference": {
        "title": "ChannelReference",
        "includePath": "types/channel/ChannelReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Channel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel",
        "type": "string"
      },
      "ChannelResourceIdentifier": {
        "title": "ChannelResourceIdentifier",
        "includePath": "types/channel/ChannelResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channel"
      },
      "ChannelRoleEnum": {
        "title": "ChannelRoleEnum",
        "enum": [
          "InventorySupply",
          "ProductDistribution",
          "OrderExport",
          "OrderImport",
          "Primary"
        ],
        "includePath": "types/channel/ChannelRoleEnum.raml",
        "type": "string",
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#channelroleenum"
      },
      "ChannelUpdate": {
        "title": "ChannelUpdate",
        "includePath": "types/channel/ChannelUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Channel"
      },
      "ChannelUpdateAction": {
        "title": "ChannelUpdateAction",
        "includePath": "types/channel/ChannelUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Channel"
      },
      "ChannelAddRolesAction": {
        "title": "ChannelAddRolesAction",
        "includePath": "types/channel/updates/ChannelAddRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#add-roles",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelChangeDescriptionAction": {
        "title": "ChannelChangeDescriptionAction",
        "includePath": "types/channel/updates/ChannelChangeDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelChangeKeyAction": {
        "title": "ChannelChangeKeyAction",
        "includePath": "types/channel/updates/ChannelChangeKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelChangeNameAction": {
        "title": "ChannelChangeNameAction",
        "includePath": "types/channel/updates/ChannelChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelRemoveRolesAction": {
        "title": "ChannelRemoveRolesAction",
        "includePath": "types/channel/updates/ChannelRemoveRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#remove-roles",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelSetAddressAction": {
        "title": "ChannelSetAddressAction",
        "includePath": "types/channel/updates/ChannelSetAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelSetCustomFieldAction": {
        "title": "ChannelSetCustomFieldAction",
        "includePath": "types/channel/updates/ChannelSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelSetCustomTypeAction": {
        "title": "ChannelSetCustomTypeAction",
        "includePath": "types/channel/updates/ChannelSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelSetGeoLocationAction": {
        "title": "ChannelSetGeoLocationAction",
        "includePath": "types/channel/updates/ChannelSetGeoLocationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "geoLocation": {
                "$ref": "#/components/schemas/GeoJson"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-geolocation",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ChannelSetRolesAction": {
        "title": "ChannelSetRolesAction",
        "includePath": "types/channel/updates/ChannelSetRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Channel",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-channels.html#set-roles",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Address": {
        "title": "Address",
        "includePath": "types/common/Address.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "streetNumber": {
            "type": "string"
          },
          "additionalStreetInfo": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "company": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "building": {
            "type": "string"
          },
          "apartment": {
            "type": "string"
          },
          "pOBox": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "additionalAddressInfo": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#address"
      },
      "Asset": {
        "title": "Asset",
        "includePath": "types/common/Asset.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSource"
            }
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "sources",
          "name"
        ],
        "x-annotation-package": "Common"
      },
      "AssetDimensions": {
        "title": "AssetDimensions",
        "includePath": "types/common/AssetDimensions.raml",
        "type": "object",
        "properties": {
          "w": {
            "type": "number"
          },
          "h": {
            "type": "number"
          }
        },
        "required": [
          "w",
          "h"
        ],
        "x-annotation-package": "Common"
      },
      "AssetDraft": {
        "title": "AssetDraft",
        "includePath": "types/common/AssetDraft.raml",
        "type": "object",
        "properties": {
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSource"
            }
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "sources",
          "name"
        ],
        "x-annotation-package": "Common"
      },
      "AssetSource": {
        "title": "AssetSource",
        "includePath": "types/common/AssetSource.raml",
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "dimensions": {
            "$ref": "#/components/schemas/AssetDimensions"
          },
          "contentType": {
            "type": "string"
          }
        },
        "required": [
          "uri"
        ],
        "x-annotation-package": "Common"
      },
      "BaseResource": {
        "title": "BaseResource",
        "includePath": "types/common/BaseResource.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-annotation-identifier": true
          },
          "version": {
            "format": "int64",
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "version",
          "createdAt",
          "lastModifiedAt"
        ],
        "x-annotation-package": "Common",
        "x-annotation-abstract": true
      },
      "CentPrecisionMoney": {
        "title": "CentPrecisionMoney",
        "includePath": "types/common/CentPrecisionMoney.raml",
        "$ref": "#/components/schemas/TypedMoney",
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
      },
      "CentPrecisionMoneyDraft": {
        "title": "CentPrecisionMoneyDraft",
        "includePath": "types/common/CentPrecisionMoneyDraft.raml",
        "$ref": "#/components/schemas/TypedMoneyDraft",
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
      },
      "ClientLogging": {
        "title": "ClientLogging",
        "includePath": "types/common/ClientLogging.raml",
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "externalUserId": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerReference"
          },
          "anonymousId": {
            "type": "string"
          }
        },
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types#client-logging"
      },
      "CountryCode": {
        "title": "CountryCode",
        "pattern": "^[A-Z]{2}$",
        "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n",
        "includePath": "types/common/CountryCode.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "CreatedBy": {
        "title": "CreatedBy",
        "includePath": "types/common/CreatedBy.raml",
        "$ref": "#/components/schemas/ClientLogging",
        "x-annotation-package": "Common"
      },
      "CurrencyCode": {
        "title": "CurrencyCode",
        "pattern": "^[A-Z]{3}$",
        "description": "The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n",
        "includePath": "types/common/CurrencyCode.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "DiscountedPrice": {
        "title": "DiscountedPrice",
        "includePath": "types/common/DiscountedPrice.raml",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/Money"
          },
          "discount": {
            "$ref": "#/components/schemas/ProductDiscountReference"
          }
        },
        "required": [
          "value",
          "discount"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#discountedprice"
      },
      "GeoJson": {
        "title": "GeoJson",
        "includePath": "types/common/GeoJson.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Common"
      },
      "GeoJsonPoint": {
        "title": "GeoJsonPoint",
        "includePath": "types/common/GeoJsonPoint.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJson"
          },
          {
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Common",
        "type": "string"
      },
      "HighPrecisionMoney": {
        "title": "HighPrecisionMoney",
        "includePath": "types/common/HighPrecisionMoney.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypedMoney"
          },
          {
            "properties": {
              "preciseAmount": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money",
        "type": "string"
      },
      "HighPrecisionMoneyDraft": {
        "title": "HighPrecisionMoneyDraft",
        "includePath": "types/common/HighPrecisionMoneyDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypedMoneyDraft"
          },
          {
            "properties": {
              "preciseAmount": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money",
        "type": "string"
      },
      "Image": {
        "title": "Image",
        "includePath": "types/common/Image.raml",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "dimensions": {
            "$ref": "#/components/schemas/ImageDimensions"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "dimensions"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
      },
      "ImageDimensions": {
        "title": "ImageDimensions",
        "includePath": "types/common/ImageDimensions.raml",
        "type": "object",
        "properties": {
          "w": {
            "type": "number"
          },
          "h": {
            "type": "number"
          }
        },
        "required": [
          "w",
          "h"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#images"
      },
      "KeyReference": {
        "title": "KeyReference",
        "includePath": "types/common/KeyReference.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "typeId"
        },
        "properties": {
          "typeId": {
            "$ref": "#/components/schemas/ReferenceTypeId"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "typeId",
          "key"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#keyreference"
      },
      "LastModifiedBy": {
        "title": "LastModifiedBy",
        "includePath": "types/common/LastModifiedBy.raml",
        "$ref": "#/components/schemas/ClientLogging",
        "x-annotation-package": "Common"
      },
      "Locale": {
        "title": "Locale",
        "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
        "description": "A locale of [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).\n",
        "includePath": "types/common/Locale.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "LocalizedString": {
        "title": "LocalizedString",
        "includePath": "types/common/LocalizedString.raml",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#localizedstring",
        "x-annotation-asMap": {
          "key": "string",
          "value": "string"
        }
      },
      "Money": {
        "title": "Money",
        "includePath": "types/common/Money.raml",
        "type": "object",
        "properties": {
          "centAmount": {
            "format": "int64",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          }
        },
        "required": [
          "centAmount",
          "currencyCode"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#basemoney"
      },
      "MoneyType": {
        "title": "MoneyType",
        "enum": [
          "centPrecision",
          "highPrecision"
        ],
        "includePath": "types/common/MoneyType.raml",
        "type": "string",
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
      },
      "Price": {
        "title": "Price",
        "includePath": "types/common/Price.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "channel": {
            "$ref": "#/components/schemas/ChannelReference"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "discounted": {
            "$ref": "#/components/schemas/DiscountedPrice"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTier"
            }
          }
        },
        "required": [
          "id",
          "value"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#price"
      },
      "PriceDraft": {
        "title": "PriceDraft",
        "includePath": "types/common/PriceDraft.raml",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/Money"
          },
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroupResourceIdentifier"
          },
          "channel": {
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTierDraft"
            }
          },
          "discounted": {
            "$ref": "#/components/schemas/DiscountedPrice"
          }
        },
        "required": [
          "value"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#pricedraft"
      },
      "PriceTier": {
        "title": "PriceTier",
        "includePath": "types/common/PriceTier.raml",
        "type": "object",
        "properties": {
          "minimumQuantity": {
            "format": "int64",
            "type": "number"
          },
          "value": {
            "$ref": "#/components/schemas/TypedMoney"
          }
        },
        "required": [
          "minimumQuantity",
          "value"
        ],
        "x-annotation-package": "Common"
      },
      "PriceTierDraft": {
        "title": "PriceTierDraft",
        "includePath": "types/common/PriceTierDraft.raml",
        "type": "object",
        "properties": {
          "minimumQuantity": {
            "format": "int64",
            "type": "number"
          },
          "value": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "minimumQuantity",
          "value"
        ],
        "x-annotation-package": "Common"
      },
      "QueryPrice": {
        "title": "QueryPrice",
        "includePath": "types/common/QueryPrice.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Money"
          },
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "channel": {
            "$ref": "#/components/schemas/ChannelReference"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "discounted": {
            "$ref": "#/components/schemas/DiscountedPrice"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceTierDraft"
            }
          }
        },
        "required": [
          "id",
          "value"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#price"
      },
      "Reference": {
        "title": "Reference",
        "includePath": "types/common/Reference.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "typeId"
        },
        "properties": {
          "typeId": {
            "$ref": "#/components/schemas/ReferenceTypeId"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "typeId",
          "id"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference"
      },
      "ReferenceTypeId": {
        "title": "ReferenceTypeId",
        "enum": [
          "cart",
          "cart-discount",
          "category",
          "channel",
          "customer",
          "customer-group",
          "discount-code",
          "key-value-document",
          "payment",
          "product",
          "product-type",
          "product-discount",
          "order",
          "review",
          "shopping-list",
          "shipping-method",
          "state",
          "store",
          "tax-category",
          "type",
          "zone",
          "inventory-entry",
          "order-edit"
        ],
        "includePath": "types/common/ReferenceTypeId.raml",
        "type": "string",
        "x-annotation-package": "Common"
      },
      "ResourceIdentifier": {
        "title": "ResourceIdentifier",
        "includePath": "types/common/ResourceIdentifier.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "typeId"
        },
        "properties": {
          "typeId": {
            "$ref": "#/components/schemas/ReferenceTypeId"
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        },
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#resourceidentifier"
      },
      "ScopedPrice": {
        "title": "ScopedPrice",
        "includePath": "types/common/ScopedPrice.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "currentValue": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroupReference"
          },
          "channel": {
            "$ref": "#/components/schemas/ChannelReference"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "discounted": {
            "$ref": "#/components/schemas/DiscountedPrice"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          }
        },
        "required": [
          "id",
          "value",
          "currentValue"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#scopedprice"
      },
      "TypedMoney": {
        "title": "TypedMoney",
        "includePath": "types/common/TypedMoney.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MoneyType"
          },
          "fractionDigits": {
            "maximum": 12,
            "format": "int32",
            "type": "number"
          },
          "centAmount": {
            "format": "int64",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          }
        },
        "required": [
          "type",
          "fractionDigits",
          "centAmount",
          "currencyCode"
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#money"
      },
      "TypedMoneyDraft": {
        "title": "TypedMoneyDraft",
        "includePath": "types/common/TypedMoneyDraft.raml",
        "discriminator": {
          "propertyName": "type"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Money"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MoneyType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Common",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#basemoney",
        "type": "string"
      },
      "CustomObject": {
        "title": "CustomObject",
        "includePath": "types/custom-object/CustomObject.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "container": {
                "description": "A namespace to group custom objects.",
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomObject",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#customobject",
        "type": "string"
      },
      "CustomObjectDraft": {
        "title": "CustomObjectDraft",
        "includePath": "types/custom-object/CustomObjectDraft.raml",
        "type": "object",
        "properties": {
          "container": {
            "description": "A namespace to group custom objects.",
            "type": "string"
          },
          "key": {
            "description": "A user-defined key that is unique within the given container.",
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "version": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "container",
          "key",
          "value"
        ],
        "x-annotation-package": "CustomObject",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-objects.html#create-a-customobject"
      },
      "CustomObjectPagedQueryResponse": {
        "title": "CustomObjectPagedQueryResponse",
        "includePath": "types/custom-object/CustomObjectPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomObject"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "CustomObject"
      },
      "CustomObjectReference": {
        "title": "CustomObjectReference",
        "includePath": "types/custom-object/CustomObjectReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/CustomObject"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomObject",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-types.html#reference-types",
        "type": "string"
      },
      "CustomerGroup": {
        "title": "CustomerGroup",
        "includePath": "types/customer-group/CustomerGroup.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the customer group.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the customer group.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "User-specific unique identifier for the customer group.",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup",
        "x-annotation-updateType": "CustomerGroupUpdate",
        "type": "string"
      },
      "CustomerGroupDraft": {
        "title": "CustomerGroupDraft",
        "includePath": "types/customer-group/CustomerGroupDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "description": "User-specific unique identifier for the customer group.",
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          }
        },
        "required": [
          "groupName"
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#create-a-customergroup"
      },
      "CustomerGroupPagedQueryResponse": {
        "title": "CustomerGroupPagedQueryResponse",
        "includePath": "types/customer-group/CustomerGroupPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerGroup"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "CustomerGroup"
      },
      "CustomerGroupReference": {
        "title": "CustomerGroupReference",
        "includePath": "types/customer-group/CustomerGroupReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup",
        "type": "string"
      },
      "CustomerGroupResourceIdentifier": {
        "title": "CustomerGroupResourceIdentifier",
        "includePath": "types/customer-group/CustomerGroupResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#customergroup"
      },
      "CustomerGroupUpdate": {
        "title": "CustomerGroupUpdate",
        "includePath": "types/customer-group/CustomerGroupUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerGroupUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "CustomerGroup"
      },
      "CustomerGroupUpdateAction": {
        "title": "CustomerGroupUpdateAction",
        "includePath": "types/customer-group/CustomerGroupUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "CustomerGroup"
      },
      "CustomerGroupChangeNameAction": {
        "title": "CustomerGroupChangeNameAction",
        "includePath": "types/customer-group/updates/CustomerGroupChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerGroupSetCustomFieldAction": {
        "title": "CustomerGroupSetCustomFieldAction",
        "includePath": "types/customer-group/updates/CustomerGroupSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerGroupSetCustomTypeAction": {
        "title": "CustomerGroupSetCustomTypeAction",
        "includePath": "types/customer-group/updates/CustomerGroupSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If absent, the custom type and any existing CustomFields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerGroupSetKeyAction": {
        "title": "CustomerGroupSetKeyAction",
        "includePath": "types/customer-group/updates/CustomerGroupSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerGroupUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "User-specific unique identifier for the customer group.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "CustomerGroup",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customerGroups.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "AnonymousCartSignInMode": {
        "title": "AnonymousCartSignInMode",
        "enum": [
          "MergeWithExistingCustomerCart",
          "UseAsNewActiveCustomerCart"
        ],
        "includePath": "types/customer/AnonymousCartSignInMode.raml",
        "type": "string",
        "x-annotation-package": "Customer"
      },
      "Customer": {
        "title": "Customer",
        "includePath": "types/customer/Customer.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the customer.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the customer.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "customerNumber": {
                "description": "The customer number can be used to create a more human-readable (in contrast to ID) identifier for the customer.\nIt should be unique across a project.\nOnce the field was set it cannot be changed anymore.",
                "type": "string"
              },
              "email": {
                "description": "The customer's email address and the main identifier of uniqueness for a customer account.\nEmail addresses are either unique to the store they're specified for, _or_ for the entire project.\nFor more information, see Email uniquenes.",
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string",
                "format": "date"
              },
              "companyName": {
                "type": "string"
              },
              "vatId": {
                "type": "string"
              },
              "addresses": {
                "description": "The addresses have unique IDs in the addresses list",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                }
              },
              "defaultShippingAddressId": {
                "description": "The address ID in the addresses list",
                "type": "string"
              },
              "shippingAddressIds": {
                "description": "The IDs from the addresses list which are used as shipping addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "defaultBillingAddressId": {
                "description": "The address ID in the addresses list",
                "type": "string"
              },
              "billingAddressIds": {
                "description": "The IDs from the addresses list which are used as billing addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "isEmailVerified": {
                "type": "boolean"
              },
              "externalId": {
                "type": "string"
              },
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "locale": {
                "type": "string"
              },
              "salutation": {
                "type": "string"
              },
              "key": {
                "description": "User-specific unique identifier for a customer.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction",
                "type": "string"
              },
              "stores": {
                "description": "References to the stores the customer account is associated with.\nIf no stores are specified, the customer is a global customer, and can log in using the Password Flow for global Customers.\nIf one or more stores are specified, the customer can only log in using the Password Flow for Customers in a Store for those specific stores.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreKeyReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer",
        "x-annotation-updateType": "CustomerUpdate",
        "type": "string"
      },
      "CustomerChangePassword": {
        "title": "CustomerChangePassword",
        "includePath": "types/customer/CustomerChangePassword.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "format": "int64",
            "type": "number"
          },
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "version",
          "currentPassword",
          "newPassword"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerCreateEmailToken": {
        "title": "CustomerCreateEmailToken",
        "includePath": "types/customer/CustomerCreateEmailToken.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "format": "int64",
            "type": "number"
          },
          "ttlMinutes": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "id",
          "ttlMinutes"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerCreatePasswordResetToken": {
        "title": "CustomerCreatePasswordResetToken",
        "includePath": "types/customer/CustomerCreatePasswordResetToken.raml",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "ttlMinutes": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "email"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerDraft": {
        "title": "CustomerDraft",
        "includePath": "types/customer/CustomerDraft.raml",
        "type": "object",
        "properties": {
          "customerNumber": {
            "description": "String that uniquely identifies a customer.\nIt can be used to create more human-readable (in contrast to ID) identifier for the customer.\nIt should be **unique** across a project.\nOnce it's set it cannot be changed.",
            "type": "string"
          },
          "email": {
            "description": "The customer's email address and the main identifier of uniqueness for a customer account.\nEmail addresses are either unique to the store they're specified for, _or_ for the entire project, and are case insensitive.\nFor more information, see Email uniquenes.",
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "anonymousCartId": {
            "description": "Identifies a single cart that will be assigned to the new customer account.",
            "type": "string"
          },
          "anonymousId": {
            "description": "Identifies carts and orders belonging to an anonymous session that will be assigned to the new customer account.",
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "companyName": {
            "type": "string"
          },
          "vatId": {
            "type": "string"
          },
          "addresses": {
            "description": "Sets the ID of each address to be unique in the addresses list.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "defaultShippingAddress": {
            "format": "int64",
            "description": "The index of the address in the addresses array.\nThe `defaultShippingAddressId` of the customer will be set to the ID of that address.",
            "type": "number"
          },
          "shippingAddresses": {
            "description": "The indices of the shipping addresses in the addresses array.\nThe `shippingAddressIds` of the Customer will be set to the IDs of that addresses.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "defaultBillingAddress": {
            "format": "int64",
            "description": "The index of the address in the addresses array.\nThe `defaultBillingAddressId` of the customer will be set to the ID of that address.",
            "type": "number"
          },
          "billingAddresses": {
            "description": "The indices of the billing addresses in the addresses array.\nThe `billingAddressIds` of the customer will be set to the IDs of that addresses.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "externalId": {
            "type": "string"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroupResourceIdentifier"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "locale": {
            "description": "Must be one of the languages supported for this project",
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "key": {
            "description": "User-specific unique identifier for a customer.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction",
            "type": "string"
          },
          "stores": {
            "description": "References to the stores the customer account is associated with.\nIf no stores are specified, the customer is a global customer, and can log in using the Password Flow for global Customers.\nIf one or more stores are specified, the customer can only log in using the Password Flow for Customers in a Store for those specific stores.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreResourceIdentifier"
            }
          }
        },
        "required": [
          "email",
          "password"
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customerdraft"
      },
      "CustomerEmailVerify": {
        "title": "CustomerEmailVerify",
        "includePath": "types/customer/CustomerEmailVerify.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "tokenValue": {
            "type": "string"
          }
        },
        "required": [
          "tokenValue"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerPagedQueryResponse": {
        "title": "CustomerPagedQueryResponse",
        "includePath": "types/customer/CustomerPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerReference": {
        "title": "CustomerReference",
        "includePath": "types/customer/CustomerReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer",
        "type": "string"
      },
      "CustomerResetPassword": {
        "title": "CustomerResetPassword",
        "includePath": "types/customer/CustomerResetPassword.raml",
        "type": "object",
        "properties": {
          "tokenValue": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "version": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "tokenValue",
          "newPassword"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerResourceIdentifier": {
        "title": "CustomerResourceIdentifier",
        "includePath": "types/customer/CustomerResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer"
      },
      "CustomerSignInResult": {
        "title": "CustomerSignInResult",
        "includePath": "types/customer/CustomerSignInResult.raml",
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "cart": {
            "description": "A cart that is associated to the customer.\nEmpty if the customer does not have a cart yet.",
            "type": "object"
          }
        },
        "required": [
          "customer"
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customersigninresult"
      },
      "CustomerSignin": {
        "title": "CustomerSignin",
        "includePath": "types/customer/CustomerSignin.raml",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "anonymousCartId": {
            "type": "string"
          },
          "anonymousCartSignInMode": {
            "$ref": "#/components/schemas/AnonymousCartSignInMode"
          },
          "anonymousId": {
            "type": "string"
          },
          "updateProductData": {
            "type": "boolean"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerToken": {
        "title": "CustomerToken",
        "includePath": "types/customer/CustomerToken.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "customerId",
          "expiresAt",
          "value"
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customertoken"
      },
      "CustomerUpdate": {
        "title": "CustomerUpdate",
        "includePath": "types/customer/CustomerUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerUpdateAction": {
        "title": "CustomerUpdateAction",
        "includePath": "types/customer/CustomerUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Customer"
      },
      "CustomerAddAddressAction": {
        "title": "CustomerAddAddressAction",
        "includePath": "types/customer/updates/CustomerAddAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerAddBillingAddressIdAction": {
        "title": "CustomerAddBillingAddressIdAction",
        "includePath": "types/customer/updates/CustomerAddBillingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-billing-address-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerAddShippingAddressIdAction": {
        "title": "CustomerAddShippingAddressIdAction",
        "includePath": "types/customer/updates/CustomerAddShippingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-shipping-address-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerAddStoreAction": {
        "title": "CustomerAddStoreAction",
        "includePath": "types/customer/updates/CustomerAddStoreAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "store": {
                "$ref": "#/components/schemas/StoreResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers#add-store-beta",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerChangeAddressAction": {
        "title": "CustomerChangeAddressAction",
        "includePath": "types/customer/updates/CustomerChangeAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerChangeEmailAction": {
        "title": "CustomerChangeEmailAction",
        "includePath": "types/customer/updates/CustomerChangeEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-email",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerRemoveAddressAction": {
        "title": "CustomerRemoveAddressAction",
        "includePath": "types/customer/updates/CustomerRemoveAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerRemoveBillingAddressIdAction": {
        "title": "CustomerRemoveBillingAddressIdAction",
        "includePath": "types/customer/updates/CustomerRemoveBillingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-billing-address-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerRemoveShippingAddressIdAction": {
        "title": "CustomerRemoveShippingAddressIdAction",
        "includePath": "types/customer/updates/CustomerRemoveShippingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-shipping-address-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerRemoveStoreAction": {
        "title": "CustomerRemoveStoreAction",
        "includePath": "types/customer/updates/CustomerRemoveStoreAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "store": {
                "$ref": "#/components/schemas/StoreResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers#remove-store-beta",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetCompanyNameAction": {
        "title": "CustomerSetCompanyNameAction",
        "includePath": "types/customer/updates/CustomerSetCompanyNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "companyName": {
                "description": "If not defined, the company name is unset.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-company-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetCustomFieldAction": {
        "title": "CustomerSetCustomFieldAction",
        "includePath": "types/customer/updates/CustomerSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetCustomTypeAction": {
        "title": "CustomerSetCustomTypeAction",
        "includePath": "types/customer/updates/CustomerSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If absent, the custom type and any existing custom fields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetCustomerGroupAction": {
        "title": "CustomerSetCustomerGroupAction",
        "includePath": "types/customer/updates/CustomerSetCustomerGroupAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "customerGroup": {
                "description": "If not defined, the customer group is unset.",
                "$ref": "#/components/schemas/CustomerGroupResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customergroup",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetCustomerNumberAction": {
        "title": "CustomerSetCustomerNumberAction",
        "includePath": "types/customer/updates/CustomerSetCustomerNumberAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "customerNumber": {
                "description": "It should be **unique** across a project.\nOnce it's set, it cannot be changed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customer-number",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetDateOfBirthAction": {
        "title": "CustomerSetDateOfBirthAction",
        "includePath": "types/customer/updates/CustomerSetDateOfBirthAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "dateOfBirth": {
                "description": "If not defined, the date of birth is unset.",
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-date-of-birth",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetDefaultBillingAddressAction": {
        "title": "CustomerSetDefaultBillingAddressAction",
        "includePath": "types/customer/updates/CustomerSetDefaultBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "description": "If not defined, the customer's `defaultBillingAddress` is unset.",
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-billing-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetDefaultShippingAddressAction": {
        "title": "CustomerSetDefaultShippingAddressAction",
        "includePath": "types/customer/updates/CustomerSetDefaultShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "description": "If not defined, the customer's `defaultShippingAddress` is unset.",
                "type": "string"
              },
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-shipping-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetExternalIdAction": {
        "title": "CustomerSetExternalIdAction",
        "includePath": "types/customer/updates/CustomerSetExternalIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "externalId": {
                "description": "If not defined, the external ID is unset.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-external-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetFirstNameAction": {
        "title": "CustomerSetFirstNameAction",
        "includePath": "types/customer/updates/CustomerSetFirstNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "firstName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-first-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetKeyAction": {
        "title": "CustomerSetKeyAction",
        "includePath": "types/customer/updates/CustomerSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetLastNameAction": {
        "title": "CustomerSetLastNameAction",
        "includePath": "types/customer/updates/CustomerSetLastNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "lastName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-last-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetLocaleAction": {
        "title": "CustomerSetLocaleAction",
        "includePath": "types/customer/updates/CustomerSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-locale",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetMiddleNameAction": {
        "title": "CustomerSetMiddleNameAction",
        "includePath": "types/customer/updates/CustomerSetMiddleNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "middleName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-middle-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetSalutationAction": {
        "title": "CustomerSetSalutationAction",
        "includePath": "types/customer/updates/CustomerSetSalutationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "salutation": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-salutation",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetStoresAction": {
        "title": "CustomerSetStoresAction",
        "includePath": "types/customer/updates/CustomerSetStoresAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "stores": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreResourceIdentifier"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers#set-stores-beta",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetTitleAction": {
        "title": "CustomerSetTitleAction",
        "includePath": "types/customer/updates/CustomerSetTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-title",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomerSetVatIdAction": {
        "title": "CustomerSetVatIdAction",
        "includePath": "types/customer/updates/CustomerSetVatIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerUpdateAction"
          },
          {
            "properties": {
              "vatId": {
                "description": "If not defined, the vat Id is unset.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Customer",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-vat-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCode": {
        "title": "DiscountCode",
        "includePath": "types/discount-code/DiscountCode.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the discount code.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "code": {
                "description": "Unique identifier of this discount code.\nThis value is added to the cart\nto enable the related cart discounts in the cart.",
                "type": "string"
              },
              "cartDiscounts": {
                "description": "The referenced matching cart discounts can be applied to the cart once the DiscountCode is added.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                }
              },
              "cartPredicate": {
                "description": "The discount code can only be applied to carts that match this predicate.",
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "references": {
                "description": "The platform will generate this array from the cart predicate.\nIt contains the references of all the resources that are addressed in the predicate.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                }
              },
              "maxApplications": {
                "format": "int64",
                "description": "The discount code can only be applied `maxApplications` times.",
                "type": "number"
              },
              "maxApplicationsPerCustomer": {
                "format": "int64",
                "description": "The discount code can only be applied `maxApplicationsPerCustomer` times per customer.",
                "type": "number"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "groups": {
                "description": "The groups to which this discount code belong.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "validFrom": {
                "description": "The time from which the discount can be applied on a cart.\nBefore that time the code is invalid.",
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "description": "The time until the discount can be applied on a cart.\nAfter that time the code is invalid.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode",
        "x-annotation-updateType": "DiscountCodeUpdate",
        "type": "string"
      },
      "DiscountCodeDraft": {
        "title": "DiscountCodeDraft",
        "includePath": "types/discount-code/DiscountCodeDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "code": {
            "description": "Unique identifier of this discount code.\nThis value is added to the cart\nto enable the related cart discounts in the cart.",
            "type": "string"
          },
          "cartDiscounts": {
            "description": "The referenced matching cart discounts can be applied to the cart once the discount code is added.\nThe number of cart discounts in a discount code is limited to **10**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartDiscountResourceIdentifier"
            }
          },
          "cartPredicate": {
            "description": "The discount code can only be applied to carts that match this predicate.",
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "maxApplications": {
            "format": "int64",
            "type": "number"
          },
          "maxApplicationsPerCustomer": {
            "format": "int64",
            "type": "number"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "groups": {
            "description": "The groups to which this discount code shall belong to.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validFrom": {
            "description": "The time from which the discount can be applied on a cart.\nBefore that time the code is invalid.",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "description": "The time until the discount can be applied on a cart.\nAfter that time the code is invalid.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "code",
          "cartDiscounts"
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcodedraft"
      },
      "DiscountCodePagedQueryResponse": {
        "title": "DiscountCodePagedQueryResponse",
        "includePath": "types/discount-code/DiscountCodePagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCode"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "DiscountCode"
      },
      "DiscountCodeReference": {
        "title": "DiscountCodeReference",
        "includePath": "types/discount-code/DiscountCodeReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/DiscountCode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode",
        "type": "string"
      },
      "DiscountCodeResourceIdentifier": {
        "title": "DiscountCodeResourceIdentifier",
        "includePath": "types/discount-code/DiscountCodeResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#discountcode"
      },
      "DiscountCodeUpdate": {
        "title": "DiscountCodeUpdate",
        "includePath": "types/discount-code/DiscountCodeUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountCodeUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "DiscountCode"
      },
      "DiscountCodeUpdateAction": {
        "title": "DiscountCodeUpdateAction",
        "includePath": "types/discount-code/DiscountCodeUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "DiscountCode"
      },
      "DiscountCodeChangeCartDiscountsAction": {
        "title": "DiscountCodeChangeCartDiscountsAction",
        "includePath": "types/discount-code/updates/DiscountCodeChangeCartDiscountsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "cartDiscounts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountResourceIdentifier"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-cartdiscounts",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeChangeGroupsAction": {
        "title": "DiscountCodeChangeGroupsAction",
        "includePath": "types/discount-code/updates/DiscountCodeChangeGroupsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "groups": {
                "description": "The groups to which this discount code shall belong to.\nUse empty array to remove the code from all groups.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-groups",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeChangeIsActiveAction": {
        "title": "DiscountCodeChangeIsActiveAction",
        "includePath": "types/discount-code/updates/DiscountCodeChangeIsActiveAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "isActive": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#change-isactive",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetCartPredicateAction": {
        "title": "DiscountCodeSetCartPredicateAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetCartPredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "cartPredicate": {
                "description": "If the `cartPredicate` parameter is not included, the field will be emptied.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-cart-predicate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetCustomFieldAction": {
        "title": "DiscountCodeSetCustomFieldAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetCustomTypeAction": {
        "title": "DiscountCodeSetCustomTypeAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If absent, the custom type and any existing CustomFields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetDescriptionAction": {
        "title": "DiscountCodeSetDescriptionAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "description": {
                "description": "If the `description` parameter is not included, the field will be emptied.",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetMaxApplicationsAction": {
        "title": "DiscountCodeSetMaxApplicationsAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetMaxApplicationsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "maxApplications": {
                "format": "int64",
                "description": "If the `maxApplications` parameter is not included, the field will be emptied.",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetMaxApplicationsPerCustomerAction": {
        "title": "DiscountCodeSetMaxApplicationsPerCustomerAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetMaxApplicationsPerCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "maxApplicationsPerCustomer": {
                "format": "int64",
                "description": "If the `maxApplicationsPerCustomer` parameter is not included, the field will be emptied.",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-max-applications-per-customer",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetNameAction": {
        "title": "DiscountCodeSetNameAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "description": "If the `name` parameter is not included, the field will be emptied.",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetValidFromAction": {
        "title": "DiscountCodeSetValidFromAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetValidFromAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validfrom",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetValidFromAndUntilAction": {
        "title": "DiscountCodeSetValidFromAndUntilAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetValidFromAndUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-valid-from-and-until",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "DiscountCodeSetValidUntilAction": {
        "title": "DiscountCodeSetValidUntilAction",
        "includePath": "types/discount-code/updates/DiscountCodeSetValidUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountCodeUpdateAction"
          },
          {
            "properties": {
              "validUntil": {
                "description": "If absent, the field with the value is removed in case a value was set before.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "DiscountCode",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-discountCodes.html#set-validuntil",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "AccessDeniedError": {
        "title": "AccessDeniedError",
        "includePath": "types/error/AccessDeniedError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "ConcurrentModificationError": {
        "title": "ConcurrentModificationError",
        "includePath": "types/error/ConcurrentModificationError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "currentVersion": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DiscountCodeNonApplicableError": {
        "title": "DiscountCodeNonApplicableError",
        "includePath": "types/error/DiscountCodeNonApplicableError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "discountCode": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "dicountCodeId": {
                "type": "string"
              },
              "validFrom": {
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time"
              },
              "validityCheckTime": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateAttributeValueError": {
        "title": "DuplicateAttributeValueError",
        "includePath": "types/error/DuplicateAttributeValueError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "attribute": {
                "$ref": "#/components/schemas/Attribute"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateAttributeValuesError": {
        "title": "DuplicateAttributeValuesError",
        "includePath": "types/error/DuplicateAttributeValuesError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attribute"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateFieldError": {
        "title": "DuplicateFieldError",
        "includePath": "types/error/DuplicateFieldError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "field": {
                "type": "string"
              },
              "duplicateValue": {
                "type": "string"
              },
              "conflictingResource": {
                "$ref": "#/components/schemas/Reference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateFieldWithConflictingResourceError": {
        "title": "DuplicateFieldWithConflictingResourceError",
        "includePath": "types/error/DuplicateFieldWithConflictingResourceError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "field": {
                "type": "string"
              },
              "duplicateValue": {
                "type": "string"
              },
              "conflictingResource": {
                "$ref": "#/components/schemas/Reference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicatePriceScopeError": {
        "title": "DuplicatePriceScopeError",
        "includePath": "types/error/DuplicatePriceScopeError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "conflictingPrices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "DuplicateVariantValuesError": {
        "title": "DuplicateVariantValuesError",
        "includePath": "types/error/DuplicateVariantValuesError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "variantValues": {
                "$ref": "#/components/schemas/VariantValues"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "EnumValueIsUsedError": {
        "title": "EnumValueIsUsedError",
        "includePath": "types/error/EnumValueIsUsedError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "ErrorByExtension": {
        "title": "ErrorByExtension",
        "includePath": "types/error/ErrorByExtension.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "x-annotation-package": "Error"
      },
      "ErrorObject": {
        "title": "ErrorObject",
        "includePath": "types/error/ErrorObject.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "code"
        },
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "x-annotation-package": "Error"
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "includePath": "types/error/ErrorResponse.raml",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorObject"
            }
          }
        },
        "required": [
          "statusCode",
          "message"
        ],
        "x-annotation-package": "Error"
      },
      "ExtensionBadResponseError": {
        "title": "ExtensionBadResponseError",
        "includePath": "types/error/ExtensionBadResponseError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "localizedMessage": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "extensionExtraInfo": {
                "type": "object"
              },
              "errorByExtension": {
                "$ref": "#/components/schemas/ErrorByExtension"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "ExtensionNoResponseError": {
        "title": "ExtensionNoResponseError",
        "includePath": "types/error/ExtensionNoResponseError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "localizedMessage": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "extensionExtraInfo": {
                "type": "object"
              },
              "errorByExtension": {
                "$ref": "#/components/schemas/ErrorByExtension"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "ExtensionUpdateActionsFailedError": {
        "title": "ExtensionUpdateActionsFailedError",
        "includePath": "types/error/ExtensionUpdateActionsFailedError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "localizedMessage": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "extensionExtraInfo": {
                "type": "object"
              },
              "errorByExtension": {
                "$ref": "#/components/schemas/ErrorByExtension"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "InsufficientScopeError": {
        "title": "InsufficientScopeError",
        "includePath": "types/error/InsufficientScopeError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidCredentialsError": {
        "title": "InvalidCredentialsError",
        "includePath": "types/error/InvalidCredentialsError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidCurrentPasswordError": {
        "title": "InvalidCurrentPasswordError",
        "includePath": "types/error/InvalidCurrentPasswordError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidFieldError": {
        "title": "InvalidFieldError",
        "includePath": "types/error/InvalidFieldError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "field": {
                "type": "string"
              },
              "invalidValue": {
                "type": "string"
              },
              "allowedValues": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "InvalidInputError": {
        "title": "InvalidInputError",
        "includePath": "types/error/InvalidInputError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidItemShippingDetailsError": {
        "title": "InvalidItemShippingDetailsError",
        "includePath": "types/error/InvalidItemShippingDetailsError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "subject": {
                "type": "string"
              },
              "itemId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "InvalidJsonInputError": {
        "title": "InvalidJsonInputError",
        "includePath": "types/error/InvalidJsonInputError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidOperationError": {
        "title": "InvalidOperationError",
        "includePath": "types/error/InvalidOperationError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidSubjectError": {
        "title": "InvalidSubjectError",
        "includePath": "types/error/InvalidSubjectError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "InvalidTokenError": {
        "title": "InvalidTokenError",
        "includePath": "types/error/InvalidTokenError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "LanguageUsedInStoresError": {
        "title": "LanguageUsedInStoresError",
        "includePath": "types/error/LanguageUsedInStoresError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "MatchingPriceNotFoundError": {
        "title": "MatchingPriceNotFoundError",
        "includePath": "types/error/MatchingPriceNotFoundError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "productId": {
                "type": "string"
              },
              "variantId": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "channel": {
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "MissingTaxRateForCountryError": {
        "title": "MissingTaxRateForCountryError",
        "includePath": "types/error/MissingTaxRateForCountryError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "taxCategoryId": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "NoMatchingProductDiscountFoundError": {
        "title": "NoMatchingProductDiscountFoundError",
        "includePath": "types/error/NoMatchingProductDiscountFoundError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "OutOfStockError": {
        "title": "OutOfStockError",
        "includePath": "types/error/OutOfStockError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "lineItems": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "skus": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "PriceChangedError": {
        "title": "PriceChangedError",
        "includePath": "types/error/PriceChangedError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "lineItems": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "shipping": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "ReferenceExistsError": {
        "title": "ReferenceExistsError",
        "includePath": "types/error/ReferenceExistsError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "referencedBy": {
                "$ref": "#/components/schemas/ReferenceTypeId"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "RequiredFieldError": {
        "title": "RequiredFieldError",
        "includePath": "types/error/RequiredFieldError.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorObject"
          },
          {
            "properties": {
              "field": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Error",
        "type": "string"
      },
      "ResourceNotFoundError": {
        "title": "ResourceNotFoundError",
        "includePath": "types/error/ResourceNotFoundError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "ShippingMethodDoesNotMatchCartError": {
        "title": "ShippingMethodDoesNotMatchCartError",
        "includePath": "types/error/ShippingMethodDoesNotMatchCartError.raml",
        "$ref": "#/components/schemas/ErrorObject",
        "x-annotation-package": "Error"
      },
      "VariantValues": {
        "title": "VariantValues",
        "includePath": "types/error/VariantValues.raml",
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDraft"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          }
        },
        "required": [
          "prices",
          "attributes"
        ],
        "x-annotation-package": "Error"
      },
      "Extension": {
        "title": "Extension",
        "includePath": "types/extension/Extension.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "type": "string"
              },
              "destination": {
                "$ref": "#/components/schemas/ExtensionDestination"
              },
              "triggers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExtensionTrigger"
                }
              },
              "timeoutInMs": {
                "description": "The maximum time the commercetools platform waits for a response from the extension.\nIf not present, `2000` (2 seconds) is used.",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html",
        "x-annotation-updateType": "ExtensionUpdate",
        "type": "string"
      },
      "ExtensionAWSLambdaDestination": {
        "title": "ExtensionAWSLambdaDestination",
        "includePath": "types/extension/ExtensionAWSLambdaDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionDestination"
          },
          {
            "properties": {
              "arn": {
                "type": "string"
              },
              "accessKey": {
                "type": "string"
              },
              "accessSecret": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionAction": {
        "title": "ExtensionAction",
        "enum": [
          "Create",
          "Update"
        ],
        "includePath": "types/extension/ExtensionAction.raml",
        "type": "string",
        "x-annotation-package": "Extension"
      },
      "ExtensionAuthorizationHeaderAuthentication": {
        "title": "ExtensionAuthorizationHeaderAuthentication",
        "includePath": "types/extension/ExtensionAuthorizationHeaderAuthentication.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionHttpDestinationAuthentication"
          },
          {
            "properties": {
              "headerValue": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionAzureFunctionsAuthentication": {
        "title": "ExtensionAzureFunctionsAuthentication",
        "includePath": "types/extension/ExtensionAzureFunctionsAuthentication.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionHttpDestinationAuthentication"
          },
          {
            "properties": {
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionDestination": {
        "title": "ExtensionDestination",
        "includePath": "types/extension/ExtensionDestination.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionDraft": {
        "title": "ExtensionDraft",
        "includePath": "types/extension/ExtensionDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "description": "User-specific unique identifier for the extension",
            "type": "string"
          },
          "destination": {
            "description": "Details where the extension can be reached",
            "$ref": "#/components/schemas/ExtensionDestination"
          },
          "triggers": {
            "description": "Describes what triggers the extension",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionTrigger"
            }
          },
          "timeoutInMs": {
            "description": "The maximum time the commercetools platform waits for a response from the extension.\nThe maximum value is 2000 ms (2 seconds).\nThis limit can be increased per project after we review the performance impact.\nPlease contact Support via the [Support Portal](https://support.commercetools.com) and provide the region, project key and use case.",
            "type": "integer"
          }
        },
        "required": [
          "destination",
          "triggers"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionHttpDestination": {
        "title": "ExtensionHttpDestination",
        "includePath": "types/extension/ExtensionHttpDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionDestination"
          },
          {
            "properties": {
              "url": {
                "type": "string"
              },
              "authentication": {
                "$ref": "#/components/schemas/ExtensionHttpDestinationAuthentication"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "type": "string"
      },
      "ExtensionHttpDestinationAuthentication": {
        "title": "ExtensionHttpDestinationAuthentication",
        "includePath": "types/extension/ExtensionHttpDestinationAuthentication.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionInput": {
        "title": "ExtensionInput",
        "includePath": "types/extension/ExtensionInput.raml",
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ExtensionAction"
          },
          "resource": {
            "$ref": "#/components/schemas/Reference"
          }
        },
        "required": [
          "action",
          "resource"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionPagedQueryResponse": {
        "title": "ExtensionPagedQueryResponse",
        "includePath": "types/extension/ExtensionPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionResourceTypeId": {
        "title": "ExtensionResourceTypeId",
        "enum": [
          "cart",
          "order",
          "payment",
          "customer"
        ],
        "includePath": "types/extension/ExtensionResourceTypeId.raml",
        "type": "string",
        "x-annotation-package": "Extension"
      },
      "ExtensionTrigger": {
        "title": "ExtensionTrigger",
        "includePath": "types/extension/ExtensionTrigger.raml",
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "$ref": "#/components/schemas/ExtensionResourceTypeId"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionAction"
            }
          }
        },
        "required": [
          "resourceTypeId",
          "actions"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionUpdate": {
        "title": "ExtensionUpdate",
        "includePath": "types/extension/ExtensionUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionUpdateAction": {
        "title": "ExtensionUpdateAction",
        "includePath": "types/extension/ExtensionUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Extension"
      },
      "ExtensionChangeDestinationAction": {
        "title": "ExtensionChangeDestinationAction",
        "includePath": "types/extension/updates/ExtensionChangeDestinationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionUpdateAction"
          },
          {
            "properties": {
              "destination": {
                "$ref": "#/components/schemas/ExtensionDestination"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#change-destination",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ExtensionChangeTriggersAction": {
        "title": "ExtensionChangeTriggersAction",
        "includePath": "types/extension/updates/ExtensionChangeTriggersAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionUpdateAction"
          },
          {
            "properties": {
              "triggers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExtensionTrigger"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#change-triggers",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ExtensionSetKeyAction": {
        "title": "ExtensionSetKeyAction",
        "includePath": "types/extension/updates/ExtensionSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ExtensionSetTimeoutInMsAction": {
        "title": "ExtensionSetTimeoutInMsAction",
        "includePath": "types/extension/updates/ExtensionSetTimeoutInMsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExtensionUpdateAction"
          },
          {
            "properties": {
              "timeoutInMs": {
                "description": "The maximum time the commercetools platform waits for a response from the extension.\nThe maximum value is 2000 ms (2 seconds).\nThis limit can be increased per project after we review the performance impact.\nPlease contact Support via the support and provide the region, project key and use case.",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Extension",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-api-extensions.html#set-timeout-in-ms",
        "type": "string"
      },
      "GraphQLError": {
        "title": "GraphQLError",
        "includePath": "types/graphql/GraphQLError.raml",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphQLErrorLocation"
            }
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "message",
          "locations",
          "path"
        ],
        "x-annotation-package": "GraphQL"
      },
      "GraphQLErrorLocation": {
        "title": "GraphQLErrorLocation",
        "includePath": "types/graphql/GraphQLErrorLocation.raml",
        "type": "object",
        "properties": {
          "line": {
            "type": "integer"
          },
          "column": {
            "type": "integer"
          }
        },
        "required": [
          "line",
          "column"
        ],
        "x-annotation-package": "GraphQL"
      },
      "GraphQLRequest": {
        "title": "GraphQLRequest",
        "includePath": "types/graphql/GraphQLRequest.raml",
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "variables": {
            "$ref": "#/components/schemas/GraphQLVariablesMap"
          }
        },
        "required": [
          "query"
        ],
        "x-annotation-package": "GraphQL"
      },
      "GraphQLResponse": {
        "title": "GraphQLResponse",
        "includePath": "types/graphql/GraphQLResponse.raml",
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GraphQLError"
            }
          }
        },
        "x-annotation-package": "GraphQL"
      },
      "GraphQLVariablesMap": {
        "title": "GraphQLVariablesMap",
        "includePath": "types/graphql/GraphQLVariablesMap.raml",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "x-annotation-package": "GraphQL"
      },
      "InventoryEntry": {
        "title": "InventoryEntry",
        "includePath": "types/inventory/InventoryEntry.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the inventory entry.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "sku": {
                "type": "string"
              },
              "supplyChannel": {
                "description": "Optional connection to a particular supplier.",
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "quantityOnStock": {
                "format": "int64",
                "description": "Overall amount of stock.\n(available + reserved)",
                "type": "number"
              },
              "availableQuantity": {
                "format": "int64",
                "description": "Available amount of stock.\n(available means: `quantityOnStock` - reserved quantity)",
                "type": "number"
              },
              "restockableInDays": {
                "format": "int64",
                "description": "The time period in days, that tells how often this inventory entry is restocked.",
                "type": "number"
              },
              "expectedDelivery": {
                "description": "The date and time of the next restock.",
                "type": "string",
                "format": "date-time"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentry",
        "x-annotation-updateType": "InventoryEntryUpdate",
        "x-annotation-actionType": "InventoryEntryUpdateAction",
        "type": "string"
      },
      "InventoryEntryDraft": {
        "title": "InventoryEntryDraft",
        "includePath": "types/inventory/InventoryEntryDraft.raml",
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "supplyChannel": {
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "quantityOnStock": {
            "format": "int64",
            "type": "number"
          },
          "restockableInDays": {
            "format": "int64",
            "type": "number"
          },
          "expectedDelivery": {
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          }
        },
        "required": [
          "sku",
          "quantityOnStock"
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#inventoryentrydraft"
      },
      "InventoryEntryReference": {
        "title": "InventoryEntryReference",
        "includePath": "types/inventory/InventoryEntryReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/InventoryEntry"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "type": "string"
      },
      "InventoryEntryResourceIdentifier": {
        "title": "InventoryEntryResourceIdentifier",
        "includePath": "types/inventory/InventoryEntryResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Inventory"
      },
      "InventoryEntryUpdate": {
        "title": "InventoryEntryUpdate",
        "includePath": "types/inventory/InventoryEntryUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryEntryUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Inventory"
      },
      "InventoryEntryUpdateAction": {
        "title": "InventoryEntryUpdateAction",
        "includePath": "types/inventory/InventoryEntryUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Inventory"
      },
      "InventoryPagedQueryResponse": {
        "title": "InventoryPagedQueryResponse",
        "includePath": "types/inventory/InventoryPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryEntry"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Inventory"
      },
      "InventoryEntryAddQuantityAction": {
        "title": "InventoryEntryAddQuantityAction",
        "includePath": "types/inventory/updates/InventoryEntryAddQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#add-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "InventoryEntryChangeQuantityAction": {
        "title": "InventoryEntryChangeQuantityAction",
        "includePath": "types/inventory/updates/InventoryEntryChangeQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#change-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "InventoryEntryRemoveQuantityAction": {
        "title": "InventoryEntryRemoveQuantityAction",
        "includePath": "types/inventory/updates/InventoryEntryRemoveQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#remove-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "InventoryEntrySetCustomFieldAction": {
        "title": "InventoryEntrySetCustomFieldAction",
        "includePath": "types/inventory/updates/InventoryEntrySetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "InventoryEntrySetCustomTypeAction": {
        "title": "InventoryEntrySetCustomTypeAction",
        "includePath": "types/inventory/updates/InventoryEntrySetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If absent, the custom type and any existing CustomFields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the custom fields to this value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "InventoryEntrySetExpectedDeliveryAction": {
        "title": "InventoryEntrySetExpectedDeliveryAction",
        "includePath": "types/inventory/updates/InventoryEntrySetExpectedDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "expectedDelivery": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-expecteddelivery",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "InventoryEntrySetRestockableInDaysAction": {
        "title": "InventoryEntrySetRestockableInDaysAction",
        "includePath": "types/inventory/updates/InventoryEntrySetRestockableInDaysAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "restockableInDays": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-restockableindays",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "InventoryEntrySetSupplyChannelAction": {
        "title": "InventoryEntrySetSupplyChannelAction",
        "includePath": "types/inventory/updates/InventoryEntrySetSupplyChannelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryEntryUpdateAction"
          },
          {
            "properties": {
              "supplyChannel": {
                "description": "If absent, the supply channel is removed.\nThis action will fail if an entry with the combination of sku and supplyChannel already exists.",
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Inventory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-inventory.html#set-supplychannel",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "MyCart": {
        "title": "MyCart",
        "includePath": "types/me/MyCart.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "customerId": {
                "type": "string"
              },
              "customerEmail": {
                "type": "string"
              },
              "anonymousId": {
                "type": "string"
              },
              "store": {
                "$ref": "#/components/schemas/StoreKeyReference"
              },
              "lineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                }
              },
              "customLineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomLineItem"
                }
              },
              "totalPrice": {
                "$ref": "#/components/schemas/TypedMoney"
              },
              "taxedPrice": {
                "$ref": "#/components/schemas/TaxedPrice"
              },
              "cartState": {
                "$ref": "#/components/schemas/CartState"
              },
              "shippingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "billingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "inventoryMode": {
                "$ref": "#/components/schemas/InventoryMode"
              },
              "taxMode": {
                "$ref": "#/components/schemas/TaxMode"
              },
              "taxRoundingMode": {
                "$ref": "#/components/schemas/RoundingMode"
              },
              "taxCalculationMode": {
                "$ref": "#/components/schemas/TaxCalculationMode"
              },
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "country": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "shippingInfo": {
                "$ref": "#/components/schemas/ShippingInfo"
              },
              "discountCodes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCodeInfo"
                }
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "paymentInfo": {
                "$ref": "#/components/schemas/PaymentInfo"
              },
              "locale": {
                "type": "string"
              },
              "deleteDaysAfterLastModification": {
                "type": "integer"
              },
              "refusedGifts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                }
              },
              "origin": {
                "$ref": "#/components/schemas/CartOrigin"
              },
              "shippingRateInput": {
                "$ref": "#/components/schemas/ShippingRateInput"
              },
              "itemShippingAddresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#my-carts",
        "x-annotation-updateType": "MyCartUpdate",
        "x-annotation-actionType": "MyCartUpdateAction",
        "type": "string"
      },
      "MyCartDraft": {
        "title": "MyCartDraft",
        "includePath": "types/me/MyCartDraft.raml",
        "type": "object",
        "properties": {
          "currency": {
            "description": "A three-digit currency code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "customerEmail": {
            "type": "string"
          },
          "country": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "type": "string"
          },
          "inventoryMode": {
            "description": "Default inventory mode is `None`.",
            "$ref": "#/components/schemas/InventoryMode"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyLineItemDraft"
            }
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethodResourceIdentifier"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "locale": {
            "type": "string"
          },
          "taxMode": {
            "description": "The `TaxMode` `Disabled` can not be set on the My Carts endpoint.",
            "$ref": "#/components/schemas/TaxMode"
          },
          "deleteDaysAfterLastModification": {
            "format": "int64",
            "description": "The cart will be deleted automatically if it hasn't been modified for the specified amount of days and it is in the `Active` CartState.\nIf a ChangeSubscription for carts exists, a `ResourceDeleted` notification will be sent.",
            "type": "number"
          },
          "itemShippingAddresses": {
            "description": "Contains addresses for orders with multiple shipping addresses.\nEach address must contain a key which is unique in this cart.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "required": [
          "currency"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mycartdraft"
      },
      "MyCartUpdateAction": {
        "title": "MyCartUpdateAction",
        "includePath": "types/me/MyCartUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#update-actions"
      },
      "MyCustomer": {
        "title": "MyCustomer",
        "includePath": "types/me/MyCustomer.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "customerNumber": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string",
                "format": "date"
              },
              "companyName": {
                "type": "string"
              },
              "vatId": {
                "type": "string"
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                }
              },
              "defaultShippingAddressId": {
                "type": "string"
              },
              "shippingAddressIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "defaultBillingAddressId": {
                "type": "string"
              },
              "billingAddressIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "isEmailVerified": {
                "type": "boolean"
              },
              "externalId": {
                "type": "string"
              },
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "locale": {
                "type": "string"
              },
              "salutation": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "stores": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreKeyReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#customer",
        "x-annotation-updateType": "MyCustomerUpdate",
        "x-annotation-actionType": "MyCustomerUpdateAction",
        "type": "string"
      },
      "MyCustomerDraft": {
        "title": "MyCustomerDraft",
        "includePath": "types/me/MyCustomerDraft.raml",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "companyName": {
            "type": "string"
          },
          "vatId": {
            "type": "string"
          },
          "addresses": {
            "description": "Sets the ID of each address to be unique in the addresses list.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "defaultShippingAddress": {
            "format": "int64",
            "description": "The index of the address in the addresses array.\nThe `defaultShippingAddressId` of the customer will be set to the ID of that address.",
            "type": "number"
          },
          "defaultBillingAddress": {
            "format": "int64",
            "description": "The index of the address in the addresses array.\nThe `defaultBillingAddressId` of the customer will be set to the ID of that address.",
            "type": "number"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFields"
          },
          "locale": {
            "type": "string"
          },
          "stores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreResourceIdentifier"
            }
          }
        },
        "required": [
          "email",
          "password"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile.html#mycustomerdraft"
      },
      "MyCustomerUpdateAction": {
        "title": "MyCustomerUpdateAction",
        "includePath": "types/me/MyCustomerUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-profile#update-actions"
      },
      "MyLineItemDraft": {
        "title": "MyLineItemDraft",
        "includePath": "types/me/MyLineItemDraft.raml",
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "variantId": {
            "format": "int64",
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "supplyChannel": {
            "description": "By providing supply channel information, you can unique identify\ninventory entries that should be reserved.\nThe provided channel should have the InventorySupply role.",
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "distributionChannel": {
            "description": "The channel is used to select a ProductPrice.\nThe provided channel should have the ProductDistribution role.",
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "shippingDetails": {
            "description": "Container for line item specific address(es).",
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          },
          "sku": {
            "type": "string"
          }
        },
        "required": [
          "productId",
          "variantId",
          "quantity"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts.html#mylineitemdraft"
      },
      "MyOrder": {
        "title": "MyOrder",
        "includePath": "types/me/MyOrder.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "completedAt": {
                "type": "string",
                "format": "date-time"
              },
              "orderNumber": {
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "customerEmail": {
                "type": "string"
              },
              "anonymousId": {
                "type": "string"
              },
              "store": {
                "$ref": "#/components/schemas/StoreKeyReference"
              },
              "lineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                }
              },
              "customLineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomLineItem"
                }
              },
              "totalPrice": {
                "$ref": "#/components/schemas/TypedMoney"
              },
              "taxedPrice": {
                "$ref": "#/components/schemas/TaxedPrice"
              },
              "shippingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "billingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "taxMode": {
                "$ref": "#/components/schemas/TaxMode"
              },
              "taxRoundingMode": {
                "$ref": "#/components/schemas/RoundingMode"
              },
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "country": {
                "type": "string"
              },
              "orderState": {
                "$ref": "#/components/schemas/OrderState"
              },
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "shipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              },
              "paymentState": {
                "$ref": "#/components/schemas/PaymentState"
              },
              "shippingInfo": {
                "$ref": "#/components/schemas/ShippingInfo"
              },
              "syncInfo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SyncInfo"
                }
              },
              "returnInfo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReturnInfo"
                }
              },
              "discountCodes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCodeInfo"
                }
              },
              "lastMessageSequenceNumber": {
                "format": "int64",
                "type": "number"
              },
              "cart": {
                "$ref": "#/components/schemas/CartReference"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "paymentInfo": {
                "$ref": "#/components/schemas/PaymentInfo"
              },
              "locale": {
                "type": "string"
              },
              "inventoryMode": {
                "$ref": "#/components/schemas/InventoryMode"
              },
              "origin": {
                "$ref": "#/components/schemas/CartOrigin"
              },
              "taxCalculationMode": {
                "$ref": "#/components/schemas/TaxCalculationMode"
              },
              "shippingRateInput": {
                "$ref": "#/components/schemas/ShippingRateInput"
              },
              "itemShippingAddresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                }
              },
              "refusedGifts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order",
        "type": "string"
      },
      "MyOrderFromCartDraft": {
        "title": "MyOrderFromCartDraft",
        "includePath": "types/me/MyOrderFromCartDraft.raml",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the cart from which an order is created.",
            "type": "string"
          },
          "version": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "x-annotation-package": "Me"
      },
      "MyPayment": {
        "title": "MyPayment",
        "includePath": "types/me/MyPayment.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-annotation-identifier": true
          },
          "version": {
            "format": "int64",
            "type": "number"
          },
          "customer": {
            "description": "A reference to the customer this payment belongs to.",
            "$ref": "#/components/schemas/CustomerReference"
          },
          "anonymousId": {
            "description": "Identifies payments belonging to an anonymous session (the customer has not signed up/in yet).",
            "type": "string"
          },
          "amountPlanned": {
            "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "paymentMethodInfo": {
            "$ref": "#/components/schemas/PaymentMethodInfo"
          },
          "transactions": {
            "description": "A list of financial transactions of different TransactionTypes\nwith different TransactionStates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          }
        },
        "required": [
          "id",
          "version",
          "amountPlanned",
          "paymentMethodInfo",
          "transactions"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#mypayment",
        "x-annotation-updateType": "MyPaymentUpdate",
        "x-annotation-actionType": "MyPaymentUpdateAction"
      },
      "MyPaymentDraft": {
        "title": "MyPaymentDraft",
        "includePath": "types/me/MyPaymentDraft.raml",
        "type": "object",
        "properties": {
          "amountPlanned": {
            "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
            "$ref": "#/components/schemas/Money"
          },
          "paymentMethodInfo": {
            "$ref": "#/components/schemas/PaymentMethodInfo"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "transaction": {
            "description": "A list of financial transactions of the `Authorization` or `Charge`\nTransactionTypes.",
            "$ref": "#/components/schemas/MyTransactionDraft"
          }
        },
        "required": [
          "amountPlanned"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#mypaymentdraft"
      },
      "MyPaymentPagedQueryResponse": {
        "title": "MyPaymentPagedQueryResponse",
        "includePath": "types/me/MyPaymentPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPayment"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Me"
      },
      "MyPaymentUpdate": {
        "title": "MyPaymentUpdate",
        "includePath": "types/me/MyPaymentUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPaymentUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Me"
      },
      "MyPaymentUpdateAction": {
        "title": "MyPaymentUpdateAction",
        "includePath": "types/me/MyPaymentUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#update-actions"
      },
      "MyShoppingList": {
        "title": "MyShoppingList",
        "includePath": "types/me/MyShoppingList.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "customer": {
                "$ref": "#/components/schemas/CustomerReference"
              },
              "deleteDaysAfterLastModification": {
                "format": "int64",
                "type": "number"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "key": {
                "type": "string"
              },
              "lineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShoppingListLineItem"
                }
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "slug": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "textLineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TextLineItem"
                }
              },
              "anonymousId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#my-shopping-lists",
        "x-annotation-updateType": "MyShoppingListUpdate",
        "x-annotation-actionType": "MyShoppingListUpdateAction",
        "type": "string"
      },
      "MyShoppingListDraft": {
        "title": "MyShoppingListDraft",
        "includePath": "types/me/MyShoppingListDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingListLineItemDraft"
            }
          },
          "textLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextLineItemDraft"
            }
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "deleteDaysAfterLastModification": {
            "format": "int64",
            "description": "The shopping list will be deleted automatically if it hasn't been modified for the specified amount of days.",
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#my-shopping-lists"
      },
      "MyShoppingListUpdate": {
        "title": "MyShoppingListUpdate",
        "includePath": "types/me/MyShoppingListUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyShoppingListUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Me"
      },
      "MyShoppingListUpdateAction": {
        "title": "MyShoppingListUpdateAction",
        "includePath": "types/me/MyShoppingListUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#update-actions"
      },
      "MyTransactionDraft": {
        "title": "MyTransactionDraft",
        "includePath": "types/me/MyTransactionDraft.raml",
        "type": "object",
        "properties": {
          "timestamp": {
            "description": "The time at which the transaction took place.",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "description": "The type of this transaction.\nOnly the `Authorization` or `Charge`\nTransactionTypes are allowed here.",
            "$ref": "#/components/schemas/TransactionType"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "interactionId": {
            "description": "The identifier that is used by the interface that managed the transaction (usually the PSP).\nIf a matching interaction was logged in the interfaceInteractions array,\nthe corresponding interaction should be findable with this ID.\nThe `state` is set to the `Initial` TransactionState.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "amount"
        ],
        "x-annotation-package": "Me"
      },
      "MyCartAddDiscountCodeAction": {
        "title": "MyCartAddDiscountCodeAction",
        "includePath": "types/me/updates/MyCartAddDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "code": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-discountcode",
        "type": "string"
      },
      "MyCartAddItemShippingAddressAction": {
        "title": "MyCartAddItemShippingAddressAction",
        "includePath": "types/me/updates/MyCartAddItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-itemshippingaddress",
        "type": "string"
      },
      "MyCartAddLineItemAction": {
        "title": "MyCartAddLineItemAction",
        "includePath": "types/me/updates/MyCartAddLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              },
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              },
              "productId": {
                "type": "string"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-lineitem",
        "type": "string"
      },
      "MyCartAddPaymentAction": {
        "title": "MyCartAddPaymentAction",
        "includePath": "types/me/updates/MyCartAddPaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#add-payment",
        "type": "string"
      },
      "MyCartApplyDeltaToLineItemShippingDetailsTargetsAction": {
        "title": "MyCartApplyDeltaToLineItemShippingDetailsTargetsAction",
        "includePath": "types/me/updates/MyCartApplyDeltaToLineItemShippingDetailsTargetsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "targetsDelta": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemShippingTarget"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#apply-deltatolineitemshippingdetailstargets",
        "type": "string"
      },
      "MyCartChangeLineItemQuantityAction": {
        "title": "MyCartChangeLineItemQuantityAction",
        "includePath": "types/me/updates/MyCartChangeLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#change-lineitem-quantity",
        "type": "string"
      },
      "MyCartChangeTaxModeAction": {
        "title": "MyCartChangeTaxModeAction",
        "includePath": "types/me/updates/MyCartChangeTaxModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "taxMode": {
                "$ref": "#/components/schemas/TaxMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#change-taxmode",
        "type": "string"
      },
      "MyCartRecalculateAction": {
        "title": "MyCartRecalculateAction",
        "includePath": "types/me/updates/MyCartRecalculateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "updateProductData": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#recalculate",
        "type": "string"
      },
      "MyCartRemoveDiscountCodeAction": {
        "title": "MyCartRemoveDiscountCodeAction",
        "includePath": "types/me/updates/MyCartRemoveDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-discountcode",
        "type": "string"
      },
      "MyCartRemoveItemShippingAddressAction": {
        "title": "MyCartRemoveItemShippingAddressAction",
        "includePath": "types/me/updates/MyCartRemoveItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-itemshippingaddress",
        "type": "string"
      },
      "MyCartRemoveLineItemAction": {
        "title": "MyCartRemoveLineItemAction",
        "includePath": "types/me/updates/MyCartRemoveLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetailsToRemove": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-lineitem",
        "type": "string"
      },
      "MyCartRemovePaymentAction": {
        "title": "MyCartRemovePaymentAction",
        "includePath": "types/me/updates/MyCartRemovePaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#remove-payment",
        "type": "string"
      },
      "MyCartSetBillingAddressAction": {
        "title": "MyCartSetBillingAddressAction",
        "includePath": "types/me/updates/MyCartSetBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-billing-address",
        "type": "string"
      },
      "MyCartSetCountryAction": {
        "title": "MyCartSetCountryAction",
        "includePath": "types/me/updates/MyCartSetCountryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "country": {
                "$ref": "#/components/schemas/CountryCode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-country",
        "type": "string"
      },
      "MyCartSetCustomFieldAction": {
        "title": "MyCartSetCustomFieldAction",
        "includePath": "types/me/updates/MyCartSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-customfield",
        "type": "string"
      },
      "MyCartSetCustomShippingMethodAction": {
        "title": "MyCartSetCustomShippingMethodAction",
        "includePath": "types/me/updates/MyCartSetCustomShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "shippingMethodName": {
                "type": "string"
              },
              "shippingRate": {
                "$ref": "#/components/schemas/ShippingRateDraft"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-custom-shipping-method",
        "type": "string"
      },
      "MyCartSetCustomTypeAction": {
        "title": "MyCartSetCustomTypeAction",
        "includePath": "types/me/updates/MyCartSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-custom-type",
        "type": "string"
      },
      "MyCartSetDeleteDaysAfterLastModificationAction": {
        "title": "MyCartSetDeleteDaysAfterLastModificationAction",
        "includePath": "types/me/updates/MyCartSetDeleteDaysAfterLastModificationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "deleteDaysAfterLastModification": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-deletedaysafterlastmodification-beta",
        "type": "string"
      },
      "MyCartSetLineItemCustomFieldAction": {
        "title": "MyCartSetLineItemCustomFieldAction",
        "includePath": "types/me/updates/MyCartSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-lineitem-customfield",
        "type": "string"
      },
      "MyCartSetLineItemCustomTypeAction": {
        "title": "MyCartSetLineItemCustomTypeAction",
        "includePath": "types/me/updates/MyCartSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-lineitem-custom-type",
        "type": "string"
      },
      "MyCartSetLineItemShippingDetailsAction": {
        "title": "MyCartSetLineItemShippingDetailsAction",
        "includePath": "types/me/updates/MyCartSetLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-lineitemshippingdetails",
        "type": "string"
      },
      "MyCartSetLocaleAction": {
        "title": "MyCartSetLocaleAction",
        "includePath": "types/me/updates/MyCartSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-locale",
        "type": "string"
      },
      "MyCartSetShippingAddressAction": {
        "title": "MyCartSetShippingAddressAction",
        "includePath": "types/me/updates/MyCartSetShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-shipping-address",
        "type": "string"
      },
      "MyCartSetShippingMethodAction": {
        "title": "MyCartSetShippingMethodAction",
        "includePath": "types/me/updates/MyCartSetShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "shippingMethod": {
                "$ref": "#/components/schemas/ShippingMethodResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#set-shipping-method",
        "type": "string"
      },
      "MyCartUpdateItemShippingAddressAction": {
        "title": "MyCartUpdateItemShippingAddressAction",
        "includePath": "types/me/updates/MyCartUpdateItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCartUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-carts#update-itemshippingaddress",
        "type": "string"
      },
      "MyCustomerAddAddressAction": {
        "title": "MyCustomerAddAddressAction",
        "includePath": "types/me/updates/MyCustomerAddAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-address",
        "type": "string"
      },
      "MyCustomerAddBillingAddressIdAction": {
        "title": "MyCustomerAddBillingAddressIdAction",
        "includePath": "types/me/updates/MyCustomerAddBillingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-billing-address-id",
        "type": "string"
      },
      "MyCustomerAddShippingAddressIdAction": {
        "title": "MyCustomerAddShippingAddressIdAction",
        "includePath": "types/me/updates/MyCustomerAddShippingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#add-shipping-address-id",
        "type": "string"
      },
      "MyCustomerChangeAddressAction": {
        "title": "MyCustomerChangeAddressAction",
        "includePath": "types/me/updates/MyCustomerChangeAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-address",
        "type": "string"
      },
      "MyCustomerChangeEmailAction": {
        "title": "MyCustomerChangeEmailAction",
        "includePath": "types/me/updates/MyCustomerChangeEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#change-email",
        "type": "string"
      },
      "MyCustomerRemoveAddressAction": {
        "title": "MyCustomerRemoveAddressAction",
        "includePath": "types/me/updates/MyCustomerRemoveAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-address",
        "type": "string"
      },
      "MyCustomerRemoveBillingAddressIdAction": {
        "title": "MyCustomerRemoveBillingAddressIdAction",
        "includePath": "types/me/updates/MyCustomerRemoveBillingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-billing-address-id",
        "type": "string"
      },
      "MyCustomerRemoveShippingAddressIdAction": {
        "title": "MyCustomerRemoveShippingAddressIdAction",
        "includePath": "types/me/updates/MyCustomerRemoveShippingAddressIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#remove-shipping-address-id",
        "type": "string"
      },
      "MyCustomerSetCompanyNameAction": {
        "title": "MyCustomerSetCompanyNameAction",
        "includePath": "types/me/updates/MyCustomerSetCompanyNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "companyName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-company-name",
        "type": "string"
      },
      "MyCustomerSetCustomFieldAction": {
        "title": "MyCustomerSetCustomFieldAction",
        "includePath": "types/me/updates/MyCustomerSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-customfield",
        "type": "string"
      },
      "MyCustomerSetCustomTypeAction": {
        "title": "MyCustomerSetCustomTypeAction",
        "includePath": "types/me/updates/MyCustomerSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-custom-type",
        "type": "string"
      },
      "MyCustomerSetDateOfBirthAction": {
        "title": "MyCustomerSetDateOfBirthAction",
        "includePath": "types/me/updates/MyCustomerSetDateOfBirthAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "dateOfBirth": {
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-date-of-birth",
        "type": "string"
      },
      "MyCustomerSetDefaultBillingAddressAction": {
        "title": "MyCustomerSetDefaultBillingAddressAction",
        "includePath": "types/me/updates/MyCustomerSetDefaultBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-billing-address",
        "type": "string"
      },
      "MyCustomerSetDefaultShippingAddressAction": {
        "title": "MyCustomerSetDefaultShippingAddressAction",
        "includePath": "types/me/updates/MyCustomerSetDefaultShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "addressId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-default-shipping-address",
        "type": "string"
      },
      "MyCustomerSetFirstNameAction": {
        "title": "MyCustomerSetFirstNameAction",
        "includePath": "types/me/updates/MyCustomerSetFirstNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "firstName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-first-name",
        "type": "string"
      },
      "MyCustomerSetLastNameAction": {
        "title": "MyCustomerSetLastNameAction",
        "includePath": "types/me/updates/MyCustomerSetLastNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "lastName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-last-name",
        "type": "string"
      },
      "MyCustomerSetLocaleAction": {
        "title": "MyCustomerSetLocaleAction",
        "includePath": "types/me/updates/MyCustomerSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-locale",
        "type": "string"
      },
      "MyCustomerSetMiddleNameAction": {
        "title": "MyCustomerSetMiddleNameAction",
        "includePath": "types/me/updates/MyCustomerSetMiddleNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "middleName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-middle-name",
        "type": "string"
      },
      "MyCustomerSetSalutationAction": {
        "title": "MyCustomerSetSalutationAction",
        "includePath": "types/me/updates/MyCustomerSetSalutationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "salutation": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-salutation",
        "type": "string"
      },
      "MyCustomerSetTitleAction": {
        "title": "MyCustomerSetTitleAction",
        "includePath": "types/me/updates/MyCustomerSetTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-title",
        "type": "string"
      },
      "MyCustomerSetVatIdAction": {
        "title": "MyCustomerSetVatIdAction",
        "includePath": "types/me/updates/MyCustomerSetVatIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyCustomerUpdateAction"
          },
          {
            "properties": {
              "vatId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-customers.html#set-vat-id",
        "type": "string"
      },
      "MyPaymentAddTransactionAction": {
        "title": "MyPaymentAddTransactionAction",
        "includePath": "types/me/updates/MyPaymentAddTransactionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyPaymentUpdateAction"
          },
          {
            "properties": {
              "transaction": {
                "$ref": "#/components/schemas/TransactionDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#add-transaction",
        "type": "string"
      },
      "MyPaymentChangeAmountPlannedAction": {
        "title": "MyPaymentChangeAmountPlannedAction",
        "includePath": "types/me/updates/MyPaymentChangeAmountPlannedAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyPaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#change-amountplanned",
        "type": "string"
      },
      "MyPaymentSetCustomFieldAction": {
        "title": "MyPaymentSetCustomFieldAction",
        "includePath": "types/me/updates/MyPaymentSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyPaymentUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-customfield",
        "type": "string"
      },
      "MyPaymentSetMethodInfoInterfaceAction": {
        "title": "MyPaymentSetMethodInfoInterfaceAction",
        "includePath": "types/me/updates/MyPaymentSetMethodInfoInterfaceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyPaymentUpdateAction"
          },
          {
            "properties": {
              "interface": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-methodinfointerface",
        "type": "string"
      },
      "MyPaymentSetMethodInfoMethodAction": {
        "title": "MyPaymentSetMethodInfoMethodAction",
        "includePath": "types/me/updates/MyPaymentSetMethodInfoMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyPaymentUpdateAction"
          },
          {
            "properties": {
              "method": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-methodinfomethod",
        "type": "string"
      },
      "MyPaymentSetMethodInfoNameAction": {
        "title": "MyPaymentSetMethodInfoNameAction",
        "includePath": "types/me/updates/MyPaymentSetMethodInfoNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyPaymentUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-payments#set-methodinfoname",
        "type": "string"
      },
      "MyShoppingListAddLineItemAction": {
        "title": "MyShoppingListAddLineItemAction",
        "includePath": "types/me/updates/MyShoppingListAddLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "type": "string"
              },
              "productId": {
                "type": "string"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "addedAt": {
                "type": "string",
                "format": "date-time"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#add-lineitem",
        "type": "string"
      },
      "MyShoppingListAddTextLineItemAction": {
        "title": "MyShoppingListAddTextLineItemAction",
        "includePath": "types/me/updates/MyShoppingListAddTextLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "addedAt": {
                "type": "string",
                "format": "date-time"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#add-textlineitem",
        "type": "string"
      },
      "MyShoppingListChangeLineItemQuantityAction": {
        "title": "MyShoppingListChangeLineItemQuantityAction",
        "includePath": "types/me/updates/MyShoppingListChangeLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-lineitem-quantity",
        "type": "string"
      },
      "MyShoppingListChangeLineItemsOrderAction": {
        "title": "MyShoppingListChangeLineItemsOrderAction",
        "includePath": "types/me/updates/MyShoppingListChangeLineItemsOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-lineitems-order",
        "type": "string"
      },
      "MyShoppingListChangeNameAction": {
        "title": "MyShoppingListChangeNameAction",
        "includePath": "types/me/updates/MyShoppingListChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-name",
        "type": "string"
      },
      "MyShoppingListChangeTextLineItemNameAction": {
        "title": "MyShoppingListChangeTextLineItemNameAction",
        "includePath": "types/me/updates/MyShoppingListChangeTextLineItemNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-textlineitem-name",
        "type": "string"
      },
      "MyShoppingListChangeTextLineItemQuantityAction": {
        "title": "MyShoppingListChangeTextLineItemQuantityAction",
        "includePath": "types/me/updates/MyShoppingListChangeTextLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-textlineitem-quantity",
        "type": "string"
      },
      "MyShoppingListChangeTextLineItemsOrderAction": {
        "title": "MyShoppingListChangeTextLineItemsOrderAction",
        "includePath": "types/me/updates/MyShoppingListChangeTextLineItemsOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#change-textlineitems-order",
        "type": "string"
      },
      "MyShoppingListRemoveLineItemAction": {
        "title": "MyShoppingListRemoveLineItemAction",
        "includePath": "types/me/updates/MyShoppingListRemoveLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#remove-lineitem",
        "type": "string"
      },
      "MyShoppingListRemoveTextLineItemAction": {
        "title": "MyShoppingListRemoveTextLineItemAction",
        "includePath": "types/me/updates/MyShoppingListRemoveTextLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#remove-textlineitem",
        "type": "string"
      },
      "MyShoppingListSetCustomFieldAction": {
        "title": "MyShoppingListSetCustomFieldAction",
        "includePath": "types/me/updates/MyShoppingListSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-customfield",
        "type": "string"
      },
      "MyShoppingListSetCustomTypeAction": {
        "title": "MyShoppingListSetCustomTypeAction",
        "includePath": "types/me/updates/MyShoppingListSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-custom-type",
        "type": "string"
      },
      "MyShoppingListSetDeleteDaysAfterLastModificationAction": {
        "title": "MyShoppingListSetDeleteDaysAfterLastModificationAction",
        "includePath": "types/me/updates/MyShoppingListSetDeleteDaysAfterLastModificationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "deleteDaysAfterLastModification": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-deletedaysafterlastmodification",
        "type": "string"
      },
      "MyShoppingListSetDescriptionAction": {
        "title": "MyShoppingListSetDescriptionAction",
        "includePath": "types/me/updates/MyShoppingListSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-description",
        "type": "string"
      },
      "MyShoppingListSetLineItemCustomFieldAction": {
        "title": "MyShoppingListSetLineItemCustomFieldAction",
        "includePath": "types/me/updates/MyShoppingListSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-lineitem-customfield",
        "type": "string"
      },
      "MyShoppingListSetLineItemCustomTypeAction": {
        "title": "MyShoppingListSetLineItemCustomTypeAction",
        "includePath": "types/me/updates/MyShoppingListSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-lineitem-custom-type",
        "type": "string"
      },
      "MyShoppingListSetTextLineItemCustomFieldAction": {
        "title": "MyShoppingListSetTextLineItemCustomFieldAction",
        "includePath": "types/me/updates/MyShoppingListSetTextLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-textlineitem-customfield",
        "type": "string"
      },
      "MyShoppingListSetTextLineItemCustomTypeAction": {
        "title": "MyShoppingListSetTextLineItemCustomTypeAction",
        "includePath": "types/me/updates/MyShoppingListSetTextLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-textlineitem-custom-type",
        "type": "string"
      },
      "MyShoppingListSetTextLineItemDescriptionAction": {
        "title": "MyShoppingListSetTextLineItemDescriptionAction",
        "includePath": "types/me/updates/MyShoppingListSetTextLineItemDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MyShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Me",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-me-shoppingLists#set-textlineitem-description",
        "type": "string"
      },
      "CategoryCreatedMessage": {
        "title": "CategoryCreatedMessage",
        "includePath": "types/message/CategoryCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categorycreated-message",
        "type": "string"
      },
      "CategorySlugChangedMessage": {
        "title": "CategorySlugChangedMessage",
        "includePath": "types/message/CategorySlugChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "slug": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categoryslugchanged-message",
        "type": "string"
      },
      "CustomLineItemStateTransitionMessage": {
        "title": "CustomLineItemStateTransitionMessage",
        "includePath": "types/message/CustomLineItemStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "transitionDate": {
                "type": "string",
                "format": "date-time"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "$ref": "#/components/schemas/StateReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customlineitemstatetransition-message",
        "type": "string"
      },
      "CustomerAddressAddedMessage": {
        "title": "CustomerAddressAddedMessage",
        "includePath": "types/message/CustomerAddressAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressadded-message",
        "type": "string"
      },
      "CustomerAddressChangedMessage": {
        "title": "CustomerAddressChangedMessage",
        "includePath": "types/message/CustomerAddressChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddresschanged-message",
        "type": "string"
      },
      "CustomerAddressRemovedMessage": {
        "title": "CustomerAddressRemovedMessage",
        "includePath": "types/message/CustomerAddressRemovedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressremoved-message",
        "type": "string"
      },
      "CustomerCompanyNameSetMessage": {
        "title": "CustomerCompanyNameSetMessage",
        "includePath": "types/message/CustomerCompanyNameSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "companyName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercompanynameset-message",
        "type": "string"
      },
      "CustomerCreatedMessage": {
        "title": "CustomerCreatedMessage",
        "includePath": "types/message/CustomerCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customer": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercreated-message",
        "type": "string"
      },
      "CustomerDateOfBirthSetMessage": {
        "title": "CustomerDateOfBirthSetMessage",
        "includePath": "types/message/CustomerDateOfBirthSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "dateOfBirth": {
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerdateofbirthset-message",
        "type": "string"
      },
      "CustomerEmailChangedMessage": {
        "title": "CustomerEmailChangedMessage",
        "includePath": "types/message/CustomerEmailChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailchanged-message",
        "type": "string"
      },
      "CustomerEmailVerifiedMessage": {
        "title": "CustomerEmailVerifiedMessage",
        "includePath": "types/message/CustomerEmailVerifiedMessage.raml",
        "$ref": "#/components/schemas/Message",
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailverified-message"
      },
      "CustomerGroupSetMessage": {
        "title": "CustomerGroupSetMessage",
        "includePath": "types/message/CustomerGroupSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customergroupset-message",
        "type": "string"
      },
      "DeliveryAddedMessage": {
        "title": "DeliveryAddedMessage",
        "includePath": "types/message/DeliveryAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "delivery": {
                "$ref": "#/components/schemas/Delivery"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryadded-message",
        "type": "string"
      },
      "DeliveryAddressSetMessage": {
        "title": "DeliveryAddressSetMessage",
        "includePath": "types/message/DeliveryAddressSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "oldAddress": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddressset-message",
        "type": "string"
      },
      "DeliveryItemsUpdatedMessage": {
        "title": "DeliveryItemsUpdatedMessage",
        "includePath": "types/message/DeliveryItemsUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              },
              "oldItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "DeliveryRemovedMessage": {
        "title": "DeliveryRemovedMessage",
        "includePath": "types/message/DeliveryRemovedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "delivery": {
                "$ref": "#/components/schemas/Delivery"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "InventoryEntryCreatedMessage": {
        "title": "InventoryEntryCreatedMessage",
        "includePath": "types/message/InventoryEntryCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "inventoryEntry": {
                "$ref": "#/components/schemas/InventoryEntry"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrycreated-message",
        "type": "string"
      },
      "InventoryEntryDeletedMessage": {
        "title": "InventoryEntryDeletedMessage",
        "includePath": "types/message/InventoryEntryDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "sku": {
                "type": "string"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrydeleted-message",
        "type": "string"
      },
      "InventoryEntryQuantitySetMessage": {
        "title": "InventoryEntryQuantitySetMessage",
        "includePath": "types/message/InventoryEntryQuantitySetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "oldQuantityOnStock": {
                "format": "int64",
                "type": "number"
              },
              "newQuantityOnStock": {
                "format": "int64",
                "type": "number"
              },
              "oldAvailableQuantity": {
                "format": "int64",
                "type": "number"
              },
              "newAvailableQuantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#inventoryentryquantityset-message",
        "type": "string"
      },
      "LineItemStateTransitionMessage": {
        "title": "LineItemStateTransitionMessage",
        "includePath": "types/message/LineItemStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "transitionDate": {
                "type": "string",
                "format": "date-time"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "$ref": "#/components/schemas/StateReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#lineitemstatetransition-message",
        "type": "string"
      },
      "Message": {
        "title": "Message",
        "includePath": "types/message/Message.raml",
        "discriminator": {
          "propertyName": "type"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "sequenceNumber": {
                "format": "int64",
                "type": "number"
              },
              "resource": {
                "$ref": "#/components/schemas/Reference"
              },
              "resourceVersion": {
                "format": "int64",
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "resourceUserProvidedIdentifiers": {
                "$ref": "#/components/schemas/UserProvidedIdentifiers"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#message",
        "type": "string"
      },
      "MessageConfiguration": {
        "title": "MessageConfiguration",
        "includePath": "types/message/MessageConfiguration.raml",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "deleteDaysAfterCreation": {
            "format": "int32",
            "type": "number"
          }
        },
        "required": [
          "enabled"
        ],
        "x-annotation-package": "Message"
      },
      "MessageConfigurationDraft": {
        "title": "MessageConfigurationDraft",
        "includePath": "types/message/MessageConfigurationDraft.raml",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "deleteDaysAfterCreation": {
            "format": "int32",
            "type": "number"
          }
        },
        "required": [
          "enabled",
          "deleteDaysAfterCreation"
        ],
        "x-annotation-package": "Message"
      },
      "MessagePagedQueryResponse": {
        "title": "MessagePagedQueryResponse",
        "includePath": "types/message/MessagePagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Message"
      },
      "OrderBillingAddressSetMessage": {
        "title": "OrderBillingAddressSetMessage",
        "includePath": "types/message/OrderBillingAddressSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "oldAddress": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderbillingaddressset-message",
        "type": "string"
      },
      "OrderCreatedMessage": {
        "title": "OrderCreatedMessage",
        "includePath": "types/message/OrderCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "order": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreated-message",
        "type": "string"
      },
      "OrderCustomLineItemDiscountSetMessage": {
        "title": "OrderCustomLineItemDiscountSetMessage",
        "includePath": "types/message/OrderCustomLineItemDiscountSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "discountedPricePerQuantity": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
                }
              },
              "taxedPrice": {
                "$ref": "#/components/schemas/TaxedItemPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomlineitemdiscountset",
        "type": "string"
      },
      "OrderCustomerEmailSetMessage": {
        "title": "OrderCustomerEmailSetMessage",
        "includePath": "types/message/OrderCustomerEmailSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              },
              "oldEmail": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercustomeremailset-message",
        "type": "string"
      },
      "OrderCustomerGroupSetMessage": {
        "title": "OrderCustomerGroupSetMessage",
        "includePath": "types/message/OrderCustomerGroupSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "oldCustomerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomergroupset-message",
        "type": "string"
      },
      "OrderCustomerSetMessage": {
        "title": "OrderCustomerSetMessage",
        "includePath": "types/message/OrderCustomerSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "customer": {
                "$ref": "#/components/schemas/CustomerReference"
              },
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "oldCustomer": {
                "$ref": "#/components/schemas/CustomerReference"
              },
              "oldCustomerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomeremailset-message",
        "type": "string"
      },
      "OrderDeletedMessage": {
        "title": "OrderDeletedMessage",
        "includePath": "types/message/OrderDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "order": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderdeleted-message",
        "type": "string"
      },
      "OrderDiscountCodeAddedMessage": {
        "title": "OrderDiscountCodeAddedMessage",
        "includePath": "types/message/OrderDiscountCodeAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodeadded",
        "type": "string"
      },
      "OrderDiscountCodeRemovedMessage": {
        "title": "OrderDiscountCodeRemovedMessage",
        "includePath": "types/message/OrderDiscountCodeRemovedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcoderemoved",
        "type": "string"
      },
      "OrderDiscountCodeStateSetMessage": {
        "title": "OrderDiscountCodeStateSetMessage",
        "includePath": "types/message/OrderDiscountCodeStateSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              },
              "state": {
                "$ref": "#/components/schemas/DiscountCodeState"
              },
              "oldState": {
                "$ref": "#/components/schemas/DiscountCodeState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodestateset",
        "type": "string"
      },
      "OrderEditAppliedMessage": {
        "title": "OrderEditAppliedMessage",
        "includePath": "types/message/OrderEditAppliedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "edit": {
                "$ref": "#/components/schemas/OrderEditReference"
              },
              "result": {
                "$ref": "#/components/schemas/OrderEditApplied"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreated-message",
        "type": "string"
      },
      "OrderImportedMessage": {
        "title": "OrderImportedMessage",
        "includePath": "types/message/OrderImportedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "order": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderimported-message",
        "type": "string"
      },
      "OrderLineItemAddedMessage": {
        "title": "OrderLineItemAddedMessage",
        "includePath": "types/message/OrderLineItemAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "lineItem": {
                "$ref": "#/components/schemas/LineItem"
              },
              "addedQuantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderlineitemadded",
        "type": "string"
      },
      "OrderLineItemDiscountSetMessage": {
        "title": "OrderLineItemDiscountSetMessage",
        "includePath": "types/message/OrderLineItemDiscountSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "discountedPricePerQuantity": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
                }
              },
              "totalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "taxedPrice": {
                "$ref": "#/components/schemas/TaxedItemPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderlineitemdiscountset",
        "type": "string"
      },
      "OrderPaymentStateChangedMessage": {
        "title": "OrderPaymentStateChangedMessage",
        "includePath": "types/message/OrderPaymentStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "paymentState": {
                "$ref": "#/components/schemas/PaymentState"
              },
              "oldPaymentState": {
                "$ref": "#/components/schemas/PaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderpaymentstatechanged-message",
        "type": "string"
      },
      "OrderReturnInfoAddedMessage": {
        "title": "OrderReturnInfoAddedMessage",
        "includePath": "types/message/OrderReturnInfoAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "returnInfo": {
                "$ref": "#/components/schemas/ReturnInfo"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderReturnShipmentStateChangedMessage": {
        "title": "OrderReturnShipmentStateChangedMessage",
        "includePath": "types/message/OrderReturnShipmentStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "returnItemId": {
                "type": "string"
              },
              "returnShipmentState": {
                "$ref": "#/components/schemas/ReturnShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderShipmentStateChangedMessage": {
        "title": "OrderShipmentStateChangedMessage",
        "includePath": "types/message/OrderShipmentStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "shipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              },
              "oldShipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderShippingAddressSetMessage": {
        "title": "OrderShippingAddressSetMessage",
        "includePath": "types/message/OrderShippingAddressSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "oldAddress": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordershippingaddressset-message",
        "type": "string"
      },
      "OrderShippingInfoSetMessage": {
        "title": "OrderShippingInfoSetMessage",
        "includePath": "types/message/OrderShippingInfoSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "shippingInfo": {
                "$ref": "#/components/schemas/ShippingInfo"
              },
              "oldShippingInfo": {
                "$ref": "#/components/schemas/ShippingInfo"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippinginfoset",
        "type": "string"
      },
      "OrderShippingRateInputSetMessage": {
        "title": "OrderShippingRateInputSetMessage",
        "includePath": "types/message/OrderShippingRateInputSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "shippingRateInput": {
                "$ref": "#/components/schemas/ShippingRateInput"
              },
              "oldShippingRateInput": {
                "$ref": "#/components/schemas/ShippingRateInput"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippingrateinputset",
        "type": "string"
      },
      "OrderStateChangedMessage": {
        "title": "OrderStateChangedMessage",
        "includePath": "types/message/OrderStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "orderState": {
                "$ref": "#/components/schemas/OrderState"
              },
              "oldOrderState": {
                "$ref": "#/components/schemas/OrderState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatechanged-message",
        "type": "string"
      },
      "OrderStateTransitionMessage": {
        "title": "OrderStateTransitionMessage",
        "includePath": "types/message/OrderStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatetransition-message",
        "type": "string"
      },
      "OrderStoreSetMessage": {
        "title": "OrderStoreSetMessage",
        "includePath": "types/message/OrderStoreSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "store": {
                "$ref": "#/components/schemas/StoreKeyReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderstoreset",
        "type": "string"
      },
      "ParcelAddedToDeliveryMessage": {
        "title": "ParcelAddedToDeliveryMessage",
        "includePath": "types/message/ParcelAddedToDeliveryMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "delivery": {
                "$ref": "#/components/schemas/Delivery"
              },
              "parcel": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#parceladdedtodelivery-message",
        "type": "string"
      },
      "ParcelItemsUpdatedMessage": {
        "title": "ParcelItemsUpdatedMessage",
        "includePath": "types/message/ParcelItemsUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "deliveryId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              },
              "oldItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelMeasurementsUpdatedMessage": {
        "title": "ParcelMeasurementsUpdatedMessage",
        "includePath": "types/message/ParcelMeasurementsUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "parcelId": {
                "type": "string"
              },
              "measurements": {
                "$ref": "#/components/schemas/ParcelMeasurements"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelRemovedFromDeliveryMessage": {
        "title": "ParcelRemovedFromDeliveryMessage",
        "includePath": "types/message/ParcelRemovedFromDeliveryMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "parcel": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelTrackingDataUpdatedMessage": {
        "title": "ParcelTrackingDataUpdatedMessage",
        "includePath": "types/message/ParcelTrackingDataUpdatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "parcelId": {
                "type": "string"
              },
              "trackingData": {
                "$ref": "#/components/schemas/TrackingData"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "PaymentCreatedMessage": {
        "title": "PaymentCreatedMessage",
        "includePath": "types/message/PaymentCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentcreated-message",
        "type": "string"
      },
      "PaymentInteractionAddedMessage": {
        "title": "PaymentInteractionAddedMessage",
        "includePath": "types/message/PaymentInteractionAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "interaction": {
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentinteractionadded-message",
        "type": "string"
      },
      "PaymentStatusInterfaceCodeSetMessage": {
        "title": "PaymentStatusInterfaceCodeSetMessage",
        "includePath": "types/message/PaymentStatusInterfaceCodeSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "paymentId": {
                "type": "string"
              },
              "interfaceCode": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusinterfacecodeset-message",
        "type": "string"
      },
      "PaymentStatusStateTransitionMessage": {
        "title": "PaymentStatusStateTransitionMessage",
        "includePath": "types/message/PaymentStatusStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusstatetransition-message",
        "type": "string"
      },
      "PaymentTransactionAddedMessage": {
        "title": "PaymentTransactionAddedMessage",
        "includePath": "types/message/PaymentTransactionAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "transaction": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionadded-message",
        "type": "string"
      },
      "PaymentTransactionStateChangedMessage": {
        "title": "PaymentTransactionStateChangedMessage",
        "includePath": "types/message/PaymentTransactionStateChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "transactionId": {
                "type": "string"
              },
              "state": {
                "$ref": "#/components/schemas/TransactionState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionstatechanged-message",
        "type": "string"
      },
      "ProductAddedToCategoryMessage": {
        "title": "ProductAddedToCategoryMessage",
        "includePath": "types/message/ProductAddedToCategoryMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/CategoryReference"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productaddedtocategory-message",
        "type": "string"
      },
      "ProductCreatedMessage": {
        "title": "ProductCreatedMessage",
        "includePath": "types/message/ProductCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "productProjection": {
                "$ref": "#/components/schemas/ProductProjection"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productcreated-message",
        "type": "string"
      },
      "ProductDeletedMessage": {
        "title": "ProductDeletedMessage",
        "includePath": "types/message/ProductDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "removedImageUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "currentProjection": {
                "$ref": "#/components/schemas/ProductProjection"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productdeleted-message",
        "type": "string"
      },
      "ProductImageAddedMessage": {
        "title": "ProductImageAddedMessage",
        "includePath": "types/message/ProductImageAddedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "image": {
                "$ref": "#/components/schemas/Image"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productimageadded-message",
        "type": "string"
      },
      "ProductPriceDiscountsSetMessage": {
        "title": "ProductPriceDiscountsSetMessage",
        "includePath": "types/message/ProductPriceDiscountsSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "updatedPrices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPriceDiscountsSetUpdatedPrice"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpricediscountsset-message",
        "type": "string"
      },
      "ProductPriceDiscountsSetUpdatedPrice": {
        "title": "ProductPriceDiscountsSetUpdatedPrice",
        "includePath": "types/message/ProductPriceDiscountsSetUpdatedPrice.raml",
        "type": "object",
        "properties": {
          "variantId": {
            "type": "integer"
          },
          "variantKey": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "priceId": {
            "type": "string"
          },
          "discounted": {
            "$ref": "#/components/schemas/DiscountedPrice"
          },
          "staged": {
            "type": "boolean"
          }
        },
        "required": [
          "variantId",
          "priceId",
          "staged"
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpricediscountsset-message"
      },
      "ProductPriceExternalDiscountSetMessage": {
        "title": "ProductPriceExternalDiscountSetMessage",
        "includePath": "types/message/ProductPriceExternalDiscountSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "variantId": {
                "type": "integer"
              },
              "variantKey": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "priceId": {
                "type": "string"
              },
              "discounted": {
                "$ref": "#/components/schemas/DiscountedPrice"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpriceexternaldiscountset-message",
        "type": "string"
      },
      "ProductPublishedMessage": {
        "title": "ProductPublishedMessage",
        "includePath": "types/message/ProductPublishedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "removedImageUrls": {
                "type": "array"
              },
              "productProjection": {
                "$ref": "#/components/schemas/ProductProjection"
              },
              "scope": {
                "$ref": "#/components/schemas/ProductPublishScope"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productpublished-message",
        "type": "string"
      },
      "ProductRemovedFromCategoryMessage": {
        "title": "ProductRemovedFromCategoryMessage",
        "includePath": "types/message/ProductRemovedFromCategoryMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/CategoryReference"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productremovedfromcategory-message",
        "type": "string"
      },
      "ProductRevertedStagedChangesMessage": {
        "title": "ProductRevertedStagedChangesMessage",
        "includePath": "types/message/ProductRevertedStagedChangesMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "removedImageUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productrevertedstagedchanges-message",
        "type": "string"
      },
      "ProductSlugChangedMessage": {
        "title": "ProductSlugChangedMessage",
        "includePath": "types/message/ProductSlugChangedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "slug": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productslugchanged-message",
        "type": "string"
      },
      "ProductStateTransitionMessage": {
        "title": "ProductStateTransitionMessage",
        "includePath": "types/message/ProductStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productstatetransition-message",
        "type": "string"
      },
      "ProductUnpublishedMessage": {
        "title": "ProductUnpublishedMessage",
        "includePath": "types/message/ProductUnpublishedMessage.raml",
        "$ref": "#/components/schemas/Message",
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productunpublished-message"
      },
      "ProductVariantDeletedMessage": {
        "title": "ProductVariantDeletedMessage",
        "includePath": "types/message/ProductVariantDeletedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "variant": {
                "$ref": "#/components/schemas/ProductVariant"
              },
              "removedImageUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantdeleted-message",
        "type": "string"
      },
      "ReviewCreatedMessage": {
        "title": "ReviewCreatedMessage",
        "includePath": "types/message/ReviewCreatedMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "review": {
                "$ref": "#/components/schemas/Review"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewcreated-message",
        "type": "string"
      },
      "ReviewRatingSetMessage": {
        "title": "ReviewRatingSetMessage",
        "includePath": "types/message/ReviewRatingSetMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "oldRating": {
                "type": "number"
              },
              "newRating": {
                "type": "number"
              },
              "includedInStatistics": {
                "type": "boolean"
              },
              "target": {
                "$ref": "#/components/schemas/Reference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewratingset-message",
        "type": "string"
      },
      "ReviewStateTransitionMessage": {
        "title": "ReviewStateTransitionMessage",
        "includePath": "types/message/ReviewStateTransitionMessage.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "properties": {
              "oldState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "newState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "oldIncludedInStatistics": {
                "type": "boolean"
              },
              "newIncludedInStatistics": {
                "type": "boolean"
              },
              "target": {
                "$ref": "#/components/schemas/Reference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewstatetransition-message",
        "type": "string"
      },
      "UserProvidedIdentifiers": {
        "title": "UserProvidedIdentifiers",
        "includePath": "types/message/UserProvidedIdentifiers.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "orderNumber": {
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "slug": {
            "$ref": "#/components/schemas/LocalizedString"
          }
        },
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#userprovidedidentifiers"
      },
      "CategoryCreatedMessagePayload": {
        "title": "CategoryCreatedMessagePayload",
        "includePath": "types/message/payload/CategoryCreatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categorycreated-message",
        "type": "string"
      },
      "CategorySlugChangedMessagePayload": {
        "title": "CategorySlugChangedMessagePayload",
        "includePath": "types/message/payload/CategorySlugChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "slug": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#categoryslugchanged-message",
        "type": "string"
      },
      "CustomLineItemStateTransitionMessagePayload": {
        "title": "CustomLineItemStateTransitionMessagePayload",
        "includePath": "types/message/payload/CustomLineItemStateTransitionMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "transitionDate": {
                "type": "string",
                "format": "date-time"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "$ref": "#/components/schemas/StateReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customlineitemstatetransition-message",
        "type": "string"
      },
      "CustomerAddressAddedMessagePayload": {
        "title": "CustomerAddressAddedMessagePayload",
        "includePath": "types/message/payload/CustomerAddressAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressadded-message",
        "type": "string"
      },
      "CustomerAddressChangedMessagePayload": {
        "title": "CustomerAddressChangedMessagePayload",
        "includePath": "types/message/payload/CustomerAddressChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddresschanged-message",
        "type": "string"
      },
      "CustomerAddressRemovedMessagePayload": {
        "title": "CustomerAddressRemovedMessagePayload",
        "includePath": "types/message/payload/CustomerAddressRemovedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeraddressremoved-message",
        "type": "string"
      },
      "CustomerCompanyNameSetMessagePayload": {
        "title": "CustomerCompanyNameSetMessagePayload",
        "includePath": "types/message/payload/CustomerCompanyNameSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "companyName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercompanynameset-message",
        "type": "string"
      },
      "CustomerCreatedMessagePayload": {
        "title": "CustomerCreatedMessagePayload",
        "includePath": "types/message/payload/CustomerCreatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "customer": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customercreated-message",
        "type": "string"
      },
      "CustomerDateOfBirthSetMessagePayload": {
        "title": "CustomerDateOfBirthSetMessagePayload",
        "includePath": "types/message/payload/CustomerDateOfBirthSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "dateOfBirth": {
                "type": "string",
                "format": "date"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customerdateofbirthset-message",
        "type": "string"
      },
      "CustomerEmailChangedMessagePayload": {
        "title": "CustomerEmailChangedMessagePayload",
        "includePath": "types/message/payload/CustomerEmailChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailchanged-message",
        "type": "string"
      },
      "CustomerEmailVerifiedMessagePayload": {
        "title": "CustomerEmailVerifiedMessagePayload",
        "includePath": "types/message/payload/CustomerEmailVerifiedMessagePayload.raml",
        "$ref": "#/components/schemas/MessagePayload",
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customeremailverified-message"
      },
      "CustomerGroupSetMessagePayload": {
        "title": "CustomerGroupSetMessagePayload",
        "includePath": "types/message/payload/CustomerGroupSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#customergroupset-message",
        "type": "string"
      },
      "DeliveryAddedMessagePayload": {
        "title": "DeliveryAddedMessagePayload",
        "includePath": "types/message/payload/DeliveryAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "delivery": {
                "$ref": "#/components/schemas/Delivery"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryadded-message",
        "type": "string"
      },
      "DeliveryAddressSetMessagePayload": {
        "title": "DeliveryAddressSetMessagePayload",
        "includePath": "types/message/payload/DeliveryAddressSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "oldAddress": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#deliveryaddressset-message",
        "type": "string"
      },
      "DeliveryItemsUpdatedMessagePayload": {
        "title": "DeliveryItemsUpdatedMessagePayload",
        "includePath": "types/message/payload/DeliveryItemsUpdatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              },
              "oldItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "DeliveryRemovedMessagePayload": {
        "title": "DeliveryRemovedMessagePayload",
        "includePath": "types/message/payload/DeliveryRemovedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "delivery": {
                "$ref": "#/components/schemas/Delivery"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "InventoryEntryCreatedMessagePayload": {
        "title": "InventoryEntryCreatedMessagePayload",
        "includePath": "types/message/payload/InventoryEntryCreatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "inventoryEntry": {
                "$ref": "#/components/schemas/InventoryEntry"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrycreated-message",
        "type": "string"
      },
      "InventoryEntryDeletedMessagePayload": {
        "title": "InventoryEntryDeletedMessagePayload",
        "includePath": "types/message/payload/InventoryEntryDeletedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "sku": {
                "type": "string"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#inventoryentrydeleted-message",
        "type": "string"
      },
      "InventoryEntryQuantitySetMessagePayload": {
        "title": "InventoryEntryQuantitySetMessagePayload",
        "includePath": "types/message/payload/InventoryEntryQuantitySetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "oldQuantityOnStock": {
                "format": "int64",
                "type": "number"
              },
              "newQuantityOnStock": {
                "format": "int64",
                "type": "number"
              },
              "oldAvailableQuantity": {
                "format": "int64",
                "type": "number"
              },
              "newAvailableQuantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#inventoryentryquantityset-message",
        "type": "string"
      },
      "LineItemStateTransitionMessagePayload": {
        "title": "LineItemStateTransitionMessagePayload",
        "includePath": "types/message/payload/LineItemStateTransitionMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "transitionDate": {
                "type": "string",
                "format": "date-time"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "toState": {
                "$ref": "#/components/schemas/StateReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#lineitemstatetransition-message",
        "type": "string"
      },
      "MessagePayload": {
        "title": "MessagePayload",
        "includePath": "types/message/payload/MessagePayload.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Message"
      },
      "OrderBillingAddressSetMessagePayload": {
        "title": "OrderBillingAddressSetMessagePayload",
        "includePath": "types/message/payload/OrderBillingAddressSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "oldAddress": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderbillingaddressset-message",
        "type": "string"
      },
      "OrderCreatedMessagePayload": {
        "title": "OrderCreatedMessagePayload",
        "includePath": "types/message/payload/OrderCreatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "order": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreated-message",
        "type": "string"
      },
      "OrderCustomLineItemDiscountSetMessagePayload": {
        "title": "OrderCustomLineItemDiscountSetMessagePayload",
        "includePath": "types/message/payload/OrderCustomLineItemDiscountSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "discountedPricePerQuantity": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
                }
              },
              "taxedPrice": {
                "$ref": "#/components/schemas/TaxedItemPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomlineitemdiscountset",
        "type": "string"
      },
      "OrderCustomerEmailSetMessagePayload": {
        "title": "OrderCustomerEmailSetMessagePayload",
        "includePath": "types/message/payload/OrderCustomerEmailSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              },
              "oldEmail": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercustomeremailset-message",
        "type": "string"
      },
      "OrderCustomerGroupSetMessagePayload": {
        "title": "OrderCustomerGroupSetMessagePayload",
        "includePath": "types/message/payload/OrderCustomerGroupSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "oldCustomerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomergroupset-message",
        "type": "string"
      },
      "OrderCustomerSetMessagePayload": {
        "title": "OrderCustomerSetMessagePayload",
        "includePath": "types/message/payload/OrderCustomerSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "customer": {
                "$ref": "#/components/schemas/CustomerReference"
              },
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "oldCustomer": {
                "$ref": "#/components/schemas/CustomerReference"
              },
              "oldCustomerGroup": {
                "$ref": "#/components/schemas/CustomerGroupReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordercustomeremailset-message",
        "type": "string"
      },
      "OrderDeletedMessagePayload": {
        "title": "OrderDeletedMessagePayload",
        "includePath": "types/message/payload/OrderDeletedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "order": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderdeleted-message",
        "type": "string"
      },
      "OrderDiscountCodeAddedMessagePayload": {
        "title": "OrderDiscountCodeAddedMessagePayload",
        "includePath": "types/message/payload/OrderDiscountCodeAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodeadded",
        "type": "string"
      },
      "OrderDiscountCodeRemovedMessagePayload": {
        "title": "OrderDiscountCodeRemovedMessagePayload",
        "includePath": "types/message/payload/OrderDiscountCodeRemovedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcoderemoved",
        "type": "string"
      },
      "OrderDiscountCodeStateSetMessagePayload": {
        "title": "OrderDiscountCodeStateSetMessagePayload",
        "includePath": "types/message/payload/OrderDiscountCodeStateSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              },
              "state": {
                "$ref": "#/components/schemas/DiscountCodeState"
              },
              "oldState": {
                "$ref": "#/components/schemas/DiscountCodeState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderdiscountcodestateset",
        "type": "string"
      },
      "OrderEditAppliedMessagePayload": {
        "title": "OrderEditAppliedMessagePayload",
        "includePath": "types/message/payload/OrderEditAppliedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "edit": {
                "$ref": "#/components/schemas/OrderEditReference"
              },
              "result": {
                "$ref": "#/components/schemas/OrderEditApplied"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordercreated-message",
        "type": "string"
      },
      "OrderImportedMessagePayload": {
        "title": "OrderImportedMessagePayload",
        "includePath": "types/message/payload/OrderImportedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "order": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderimported-message",
        "type": "string"
      },
      "OrderLineItemAddedMessagePayload": {
        "title": "OrderLineItemAddedMessagePayload",
        "includePath": "types/message/payload/OrderLineItemAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "lineItem": {
                "$ref": "#/components/schemas/LineItem"
              },
              "addedQuantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderlineitemadded",
        "type": "string"
      },
      "OrderLineItemDiscountSetMessagePayload": {
        "title": "OrderLineItemDiscountSetMessagePayload",
        "includePath": "types/message/payload/OrderLineItemDiscountSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "discountedPricePerQuantity": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountedLineItemPriceForQuantity"
                }
              },
              "totalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "taxedPrice": {
                "$ref": "#/components/schemas/TaxedItemPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderlineitemdiscountset",
        "type": "string"
      },
      "OrderPaymentStateChangedMessagePayload": {
        "title": "OrderPaymentStateChangedMessagePayload",
        "includePath": "types/message/payload/OrderPaymentStateChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "paymentState": {
                "$ref": "#/components/schemas/PaymentState"
              },
              "oldPaymentState": {
                "$ref": "#/components/schemas/PaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderpaymentstatechanged-message",
        "type": "string"
      },
      "OrderReturnInfoAddedMessagePayload": {
        "title": "OrderReturnInfoAddedMessagePayload",
        "includePath": "types/message/payload/OrderReturnInfoAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "returnInfo": {
                "$ref": "#/components/schemas/ReturnInfo"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderReturnShipmentStateChangedMessagePayload": {
        "title": "OrderReturnShipmentStateChangedMessagePayload",
        "includePath": "types/message/payload/OrderReturnShipmentStateChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "returnItemId": {
                "type": "string"
              },
              "returnShipmentState": {
                "$ref": "#/components/schemas/ReturnShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderShipmentStateChangedMessagePayload": {
        "title": "OrderShipmentStateChangedMessagePayload",
        "includePath": "types/message/payload/OrderShipmentStateChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "shipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              },
              "oldShipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "OrderShippingAddressSetMessagePayload": {
        "title": "OrderShippingAddressSetMessagePayload",
        "includePath": "types/message/payload/OrderShippingAddressSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "oldAddress": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#ordershippingaddressset-message",
        "type": "string"
      },
      "OrderShippingInfoSetMessagePayload": {
        "title": "OrderShippingInfoSetMessagePayload",
        "includePath": "types/message/payload/OrderShippingInfoSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "shippingInfo": {
                "$ref": "#/components/schemas/ShippingInfo"
              },
              "oldShippingInfo": {
                "$ref": "#/components/schemas/ShippingInfo"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippinginfoset",
        "type": "string"
      },
      "OrderShippingRateInputSetMessagePayload": {
        "title": "OrderShippingRateInputSetMessagePayload",
        "includePath": "types/message/payload/OrderShippingRateInputSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "shippingRateInput": {
                "$ref": "#/components/schemas/ShippingRateInput"
              },
              "oldShippingRateInput": {
                "$ref": "#/components/schemas/ShippingRateInput"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#ordershippingrateinputset",
        "type": "string"
      },
      "OrderStateChangedMessagePayload": {
        "title": "OrderStateChangedMessagePayload",
        "includePath": "types/message/payload/OrderStateChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "orderState": {
                "$ref": "#/components/schemas/OrderState"
              },
              "oldOrderState": {
                "$ref": "#/components/schemas/OrderState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatechanged-message",
        "type": "string"
      },
      "OrderStateTransitionMessagePayload": {
        "title": "OrderStateTransitionMessagePayload",
        "includePath": "types/message/payload/OrderStateTransitionMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#orderstatetransition-message",
        "type": "string"
      },
      "OrderStoreSetMessagePayload": {
        "title": "OrderStoreSetMessagePayload",
        "includePath": "types/message/payload/OrderStoreSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "store": {
                "$ref": "#/components/schemas/StoreKeyReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#orderstoreset",
        "type": "string"
      },
      "ParcelAddedToDeliveryMessagePayload": {
        "title": "ParcelAddedToDeliveryMessagePayload",
        "includePath": "types/message/payload/ParcelAddedToDeliveryMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "delivery": {
                "$ref": "#/components/schemas/Delivery"
              },
              "parcel": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#parceladdedtodelivery-message",
        "type": "string"
      },
      "ParcelItemsUpdatedMessagePayload": {
        "title": "ParcelItemsUpdatedMessagePayload",
        "includePath": "types/message/payload/ParcelItemsUpdatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "deliveryId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              },
              "oldItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelMeasurementsUpdatedMessagePayload": {
        "title": "ParcelMeasurementsUpdatedMessagePayload",
        "includePath": "types/message/payload/ParcelMeasurementsUpdatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "parcelId": {
                "type": "string"
              },
              "measurements": {
                "$ref": "#/components/schemas/ParcelMeasurements"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelRemovedFromDeliveryMessagePayload": {
        "title": "ParcelRemovedFromDeliveryMessagePayload",
        "includePath": "types/message/payload/ParcelRemovedFromDeliveryMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "parcel": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "ParcelTrackingDataUpdatedMessagePayload": {
        "title": "ParcelTrackingDataUpdatedMessagePayload",
        "includePath": "types/message/payload/ParcelTrackingDataUpdatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "parcelId": {
                "type": "string"
              },
              "trackingData": {
                "$ref": "#/components/schemas/TrackingData"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "type": "string"
      },
      "PaymentCreatedMessagePayload": {
        "title": "PaymentCreatedMessagePayload",
        "includePath": "types/message/payload/PaymentCreatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentcreated-message",
        "type": "string"
      },
      "PaymentInteractionAddedMessagePayload": {
        "title": "PaymentInteractionAddedMessagePayload",
        "includePath": "types/message/payload/PaymentInteractionAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "interaction": {
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentinteractionadded-message",
        "type": "string"
      },
      "PaymentStatusInterfaceCodeSetMessagePayload": {
        "title": "PaymentStatusInterfaceCodeSetMessagePayload",
        "includePath": "types/message/payload/PaymentStatusInterfaceCodeSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "paymentId": {
                "type": "string"
              },
              "interfaceCode": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusinterfacecodeset-message",
        "type": "string"
      },
      "PaymentStatusStateTransitionMessagePayload": {
        "title": "PaymentStatusStateTransitionMessagePayload",
        "includePath": "types/message/payload/PaymentStatusStateTransitionMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymentstatusstatetransition-message",
        "type": "string"
      },
      "PaymentTransactionAddedMessagePayload": {
        "title": "PaymentTransactionAddedMessagePayload",
        "includePath": "types/message/payload/PaymentTransactionAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "transaction": {
                "$ref": "#/components/schemas/Transaction"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionadded-message",
        "type": "string"
      },
      "PaymentTransactionStateChangedMessagePayload": {
        "title": "PaymentTransactionStateChangedMessagePayload",
        "includePath": "types/message/payload/PaymentTransactionStateChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "transactionId": {
                "type": "string"
              },
              "state": {
                "$ref": "#/components/schemas/TransactionState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#paymenttransactionstatechanged-message",
        "type": "string"
      },
      "ProductAddedToCategoryMessagePayload": {
        "title": "ProductAddedToCategoryMessagePayload",
        "includePath": "types/message/payload/ProductAddedToCategoryMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/CategoryReference"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productaddedtocategory-message",
        "type": "string"
      },
      "ProductCreatedMessagePayload": {
        "title": "ProductCreatedMessagePayload",
        "includePath": "types/message/payload/ProductCreatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "productProjection": {
                "$ref": "#/components/schemas/ProductProjection"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productcreated-message",
        "type": "string"
      },
      "ProductDeletedMessagePayload": {
        "title": "ProductDeletedMessagePayload",
        "includePath": "types/message/payload/ProductDeletedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "removedImageUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "currentProjection": {
                "$ref": "#/components/schemas/ProductProjection"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productdeleted-message",
        "type": "string"
      },
      "ProductImageAddedMessagePayload": {
        "title": "ProductImageAddedMessagePayload",
        "includePath": "types/message/payload/ProductImageAddedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "image": {
                "$ref": "#/components/schemas/Image"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productimageadded-message",
        "type": "string"
      },
      "ProductPriceDiscountsSetMessagePayload": {
        "title": "ProductPriceDiscountsSetMessagePayload",
        "includePath": "types/message/payload/ProductPriceDiscountsSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "updatedPrices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPriceDiscountsSetUpdatedPrice"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpricediscountsset-message",
        "type": "string"
      },
      "ProductPriceExternalDiscountSetMessagePayload": {
        "title": "ProductPriceExternalDiscountSetMessagePayload",
        "includePath": "types/message/payload/ProductPriceExternalDiscountSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "variantId": {
                "type": "integer"
              },
              "variantKey": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "priceId": {
                "type": "string"
              },
              "discounted": {
                "$ref": "#/components/schemas/DiscountedPrice"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types.html#productpriceexternaldiscountset-message",
        "type": "string"
      },
      "ProductPublishedMessagePayload": {
        "title": "ProductPublishedMessagePayload",
        "includePath": "types/message/payload/ProductPublishedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "removedImageUrls": {
                "type": "array"
              },
              "productProjection": {
                "$ref": "#/components/schemas/ProductProjection"
              },
              "scope": {
                "$ref": "#/components/schemas/ProductPublishScope"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productpublished-message",
        "type": "string"
      },
      "ProductRemovedFromCategoryMessagePayload": {
        "title": "ProductRemovedFromCategoryMessagePayload",
        "includePath": "types/message/payload/ProductRemovedFromCategoryMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/CategoryReference"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-message-types#productremovedfromcategory-message",
        "type": "string"
      },
      "ProductRevertedStagedChangesMessagePayload": {
        "title": "ProductRevertedStagedChangesMessagePayload",
        "includePath": "types/message/payload/ProductRevertedStagedChangesMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "removedImageUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productrevertedstagedchanges-message",
        "type": "string"
      },
      "ProductSlugChangedMessagePayload": {
        "title": "ProductSlugChangedMessagePayload",
        "includePath": "types/message/payload/ProductSlugChangedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "slug": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productslugchanged-message",
        "type": "string"
      },
      "ProductStateTransitionMessagePayload": {
        "title": "ProductStateTransitionMessagePayload",
        "includePath": "types/message/payload/ProductStateTransitionMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productstatetransition-message",
        "type": "string"
      },
      "ProductUnpublishedMessagePayload": {
        "title": "ProductUnpublishedMessagePayload",
        "includePath": "types/message/payload/ProductUnpublishedMessagePayload.raml",
        "$ref": "#/components/schemas/MessagePayload",
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productunpublished-message"
      },
      "ProductVariantDeletedMessagePayload": {
        "title": "ProductVariantDeletedMessagePayload",
        "includePath": "types/message/payload/ProductVariantDeletedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "variant": {
                "$ref": "#/components/schemas/ProductVariant"
              },
              "removedImageUrls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#productvariantdeleted-message",
        "type": "string"
      },
      "ReviewCreatedMessagePayload": {
        "title": "ReviewCreatedMessagePayload",
        "includePath": "types/message/payload/ReviewCreatedMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "review": {
                "$ref": "#/components/schemas/Review"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewcreated-message",
        "type": "string"
      },
      "ReviewRatingSetMessagePayload": {
        "title": "ReviewRatingSetMessagePayload",
        "includePath": "types/message/payload/ReviewRatingSetMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "oldRating": {
                "type": "number"
              },
              "newRating": {
                "type": "number"
              },
              "includedInStatistics": {
                "type": "boolean"
              },
              "target": {
                "$ref": "#/components/schemas/Reference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewratingset-message",
        "type": "string"
      },
      "ReviewStateTransitionMessagePayload": {
        "title": "ReviewStateTransitionMessagePayload",
        "includePath": "types/message/payload/ReviewStateTransitionMessagePayload.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePayload"
          },
          {
            "properties": {
              "oldState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "newState": {
                "$ref": "#/components/schemas/StateReference"
              },
              "oldIncludedInStatistics": {
                "type": "boolean"
              },
              "newIncludedInStatistics": {
                "type": "boolean"
              },
              "target": {
                "$ref": "#/components/schemas/Reference"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Message",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-messages.html#reviewstatetransition-message",
        "type": "string"
      },
      "OrderEdit": {
        "title": "OrderEdit",
        "includePath": "types/order-edit/OrderEdit.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the OrderEdit.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the OrderEdit.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "Unique identifier for this edit.",
                "type": "string"
              },
              "resource": {
                "description": "The order to be updated with this edit.",
                "$ref": "#/components/schemas/OrderReference"
              },
              "stagedActions": {
                "description": "The actions to apply to the Order.\nCannot be updated after the edit has been applied.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StagedOrderUpdateAction"
                }
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "result": {
                "description": "Contains a preview of the changes in case of unapplied edit.\nFor applied edits, it contains the summary of the changes.",
                "$ref": "#/components/schemas/OrderEditResult"
              },
              "comment": {
                "description": "This field can be used to add textual information regarding the edit.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#orderedit",
        "x-annotation-updateType": "OrderEditUpdate",
        "type": "string"
      },
      "OrderEditApplied": {
        "title": "OrderEditApplied",
        "includePath": "types/order-edit/OrderEditApplied.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditResult"
          },
          {
            "properties": {
              "appliedAt": {
                "type": "string",
                "format": "date-time"
              },
              "excerptBeforeEdit": {
                "$ref": "#/components/schemas/OrderExcerpt"
              },
              "excerptAfterEdit": {
                "$ref": "#/components/schemas/OrderExcerpt"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditapplied",
        "type": "string"
      },
      "OrderEditApply": {
        "title": "OrderEditApply",
        "includePath": "types/order-edit/OrderEditApply.raml",
        "type": "object",
        "properties": {
          "editVersion": {
            "type": "integer"
          },
          "resourceVersion": {
            "type": "integer"
          }
        },
        "required": [
          "editVersion",
          "resourceVersion"
        ],
        "x-annotation-package": "OrderEdit"
      },
      "OrderEditDraft": {
        "title": "OrderEditDraft",
        "includePath": "types/order-edit/OrderEditDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "description": "Unique identifier for this edit.",
            "type": "string"
          },
          "resource": {
            "description": "The order to be updated with this edit.",
            "$ref": "#/components/schemas/OrderReference"
          },
          "stagedActions": {
            "description": "The actions to apply to `resource`.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StagedOrderUpdateAction"
            }
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "comment": {
            "description": "This field can be used to add additional textual information regarding the edit.",
            "type": "string"
          },
          "dryRun": {
            "description": "When set to `true` the edit is applied on the Order without persisting it.",
            "type": "boolean"
          }
        },
        "required": [
          "resource"
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditdraft"
      },
      "OrderEditNotProcessed": {
        "title": "OrderEditNotProcessed",
        "includePath": "types/order-edit/OrderEditNotProcessed.raml",
        "$ref": "#/components/schemas/OrderEditResult",
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditnotprocessed"
      },
      "OrderEditPagedQueryResponse": {
        "title": "OrderEditPagedQueryResponse",
        "includePath": "types/order-edit/OrderEditPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderEdit"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "OrderEdit"
      },
      "OrderEditPreviewFailure": {
        "title": "OrderEditPreviewFailure",
        "includePath": "types/order-edit/OrderEditPreviewFailure.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditResult"
          },
          {
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditpreviewfailure",
        "type": "string"
      },
      "OrderEditPreviewSuccess": {
        "title": "OrderEditPreviewSuccess",
        "includePath": "types/order-edit/OrderEditPreviewSuccess.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditResult"
          },
          {
            "properties": {
              "preview": {
                "$ref": "#/components/schemas/StagedOrder"
              },
              "messagePayloads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MessagePayload"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditpreviewsuccess",
        "type": "string"
      },
      "OrderEditReference": {
        "title": "OrderEditReference",
        "includePath": "types/order-edit/OrderEditReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/OrderEdit"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "type": "string"
      },
      "OrderEditResourceIdentifier": {
        "title": "OrderEditResourceIdentifier",
        "includePath": "types/order-edit/OrderEditResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "OrderEdit"
      },
      "OrderEditResult": {
        "title": "OrderEditResult",
        "includePath": "types/order-edit/OrderEditResult.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#ordereditresult"
      },
      "OrderEditUpdate": {
        "title": "OrderEditUpdate",
        "includePath": "types/order-edit/OrderEditUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderEditUpdateAction"
            }
          },
          "dryRun": {
            "type": "boolean"
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "OrderEdit"
      },
      "OrderEditUpdateAction": {
        "title": "OrderEditUpdateAction",
        "includePath": "types/order-edit/OrderEditUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "OrderEdit"
      },
      "OrderExcerpt": {
        "title": "OrderExcerpt",
        "includePath": "types/order-edit/OrderExcerpt.raml",
        "type": "object",
        "properties": {
          "totalPrice": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "taxedPrice": {
            "$ref": "#/components/schemas/TaxedPrice"
          },
          "version": {
            "type": "integer"
          }
        },
        "required": [
          "totalPrice",
          "version"
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#orderexcerpt"
      },
      "StagedOrder": {
        "title": "StagedOrder",
        "includePath": "types/order-edit/StagedOrder.raml",
        "$ref": "#/components/schemas/Order",
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html",
        "x-annotation-actionType": "StagedOrderUpdateAction"
      },
      "StagedOrderUpdateAction": {
        "title": "StagedOrderUpdateAction",
        "includePath": "types/order-edit/StagedOrderUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#stagedorderupdateaction"
      },
      "OrderEditAddStagedActionAction": {
        "title": "OrderEditAddStagedActionAction",
        "includePath": "types/order-edit/updates/OrderEditAddStagedActionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditUpdateAction"
          },
          {
            "properties": {
              "stagedAction": {
                "$ref": "#/components/schemas/StagedOrderUpdateAction"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#addstagedaction",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderEditSetCommentAction": {
        "title": "OrderEditSetCommentAction",
        "includePath": "types/order-edit/updates/OrderEditSetCommentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditUpdateAction"
          },
          {
            "properties": {
              "comment": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-comment",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderEditSetCustomFieldAction": {
        "title": "OrderEditSetCustomFieldAction",
        "includePath": "types/order-edit/updates/OrderEditSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setcustomfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderEditSetCustomTypeAction": {
        "title": "OrderEditSetCustomTypeAction",
        "includePath": "types/order-edit/updates/OrderEditSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "If set, the custom fields are set to this new value.",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setcustomtype",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderEditSetKeyAction": {
        "title": "OrderEditSetKeyAction",
        "includePath": "types/order-edit/updates/OrderEditSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setkey",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderEditSetStagedActionsAction": {
        "title": "OrderEditSetStagedActionsAction",
        "includePath": "types/order-edit/updates/OrderEditSetStagedActionsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderEditUpdateAction"
          },
          {
            "properties": {
              "stagedActions": {
                "description": "The actions to edit the `resource`.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StagedOrderUpdateAction"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#setstagedactions",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddCustomLineItemAction": {
        "title": "StagedOrderAddCustomLineItemAction",
        "includePath": "types/order-edit/updates/StagedOrderAddCustomLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "money": {
                "$ref": "#/components/schemas/Money"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "quantity": {
                "type": "number"
              },
              "slug": {
                "type": "string"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-customlineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddDeliveryAction": {
        "title": "StagedOrderAddDeliveryAction",
        "includePath": "types/order-edit/updates/StagedOrderAddDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "parcels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelDraft"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-delivery",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddDiscountCodeAction": {
        "title": "StagedOrderAddDiscountCodeAction",
        "includePath": "types/order-edit/updates/StagedOrderAddDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "code": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-discountcode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddItemShippingAddressAction": {
        "title": "StagedOrderAddItemShippingAddressAction",
        "includePath": "types/order-edit/updates/StagedOrderAddItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddLineItemAction": {
        "title": "StagedOrderAddLineItemAction",
        "includePath": "types/order-edit/updates/StagedOrderAddLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              },
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              },
              "productId": {
                "type": "string"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-lineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddParcelToDeliveryAction": {
        "title": "StagedOrderAddParcelToDeliveryAction",
        "includePath": "types/order-edit/updates/StagedOrderAddParcelToDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "measurements": {
                "$ref": "#/components/schemas/ParcelMeasurements"
              },
              "trackingData": {
                "$ref": "#/components/schemas/TrackingData"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-parcel",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddPaymentAction": {
        "title": "StagedOrderAddPaymentAction",
        "includePath": "types/order-edit/updates/StagedOrderAddPaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-payment",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddReturnInfoAction": {
        "title": "StagedOrderAddReturnInfoAction",
        "includePath": "types/order-edit/updates/StagedOrderAddReturnInfoAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "returnTrackingId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReturnItemDraft"
                }
              },
              "returnDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-returninfo",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderAddShoppingListAction": {
        "title": "StagedOrderAddShoppingListAction",
        "includePath": "types/order-edit/updates/StagedOrderAddShoppingListAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "shoppingList": {
                "$ref": "#/components/schemas/ShoppingListResourceIdentifier"
              },
              "supplyChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#add-shopping-list",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeCustomLineItemMoneyAction": {
        "title": "StagedOrderChangeCustomLineItemMoneyAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeCustomLineItemMoneyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "money": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-customlineitem-money",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeCustomLineItemQuantityAction": {
        "title": "StagedOrderChangeCustomLineItemQuantityAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeCustomLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-customlineitem-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeLineItemQuantityAction": {
        "title": "StagedOrderChangeLineItemQuantityAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-lineitem-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeOrderStateAction": {
        "title": "StagedOrderChangeOrderStateAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeOrderStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "orderState": {
                "$ref": "#/components/schemas/OrderState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-orderstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangePaymentStateAction": {
        "title": "StagedOrderChangePaymentStateAction",
        "includePath": "types/order-edit/updates/StagedOrderChangePaymentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "paymentState": {
                "$ref": "#/components/schemas/PaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-paymentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeShipmentStateAction": {
        "title": "StagedOrderChangeShipmentStateAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeShipmentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "shipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-shipmentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeTaxCalculationModeAction": {
        "title": "StagedOrderChangeTaxCalculationModeAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeTaxCalculationModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "taxCalculationMode": {
                "$ref": "#/components/schemas/TaxCalculationMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-taxcalculationmode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeTaxModeAction": {
        "title": "StagedOrderChangeTaxModeAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeTaxModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "taxMode": {
                "$ref": "#/components/schemas/TaxMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-taxmode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderChangeTaxRoundingModeAction": {
        "title": "StagedOrderChangeTaxRoundingModeAction",
        "includePath": "types/order-edit/updates/StagedOrderChangeTaxRoundingModeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "taxRoundingMode": {
                "$ref": "#/components/schemas/RoundingMode"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-tax-roundingmode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderImportCustomLineItemStateAction": {
        "title": "StagedOrderImportCustomLineItemStateAction",
        "includePath": "types/order-edit/updates/StagedOrderImportCustomLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "state": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemState"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#import-state-for-customlineitems",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderImportLineItemStateAction": {
        "title": "StagedOrderImportLineItemStateAction",
        "includePath": "types/order-edit/updates/StagedOrderImportLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "state": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemState"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#import-state-for-lineitems",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderRemoveCustomLineItemAction": {
        "title": "StagedOrderRemoveCustomLineItemAction",
        "includePath": "types/order-edit/updates/StagedOrderRemoveCustomLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-customlineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderRemoveDeliveryAction": {
        "title": "StagedOrderRemoveDeliveryAction",
        "includePath": "types/order-edit/updates/StagedOrderRemoveDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-delivery",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderRemoveDiscountCodeAction": {
        "title": "StagedOrderRemoveDiscountCodeAction",
        "includePath": "types/order-edit/updates/StagedOrderRemoveDiscountCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "discountCode": {
                "$ref": "#/components/schemas/DiscountCodeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-discountcode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderRemoveItemShippingAddressAction": {
        "title": "StagedOrderRemoveItemShippingAddressAction",
        "includePath": "types/order-edit/updates/StagedOrderRemoveItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderRemoveLineItemAction": {
        "title": "StagedOrderRemoveLineItemAction",
        "includePath": "types/order-edit/updates/StagedOrderRemoveLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              },
              "shippingDetailsToRemove": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-lineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderRemoveParcelFromDeliveryAction": {
        "title": "StagedOrderRemoveParcelFromDeliveryAction",
        "includePath": "types/order-edit/updates/StagedOrderRemoveParcelFromDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-parcel-from-delivery",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderRemovePaymentAction": {
        "title": "StagedOrderRemovePaymentAction",
        "includePath": "types/order-edit/updates/StagedOrderRemovePaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#remove-payment",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetBillingAddressAction": {
        "title": "StagedOrderSetBillingAddressAction",
        "includePath": "types/order-edit/updates/StagedOrderSetBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-billing-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCountryAction": {
        "title": "StagedOrderSetCountryAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCountryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "country": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-country",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomFieldAction": {
        "title": "StagedOrderSetCustomFieldAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomLineItemCustomFieldAction": {
        "title": "StagedOrderSetCustomLineItemCustomFieldAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomLineItemCustomTypeAction": {
        "title": "StagedOrderSetCustomLineItemCustomTypeAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomLineItemShippingDetailsAction": {
        "title": "StagedOrderSetCustomLineItemShippingDetailsAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitemshippingdetails",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomLineItemTaxAmountAction": {
        "title": "StagedOrderSetCustomLineItemTaxAmountAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomLineItemTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "externalTaxAmount": {
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-taxamount",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomLineItemTaxRateAction": {
        "title": "StagedOrderSetCustomLineItemTaxRateAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomLineItemTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customlineitem-taxrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomShippingMethodAction": {
        "title": "StagedOrderSetCustomShippingMethodAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "shippingMethodName": {
                "type": "string"
              },
              "shippingRate": {
                "$ref": "#/components/schemas/ShippingRateDraft"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-custom-shipping-method",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomTypeAction": {
        "title": "StagedOrderSetCustomTypeAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomerEmailAction": {
        "title": "StagedOrderSetCustomerEmailAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomerEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customer-email",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomerGroupAction": {
        "title": "StagedOrderSetCustomerGroupAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomerGroupAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customerGroup": {
                "$ref": "#/components/schemas/CustomerGroupResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customer-group",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetCustomerIdAction": {
        "title": "StagedOrderSetCustomerIdAction",
        "includePath": "types/order-edit/updates/StagedOrderSetCustomerIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customerId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-customer-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetDeliveryAddressAction": {
        "title": "StagedOrderSetDeliveryAddressAction",
        "includePath": "types/order-edit/updates/StagedOrderSetDeliveryAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-delivery-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetDeliveryItemsAction": {
        "title": "StagedOrderSetDeliveryItemsAction",
        "includePath": "types/order-edit/updates/StagedOrderSetDeliveryItemsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-delivery-items",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLineItemCustomFieldAction": {
        "title": "StagedOrderSetLineItemCustomFieldAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLineItemCustomTypeAction": {
        "title": "StagedOrderSetLineItemCustomTypeAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLineItemPriceAction": {
        "title": "StagedOrderSetLineItemPriceAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLineItemPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalPrice": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-price",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLineItemShippingDetailsAction": {
        "title": "StagedOrderSetLineItemShippingDetailsAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitemshippingdetails",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLineItemTaxAmountAction": {
        "title": "StagedOrderSetLineItemTaxAmountAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLineItemTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalTaxAmount": {
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-taxamount",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLineItemTaxRateAction": {
        "title": "StagedOrderSetLineItemTaxRateAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLineItemTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-taxrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLineItemTotalPriceAction": {
        "title": "StagedOrderSetLineItemTotalPriceAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLineItemTotalPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "externalTotalPrice": {
                "$ref": "#/components/schemas/ExternalLineItemTotalPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-lineitem-totalprice",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetLocaleAction": {
        "title": "StagedOrderSetLocaleAction",
        "includePath": "types/order-edit/updates/StagedOrderSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-locale",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetOrderNumberAction": {
        "title": "StagedOrderSetOrderNumberAction",
        "includePath": "types/order-edit/updates/StagedOrderSetOrderNumberAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "orderNumber": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-order-number",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetOrderTotalTaxAction": {
        "title": "StagedOrderSetOrderTotalTaxAction",
        "includePath": "types/order-edit/updates/StagedOrderSetOrderTotalTaxAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "externalTotalGross": {
                "$ref": "#/components/schemas/Money"
              },
              "externalTaxPortions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxPortionDraft"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-order-total-tax",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetParcelItemsAction": {
        "title": "StagedOrderSetParcelItemsAction",
        "includePath": "types/order-edit/updates/StagedOrderSetParcelItemsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-parcel-items",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetParcelMeasurementsAction": {
        "title": "StagedOrderSetParcelMeasurementsAction",
        "includePath": "types/order-edit/updates/StagedOrderSetParcelMeasurementsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "measurements": {
                "$ref": "#/components/schemas/ParcelMeasurements"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-parcel-measurements",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetParcelTrackingDataAction": {
        "title": "StagedOrderSetParcelTrackingDataAction",
        "includePath": "types/order-edit/updates/StagedOrderSetParcelTrackingDataAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "trackingData": {
                "$ref": "#/components/schemas/TrackingData"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-parcel-tracking-data",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetReturnPaymentStateAction": {
        "title": "StagedOrderSetReturnPaymentStateAction",
        "includePath": "types/order-edit/updates/StagedOrderSetReturnPaymentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "returnItemId": {
                "type": "string"
              },
              "paymentState": {
                "$ref": "#/components/schemas/ReturnPaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-returnpaymentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetReturnShipmentStateAction": {
        "title": "StagedOrderSetReturnShipmentStateAction",
        "includePath": "types/order-edit/updates/StagedOrderSetReturnShipmentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "returnItemId": {
                "type": "string"
              },
              "shipmentState": {
                "$ref": "#/components/schemas/ReturnShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-returnshipmentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetShippingAddressAction": {
        "title": "StagedOrderSetShippingAddressAction",
        "includePath": "types/order-edit/updates/StagedOrderSetShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetShippingAddressAndCustomShippingMethodAction": {
        "title": "StagedOrderSetShippingAddressAndCustomShippingMethodAction",
        "includePath": "types/order-edit/updates/StagedOrderSetShippingAddressAndCustomShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "shippingMethodName": {
                "type": "string"
              },
              "shippingRate": {
                "$ref": "#/components/schemas/ShippingRateDraft"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-address-and-custom-shipping-method",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetShippingAddressAndShippingMethodAction": {
        "title": "StagedOrderSetShippingAddressAndShippingMethodAction",
        "includePath": "types/order-edit/updates/StagedOrderSetShippingAddressAndShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "shippingMethod": {
                "$ref": "#/components/schemas/ShippingMethodResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-address-and-shipping-method",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetShippingMethodAction": {
        "title": "StagedOrderSetShippingMethodAction",
        "includePath": "types/order-edit/updates/StagedOrderSetShippingMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "shippingMethod": {
                "$ref": "#/components/schemas/ShippingMethodResourceIdentifier"
              },
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-method",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetShippingMethodTaxAmountAction": {
        "title": "StagedOrderSetShippingMethodTaxAmountAction",
        "includePath": "types/order-edit/updates/StagedOrderSetShippingMethodTaxAmountAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "externalTaxAmount": {
                "$ref": "#/components/schemas/ExternalTaxAmountDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shippingmethod-taxamount",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetShippingMethodTaxRateAction": {
        "title": "StagedOrderSetShippingMethodTaxRateAction",
        "includePath": "types/order-edit/updates/StagedOrderSetShippingMethodTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "externalTaxRate": {
                "$ref": "#/components/schemas/ExternalTaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shippingmethod-taxrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderSetShippingRateInputAction": {
        "title": "StagedOrderSetShippingRateInputAction",
        "includePath": "types/order-edit/updates/StagedOrderSetShippingRateInputAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "shippingRateInput": {
                "$ref": "#/components/schemas/ShippingRateInputDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#set-shipping-rate-input",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderTransitionCustomLineItemStateAction": {
        "title": "StagedOrderTransitionCustomLineItemStateAction",
        "includePath": "types/order-edit/updates/StagedOrderTransitionCustomLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "toState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "actualTransitionDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-the-state-of-customlineitem-according-to-allowed-transitions",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderTransitionLineItemStateAction": {
        "title": "StagedOrderTransitionLineItemStateAction",
        "includePath": "types/order-edit/updates/StagedOrderTransitionLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "toState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "actualTransitionDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#change-the-state-of-lineitem-according-to-allowed-transitions",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderTransitionStateAction": {
        "title": "StagedOrderTransitionStateAction",
        "includePath": "types/order-edit/updates/StagedOrderTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#transition-state",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderUpdateItemShippingAddressAction": {
        "title": "StagedOrderUpdateItemShippingAddressAction",
        "includePath": "types/order-edit/updates/StagedOrderUpdateItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#update-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StagedOrderUpdateSyncInfoAction": {
        "title": "StagedOrderUpdateSyncInfoAction",
        "includePath": "types/order-edit/updates/StagedOrderUpdateSyncInfoAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StagedOrderUpdateAction"
          },
          {
            "properties": {
              "channel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalId": {
                "type": "string"
              },
              "syncedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "OrderEdit",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-order-edits.html#update-syncinfo",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomLineItemReturnItem": {
        "title": "CustomLineItemReturnItem",
        "includePath": "types/order/CustomLineItemReturnItem.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnItem"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem",
        "type": "string"
      },
      "Delivery": {
        "title": "Delivery",
        "includePath": "types/order/Delivery.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "description": "Items which are shipped in this delivery regardless their distribution over several parcels.\nCan also be specified individually for each Parcel.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItem"
            }
          },
          "parcels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parcel"
            }
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "required": [
          "id",
          "createdAt",
          "items",
          "parcels"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#delivery"
      },
      "DeliveryItem": {
        "title": "DeliveryItem",
        "includePath": "types/order/DeliveryItem.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "quantity"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#deliveryitem"
      },
      "DiscountedLineItemPriceDraft": {
        "title": "DiscountedLineItemPriceDraft",
        "includePath": "types/order/DiscountedLineItemPriceDraft.raml",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/Money"
          },
          "includedDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountedLineItemPortion"
            }
          }
        },
        "required": [
          "value",
          "includedDiscounts"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"
      },
      "ItemState": {
        "title": "ItemState",
        "includePath": "types/order/ItemState.raml",
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number"
          },
          "state": {
            "$ref": "#/components/schemas/StateReference"
          }
        },
        "required": [
          "quantity",
          "state"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#itemstate"
      },
      "LineItemImportDraft": {
        "title": "LineItemImportDraft",
        "includePath": "types/order/LineItemImportDraft.raml",
        "type": "object",
        "properties": {
          "productId": {
            "description": "ID of the existing product.\nYou also need to specify the ID of the variant if this property is set or alternatively you can just specify SKU of the product variant.",
            "type": "string"
          },
          "name": {
            "description": "The product name.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "variant": {
            "$ref": "#/components/schemas/ProductVariantImportDraft"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDraft"
          },
          "quantity": {
            "type": "number"
          },
          "state": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemState"
            }
          },
          "supplyChannel": {
            "description": "Optional connection to a particular supplier.\nBy providing supply channel information, you can uniquely identify\ninventory entries that should be reserved.\nThe provided channel should have the\nInventorySupply role.",
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "distributionChannel": {
            "description": "The channel is used to select a ProductPrice.\nThe provided channel should have the ProductDistribution role.",
            "$ref": "#/components/schemas/ChannelResourceIdentifier"
          },
          "taxRate": {
            "$ref": "#/components/schemas/TaxRate"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "shippingDetails": {
            "$ref": "#/components/schemas/ItemShippingDetailsDraft"
          }
        },
        "required": [
          "name",
          "variant",
          "price",
          "quantity"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#lineitemimportdraft"
      },
      "LineItemReturnItem": {
        "title": "LineItemReturnItem",
        "includePath": "types/order/LineItemReturnItem.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReturnItem"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem",
        "type": "string"
      },
      "Order": {
        "title": "Order",
        "includePath": "types/order/Order.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the order.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the order.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "completedAt": {
                "description": "This field will only be present if it was set for Order Import",
                "type": "string",
                "format": "date-time"
              },
              "orderNumber": {
                "description": "String that uniquely identifies an order.\nIt can be used to create more human-readable (in contrast to ID) identifier for the order.\nIt should be unique across a project.\nOnce it's set it cannot be changed.",
                "type": "string"
              },
              "customerId": {
                "type": "string"
              },
              "customerEmail": {
                "type": "string"
              },
              "anonymousId": {
                "description": "Identifies carts and orders belonging to an anonymous session (the customer has not signed up/in yet).",
                "type": "string"
              },
              "store": {
                "$ref": "#/components/schemas/StoreKeyReference"
              },
              "lineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                }
              },
              "customLineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomLineItem"
                }
              },
              "totalPrice": {
                "$ref": "#/components/schemas/TypedMoney"
              },
              "taxedPrice": {
                "description": "The taxes are calculated based on the shipping address.",
                "$ref": "#/components/schemas/TaxedPrice"
              },
              "shippingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "billingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "taxMode": {
                "$ref": "#/components/schemas/TaxMode"
              },
              "taxRoundingMode": {
                "description": "When calculating taxes for `taxedPrice`, the selected mode is used for rouding.",
                "$ref": "#/components/schemas/RoundingMode"
              },
              "customerGroup": {
                "description": "Set when the customer is set and the customer is a member of a customer group.\nUsed for product variant price selection.",
                "$ref": "#/components/schemas/CustomerGroupReference"
              },
              "country": {
                "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nUsed for product variant price selection.",
                "type": "string"
              },
              "orderState": {
                "description": "One of the four predefined OrderStates.",
                "$ref": "#/components/schemas/OrderState"
              },
              "state": {
                "description": "This reference can point to a state in a custom workflow.",
                "$ref": "#/components/schemas/StateReference"
              },
              "shipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              },
              "paymentState": {
                "$ref": "#/components/schemas/PaymentState"
              },
              "shippingInfo": {
                "description": "Set if the ShippingMethod is set.",
                "$ref": "#/components/schemas/ShippingInfo"
              },
              "syncInfo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SyncInfo"
                }
              },
              "returnInfo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReturnInfo"
                }
              },
              "discountCodes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCodeInfo"
                }
              },
              "lastMessageSequenceNumber": {
                "format": "int64",
                "description": "The sequence number of the last order message produced by changes to this order.\n`0` means, that no messages were created yet.",
                "type": "number"
              },
              "cart": {
                "description": "Set when this order was created from a cart.\nThe cart will have the state `Ordered`.",
                "$ref": "#/components/schemas/CartReference"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "paymentInfo": {
                "$ref": "#/components/schemas/PaymentInfo"
              },
              "locale": {
                "type": "string"
              },
              "inventoryMode": {
                "$ref": "#/components/schemas/InventoryMode"
              },
              "origin": {
                "$ref": "#/components/schemas/CartOrigin"
              },
              "taxCalculationMode": {
                "description": "When calculating taxes for `taxedPrice`, the selected mode is used for calculating the price with LineItemLevel (horizontally) or UnitPriceLevel (vertically) calculation mode.",
                "$ref": "#/components/schemas/TaxCalculationMode"
              },
              "shippingRateInput": {
                "description": "The shippingRateInput is used as an input to select a ShippingRatePriceTier.",
                "$ref": "#/components/schemas/ShippingRateInput"
              },
              "itemShippingAddresses": {
                "description": "Contains addresses for orders with multiple shipping addresses.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address"
                }
              },
              "refusedGifts": {
                "description": "Automatically filled when a line item with LineItemMode `GiftLineItem` is removed from this order.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartDiscountReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order",
        "x-annotation-updateType": "OrderUpdate",
        "type": "string"
      },
      "OrderFromCartDraft": {
        "title": "OrderFromCartDraft",
        "includePath": "types/order/OrderFromCartDraft.raml",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique id of the cart from which an order is created.",
            "type": "string"
          },
          "version": {
            "format": "int64",
            "type": "number"
          },
          "orderNumber": {
            "description": "String that uniquely identifies an order.\nIt can be used to create more human-readable (in contrast to ID) identifier for the order.\nIt should be unique across a project.\nOnce it's set it cannot be changed.\nFor easier use on Get, Update and Delete actions we suggest assigning order numbers that match the regular expression `[a-z0-9_\\-]{2,36}`.",
            "type": "string"
          },
          "paymentState": {
            "$ref": "#/components/schemas/PaymentState"
          },
          "shipmentState": {
            "$ref": "#/components/schemas/ShipmentState"
          },
          "orderState": {
            "description": "Order will be created with `Open` status by default.",
            "$ref": "#/components/schemas/OrderState"
          },
          "state": {
            "$ref": "#/components/schemas/StateResourceIdentifier"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "x-annotation-package": "Order"
      },
      "OrderImportDraft": {
        "title": "OrderImportDraft",
        "includePath": "types/order/OrderImportDraft.raml",
        "type": "object",
        "properties": {
          "orderNumber": {
            "description": "String that unique identifies an order.\nIt can be used to create more human-readable (in contrast to ID) identifier for the order.\nIt should be unique within a project.",
            "type": "string"
          },
          "customerId": {
            "description": "If given the customer with that ID must exist in the project.",
            "type": "string"
          },
          "customerEmail": {
            "description": "The customer email can be used when no check against existing Customers is desired during order import.",
            "type": "string"
          },
          "lineItems": {
            "description": "If not given `customLineItems` must not be empty.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemImportDraft"
            }
          },
          "customLineItems": {
            "description": "If not given `lineItems` must not be empty.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomLineItemDraft"
            }
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Money"
          },
          "taxedPrice": {
            "description": "Order Import does not support calculation of taxes.\nWhen setting the draft the taxedPrice is to be provided.",
            "$ref": "#/components/schemas/TaxedPriceDraft"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "customerGroup": {
            "description": "Set when the customer is set and the customer is a member of a customer group.\nUsed for product variant price selection.",
            "$ref": "#/components/schemas/CustomerGroupResourceIdentifier"
          },
          "country": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nUsed for product variant price selection.",
            "type": "string"
          },
          "orderState": {
            "description": "If not given the `Open` state will be assigned by default.",
            "$ref": "#/components/schemas/OrderState"
          },
          "shipmentState": {
            "$ref": "#/components/schemas/ShipmentState"
          },
          "paymentState": {
            "$ref": "#/components/schemas/PaymentState"
          },
          "shippingInfo": {
            "description": "Set if the ShippingMethod is set.",
            "$ref": "#/components/schemas/ShippingInfoImportDraft"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "inventoryMode": {
            "description": "If not given the mode `None` will be assigned by default.",
            "$ref": "#/components/schemas/InventoryMode"
          },
          "taxRoundingMode": {
            "description": "If not given the tax rounding mode `HalfEven` will be assigned by default.",
            "$ref": "#/components/schemas/RoundingMode"
          },
          "itemShippingAddresses": {
            "description": "Contains addresses for orders with multiple shipping addresses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "store": {
            "$ref": "#/components/schemas/StoreResourceIdentifier"
          },
          "origin": {
            "description": "The default origin is `Customer`.",
            "$ref": "#/components/schemas/CartOrigin"
          }
        },
        "required": [
          "totalPrice"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#orderimportdraft"
      },
      "OrderPagedQueryResponse": {
        "title": "OrderPagedQueryResponse",
        "includePath": "types/order/OrderPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Order"
      },
      "OrderReference": {
        "title": "OrderReference",
        "includePath": "types/order/OrderReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order",
        "type": "string"
      },
      "OrderResourceIdentifier": {
        "title": "OrderResourceIdentifier",
        "includePath": "types/order/OrderResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#order"
      },
      "OrderState": {
        "enum": [
          "Open",
          "Confirmed",
          "Complete",
          "Cancelled"
        ],
        "includePath": "types/order/OrderState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#orderstate"
      },
      "OrderUpdate": {
        "title": "OrderUpdate",
        "includePath": "types/order/OrderUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Order"
      },
      "OrderUpdateAction": {
        "title": "OrderUpdateAction",
        "includePath": "types/order/OrderUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Order"
      },
      "Parcel": {
        "title": "Parcel",
        "includePath": "types/order/Parcel.raml",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "measurements": {
            "$ref": "#/components/schemas/ParcelMeasurements"
          },
          "trackingData": {
            "$ref": "#/components/schemas/TrackingData"
          },
          "items": {
            "description": "The delivery items contained in this parcel.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItem"
            }
          }
        },
        "required": [
          "id",
          "createdAt"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcel"
      },
      "ParcelDraft": {
        "title": "ParcelDraft",
        "includePath": "types/order/ParcelDraft.raml",
        "type": "object",
        "properties": {
          "measurements": {
            "$ref": "#/components/schemas/ParcelMeasurements"
          },
          "trackingData": {
            "$ref": "#/components/schemas/TrackingData"
          },
          "items": {
            "description": "The delivery items contained in this parcel.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItem"
            }
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parceldraft"
      },
      "ParcelMeasurements": {
        "title": "ParcelMeasurements",
        "includePath": "types/order/ParcelMeasurements.raml",
        "type": "object",
        "properties": {
          "heightInMillimeter": {
            "type": "number"
          },
          "lengthInMillimeter": {
            "type": "number"
          },
          "widthInMillimeter": {
            "type": "number"
          },
          "weightInGram": {
            "type": "number"
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#parcelmeasurements"
      },
      "PaymentInfo": {
        "title": "PaymentInfo",
        "includePath": "types/order/PaymentInfo.raml",
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentReference"
            }
          }
        },
        "required": [
          "payments"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentinfo"
      },
      "PaymentState": {
        "enum": [
          "BalanceDue",
          "Failed",
          "Pending",
          "CreditOwed",
          "Paid"
        ],
        "includePath": "types/order/PaymentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#paymentstate"
      },
      "ProductVariantImportDraft": {
        "title": "ProductVariantImportDraft",
        "includePath": "types/order/ProductVariantImportDraft.raml",
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "description": "The sequential ID of the variant within the product.\nThe variant with provided ID should exist in some existing product, so you also need to specify the productId if this property is set,\nor alternatively you can just specify SKU of the product variant.",
            "type": "number"
          },
          "sku": {
            "description": "The SKU of the existing variant.",
            "type": "string"
          },
          "prices": {
            "description": "The prices of the variant.\nThe prices should not contain two prices for the same price scope (same currency, country and customer group).\nIf this property is defined, then it will override the `prices` property from the original product variant, otherwise `prices` property from the original product variant would be copied in the resulting order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDraft"
            }
          },
          "attributes": {
            "description": "If this property is defined, then it will override the `attributes` property from the original\nproduct variant, otherwise `attributes` property from the original product variant would be copied in the resulting order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "images": {
            "description": "If this property is defined, then it will override the `images` property from the original\nproduct variant, otherwise `images` property from the original product variant would be copied in the resulting order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#productvariantimportdraft"
      },
      "ReturnInfo": {
        "title": "ReturnInfo",
        "includePath": "types/order/ReturnInfo.raml",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReturnItem"
            }
          },
          "returnTrackingId": {
            "description": "Identifies, which return tracking ID is connected to this particular return.",
            "type": "string"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "items"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returninfo"
      },
      "ReturnItem": {
        "title": "ReturnItem",
        "includePath": "types/order/ReturnItem.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "quantity": {
            "format": "int64",
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "shipmentState": {
            "$ref": "#/components/schemas/ReturnShipmentState"
          },
          "paymentState": {
            "$ref": "#/components/schemas/ReturnPaymentState"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "quantity",
          "type",
          "shipmentState",
          "paymentState",
          "lastModifiedAt",
          "createdAt"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnitem"
      },
      "ReturnItemDraft": {
        "title": "ReturnItemDraft",
        "includePath": "types/order/ReturnItemDraft.raml",
        "type": "object",
        "properties": {
          "quantity": {
            "format": "int64",
            "type": "number"
          },
          "lineItemId": {
            "type": "string"
          },
          "customLineItemId": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "shipmentState": {
            "$ref": "#/components/schemas/ReturnShipmentState"
          }
        },
        "required": [
          "quantity",
          "shipmentState"
        ],
        "x-annotation-package": "Order"
      },
      "ReturnPaymentState": {
        "enum": [
          "NonRefundable",
          "Initial",
          "Refunded",
          "NotRefunded"
        ],
        "includePath": "types/order/ReturnPaymentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnpaymentstate"
      },
      "ReturnShipmentState": {
        "enum": [
          "Advised",
          "Returned",
          "BackInStock",
          "Unusable"
        ],
        "includePath": "types/order/ReturnShipmentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#returnshipmentstate"
      },
      "ShipmentState": {
        "enum": [
          "Shipped",
          "Ready",
          "Pending",
          "Delayed",
          "Partial",
          "Backorder"
        ],
        "includePath": "types/order/ShipmentState.raml",
        "type": "string",
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#shipmentstate"
      },
      "ShippingInfoImportDraft": {
        "title": "ShippingInfoImportDraft",
        "includePath": "types/order/ShippingInfoImportDraft.raml",
        "type": "object",
        "properties": {
          "shippingMethodName": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Money"
          },
          "shippingRate": {
            "description": "The shipping rate used to determine the price.",
            "$ref": "#/components/schemas/ShippingRateDraft"
          },
          "taxRate": {
            "$ref": "#/components/schemas/TaxRate"
          },
          "taxCategory": {
            "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
          },
          "shippingMethod": {
            "description": "Not set if custom shipping method is used.",
            "$ref": "#/components/schemas/ShippingMethodResourceIdentifier"
          },
          "deliveries": {
            "description": "Deliveries are compilations of information on how the articles are being delivered to the customers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Delivery"
            }
          },
          "discountedPrice": {
            "$ref": "#/components/schemas/DiscountedLineItemPriceDraft"
          },
          "shippingMethodState": {
            "description": "Indicates whether the ShippingMethod referenced is allowed for the cart or not.",
            "$ref": "#/components/schemas/ShippingMethodState"
          }
        },
        "required": [
          "shippingMethodName",
          "price",
          "shippingRate"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders-import.html#shippinginfoimportdraft"
      },
      "SyncInfo": {
        "title": "SyncInfo",
        "includePath": "types/order/SyncInfo.raml",
        "type": "object",
        "properties": {
          "channel": {
            "description": "Connection to a particular synchronization destination.",
            "$ref": "#/components/schemas/ChannelReference"
          },
          "externalId": {
            "description": "Can be used to reference an external order instance, file etc.",
            "type": "string"
          },
          "syncedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "channel",
          "syncedAt"
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#syncinfo"
      },
      "TaxedItemPriceDraft": {
        "title": "TaxedItemPriceDraft",
        "includePath": "types/order/TaxedItemPriceDraft.raml",
        "type": "object",
        "properties": {
          "totalNet": {
            "$ref": "#/components/schemas/Money"
          },
          "totalGross": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "required": [
          "totalNet",
          "totalGross"
        ],
        "x-annotation-package": "Order"
      },
      "TrackingData": {
        "title": "TrackingData",
        "includePath": "types/order/TrackingData.raml",
        "type": "object",
        "properties": {
          "trackingId": {
            "description": "The ID to track one parcel.",
            "type": "string"
          },
          "carrier": {
            "description": "The carrier that delivers the parcel.",
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerTransaction": {
            "type": "string"
          },
          "isReturn": {
            "description": "Flag to distinguish if the parcel is on the way to the customer (false) or on the way back (true).",
            "type": "boolean"
          }
        },
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#trackingdata"
      },
      "OrderAddDeliveryAction": {
        "title": "OrderAddDeliveryAction",
        "includePath": "types/order/updates/OrderAddDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "parcels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelDraft"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-delivery",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderAddItemShippingAddressAction": {
        "title": "OrderAddItemShippingAddressAction",
        "includePath": "types/order/updates/OrderAddItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderAddParcelToDeliveryAction": {
        "title": "OrderAddParcelToDeliveryAction",
        "includePath": "types/order/updates/OrderAddParcelToDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "measurements": {
                "$ref": "#/components/schemas/ParcelMeasurements"
              },
              "trackingData": {
                "$ref": "#/components/schemas/TrackingData"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-parcel",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderAddPaymentAction": {
        "title": "OrderAddPaymentAction",
        "includePath": "types/order/updates/OrderAddPaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-payment",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderAddReturnInfoAction": {
        "title": "OrderAddReturnInfoAction",
        "includePath": "types/order/updates/OrderAddReturnInfoAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "returnTrackingId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReturnItemDraft"
                }
              },
              "returnDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#add-returninfo",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderChangeOrderStateAction": {
        "title": "OrderChangeOrderStateAction",
        "includePath": "types/order/updates/OrderChangeOrderStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "orderState": {
                "$ref": "#/components/schemas/OrderState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-orderstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderChangePaymentStateAction": {
        "title": "OrderChangePaymentStateAction",
        "includePath": "types/order/updates/OrderChangePaymentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "paymentState": {
                "$ref": "#/components/schemas/PaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-paymentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderChangeShipmentStateAction": {
        "title": "OrderChangeShipmentStateAction",
        "includePath": "types/order/updates/OrderChangeShipmentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "shipmentState": {
                "$ref": "#/components/schemas/ShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-shipmentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderImportCustomLineItemStateAction": {
        "title": "OrderImportCustomLineItemStateAction",
        "includePath": "types/order/updates/OrderImportCustomLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "state": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemState"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-customlineitems",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderImportLineItemStateAction": {
        "title": "OrderImportLineItemStateAction",
        "includePath": "types/order/updates/OrderImportLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "state": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemState"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#import-state-for-lineitems",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderRemoveDeliveryAction": {
        "title": "OrderRemoveDeliveryAction",
        "includePath": "types/order/updates/OrderRemoveDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-delivery",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderRemoveItemShippingAddressAction": {
        "title": "OrderRemoveItemShippingAddressAction",
        "includePath": "types/order/updates/OrderRemoveItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "addressKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderRemoveParcelFromDeliveryAction": {
        "title": "OrderRemoveParcelFromDeliveryAction",
        "includePath": "types/order/updates/OrderRemoveParcelFromDeliveryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-parcel-from-delivery",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderRemovePaymentAction": {
        "title": "OrderRemovePaymentAction",
        "includePath": "types/order/updates/OrderRemovePaymentAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "payment": {
                "$ref": "#/components/schemas/PaymentResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#remove-payment",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetBillingAddressAction": {
        "title": "OrderSetBillingAddressAction",
        "includePath": "types/order/updates/OrderSetBillingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-billing-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetCustomFieldAction": {
        "title": "OrderSetCustomFieldAction",
        "includePath": "types/order/updates/OrderSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetCustomLineItemCustomFieldAction": {
        "title": "OrderSetCustomLineItemCustomFieldAction",
        "includePath": "types/order/updates/OrderSetCustomLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetCustomLineItemCustomTypeAction": {
        "title": "OrderSetCustomLineItemCustomTypeAction",
        "includePath": "types/order/updates/OrderSetCustomLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetCustomLineItemShippingDetailsAction": {
        "title": "OrderSetCustomLineItemShippingDetailsAction",
        "includePath": "types/order/updates/OrderSetCustomLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customlineitemshippingdetails",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetCustomTypeAction": {
        "title": "OrderSetCustomTypeAction",
        "includePath": "types/order/updates/OrderSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetCustomerEmailAction": {
        "title": "OrderSetCustomerEmailAction",
        "includePath": "types/order/updates/OrderSetCustomerEmailAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "email": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customer-email",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetCustomerIdAction": {
        "title": "OrderSetCustomerIdAction",
        "includePath": "types/order/updates/OrderSetCustomerIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customerId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-customer-id",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetDeliveryAddressAction": {
        "title": "OrderSetDeliveryAddressAction",
        "includePath": "types/order/updates/OrderSetDeliveryAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-delivery-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetDeliveryItemsAction": {
        "title": "OrderSetDeliveryItemsAction",
        "includePath": "types/order/updates/OrderSetDeliveryItemsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "deliveryId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-delivery-items",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetLineItemCustomFieldAction": {
        "title": "OrderSetLineItemCustomFieldAction",
        "includePath": "types/order/updates/OrderSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetLineItemCustomTypeAction": {
        "title": "OrderSetLineItemCustomTypeAction",
        "includePath": "types/order/updates/OrderSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetLineItemShippingDetailsAction": {
        "title": "OrderSetLineItemShippingDetailsAction",
        "includePath": "types/order/updates/OrderSetLineItemShippingDetailsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "shippingDetails": {
                "$ref": "#/components/schemas/ItemShippingDetailsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-lineitemshippingdetails",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetLocaleAction": {
        "title": "OrderSetLocaleAction",
        "includePath": "types/order/updates/OrderSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-locale",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetOrderNumberAction": {
        "title": "OrderSetOrderNumberAction",
        "includePath": "types/order/updates/OrderSetOrderNumberAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "orderNumber": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-order-number",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetParcelItemsAction": {
        "title": "OrderSetParcelItemsAction",
        "includePath": "types/order/updates/OrderSetParcelItemsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItem"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-items",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetParcelMeasurementsAction": {
        "title": "OrderSetParcelMeasurementsAction",
        "includePath": "types/order/updates/OrderSetParcelMeasurementsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "measurements": {
                "$ref": "#/components/schemas/ParcelMeasurements"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-measurements",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetParcelTrackingDataAction": {
        "title": "OrderSetParcelTrackingDataAction",
        "includePath": "types/order/updates/OrderSetParcelTrackingDataAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "parcelId": {
                "type": "string"
              },
              "trackingData": {
                "$ref": "#/components/schemas/TrackingData"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-parcel-tracking-data",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetReturnPaymentStateAction": {
        "title": "OrderSetReturnPaymentStateAction",
        "includePath": "types/order/updates/OrderSetReturnPaymentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "returnItemId": {
                "type": "string"
              },
              "paymentState": {
                "$ref": "#/components/schemas/ReturnPaymentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnpaymentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetReturnShipmentStateAction": {
        "title": "OrderSetReturnShipmentStateAction",
        "includePath": "types/order/updates/OrderSetReturnShipmentStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "returnItemId": {
                "type": "string"
              },
              "shipmentState": {
                "$ref": "#/components/schemas/ReturnShipmentState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-returnshipmentstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetShippingAddressAction": {
        "title": "OrderSetShippingAddressAction",
        "includePath": "types/order/updates/OrderSetShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-shipping-address",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderSetStoreAction": {
        "title": "OrderSetStoreAction",
        "includePath": "types/order/updates/OrderSetStoreAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "store": {
                "$ref": "#/components/schemas/StoreResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#set-store-beta",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderTransitionCustomLineItemStateAction": {
        "title": "OrderTransitionCustomLineItemStateAction",
        "includePath": "types/order/updates/OrderTransitionCustomLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "customLineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "toState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "actualTransitionDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-customlineitem-according-to-allowed-transitions",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderTransitionLineItemStateAction": {
        "title": "OrderTransitionLineItemStateAction",
        "includePath": "types/order/updates/OrderTransitionLineItemStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "fromState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "toState": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "actualTransitionDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#change-the-state-of-lineitem-according-to-allowed-transitions",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderTransitionStateAction": {
        "title": "OrderTransitionStateAction",
        "includePath": "types/order/updates/OrderTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#transition-state",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderUpdateItemShippingAddressAction": {
        "title": "OrderUpdateItemShippingAddressAction",
        "includePath": "types/order/updates/OrderUpdateItemShippingAddressAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#update-itemshippingaddress",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "OrderUpdateSyncInfoAction": {
        "title": "OrderUpdateSyncInfoAction",
        "includePath": "types/order/updates/OrderUpdateSyncInfoAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderUpdateAction"
          },
          {
            "properties": {
              "channel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              },
              "externalId": {
                "type": "string"
              },
              "syncedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Order",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-orders.html#update-syncinfo",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Payment": {
        "title": "Payment",
        "includePath": "types/payment/Payment.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "customer": {
                "description": "A reference to the customer this payment belongs to.",
                "$ref": "#/components/schemas/CustomerReference"
              },
              "anonymousId": {
                "description": "Identifies payments belonging to an anonymous session (the customer has not signed up/in yet).",
                "type": "string"
              },
              "externalId": {
                "type": "string",
                "x-annotation-deprecated": true
              },
              "interfaceId": {
                "description": "The identifier that is used by the interface that manages the payment (usually the PSP).\nCannot be changed once it has been set.\nThe combination of this ID and the PaymentMethodInfo `paymentInterface` must be unique.",
                "type": "string"
              },
              "amountPlanned": {
                "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
                "$ref": "#/components/schemas/TypedMoney"
              },
              "amountAuthorized": {
                "$ref": "#/components/schemas/TypedMoney",
                "x-annotation-deprecated": true
              },
              "authorizedUntil": {
                "type": "string",
                "x-annotation-deprecated": true
              },
              "amountPaid": {
                "$ref": "#/components/schemas/TypedMoney",
                "x-annotation-deprecated": true
              },
              "amountRefunded": {
                "$ref": "#/components/schemas/TypedMoney",
                "x-annotation-deprecated": true
              },
              "paymentMethodInfo": {
                "$ref": "#/components/schemas/PaymentMethodInfo"
              },
              "paymentStatus": {
                "$ref": "#/components/schemas/PaymentStatus"
              },
              "transactions": {
                "description": "A list of financial transactions of different TransactionTypes with different TransactionStates.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "interfaceInteractions": {
                "description": "Interface interactions can be requests sent to the PSP, responses received from the PSP or notifications received from the PSP.\nSome interactions may result in a transaction.\nIf so, the `interactionId` in the Transaction should be set to match the ID of the PSP for the interaction.\nInteractions are managed by the PSP integration and are usually neither written nor read by the user facing frontends or other services.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFields"
                }
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "key": {
                "description": "User-specific unique identifier for the payment (max.\n256 characters).",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment",
        "x-annotation-updateType": "PaymentUpdate",
        "type": "string"
      },
      "PaymentDraft": {
        "title": "PaymentDraft",
        "includePath": "types/payment/PaymentDraft.raml",
        "type": "object",
        "properties": {
          "customer": {
            "description": "A reference to the customer this payment belongs to.",
            "$ref": "#/components/schemas/CustomerResourceIdentifier"
          },
          "anonymousId": {
            "description": "Identifies payments belonging to an anonymous session (the customer has not signed up/in yet).",
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "interfaceId": {
            "description": "The identifier that is used by the interface that manages the payment (usually the PSP).\nCannot be changed once it has been set.\nThe combination of this ID and the PaymentMethodInfo `paymentInterface` must be unique.",
            "type": "string"
          },
          "amountPlanned": {
            "description": "How much money this payment intends to receive from the customer.\nThe value usually matches the cart or order gross total.",
            "$ref": "#/components/schemas/Money"
          },
          "amountAuthorized": {
            "$ref": "#/components/schemas/Money"
          },
          "authorizedUntil": {
            "type": "string"
          },
          "amountPaid": {
            "$ref": "#/components/schemas/Money"
          },
          "amountRefunded": {
            "$ref": "#/components/schemas/Money"
          },
          "paymentMethodInfo": {
            "$ref": "#/components/schemas/PaymentMethodInfo"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatusDraft"
          },
          "transactions": {
            "description": "A list of financial transactions of different TransactionTypes with different TransactionStates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDraft"
            }
          },
          "interfaceInteractions": {
            "description": "Interface interactions can be requests send to the PSP, responses received from the PSP or notifications received from the PSP.\nSome interactions may result in a transaction.\nIf so, the `interactionId` in the Transaction should be set to match the ID of the PSP for the interaction.\nInteractions are managed by the PSP integration and are usually neither written nor read by the user facing frontends or other services.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldsDraft"
            }
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "key": {
            "description": "User-specific unique identifier for the payment (max.\n256 characters).",
            "type": "string"
          }
        },
        "required": [
          "amountPlanned"
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentdraft"
      },
      "PaymentMethodInfo": {
        "title": "PaymentMethodInfo",
        "includePath": "types/payment/PaymentMethodInfo.raml",
        "type": "object",
        "properties": {
          "paymentInterface": {
            "description": "The interface that handles the payment (usually a PSP).\nCannot be changed once it has been set.\nThe combination of Payment`interfaceId` and this field must be unique.",
            "type": "string"
          },
          "method": {
            "description": "The payment method that is used, e.g.\ne.g.\na conventional string representing Credit Card, Cash Advance etc.",
            "type": "string"
          },
          "name": {
            "description": "A human-readable, localized name for the payment method, e.g.\n'Credit Card'.",
            "$ref": "#/components/schemas/LocalizedString"
          }
        },
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentmethodinfo"
      },
      "PaymentPagedQueryResponse": {
        "title": "PaymentPagedQueryResponse",
        "includePath": "types/payment/PaymentPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Payment"
      },
      "PaymentReference": {
        "title": "PaymentReference",
        "includePath": "types/payment/PaymentReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment",
        "type": "string"
      },
      "PaymentResourceIdentifier": {
        "title": "PaymentResourceIdentifier",
        "includePath": "types/payment/PaymentResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#payment"
      },
      "PaymentStatus": {
        "title": "PaymentStatus",
        "includePath": "types/payment/PaymentStatus.raml",
        "type": "object",
        "properties": {
          "interfaceCode": {
            "description": "A code describing the current status returned by the interface that processes the payment.",
            "type": "string"
          },
          "interfaceText": {
            "description": "A text describing the current status returned by the interface that processes the payment.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/StateReference"
          }
        },
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentstatus"
      },
      "PaymentStatusDraft": {
        "title": "PaymentStatusDraft",
        "includePath": "types/payment/PaymentStatusDraft.raml",
        "type": "object",
        "properties": {
          "interfaceCode": {
            "type": "string"
          },
          "interfaceText": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/StateResourceIdentifier"
          }
        },
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#paymentstatus"
      },
      "PaymentUpdate": {
        "title": "PaymentUpdate",
        "includePath": "types/payment/PaymentUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Payment"
      },
      "PaymentUpdateAction": {
        "title": "PaymentUpdateAction",
        "includePath": "types/payment/PaymentUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Payment"
      },
      "Transaction": {
        "title": "Transaction",
        "includePath": "types/payment/Transaction.raml",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of this object.",
            "type": "string"
          },
          "timestamp": {
            "description": "The time at which the transaction took place.",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "description": "The type of this transaction.",
            "$ref": "#/components/schemas/TransactionType"
          },
          "amount": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "interactionId": {
            "description": "The identifier that is used by the interface that managed the transaction (usually the PSP).\nIf a matching interaction was logged in the `interfaceInteractions` array, the corresponding interaction should be findable with this ID.",
            "type": "string"
          },
          "state": {
            "description": "The state of this transaction.",
            "$ref": "#/components/schemas/TransactionState"
          }
        },
        "required": [
          "id",
          "type",
          "amount"
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transaction"
      },
      "TransactionDraft": {
        "title": "TransactionDraft",
        "includePath": "types/payment/TransactionDraft.raml",
        "type": "object",
        "properties": {
          "timestamp": {
            "description": "The time at which the transaction took place.",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "description": "The type of this transaction.",
            "$ref": "#/components/schemas/TransactionType"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "interactionId": {
            "description": "The identifier that is used by the interface that managed the transaction (usually the PSP).\nIf a matching interaction was logged in the `interfaceInteractions` array, the corresponding interaction should be findable with this ID.",
            "type": "string"
          },
          "state": {
            "description": "The state of this transaction.\nIf not set, defaults to `Initial`.",
            "$ref": "#/components/schemas/TransactionState"
          }
        },
        "required": [
          "type",
          "amount"
        ],
        "x-annotation-package": "Payment"
      },
      "TransactionState": {
        "title": "TransactionState",
        "enum": [
          "Initial",
          "Pending",
          "Success",
          "Failure"
        ],
        "includePath": "types/payment/TransactionState.raml",
        "type": "string",
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactionstate"
      },
      "TransactionType": {
        "title": "TransactionType",
        "enum": [
          "Authorization",
          "CancelAuthorization",
          "Charge",
          "Refund",
          "Chargeback"
        ],
        "includePath": "types/payment/TransactionType.raml",
        "type": "string",
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transactiontype"
      },
      "PaymentAddInterfaceInteractionAction": {
        "title": "PaymentAddInterfaceInteractionAction",
        "includePath": "types/payment/updates/PaymentAddInterfaceInteractionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-interfaceinteraction",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentAddTransactionAction": {
        "title": "PaymentAddTransactionAction",
        "includePath": "types/payment/updates/PaymentAddTransactionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "transaction": {
                "$ref": "#/components/schemas/TransactionDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#add-transaction",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentChangeAmountPlannedAction": {
        "title": "PaymentChangeAmountPlannedAction",
        "includePath": "types/payment/updates/PaymentChangeAmountPlannedAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-amountplanned",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentChangeTransactionInteractionIdAction": {
        "title": "PaymentChangeTransactionInteractionIdAction",
        "includePath": "types/payment/updates/PaymentChangeTransactionInteractionIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "transactionId": {
                "type": "string"
              },
              "interactionId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactioninteractionid",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentChangeTransactionStateAction": {
        "title": "PaymentChangeTransactionStateAction",
        "includePath": "types/payment/updates/PaymentChangeTransactionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "transactionId": {
                "type": "string"
              },
              "state": {
                "$ref": "#/components/schemas/TransactionState"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactionstate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentChangeTransactionTimestampAction": {
        "title": "PaymentChangeTransactionTimestampAction",
        "includePath": "types/payment/updates/PaymentChangeTransactionTimestampAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "transactionId": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#change-transactiontimestamp",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetAmountPaidAction": {
        "title": "PaymentSetAmountPaidAction",
        "includePath": "types/payment/updates/PaymentSetAmountPaidAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountpaid",
        "x-annotation-deprecated": true,
        "type": "string"
      },
      "PaymentSetAmountRefundedAction": {
        "title": "PaymentSetAmountRefundedAction",
        "includePath": "types/payment/updates/PaymentSetAmountRefundedAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "$ref": "#/components/schemas/Money"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-amountrefunded",
        "x-annotation-deprecated": true,
        "type": "string"
      },
      "PaymentSetAnonymousIdAction": {
        "title": "PaymentSetAnonymousIdAction",
        "includePath": "types/payment/updates/PaymentSetAnonymousIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "anonymousId": {
                "description": "Anonymous ID of the anonymous customer that this payment belongs to.\nIf this field is not set any existing `anonymousId` is removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-anonymousid",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetAuthorizationAction": {
        "title": "PaymentSetAuthorizationAction",
        "includePath": "types/payment/updates/PaymentSetAuthorizationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "amount": {
                "$ref": "#/components/schemas/Money"
              },
              "until": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-authorization",
        "x-annotation-deprecated": true,
        "type": "string"
      },
      "PaymentSetCustomFieldAction": {
        "title": "PaymentSetCustomFieldAction",
        "includePath": "types/payment/updates/PaymentSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetCustomTypeAction": {
        "title": "PaymentSetCustomTypeAction",
        "includePath": "types/payment/updates/PaymentSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "Sets the custom fields to this value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetCustomerAction": {
        "title": "PaymentSetCustomerAction",
        "includePath": "types/payment/updates/PaymentSetCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "customer": {
                "description": "A reference to the customer this payment belongs to.",
                "$ref": "#/components/schemas/CustomerResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-customer",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetExternalIdAction": {
        "title": "PaymentSetExternalIdAction",
        "includePath": "types/payment/updates/PaymentSetExternalIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "externalId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-externalid",
        "x-annotation-deprecated": true,
        "type": "string"
      },
      "PaymentSetInterfaceIdAction": {
        "title": "PaymentSetInterfaceIdAction",
        "includePath": "types/payment/updates/PaymentSetInterfaceIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interfaceId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-interfaceid",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetKeyAction": {
        "title": "PaymentSetKeyAction",
        "includePath": "types/payment/updates/PaymentSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "User-specific unique identifier for the payment (max.\n256 characters).\nIf not provided an existing key will be removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetMethodInfoInterfaceAction": {
        "title": "PaymentSetMethodInfoInterfaceAction",
        "includePath": "types/payment/updates/PaymentSetMethodInfoInterfaceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interface": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfointerface",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetMethodInfoMethodAction": {
        "title": "PaymentSetMethodInfoMethodAction",
        "includePath": "types/payment/updates/PaymentSetMethodInfoMethodAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "method": {
                "description": "If not provided, the method is unset.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfomethod",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetMethodInfoNameAction": {
        "title": "PaymentSetMethodInfoNameAction",
        "includePath": "types/payment/updates/PaymentSetMethodInfoNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "name": {
                "description": "If not provided, the name is unset.",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-methodinfoname",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetStatusInterfaceCodeAction": {
        "title": "PaymentSetStatusInterfaceCodeAction",
        "includePath": "types/payment/updates/PaymentSetStatusInterfaceCodeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interfaceCode": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacecode",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentSetStatusInterfaceTextAction": {
        "title": "PaymentSetStatusInterfaceTextAction",
        "includePath": "types/payment/updates/PaymentSetStatusInterfaceTextAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "interfaceText": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#set-statusinterfacetext",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "PaymentTransitionStateAction": {
        "title": "PaymentTransitionStateAction",
        "includePath": "types/payment/updates/PaymentTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentUpdateAction"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Payment",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-payments.html#transition-state",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscount": {
        "title": "ProductDiscount",
        "includePath": "types/product-discount/ProductDiscount.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the product discount",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the product discount.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "key": {
                "description": "User-specific unique identifier for a product discount.\nMust be unique across a project.",
                "type": "string"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "value": {
                "$ref": "#/components/schemas/ProductDiscountValue"
              },
              "predicate": {
                "description": "A valid ProductDiscount Predicate.",
                "type": "string"
              },
              "sortOrder": {
                "description": "The string contains a number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.\nA sortOrder must be unambiguous.",
                "type": "string"
              },
              "isActive": {
                "description": "Only active discount will be applied to product prices.",
                "type": "boolean"
              },
              "references": {
                "description": "The platform will generate this array from the predicate.\nIt contains the references of all the resources that are addressed in the predicate.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                }
              },
              "validFrom": {
                "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated product discount values.",
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "description": "The time from which the discount should be ineffective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount",
        "x-annotation-updateType": "ProductDiscountUpdate",
        "type": "string"
      },
      "ProductDiscountDraft": {
        "title": "ProductDiscountDraft",
        "includePath": "types/product-discount/ProductDiscountDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "key": {
            "description": "User-specific unique identifier for a product discount.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction",
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "value": {
            "$ref": "#/components/schemas/ProductDiscountValueDraft"
          },
          "predicate": {
            "description": "A valid ProductDiscount Predicate.",
            "type": "string"
          },
          "sortOrder": {
            "description": "The string must contain a decimal number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.",
            "type": "string"
          },
          "isActive": {
            "description": "If set to `true` the discount will be applied to product prices.",
            "type": "boolean"
          },
          "validFrom": {
            "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated product discount values.",
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "value",
          "predicate",
          "sortOrder",
          "isActive"
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountdraft"
      },
      "ProductDiscountMatchQuery": {
        "title": "ProductDiscountMatchQuery",
        "includePath": "types/product-discount/ProductDiscountMatchQuery.raml",
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "variantId": {
            "format": "int32",
            "type": "number"
          },
          "staged": {
            "type": "boolean"
          },
          "price": {
            "$ref": "#/components/schemas/QueryPrice"
          }
        },
        "required": [
          "productId",
          "variantId",
          "staged",
          "price"
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#get-matching-productdiscount"
      },
      "ProductDiscountPagedQueryResponse": {
        "title": "ProductDiscountPagedQueryResponse",
        "includePath": "types/product-discount/ProductDiscountPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscount"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "ProductDiscount"
      },
      "ProductDiscountReference": {
        "title": "ProductDiscountReference",
        "includePath": "types/product-discount/ProductDiscountReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/ProductDiscount"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount",
        "type": "string"
      },
      "ProductDiscountResourceIdentifier": {
        "title": "ProductDiscountResourceIdentifier",
        "includePath": "types/product-discount/ProductDiscountResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscount"
      },
      "ProductDiscountUpdate": {
        "title": "ProductDiscountUpdate",
        "includePath": "types/product-discount/ProductDiscountUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "ProductDiscount"
      },
      "ProductDiscountUpdateAction": {
        "title": "ProductDiscountUpdateAction",
        "includePath": "types/product-discount/ProductDiscountUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "ProductDiscount"
      },
      "ProductDiscountValue": {
        "title": "ProductDiscountValue",
        "includePath": "types/product-discount/ProductDiscountValue.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountvalue"
      },
      "ProductDiscountValueAbsolute": {
        "title": "ProductDiscountValueAbsolute",
        "includePath": "types/product-discount/ProductDiscountValueAbsolute.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountValue"
          },
          {
            "properties": {
              "money": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypedMoney"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountValueAbsoluteDraft": {
        "title": "ProductDiscountValueAbsoluteDraft",
        "includePath": "types/product-discount/ProductDiscountValueAbsoluteDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountValueDraft"
          },
          {
            "properties": {
              "money": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Money"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountValueDraft": {
        "title": "ProductDiscountValueDraft",
        "includePath": "types/product-discount/ProductDiscountValueDraft.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#productdiscountvalue"
      },
      "ProductDiscountValueExternal": {
        "title": "ProductDiscountValueExternal",
        "includePath": "types/product-discount/ProductDiscountValueExternal.raml",
        "$ref": "#/components/schemas/ProductDiscountValue",
        "x-annotation-package": "ProductDiscount"
      },
      "ProductDiscountValueExternalDraft": {
        "title": "ProductDiscountValueExternalDraft",
        "includePath": "types/product-discount/ProductDiscountValueExternalDraft.raml",
        "$ref": "#/components/schemas/ProductDiscountValueDraft",
        "x-annotation-package": "ProductDiscount"
      },
      "ProductDiscountValueRelative": {
        "title": "ProductDiscountValueRelative",
        "includePath": "types/product-discount/ProductDiscountValueRelative.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountValue"
          },
          {
            "properties": {
              "permyriad": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountValueRelativeDraft": {
        "title": "ProductDiscountValueRelativeDraft",
        "includePath": "types/product-discount/ProductDiscountValueRelativeDraft.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountValueDraft"
          },
          {
            "properties": {
              "permyriad": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "type": "string"
      },
      "ProductDiscountChangeIsActiveAction": {
        "title": "ProductDiscountChangeIsActiveAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeIsActiveAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "isActive": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-is-active",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountChangeNameAction": {
        "title": "ProductDiscountChangeNameAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountChangePredicateAction": {
        "title": "ProductDiscountChangePredicateAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangePredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "predicate": {
                "description": "A valid ProductDiscount Predicate.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-predicate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountChangeSortOrderAction": {
        "title": "ProductDiscountChangeSortOrderAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeSortOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "sortOrder": {
                "description": "The string must contain a number between 0 and 1.\nA discount with greater sortOrder is prioritized higher than a discount with lower sortOrder.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-sort-order",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountChangeValueAction": {
        "title": "ProductDiscountChangeValueAction",
        "includePath": "types/product-discount/updates/ProductDiscountChangeValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "value": {
                "$ref": "#/components/schemas/ProductDiscountValueDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#change-value",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountSetDescriptionAction": {
        "title": "ProductDiscountSetDescriptionAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountSetKeyAction": {
        "title": "ProductDiscountSetKeyAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "The key to set.\nIf you provide a `null` value or do not set this field at all, the existing `key` field is removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-key",
        "type": "string"
      },
      "ProductDiscountSetValidFromAction": {
        "title": "ProductDiscountSetValidFromAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetValidFromAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "description": "The time from which the discount should be effective.\nPlease take Eventual Consistency into account for calculated product discount values.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-from",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountSetValidFromAndUntilAction": {
        "title": "ProductDiscountSetValidFromAndUntilAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetValidFromAndUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "validFrom": {
                "type": "string",
                "format": "date-time"
              },
              "validUntil": {
                "description": "The timeframe for which the discount should be effective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-from-and-until",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductDiscountSetValidUntilAction": {
        "title": "ProductDiscountSetValidUntilAction",
        "includePath": "types/product-discount/updates/ProductDiscountSetValidUntilAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductDiscountUpdateAction"
          },
          {
            "properties": {
              "validUntil": {
                "description": "The time from which the discount should be ineffective.\nPlease take Eventual Consistency into account for calculated undiscounted values.",
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductDiscount",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productDiscounts.html#set-valid-until",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "AttributeBooleanType": {
        "title": "AttributeBooleanType",
        "includePath": "types/product-type/AttributeBooleanType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#booleantype"
      },
      "AttributeConstraintEnum": {
        "title": "AttributeConstraintEnum",
        "enum": [
          "None",
          "Unique",
          "CombinationUnique",
          "SameForAll"
        ],
        "includePath": "types/product-type/AttributeConstraintEnum.raml",
        "type": "string",
        "x-annotation-package": "ProductType"
      },
      "AttributeConstraintEnumDraft": {
        "title": "AttributeConstraintEnumDraft",
        "enum": [
          "None"
        ],
        "includePath": "types/product-type/AttributeConstraintEnumDraft.raml",
        "type": "string",
        "x-annotation-package": "ProductType"
      },
      "AttributeDateTimeType": {
        "title": "AttributeDateTimeType",
        "includePath": "types/product-type/AttributeDateTimeType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetimetype"
      },
      "AttributeDateType": {
        "title": "AttributeDateType",
        "includePath": "types/product-type/AttributeDateType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#datetype"
      },
      "AttributeDefinition": {
        "title": "AttributeDefinition",
        "includePath": "types/product-type/AttributeDefinition.raml",
        "type": "object",
        "properties": {
          "type": {
            "description": "Describes the type of the attribute.",
            "$ref": "#/components/schemas/AttributeType"
          },
          "name": {
            "description": "The unique name of the attribute used in the API.\nThe name must be between two and 256 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (`_`) and the hyphen-minus (`-`).\nWhen using the same `name` for an attribute in two or more product types all fields of the AttributeDefinition of this attribute need to be the same across the product types, otherwise an AttributeDefinitionAlreadyExists error code will be returned.\nAn exception to this are the values of an `enum` or `lenum` type and sets thereof.",
            "type": "string"
          },
          "label": {
            "description": "A human-readable label for the attribute.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "isRequired": {
            "description": "Whether the attribute is required to have a value.",
            "type": "boolean"
          },
          "attributeConstraint": {
            "description": "Describes how an attribute or a set of attributes should be validated across all variants of a product.",
            "$ref": "#/components/schemas/AttributeConstraintEnum"
          },
          "inputTip": {
            "description": "Additional information about the attribute that aids content managers when setting product details.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "inputHint": {
            "description": "Provides a visual representation type for this attribute.\nonly relevant for text-based attribute types\nlike TextType and LocalizableTextType.",
            "$ref": "#/components/schemas/TextInputHint"
          },
          "isSearchable": {
            "description": "Whether the attribute's values should generally be enabled in product search.\nThis determines whether the value is stored in products for matching terms in the context of full-text search queries  and can be used in facets & filters as part of product search queries.\nThe exact features that are enabled/disabled with this flag depend on the concrete attribute type and are described there.\nThe max size of a searchable field is **restricted to 10922 characters**.\nThis constraint is enforced at both product creation and product update.\nIf the length of the input exceeds the maximum size an InvalidField error is returned.",
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "name",
          "label",
          "isRequired",
          "attributeConstraint",
          "inputHint",
          "isSearchable"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributedefinition"
      },
      "AttributeDefinitionDraft": {
        "title": "AttributeDefinitionDraft",
        "includePath": "types/product-type/AttributeDefinitionDraft.raml",
        "type": "object",
        "properties": {
          "type": {
            "description": "Describes the type of the attribute.",
            "$ref": "#/components/schemas/AttributeType"
          },
          "name": {
            "description": "The unique name of the attribute used in the API.\nThe name must be between two and 256 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (`_`) and the hyphen-minus (`-`).\nWhen using the same `name` for an attribute in two or more product types all fields of the AttributeDefinition of this attribute need to be the same across the product types.",
            "type": "string"
          },
          "label": {
            "description": "A human-readable label for the attribute.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "isRequired": {
            "description": "Whether the attribute is required to have a value.",
            "type": "boolean"
          },
          "attributeConstraint": {
            "description": "Describes how an attribute or a set of attributes should be validated across all variants of a product.",
            "$ref": "#/components/schemas/AttributeConstraintEnum"
          },
          "inputTip": {
            "description": "Additional information about the attribute that aids content managers when setting product details.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "inputHint": {
            "description": "Provides a visual representation type for this attribute.\nonly relevant for text-based attribute types like TextType and LocalizableTextType.",
            "$ref": "#/components/schemas/TextInputHint"
          },
          "isSearchable": {
            "description": "Whether the attribute's values should generally be enabled in product search.\nThis determines whether the value is stored in products for matching terms in the context of full-text search queries and can be used in facets & filters as part of product search queries.\nThe exact features that are enabled/disabled with this flag depend on the concrete attribute type and are described there.",
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "name",
          "label",
          "isRequired"
        ],
        "x-annotation-package": "ProductType"
      },
      "AttributeEnumType": {
        "title": "AttributeEnumType",
        "includePath": "types/product-type/AttributeEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributePlainEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#enumtype",
        "type": "string"
      },
      "AttributeLocalizableTextType": {
        "title": "AttributeLocalizableTextType",
        "includePath": "types/product-type/AttributeLocalizableTextType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizabletexttype"
      },
      "AttributeLocalizedEnumType": {
        "title": "AttributeLocalizedEnumType",
        "includePath": "types/product-type/AttributeLocalizedEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizableenumtype",
        "type": "string"
      },
      "AttributeLocalizedEnumValue": {
        "title": "AttributeLocalizedEnumValue",
        "includePath": "types/product-type/AttributeLocalizedEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "$ref": "#/components/schemas/LocalizedString"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#localizedenumvalue"
      },
      "AttributeMoneyType": {
        "title": "AttributeMoneyType",
        "includePath": "types/product-type/AttributeMoneyType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#moneytype"
      },
      "AttributeNestedType": {
        "title": "AttributeNestedType",
        "includePath": "types/product-type/AttributeNestedType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "typeReference": {
                "$ref": "#/components/schemas/ProductTypeReference"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#nestedtype",
        "type": "string"
      },
      "AttributeNumberType": {
        "title": "AttributeNumberType",
        "includePath": "types/product-type/AttributeNumberType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#numbertype"
      },
      "AttributePlainEnumValue": {
        "title": "AttributePlainEnumValue",
        "includePath": "types/product-type/AttributePlainEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#plainenumvalue"
      },
      "AttributeReferenceType": {
        "title": "AttributeReferenceType",
        "includePath": "types/product-type/AttributeReferenceType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "referenceTypeId": {
                "$ref": "#/components/schemas/ReferenceTypeId"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#referencetype",
        "type": "string"
      },
      "AttributeSetType": {
        "title": "AttributeSetType",
        "includePath": "types/product-type/AttributeSetType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeType"
          },
          {
            "properties": {
              "elementType": {
                "$ref": "#/components/schemas/AttributeType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#settype",
        "type": "string"
      },
      "AttributeTextType": {
        "title": "AttributeTextType",
        "includePath": "types/product-type/AttributeTextType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#texttype"
      },
      "AttributeTimeType": {
        "title": "AttributeTimeType",
        "includePath": "types/product-type/AttributeTimeType.raml",
        "$ref": "#/components/schemas/AttributeType",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#timetype"
      },
      "AttributeType": {
        "title": "AttributeType",
        "includePath": "types/product-type/AttributeType.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "name"
        },
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#attributetype"
      },
      "ProductType": {
        "title": "ProductType",
        "includePath": "types/product-type/ProductType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the product type.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the product type.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "User-specific unique identifier for the product type (max.\n256 characters).",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype",
        "x-annotation-updateType": "ProductTypeUpdate",
        "type": "string"
      },
      "ProductTypeDraft": {
        "title": "ProductTypeDraft",
        "includePath": "types/product-type/ProductTypeDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "description": "User-specific unique identifier for the product type (min.\n2 and max.\n256 characters).",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDefinitionDraft"
            }
          }
        },
        "required": [
          "name",
          "description"
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttypedraft"
      },
      "ProductTypePagedQueryResponse": {
        "title": "ProductTypePagedQueryResponse",
        "includePath": "types/product-type/ProductTypePagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "ProductType"
      },
      "ProductTypeReference": {
        "title": "ProductTypeReference",
        "includePath": "types/product-type/ProductTypeReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/ProductType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype",
        "type": "string"
      },
      "ProductTypeResourceIdentifier": {
        "title": "ProductTypeResourceIdentifier",
        "includePath": "types/product-type/ProductTypeResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#producttype"
      },
      "ProductTypeUpdate": {
        "title": "ProductTypeUpdate",
        "includePath": "types/product-type/ProductTypeUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTypeUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "ProductType"
      },
      "ProductTypeUpdateAction": {
        "title": "ProductTypeUpdateAction",
        "includePath": "types/product-type/ProductTypeUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "ProductType"
      },
      "TextInputHint": {
        "title": "TextInputHint",
        "enum": [
          "SingleLine",
          "MultiLine"
        ],
        "includePath": "types/product-type/TextInputHint.raml",
        "type": "string",
        "x-annotation-package": "ProductType"
      },
      "ProductTypeAddAttributeDefinitionAction": {
        "title": "ProductTypeAddAttributeDefinitionAction",
        "includePath": "types/product-type/updates/ProductTypeAddAttributeDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attribute": {
                "$ref": "#/components/schemas/AttributeDefinitionDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-attributedefinition",
        "type": "string"
      },
      "ProductTypeAddLocalizedEnumValueAction": {
        "title": "ProductTypeAddLocalizedEnumValueAction",
        "includePath": "types/product-type/updates/ProductTypeAddLocalizedEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-localizableenumvalue-to-attributedefinition",
        "type": "string"
      },
      "ProductTypeAddPlainEnumValueAction": {
        "title": "ProductTypeAddPlainEnumValueAction",
        "includePath": "types/product-type/updates/ProductTypeAddPlainEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/AttributePlainEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#add-plainenumvalue-to-attributedefinition",
        "type": "string"
      },
      "ProductTypeChangeAttributeConstraintAction": {
        "title": "ProductTypeChangeAttributeConstraintAction",
        "includePath": "types/product-type/updates/ProductTypeChangeAttributeConstraintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "newValue": {
                "$ref": "#/components/schemas/AttributeConstraintEnumDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-attributeconstraint",
        "type": "string"
      },
      "ProductTypeChangeAttributeNameAction": {
        "title": "ProductTypeChangeAttributeNameAction",
        "includePath": "types/product-type/updates/ProductTypeChangeAttributeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "newAttributeName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-name",
        "type": "string"
      },
      "ProductTypeChangeAttributeOrderAction": {
        "title": "ProductTypeChangeAttributeOrderAction",
        "includePath": "types/product-type/updates/ProductTypeChangeAttributeOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-attributedefinitions",
        "x-annotation-deprecated": true,
        "type": "string"
      },
      "ProductTypeChangeAttributeOrderByNameAction": {
        "title": "ProductTypeChangeAttributeOrderByNameAction",
        "includePath": "types/product-type/updates/ProductTypeChangeAttributeOrderByNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-attributedefinitions",
        "type": "string"
      },
      "ProductTypeChangeDescriptionAction": {
        "title": "ProductTypeChangeDescriptionAction",
        "includePath": "types/product-type/updates/ProductTypeChangeDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "description": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-description",
        "type": "string"
      },
      "ProductTypeChangeEnumKeyAction": {
        "title": "ProductTypeChangeEnumKeyAction",
        "includePath": "types/product-type/updates/ProductTypeChangeEnumKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "newKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-key-of-an-enumvalue",
        "type": "string"
      },
      "ProductTypeChangeInputHintAction": {
        "title": "ProductTypeChangeInputHintAction",
        "includePath": "types/product-type/updates/ProductTypeChangeInputHintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "newValue": {
                "$ref": "#/components/schemas/TextInputHint"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-inputhint",
        "type": "string"
      },
      "ProductTypeChangeIsSearchableAction": {
        "title": "ProductTypeChangeIsSearchableAction",
        "includePath": "types/product-type/updates/ProductTypeChangeIsSearchableAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "isSearchable": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-issearchable",
        "type": "string"
      },
      "ProductTypeChangeLabelAction": {
        "title": "ProductTypeChangeLabelAction",
        "includePath": "types/product-type/updates/ProductTypeChangeLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "label": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-attributedefinition-label",
        "type": "string"
      },
      "ProductTypeChangeLocalizedEnumValueLabelAction": {
        "title": "ProductTypeChangeLocalizedEnumValueLabelAction",
        "includePath": "types/product-type/updates/ProductTypeChangeLocalizedEnumValueLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "newValue": {
                "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-label-of-an-enumvalue",
        "type": "string"
      },
      "ProductTypeChangeLocalizedEnumValueOrderAction": {
        "title": "ProductTypeChangeLocalizedEnumValueOrderAction",
        "includePath": "types/product-type/updates/ProductTypeChangeLocalizedEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-localizedenumvalues",
        "type": "string"
      },
      "ProductTypeChangeNameAction": {
        "title": "ProductTypeChangeNameAction",
        "includePath": "types/product-type/updates/ProductTypeChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-name",
        "type": "string"
      },
      "ProductTypeChangePlainEnumValueLabelAction": {
        "title": "ProductTypeChangePlainEnumValueLabelAction",
        "includePath": "types/product-type/updates/ProductTypeChangePlainEnumValueLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "newValue": {
                "$ref": "#/components/schemas/AttributePlainEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-label-of-an-enumvalue",
        "type": "string"
      },
      "ProductTypeChangePlainEnumValueOrderAction": {
        "title": "ProductTypeChangePlainEnumValueOrderAction",
        "includePath": "types/product-type/updates/ProductTypeChangePlainEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributePlainEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#change-the-order-of-enumvalues",
        "type": "string"
      },
      "ProductTypeRemoveAttributeDefinitionAction": {
        "title": "ProductTypeRemoveAttributeDefinitionAction",
        "includePath": "types/product-type/updates/ProductTypeRemoveAttributeDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "description": "The name of the attribute to remove.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-attributedefinition",
        "type": "string"
      },
      "ProductTypeRemoveEnumValuesAction": {
        "title": "ProductTypeRemoveEnumValuesAction",
        "includePath": "types/product-type/updates/ProductTypeRemoveEnumValuesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#remove-enumvalues-from-attributedefinition",
        "type": "string"
      },
      "ProductTypeSetInputTipAction": {
        "title": "ProductTypeSetInputTipAction",
        "includePath": "types/product-type/updates/ProductTypeSetInputTipAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "attributeName": {
                "type": "string"
              },
              "inputTip": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-attributedefinition-inputtip",
        "type": "string"
      },
      "ProductTypeSetKeyAction": {
        "title": "ProductTypeSetKeyAction",
        "includePath": "types/product-type/updates/ProductTypeSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTypeUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ProductType",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productTypes.html#set-key",
        "type": "string"
      },
      "Attribute": {
        "title": "Attribute",
        "includePath": "types/product/Attribute.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-annotation-identifier": true,
            "x-annotation-elementIdentifier": true
          },
          "value": {
            "description": "A valid JSON value, based on an AttributeDefinition.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#attribute"
      },
      "AttributeValue": {
        "title": "AttributeValue",
        "includePath": "types/product/AttributeValue.raml",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "string",
            "format": "date-time"
          },
          {
            "type": "string",
            "format": "date"
          },
          {
            "type": "string"
          },
          {
            "type": "boolean"
          },
          {
            "$ref": "#/components/schemas/AttributeLocalizedEnumValue"
          },
          {
            "$ref": "#/components/schemas/AttributePlainEnumValue"
          },
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "$ref": "#/components/schemas/Money"
          },
          {
            "$ref": "#/components/schemas/LocalizedString"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          }
        ],
        "x-annotation-package": "Product"
      },
      "CategoryOrderHints": {
        "title": "CategoryOrderHints",
        "includePath": "types/product/CategoryOrderHints.raml",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "x-annotation-package": "Product",
        "x-annotation-asMap": {
          "key": "string",
          "value": "string"
        }
      },
      "CustomTokenizer": {
        "title": "CustomTokenizer",
        "includePath": "types/product/CustomTokenizer.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SuggestTokenizer"
          },
          {
            "properties": {
              "inputs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "FacetResult": {
        "title": "FacetResult",
        "includePath": "types/product/FacetResult.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FacetTypes"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Product"
      },
      "FacetResultRange": {
        "title": "FacetResultRange",
        "includePath": "types/product/FacetResultRange.raml",
        "type": "object",
        "properties": {
          "from": {
            "type": "number"
          },
          "fromStr": {
            "type": "string"
          },
          "to": {
            "type": "number"
          },
          "toStr": {
            "type": "string"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "productCount": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "min": {
            "type": "number"
          },
          "max": {
            "type": "number"
          },
          "mean": {
            "type": "number"
          }
        },
        "required": [
          "from",
          "fromStr",
          "to",
          "toStr",
          "count",
          "total",
          "min",
          "max",
          "mean"
        ],
        "x-annotation-package": "Product"
      },
      "FacetResultTerm": {
        "title": "FacetResultTerm",
        "includePath": "types/product/FacetResultTerm.raml",
        "type": "object",
        "properties": {
          "term": {
            "type": "string"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "productCount": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "term",
          "count"
        ],
        "x-annotation-package": "Product"
      },
      "FacetResults": {
        "title": "FacetResults",
        "includePath": "types/product/FacetResults.raml",
        "type": "object",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/FacetResult"
            },
            {
              "$ref": "#/components/schemas/FilteredFacetResult"
            },
            {
              "$ref": "#/components/schemas/RangeFacetResult"
            },
            {
              "$ref": "#/components/schemas/TermFacetResult"
            }
          ]
        },
        "x-annotation-package": "Product"
      },
      "FacetTypes": {
        "title": "FacetTypes",
        "enum": [
          "terms",
          "range",
          "filter"
        ],
        "includePath": "types/product/FacetTypes.raml",
        "type": "string",
        "x-annotation-package": "Product"
      },
      "FilteredFacetResult": {
        "title": "FilteredFacetResult",
        "includePath": "types/product/FilteredFacetResult.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FacetResult"
          },
          {
            "properties": {
              "count": {
                "format": "int64",
                "type": "number"
              },
              "productCount": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "Product": {
        "title": "Product",
        "includePath": "types/product/Product.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the product.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the product.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "User-specific unique identifier for the product.\n*Product keys are different from product variant keys.*",
                "type": "string"
              },
              "productType": {
                "$ref": "#/components/schemas/ProductTypeReference"
              },
              "masterData": {
                "description": "The product data in the master catalog.",
                "$ref": "#/components/schemas/ProductCatalogData"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryReference"
              },
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "reviewRatingStatistics": {
                "description": "Statistics about the review ratings taken into account for this product.",
                "$ref": "#/components/schemas/ReviewRatingStatistics"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product",
        "x-annotation-updateType": "ProductUpdate",
        "type": "string"
      },
      "ProductCatalogData": {
        "title": "ProductCatalogData",
        "includePath": "types/product/ProductCatalogData.raml",
        "type": "object",
        "properties": {
          "published": {
            "type": "boolean"
          },
          "current": {
            "$ref": "#/components/schemas/ProductData"
          },
          "staged": {
            "$ref": "#/components/schemas/ProductData"
          },
          "hasStagedChanges": {
            "type": "boolean"
          }
        },
        "required": [
          "published",
          "current",
          "staged",
          "hasStagedChanges"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productcatalogdata"
      },
      "ProductData": {
        "title": "ProductData",
        "includePath": "types/product/ProductData.raml",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryReference"
            }
          },
          "categoryOrderHints": {
            "$ref": "#/components/schemas/CategoryOrderHints"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "slug": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaTitle": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaDescription": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaKeywords": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "masterVariant": {
            "$ref": "#/components/schemas/ProductVariant"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariant"
            }
          },
          "searchKeywords": {
            "$ref": "#/components/schemas/SearchKeywords"
          }
        },
        "required": [
          "name",
          "categories",
          "slug",
          "masterVariant",
          "variants",
          "searchKeywords"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdata"
      },
      "ProductDraft": {
        "title": "ProductDraft",
        "includePath": "types/product/ProductDraft.raml",
        "type": "object",
        "properties": {
          "productType": {
            "description": "A predefined product type assigned to the product.\nAll products must have a product type.",
            "$ref": "#/components/schemas/ProductTypeResourceIdentifier"
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "slug": {
            "description": "Human-readable identifiers usually used as deep-link URLs for the product.\nA slug must be unique across a project, but a product can have the same slug for different languages.\nSlugs have a maximum size of 256.\nValid characters are: alphabetic characters (`A-Z, a-z`), numeric characters (`0-9`), underscores (`_`) and hyphens (`-`).",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "key": {
            "description": "User-specific unique identifier for the product.",
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "categories": {
            "description": "Categories assigned to the product.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryResourceIdentifier"
            }
          },
          "categoryOrderHints": {
            "$ref": "#/components/schemas/CategoryOrderHints"
          },
          "metaTitle": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaDescription": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "metaKeywords": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "masterVariant": {
            "description": "The master product variant.\nRequired if the `variants` array has product variants.",
            "$ref": "#/components/schemas/ProductVariantDraft"
          },
          "variants": {
            "description": "An array of related product variants.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantDraft"
            }
          },
          "taxCategory": {
            "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
          },
          "searchKeywords": {
            "$ref": "#/components/schemas/SearchKeywords"
          },
          "state": {
            "$ref": "#/components/schemas/StateResourceIdentifier"
          },
          "publish": {
            "description": "If `true`, the product is published immediately.",
            "type": "boolean"
          }
        },
        "required": [
          "productType",
          "name",
          "slug"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productdraft"
      },
      "ProductPagedQueryResponse": {
        "title": "ProductPagedQueryResponse",
        "includePath": "types/product/ProductPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Product"
      },
      "ProductProjection": {
        "title": "ProductProjection",
        "includePath": "types/product/ProductProjection.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the Product.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the Product.",
                "type": "number"
              },
              "key": {
                "description": "User-specific unique identifier of the Product.",
                "type": "string"
              },
              "productType": {
                "$ref": "#/components/schemas/ProductTypeReference"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "slug": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "categories": {
                "description": "References to categories the product is in.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryReference"
                }
              },
              "categoryOrderHints": {
                "$ref": "#/components/schemas/CategoryOrderHints"
              },
              "metaTitle": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "metaDescription": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "metaKeywords": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "searchKeywords": {
                "$ref": "#/components/schemas/SearchKeywords"
              },
              "hasStagedChanges": {
                "type": "boolean"
              },
              "published": {
                "type": "boolean"
              },
              "masterVariant": {
                "$ref": "#/components/schemas/ProductVariant"
              },
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductVariant"
                }
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryReference"
              },
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "reviewRatingStatistics": {
                "description": "Statistics about the review ratings taken into account for this product.",
                "$ref": "#/components/schemas/ReviewRatingStatistics"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-productProjections.html#productprojection",
        "type": "string"
      },
      "ProductProjectionPagedQueryResponse": {
        "title": "ProductProjectionPagedQueryResponse",
        "includePath": "types/product/ProductProjectionPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductProjection"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Product"
      },
      "ProductProjectionPagedSearchResponse": {
        "title": "ProductProjectionPagedSearchResponse",
        "includePath": "types/product/ProductProjectionPagedSearchResponse.raml",
        "type": "object",
        "properties": {
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductProjection"
            }
          },
          "facets": {
            "$ref": "#/components/schemas/FacetResults"
          }
        },
        "required": [
          "count",
          "offset",
          "results",
          "facets"
        ],
        "x-annotation-package": "Product"
      },
      "ProductPublishScope": {
        "title": "ProductPublishScope",
        "enum": [
          "All",
          "Prices"
        ],
        "includePath": "types/product/ProductPublishScope.raml",
        "type": "string",
        "x-annotation-package": "Cart",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
      },
      "ProductReference": {
        "title": "ProductReference",
        "includePath": "types/product/ProductReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product",
        "type": "string"
      },
      "ProductResourceIdentifier": {
        "title": "ProductResourceIdentifier",
        "includePath": "types/product/ProductResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product"
      },
      "ProductUpdate": {
        "title": "ProductUpdate",
        "includePath": "types/product/ProductUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Product"
      },
      "ProductUpdateAction": {
        "title": "ProductUpdateAction",
        "includePath": "types/product/ProductUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Product"
      },
      "ProductVariant": {
        "title": "ProductVariant",
        "includePath": "types/product/ProductVariant.raml",
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "type": "number"
          },
          "sku": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "availability": {
            "$ref": "#/components/schemas/ProductVariantAvailability"
          },
          "isMatchingVariant": {
            "type": "boolean"
          },
          "scopedPrice": {
            "$ref": "#/components/schemas/ScopedPrice"
          },
          "scopedPriceDiscounted": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariant"
      },
      "ProductVariantAvailability": {
        "title": "ProductVariantAvailability",
        "includePath": "types/product/ProductVariantAvailability.raml",
        "type": "object",
        "properties": {
          "isOnStock": {
            "type": "boolean"
          },
          "restockableInDays": {
            "format": "int64",
            "type": "number"
          },
          "availableQuantity": {
            "format": "int64",
            "type": "number"
          },
          "channels": {
            "$ref": "#/components/schemas/ProductVariantChannelAvailabilityMap"
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantavailability"
      },
      "ProductVariantChannelAvailability": {
        "title": "ProductVariantChannelAvailability",
        "includePath": "types/product/ProductVariantChannelAvailability.raml",
        "type": "object",
        "properties": {
          "isOnStock": {
            "type": "boolean"
          },
          "restockableInDays": {
            "format": "int64",
            "type": "number"
          },
          "availableQuantity": {
            "format": "int64",
            "type": "number"
          }
        },
        "x-annotation-package": "Product"
      },
      "ProductVariantChannelAvailabilityMap": {
        "title": "ProductVariantChannelAvailabilityMap",
        "includePath": "types/product/ProductVariantChannelAvailabilityMap.raml",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ProductVariantChannelAvailability"
        },
        "x-annotation-package": "Product"
      },
      "ProductVariantDraft": {
        "title": "ProductVariantDraft",
        "includePath": "types/product/ProductVariantDraft.raml",
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDraft"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDraft"
            }
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#productvariantdraft"
      },
      "RangeFacetResult": {
        "title": "RangeFacetResult",
        "includePath": "types/product/RangeFacetResult.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FacetResult"
          },
          {
            "properties": {
              "ranges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FacetResultRange"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "SearchKeyword": {
        "title": "SearchKeyword",
        "includePath": "types/product/SearchKeyword.raml",
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "suggestTokenizer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SuggestTokenizer"
              },
              {
                "$ref": "#/components/schemas/WhitespaceTokenizer"
              },
              {
                "$ref": "#/components/schemas/CustomTokenizer"
              }
            ]
          }
        },
        "required": [
          "text"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeyword"
      },
      "SearchKeywords": {
        "title": "SearchKeywords",
        "includePath": "types/product/SearchKeywords.raml",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/SearchKeyword"
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#searchkeywords"
      },
      "SuggestTokenizer": {
        "title": "SuggestTokenizer",
        "includePath": "types/product/SuggestTokenizer.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "enum": [
              "whitespace",
              "custom"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#product-search-keywords-suggest-examples"
      },
      "Suggestion": {
        "title": "Suggestion",
        "includePath": "types/product/Suggestion.raml",
        "type": "object",
        "properties": {
          "text": {
            "description": "The suggested text.",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestion"
      },
      "SuggestionResult": {
        "title": "SuggestionResult",
        "includePath": "types/product/SuggestionResult.raml",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Suggestion"
          }
        },
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products-suggestions.html#suggestionresult"
      },
      "TermFacetResult": {
        "title": "TermFacetResult",
        "includePath": "types/product/TermFacetResult.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FacetResult"
          },
          {
            "properties": {
              "dataType": {
                "$ref": "#/components/schemas/TermFacetResultType"
              },
              "missing": {
                "format": "int64",
                "type": "number"
              },
              "total": {
                "format": "int64",
                "type": "number"
              },
              "other": {
                "format": "int64",
                "type": "number"
              },
              "terms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FacetResultTerm"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "TermFacetResultType": {
        "title": "TermFacetResultType",
        "enum": [
          "text",
          "date",
          "time",
          "datetime",
          "boolean",
          "number"
        ],
        "includePath": "types/product/TermFacetResultType.raml",
        "type": "string",
        "x-annotation-package": "Product"
      },
      "WhitespaceTokenizer": {
        "title": "WhitespaceTokenizer",
        "includePath": "types/product/WhitespaceTokenizer.raml",
        "$ref": "#/components/schemas/SuggestTokenizer",
        "x-annotation-package": "Product"
      },
      "ProductAddAssetAction": {
        "title": "ProductAddAssetAction",
        "includePath": "types/product/updates/ProductAddAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "asset": {
                "$ref": "#/components/schemas/AssetDraft"
              },
              "position": {
                "format": "int32",
                "description": "Position of the new asset inside the existing list (from `0` to the size of the list)",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-asset",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductAddExternalImageAction": {
        "title": "ProductAddExternalImageAction",
        "includePath": "types/product/updates/ProductAddExternalImageAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "image": {
                "$ref": "#/components/schemas/Image"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-external-image",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductAddPriceAction": {
        "title": "ProductAddPriceAction",
        "includePath": "types/product/updates/ProductAddPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "price": {
                "$ref": "#/components/schemas/PriceDraft"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-price",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductAddToCategoryAction": {
        "title": "ProductAddToCategoryAction",
        "includePath": "types/product/updates/ProductAddToCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/CategoryResourceIdentifier"
              },
              "orderHint": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-to-category",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductAddVariantAction": {
        "title": "ProductAddVariantAction",
        "includePath": "types/product/updates/ProductAddVariantAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "prices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PriceDraft"
                }
              },
              "images": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Image"
                }
              },
              "attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attribute"
                }
              },
              "staged": {
                "type": "boolean"
              },
              "assets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#add-productvariant",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductChangeAssetNameAction": {
        "title": "ProductChangeAssetNameAction",
        "includePath": "types/product/updates/ProductChangeAssetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductChangeAssetOrderAction": {
        "title": "ProductChangeAssetOrderAction",
        "includePath": "types/product/updates/ProductChangeAssetOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-asset-order",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductChangeMasterVariantAction": {
        "title": "ProductChangeMasterVariantAction",
        "includePath": "types/product/updates/ProductChangeMasterVariantAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-master-variant",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductChangeNameAction": {
        "title": "ProductChangeNameAction",
        "includePath": "types/product/updates/ProductChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductChangePriceAction": {
        "title": "ProductChangePriceAction",
        "includePath": "types/product/updates/ProductChangePriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "description": "ID of the [Price](#price)",
                "type": "string"
              },
              "price": {
                "$ref": "#/components/schemas/PriceDraft"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-price",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductChangeSlugAction": {
        "title": "ProductChangeSlugAction",
        "includePath": "types/product/updates/ProductChangeSlugAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "slug": {
                "description": "Every slug must be unique across a project, but a product can have the same slug for different languages.\nAllowed are alphabetic, numeric, underscore (`_`) and hyphen (`-`) characters.\nMaximum size is `256`.",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#change-slug",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductLegacySetSkuAction": {
        "title": "ProductLegacySetSkuAction",
        "includePath": "types/product/updates/ProductLegacySetSkuAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "type": "string"
              },
              "variantId": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "type": "string"
      },
      "ProductMoveImageToPositionAction": {
        "title": "ProductMoveImageToPositionAction",
        "includePath": "types/product/updates/ProductMoveImageToPositionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "imageUrl": {
                "description": "The URL of the image",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "number"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#move-image-to-position",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductPublishAction": {
        "title": "ProductPublishAction",
        "includePath": "types/product/updates/ProductPublishAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "scope": {
                "$ref": "#/components/schemas/ProductPublishScope"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#publish",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductRemoveAssetAction": {
        "title": "ProductRemoveAssetAction",
        "includePath": "types/product/updates/ProductRemoveAssetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-asset",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductRemoveFromCategoryAction": {
        "title": "ProductRemoveFromCategoryAction",
        "includePath": "types/product/updates/ProductRemoveFromCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "category": {
                "$ref": "#/components/schemas/CategoryResourceIdentifier"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-from-category",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductRemoveImageAction": {
        "title": "ProductRemoveImageAction",
        "includePath": "types/product/updates/ProductRemoveImageAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "imageUrl": {
                "description": "The URL of the image.",
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-image",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductRemovePriceAction": {
        "title": "ProductRemovePriceAction",
        "includePath": "types/product/updates/ProductRemovePriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "description": "ID of the [Price](#price)",
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-price",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductRemoveVariantAction": {
        "title": "ProductRemoveVariantAction",
        "includePath": "types/product/updates/ProductRemoveVariantAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "id": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#remove-productvariant",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductRevertStagedChangesAction": {
        "title": "ProductRevertStagedChangesAction",
        "includePath": "types/product/updates/ProductRevertStagedChangesAction.raml",
        "$ref": "#/components/schemas/ProductUpdateAction",
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-changes",
        "x-annotation-postman-example": null
      },
      "ProductRevertStagedVariantChangesAction": {
        "title": "ProductRevertStagedVariantChangesAction",
        "includePath": "types/product/updates/ProductRevertStagedVariantChangesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#revert-staged-variant-changes",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAssetCustomFieldAction": {
        "title": "ProductSetAssetCustomFieldAction",
        "includePath": "types/product/updates/ProductSetAssetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-field",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAssetCustomTypeAction": {
        "title": "ProductSetAssetCustomTypeAction",
        "includePath": "types/product/updates/ProductSetAssetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "type": {
                "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "If set, the custom fields are set to this new value.",
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAssetDescriptionAction": {
        "title": "ProductSetAssetDescriptionAction",
        "includePath": "types/product/updates/ProductSetAssetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAssetKeyAction": {
        "title": "ProductSetAssetKeyAction",
        "includePath": "types/product/updates/ProductSetAssetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "description": "User-defined identifier for the asset.\nIf left blank or set to `null`, the asset key is unset/removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAssetSourcesAction": {
        "title": "ProductSetAssetSourcesAction",
        "includePath": "types/product/updates/ProductSetAssetSourcesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "sources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssetSource"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-sources",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAssetTagsAction": {
        "title": "ProductSetAssetTagsAction",
        "includePath": "types/product/updates/ProductSetAssetTagsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "assetId": {
                "type": "string"
              },
              "assetKey": {
                "type": "string"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-asset-tags",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAttributeAction": {
        "title": "ProductSetAttributeAction",
        "includePath": "types/product/updates/ProductSetAttributeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "description": "If the attribute exists and the value is omitted or set to `null`, the attribute is removed.\nIf the attribute exists and a value is provided, the new value is applied.\nIf the attribute does not exist and a value is provided, it is added as a new attribute.",
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetAttributeInAllVariantsAction": {
        "title": "ProductSetAttributeInAllVariantsAction",
        "includePath": "types/product/updates/ProductSetAttributeInAllVariantsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "description": "The same update behavior as for Set Attribute applies.",
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-attribute-in-all-variants",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetCategoryOrderHintAction": {
        "title": "ProductSetCategoryOrderHintAction",
        "includePath": "types/product/updates/ProductSetCategoryOrderHintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "categoryId": {
                "type": "string"
              },
              "orderHint": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-category-order-hint",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetDescriptionAction": {
        "title": "ProductSetDescriptionAction",
        "includePath": "types/product/updates/ProductSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetDiscountedPriceAction": {
        "title": "ProductSetDiscountedPriceAction",
        "includePath": "types/product/updates/ProductSetDiscountedPriceAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "discounted": {
                "$ref": "#/components/schemas/DiscountedPrice"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-discounted-price",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetImageLabelAction": {
        "title": "ProductSetImageLabelAction",
        "includePath": "types/product/updates/ProductSetImageLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "type": "string"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "imageUrl": {
                "description": "The URL of the image.",
                "type": "string"
              },
              "label": {
                "description": "The new image label.\nIf left blank or set to null, the label is removed.",
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-image-label",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetKeyAction": {
        "title": "ProductSetKeyAction",
        "includePath": "types/product/updates/ProductSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "User-specific unique identifier for the product.\nIf left blank or set to `null`, the product key is unset/removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetMetaDescriptionAction": {
        "title": "ProductSetMetaDescriptionAction",
        "includePath": "types/product/updates/ProductSetMetaDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "metaDescription": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetMetaKeywordsAction": {
        "title": "ProductSetMetaKeywordsAction",
        "includePath": "types/product/updates/ProductSetMetaKeywordsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "metaKeywords": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-keywords",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetMetaTitleAction": {
        "title": "ProductSetMetaTitleAction",
        "includePath": "types/product/updates/ProductSetMetaTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "metaTitle": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-meta-title",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetPricesAction": {
        "title": "ProductSetPricesAction",
        "includePath": "types/product/updates/ProductSetPricesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "prices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PriceDraft"
                }
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-prices",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetProductPriceCustomFieldAction": {
        "title": "ProductSetProductPriceCustomFieldAction",
        "includePath": "types/product/updates/ProductSetProductPriceCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetProductPriceCustomTypeAction": {
        "title": "ProductSetProductPriceCustomTypeAction",
        "includePath": "types/product/updates/ProductSetProductPriceCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "priceId": {
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-product-price-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetProductVariantKeyAction": {
        "title": "ProductSetProductVariantKeyAction",
        "includePath": "types/product/updates/ProductSetProductVariantKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "type": "string"
              },
              "key": {
                "description": "If left blank or set to `null`, the key is unset/removed.",
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-productvariant-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetSearchKeywordsAction": {
        "title": "ProductSetSearchKeywordsAction",
        "includePath": "types/product/updates/ProductSetSearchKeywordsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "searchKeywords": {
                "$ref": "#/components/schemas/SearchKeywords"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-searchkeywords",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetSkuAction": {
        "title": "ProductSetSkuAction",
        "includePath": "types/product/updates/ProductSetSkuAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "sku": {
                "description": "SKU must be unique.\nIf left blank or set to `null`, the sku is unset/removed.",
                "type": "string"
              },
              "staged": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-sku",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductSetTaxCategoryAction": {
        "title": "ProductSetTaxCategoryAction",
        "includePath": "types/product/updates/ProductSetTaxCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "taxCategory": {
                "description": "If left blank or set to `null`, the tax category is unset/removed.",
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#set-taxcategory",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductTransitionStateAction": {
        "title": "ProductTransitionStateAction",
        "includePath": "types/product/updates/ProductTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductUpdateAction"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#transition-state",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProductUnpublishAction": {
        "title": "ProductUnpublishAction",
        "includePath": "types/product/updates/ProductUnpublishAction.raml",
        "$ref": "#/components/schemas/ProductUpdateAction",
        "x-annotation-package": "Product",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-products.html#unpublish",
        "x-annotation-postman-example": null
      },
      "CartClassificationType": {
        "title": "CartClassificationType",
        "includePath": "types/project/CartClassificationType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRateInputType"
          },
          {
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartclassification",
        "type": "string"
      },
      "CartScoreType": {
        "title": "CartScoreType",
        "includePath": "types/project/CartScoreType.raml",
        "$ref": "#/components/schemas/ShippingRateInputType",
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartscore"
      },
      "CartValueType": {
        "title": "CartValueType",
        "includePath": "types/project/CartValueType.raml",
        "$ref": "#/components/schemas/ShippingRateInputType",
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#cartvalue"
      },
      "CartsConfiguration": {
        "title": "CartsConfiguration",
        "includePath": "types/project/CartsConfiguration.raml",
        "type": "object",
        "properties": {
          "countryTaxRateFallbackEnabled": {
            "description": "if country - no state tax rate fallback should be used when a shipping address state is not explicitly covered in the rates lists of all tax categories of a cart line items. Default value 'false'",
            "type": "boolean"
          }
        },
        "x-annotation-package": "Project"
      },
      "ExternalOAuth": {
        "title": "ExternalOAuth",
        "includePath": "types/project/ExternalOAuth.raml",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "authorizationHeader": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "authorizationHeader"
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#externaloauth"
      },
      "Project": {
        "title": "Project",
        "includePath": "types/project/Project.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "description": "The current version of the project.",
            "type": "number"
          },
          "key": {
            "description": "The unique key of the project.",
            "type": "string"
          },
          "name": {
            "description": "The name of the project.",
            "type": "string"
          },
          "countries": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          "currencies": {
            "description": "A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyCode"
            }
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Locale"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "trialUntil": {
            "description": "The time is in the format Year-Month `YYYY-MM`.",
            "type": "string"
          },
          "messages": {
            "$ref": "#/components/schemas/MessageConfiguration"
          },
          "shippingRateInputType": {
            "$ref": "#/components/schemas/ShippingRateInputType"
          },
          "externalOAuth": {
            "$ref": "#/components/schemas/ExternalOAuth"
          },
          "carts": {
            "$ref": "#/components/schemas/CartsConfiguration"
          }
        },
        "required": [
          "version",
          "key",
          "name",
          "countries",
          "currencies",
          "languages",
          "createdAt",
          "messages",
          "carts"
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#project",
        "x-annotation-updateType": "ProjectUpdate"
      },
      "ProjectUpdate": {
        "title": "ProjectUpdate",
        "includePath": "types/project/ProjectUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Project"
      },
      "ProjectUpdateAction": {
        "title": "ProjectUpdateAction",
        "includePath": "types/project/ProjectUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Project"
      },
      "ShippingRateInputType": {
        "title": "ShippingRateInputType",
        "includePath": "types/project/ShippingRateInputType.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ShippingRateTierType"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#shippingrateinputtype"
      },
      "ProjectChangeCountriesAction": {
        "title": "ProjectChangeCountriesAction",
        "includePath": "types/project/updates/ProjectChangeCountriesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "countries": {
                "description": "A two-digit country code as per country code.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-countries",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProjectChangeCountryTaxRateFallbackEnabledAction": {
        "title": "ProjectChangeCountryTaxRateFallbackEnabledAction",
        "includePath": "types/project/updates/ProjectChangeCountryTaxRateFallbackEnabledAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "countryTaxRateFallbackEnabled": {
                "description": "default value is `false`",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-country-tax-rate-fallback-enabled",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProjectChangeCurrenciesAction": {
        "title": "ProjectChangeCurrenciesAction",
        "includePath": "types/project/updates/ProjectChangeCurrenciesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "currencies": {
                "description": "A three-digit currency code as per currency code.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CurrencyCode"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-currencies",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProjectChangeLanguagesAction": {
        "title": "ProjectChangeLanguagesAction",
        "includePath": "types/project/updates/ProjectChangeLanguagesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "languages": {
                "description": " .",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Locale"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-languages",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProjectChangeMessagesConfigurationAction": {
        "title": "ProjectChangeMessagesConfigurationAction",
        "includePath": "types/project/updates/ProjectChangeMessagesConfigurationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "messagesConfiguration": {
                "$ref": "#/components/schemas/MessageConfigurationDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-messages-configuration",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProjectChangeMessagesEnabledAction": {
        "title": "ProjectChangeMessagesEnabledAction",
        "includePath": "types/project/updates/ProjectChangeMessagesEnabledAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "messagesEnabled": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-messages-enabled",
        "x-annotation-deprecated": true,
        "type": "string"
      },
      "ProjectChangeNameAction": {
        "title": "ProjectChangeNameAction",
        "includePath": "types/project/updates/ProjectChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ProjectSetExternalOAuthAction": {
        "title": "ProjectSetExternalOAuthAction",
        "includePath": "types/project/updates/ProjectSetExternalOAuthAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "externalOAuth": {
                "description": "If you do not provide the `externalOAuth` field or provide a value\nof `null`, the update action unsets the External OAuth provider.\n",
                "$ref": "#/components/schemas/ExternalOAuth"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#set-externaloauth",
        "type": "string"
      },
      "ProjectSetShippingRateInputTypeAction": {
        "title": "ProjectSetShippingRateInputTypeAction",
        "includePath": "types/project/updates/ProjectSetShippingRateInputTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProjectUpdateAction"
          },
          {
            "properties": {
              "shippingRateInputType": {
                "description": "If not set, removes existing shippingRateInputType.",
                "$ref": "#/components/schemas/ShippingRateInputType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Project",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-project.html#set-shippingrateinputtype",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Review": {
        "title": "Review",
        "includePath": "types/review/Review.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the review.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the review.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "User-specific unique identifier for the review.",
                "type": "string"
              },
              "uniquenessValue": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              },
              "authorName": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "text": {
                "type": "string"
              },
              "target": {
                "description": "Identifies the target of the review.\nCan be a Product or a Channel",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductReference"
                  },
                  {
                    "$ref": "#/components/schemas/ChannelReference"
                  }
                ]
              },
              "includedInStatistics": {
                "description": "Indicates if this review is taken into account in the ratings statistics of the target.\nA review is per default used in the statistics, unless the review is in a state that does not have the role `ReviewIncludedInStatistics`.\nIf the role of a State is modified after the calculation of this field, the calculation is not updated.",
                "type": "boolean"
              },
              "rating": {
                "minimum": -100,
                "maximum": 100,
                "format": "int8",
                "description": "Number between -100 and 100 included.",
                "type": "number"
              },
              "state": {
                "$ref": "#/components/schemas/StateReference"
              },
              "customer": {
                "description": "The customer who created the review.",
                "$ref": "#/components/schemas/CustomerReference"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#review",
        "x-annotation-updateType": "ReviewUpdate",
        "type": "string"
      },
      "ReviewDraft": {
        "title": "ReviewDraft",
        "includePath": "types/review/ReviewDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "description": "User-specific unique identifier for the review.",
            "type": "string"
          },
          "uniquenessValue": {
            "description": "If set, this value must be unique among reviews.\nFor example, if you want to have only one review per customer and per product, you can set the value to `customer's id` + `product's id`.",
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "authorName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "target": {
            "description": "Identifies the target of the review.\nCan be a Product or a Channel",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductResourceIdentifier"
              },
              {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              }
            ]
          },
          "state": {
            "$ref": "#/components/schemas/StateResourceIdentifier"
          },
          "rating": {
            "minimum": -100,
            "maximum": 100,
            "format": "int8",
            "description": "Number between -100 and 100 included.\nRating of the targeted object, like a product.\nThis rating can represent the number of stars, or a percentage, or a like (+1)/dislike (-1)\nA rating is used in the ratings statistics of the targeted object, unless the review is in a state that does not have the role `ReviewIncludedInStatistics`.",
            "type": "number"
          },
          "customer": {
            "description": "The customer who created the review.",
            "$ref": "#/components/schemas/CustomerResourceIdentifier"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFieldsDraft"
          }
        },
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewdraft"
      },
      "ReviewPagedQueryResponse": {
        "title": "ReviewPagedQueryResponse",
        "includePath": "types/review/ReviewPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Review"
      },
      "ReviewRatingStatistics": {
        "title": "ReviewRatingStatistics",
        "includePath": "types/review/ReviewRatingStatistics.raml",
        "type": "object",
        "properties": {
          "averageRating": {
            "description": "Average rating of one target\nThis number is rounded with 5 decimals.",
            "type": "number"
          },
          "highestRating": {
            "description": "Highest rating of one target",
            "type": "number"
          },
          "lowestRating": {
            "description": "Lowest rating of one target",
            "type": "number"
          },
          "count": {
            "description": "Number of ratings taken into account",
            "type": "integer"
          },
          "ratingsDistribution": {
            "description": "The full distribution of the ratings.\nThe keys are the different ratings and the values are the count of reviews having this rating.\nOnly the used ratings appear in this object.",
            "type": "object"
          }
        },
        "required": [
          "averageRating",
          "highestRating",
          "lowestRating",
          "count",
          "ratingsDistribution"
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#reviewratingstatistics"
      },
      "ReviewReference": {
        "title": "ReviewReference",
        "includePath": "types/review/ReviewReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Review"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "type": "string"
      },
      "ReviewResourceIdentifier": {
        "title": "ReviewResourceIdentifier",
        "includePath": "types/review/ReviewResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Review"
      },
      "ReviewUpdate": {
        "title": "ReviewUpdate",
        "includePath": "types/review/ReviewUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Review"
      },
      "ReviewUpdateAction": {
        "title": "ReviewUpdateAction",
        "includePath": "types/review/ReviewUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Review"
      },
      "ReviewSetAuthorNameAction": {
        "title": "ReviewSetAuthorNameAction",
        "includePath": "types/review/updates/ReviewSetAuthorNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "authorName": {
                "description": "If `authorName` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-author-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetCustomFieldAction": {
        "title": "ReviewSetCustomFieldAction",
        "includePath": "types/review/updates/ReviewSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetCustomTypeAction": {
        "title": "ReviewSetCustomTypeAction",
        "includePath": "types/review/updates/ReviewSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If absent, the custom type and any existing custom fields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "A valid JSON object, based on the FieldDefinitions of the Type.\nSets the CustomFields to this value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetCustomerAction": {
        "title": "ReviewSetCustomerAction",
        "includePath": "types/review/updates/ReviewSetCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "customer": {
                "description": "The customer who created the review.\nIf `customer` is absent or `null`, this field will be removed if it exists.",
                "$ref": "#/components/schemas/CustomerResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-customer",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetKeyAction": {
        "title": "ReviewSetKeyAction",
        "includePath": "types/review/updates/ReviewSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetLocaleAction": {
        "title": "ReviewSetLocaleAction",
        "includePath": "types/review/updates/ReviewSetLocaleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "locale": {
                "description": "If `locale` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-locale",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetRatingAction": {
        "title": "ReviewSetRatingAction",
        "includePath": "types/review/updates/ReviewSetRatingAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "rating": {
                "format": "int8",
                "description": "Number between -100 and 100 included.\nIf `rating` is absent or `null`, this field will be removed if it exists.",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-rating",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetTargetAction": {
        "title": "ReviewSetTargetAction",
        "includePath": "types/review/updates/ReviewSetTargetAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "target": {
                "description": "Identifies the target of the review.\nCan be a Product or a Channel.\nIf `target` is absent or `null`, this field will be removed if it exists.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProductResourceIdentifier"
                  },
                  {
                    "$ref": "#/components/schemas/ChannelResourceIdentifier"
                  }
                ]
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-target",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetTextAction": {
        "title": "ReviewSetTextAction",
        "includePath": "types/review/updates/ReviewSetTextAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "text": {
                "description": "If `text` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-text",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewSetTitleAction": {
        "title": "ReviewSetTitleAction",
        "includePath": "types/review/updates/ReviewSetTitleAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "title": {
                "description": "If `title` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#set-title",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ReviewTransitionStateAction": {
        "title": "ReviewTransitionStateAction",
        "includePath": "types/review/updates/ReviewTransitionStateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewUpdateAction"
          },
          {
            "properties": {
              "state": {
                "$ref": "#/components/schemas/StateResourceIdentifier"
              },
              "force": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Review",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-reviews.html#transition-state",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CartClassificationTier": {
        "title": "CartClassificationTier",
        "includePath": "types/shipping-method/CartClassificationTier.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRatePriceTier"
          },
          {
            "properties": {
              "value": {
                "type": "string"
              },
              "price": {
                "$ref": "#/components/schemas/Money"
              },
              "isMatching": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartclassification",
        "type": "string"
      },
      "CartScoreTier": {
        "title": "CartScoreTier",
        "includePath": "types/shipping-method/CartScoreTier.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRatePriceTier"
          },
          {
            "properties": {
              "score": {
                "type": "number"
              },
              "price": {
                "$ref": "#/components/schemas/Money"
              },
              "priceFunction": {
                "$ref": "#/components/schemas/PriceFunction"
              },
              "isMatching": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartscore-with-fixed-price",
        "type": "string"
      },
      "CartValueTier": {
        "title": "CartValueTier",
        "includePath": "types/shipping-method/CartValueTier.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingRatePriceTier"
          },
          {
            "properties": {
              "minimumCentAmount": {
                "format": "int64",
                "type": "integer"
              },
              "price": {
                "$ref": "#/components/schemas/Money"
              },
              "isMatching": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#cartvalue",
        "type": "string"
      },
      "PriceFunction": {
        "title": "PriceFunction",
        "includePath": "types/shipping-method/PriceFunction.raml",
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "function": {
            "type": "string"
          }
        },
        "required": [
          "currencyCode",
          "function"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#pricefunction",
        "type": "object"
      },
      "ShippingMethod": {
        "title": "ShippingMethod",
        "includePath": "types/shipping-method/ShippingMethod.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the shipping method.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the shipping method.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "User-specific unique identifier for the shipping method.",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "localizedDescription": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryReference"
              },
              "zoneRates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ZoneRate"
                }
              },
              "isDefault": {
                "description": "One shipping method in a project can be default.",
                "type": "boolean"
              },
              "predicate": {
                "description": "A Cart predicate which can be used to more precisely select a shipping method for a cart.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod",
        "x-annotation-updateType": "ShippingMethodUpdate",
        "type": "string"
      },
      "ShippingMethodDraft": {
        "title": "ShippingMethodDraft",
        "includePath": "types/shipping-method/ShippingMethodDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "localizedDescription": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "taxCategory": {
            "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
          },
          "zoneRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneRateDraft"
            }
          },
          "isDefault": {
            "description": "If `true` the shipping method will be the default one in a project.",
            "type": "boolean"
          },
          "predicate": {
            "description": "A Cart predicate which can be used to more precisely select a shipping method for a cart.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "taxCategory",
          "zoneRates",
          "isDefault"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethoddraft"
      },
      "ShippingMethodPagedQueryResponse": {
        "title": "ShippingMethodPagedQueryResponse",
        "includePath": "types/shipping-method/ShippingMethodPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingMethod"
            }
          }
        },
        "required": [
          "count",
          "results"
        ],
        "x-annotation-package": "ShippingMethod"
      },
      "ShippingMethodReference": {
        "title": "ShippingMethodReference",
        "includePath": "types/shipping-method/ShippingMethodReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/ShippingMethod"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod",
        "type": "string"
      },
      "ShippingMethodResourceIdentifier": {
        "title": "ShippingMethodResourceIdentifier",
        "includePath": "types/shipping-method/ShippingMethodResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod"
      },
      "ShippingMethodUpdate": {
        "title": "ShippingMethodUpdate",
        "includePath": "types/shipping-method/ShippingMethodUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingMethodUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "ShippingMethod"
      },
      "ShippingMethodUpdateAction": {
        "title": "ShippingMethodUpdateAction",
        "includePath": "types/shipping-method/ShippingMethodUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "ShippingMethod"
      },
      "ShippingRate": {
        "title": "ShippingRate",
        "includePath": "types/shipping-method/ShippingRate.raml",
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/TypedMoney"
          },
          "freeAbove": {
            "description": "The shipping is free if the order total (the sum of line item prices) exceeds the `freeAbove` value.\nNote: `freeAbove` applies before any Cart or Product discounts, and can cause discounts to apply in invalid scenarios.\nUse a Cart Discount to set the shipping price to 0 to avoid providing free shipping in invalid discount scenarios.",
            "$ref": "#/components/schemas/TypedMoney"
          },
          "isMatching": {
            "description": "Only appears in response to requests for shipping methods by cart or location to mark this shipping rate as one that matches the cart or location.",
            "type": "boolean"
          },
          "tiers": {
            "description": "A list of shipping rate price tiers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRatePriceTier"
            }
          }
        },
        "required": [
          "price",
          "tiers"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
      },
      "ShippingRateDraft": {
        "title": "ShippingRateDraft",
        "includePath": "types/shipping-method/ShippingRateDraft.raml",
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/Money"
          },
          "freeAbove": {
            "description": "The shipping is free if the order total (the sum of line item prices) exceeds the freeAbove value.\nNote: `freeAbove` applies before any Cart or Product discounts, and can cause discounts to apply in invalid scenarios.\nUse a Cart Discount to set the shipping price to 0 to avoid providing free shipping in invalid discount scenarios.",
            "$ref": "#/components/schemas/Money"
          },
          "tiers": {
            "description": "A list of shipping rate price tiers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRatePriceTier"
            }
          }
        },
        "required": [
          "price"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratedraft"
      },
      "ShippingRatePriceTier": {
        "title": "ShippingRatePriceTier",
        "includePath": "types/shipping-method/ShippingRatePriceTier.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ShippingRateTierType"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"
      },
      "ShippingRateTierType": {
        "title": "ShippingRateTierType",
        "enum": [
          "CartValue",
          "CartClassification",
          "CartScore"
        ],
        "includePath": "types/shipping-method/ShippingRateTierType.raml",
        "type": "string",
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratepricetier"
      },
      "ZoneRate": {
        "title": "ZoneRate",
        "includePath": "types/shipping-method/ZoneRate.raml",
        "type": "object",
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/ZoneReference"
          },
          "shippingRates": {
            "description": "The array does not contain two shipping rates with the same currency.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRate"
            }
          }
        },
        "required": [
          "zone",
          "shippingRates"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zonerate"
      },
      "ZoneRateDraft": {
        "title": "ZoneRateDraft",
        "includePath": "types/shipping-method/ZoneRateDraft.raml",
        "type": "object",
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/ZoneResourceIdentifier"
          },
          "shippingRates": {
            "description": "The array must not contain two shipping rates with the same currency.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRateDraft"
            }
          }
        },
        "required": [
          "zone",
          "shippingRates"
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#zoneratedraft"
      },
      "ShippingMethodAddShippingRateAction": {
        "title": "ShippingMethodAddShippingRateAction",
        "includePath": "types/shipping-method/updates/ShippingMethodAddShippingRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "$ref": "#/components/schemas/ZoneResourceIdentifier"
              },
              "shippingRate": {
                "$ref": "#/components/schemas/ShippingRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-shippingrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodAddZoneAction": {
        "title": "ShippingMethodAddZoneAction",
        "includePath": "types/shipping-method/updates/ShippingMethodAddZoneAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "$ref": "#/components/schemas/ZoneResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#add-zone",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodChangeIsDefaultAction": {
        "title": "ShippingMethodChangeIsDefaultAction",
        "includePath": "types/shipping-method/updates/ShippingMethodChangeIsDefaultAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "isDefault": {
                "description": "Only one ShippingMethod in a project can be default.",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-isdefault",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodChangeNameAction": {
        "title": "ShippingMethodChangeNameAction",
        "includePath": "types/shipping-method/updates/ShippingMethodChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodChangeTaxCategoryAction": {
        "title": "ShippingMethodChangeTaxCategoryAction",
        "includePath": "types/shipping-method/updates/ShippingMethodChangeTaxCategoryAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "taxCategory": {
                "$ref": "#/components/schemas/TaxCategoryResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#change-taxcategory",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodRemoveShippingRateAction": {
        "title": "ShippingMethodRemoveShippingRateAction",
        "includePath": "types/shipping-method/updates/ShippingMethodRemoveShippingRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "$ref": "#/components/schemas/ZoneResourceIdentifier"
              },
              "shippingRate": {
                "$ref": "#/components/schemas/ShippingRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-shippingrate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodRemoveZoneAction": {
        "title": "ShippingMethodRemoveZoneAction",
        "includePath": "types/shipping-method/updates/ShippingMethodRemoveZoneAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "zone": {
                "$ref": "#/components/schemas/ZoneResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#remove-zone",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodSetDescriptionAction": {
        "title": "ShippingMethodSetDescriptionAction",
        "includePath": "types/shipping-method/updates/ShippingMethodSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "description": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodSetKeyAction": {
        "title": "ShippingMethodSetKeyAction",
        "includePath": "types/shipping-method/updates/ShippingMethodSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, it is removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodSetLocalizedDescriptionAction": {
        "title": "ShippingMethodSetLocalizedDescriptionAction",
        "includePath": "types/shipping-method/updates/ShippingMethodSetLocalizedDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "localizedDescription": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-localized-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShippingMethodSetPredicateAction": {
        "title": "ShippingMethodSetPredicateAction",
        "includePath": "types/shipping-method/updates/ShippingMethodSetPredicateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingMethodUpdateAction"
          },
          {
            "properties": {
              "predicate": {
                "description": "A valid Cart predicate.\nIf `predicate` is absent or `null`, it is removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShippingMethod",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shippingMethods.html#set-predicate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingList": {
        "title": "ShoppingList",
        "includePath": "types/shopping-list/ShoppingList.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the shopping list.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the shopping list.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFields"
              },
              "customer": {
                "$ref": "#/components/schemas/CustomerReference"
              },
              "deleteDaysAfterLastModification": {
                "format": "int64",
                "description": "The shopping list will be deleted automatically if it hasn't been modified for the specified amount of days.",
                "type": "number"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "key": {
                "description": "User-specific unique identifier for the shopping list.",
                "type": "string"
              },
              "lineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShoppingListLineItem"
                }
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "slug": {
                "description": "Human-readable identifiers usually used as deep-link URL to the related shopping list.\nEach slug is unique across a project, but a shopping list can have the same slug for different languages.\nThe slug must match the pattern [a-zA-Z0-9_-]{2,256}.",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "textLineItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TextLineItem"
                }
              },
              "anonymousId": {
                "description": "Identifies shopping lists belonging to an anonymous session (the customer has not signed up/in yet).",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingList",
        "x-annotation-updateType": "ShoppingListUpdate",
        "type": "string"
      },
      "ShoppingListDraft": {
        "title": "ShoppingListDraft",
        "includePath": "types/shopping-list/ShoppingListDraft.raml",
        "type": "object",
        "properties": {
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerResourceIdentifier"
          },
          "deleteDaysAfterLastModification": {
            "format": "int64",
            "description": "The shopping list will be deleted automatically if it hasn't been modified for the specified amount of days.",
            "type": "number"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "key": {
            "description": "User-specific unique identifier for the shopping list.",
            "type": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingListLineItemDraft"
            }
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "slug": {
            "description": "Human-readable identifiers usually used as deep-link URL to the related shopping list.\nEach slug is unique across a project, but a shopping list can have the same slug for different languages.\nThe slug must match the pattern [a-zA-Z0-9_-]{2,256}.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "textLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextLineItemDraft"
            }
          },
          "anonymousId": {
            "description": "Identifies shopping lists belonging to an anonymous session (the customer has not signed up/in yet).",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#shoppingListDraft"
      },
      "ShoppingListLineItem": {
        "title": "ShoppingListLineItem",
        "includePath": "types/shopping-list/ShoppingListLineItem.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "deactivatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productId": {
            "type": "string"
          },
          "productSlug": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "productType": {
            "$ref": "#/components/schemas/ProductTypeReference"
          },
          "quantity": {
            "type": "number"
          },
          "variant": {
            "$ref": "#/components/schemas/ProductVariant"
          },
          "variantId": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "addedAt",
          "id",
          "name",
          "productId",
          "productType",
          "quantity"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListLineItemDraft": {
        "title": "ShoppingListLineItemDraft",
        "includePath": "types/shopping-list/ShoppingListLineItemDraft.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "sku": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "variantId": {
            "format": "int64",
            "type": "number"
          }
        },
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListPagedQueryResponse": {
        "title": "ShoppingListPagedQueryResponse",
        "includePath": "types/shopping-list/ShoppingListPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingList"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListReference": {
        "title": "ShoppingListReference",
        "includePath": "types/shopping-list/ShoppingListReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/ShoppingList"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shopping-lists.html#shopping-list",
        "type": "string"
      },
      "ShoppingListResourceIdentifier": {
        "title": "ShoppingListResourceIdentifier",
        "includePath": "types/shopping-list/ShoppingListResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shopping-lists.html#shopping-list"
      },
      "ShoppingListUpdate": {
        "title": "ShoppingListUpdate",
        "includePath": "types/shopping-list/ShoppingListUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingListUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListUpdateAction": {
        "title": "ShoppingListUpdateAction",
        "includePath": "types/shopping-list/ShoppingListUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "TextLineItem": {
        "title": "TextLineItem",
        "includePath": "types/shopping-list/TextLineItem.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "description": "When the text line item was added to the shopping list.",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "id": {
            "description": "The unique ID of this TextLineItem.",
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "addedAt",
          "id",
          "name",
          "quantity"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "TextLineItemDraft": {
        "title": "TextLineItemDraft",
        "includePath": "types/shopping-list/TextLineItemDraft.raml",
        "type": "object",
        "properties": {
          "addedAt": {
            "description": "Defaults to the current date and time.",
            "type": "string",
            "format": "date-time"
          },
          "custom": {
            "description": "The custom fields.",
            "$ref": "#/components/schemas/CustomFieldsDraft"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "quantity": {
            "description": "Defaults to `1`.",
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "ShoppingList"
      },
      "ShoppingListAddLineItemAction": {
        "title": "ShoppingListAddLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListAddLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "sku": {
                "type": "string"
              },
              "productId": {
                "type": "string"
              },
              "variantId": {
                "format": "int64",
                "type": "number"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "addedAt": {
                "type": "string",
                "format": "date-time"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-lineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListAddTextLineItemAction": {
        "title": "ShoppingListAddTextLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListAddTextLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              },
              "addedAt": {
                "type": "string",
                "format": "date-time"
              },
              "custom": {
                "$ref": "#/components/schemas/CustomFieldsDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#add-textlineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListChangeLineItemQuantityAction": {
        "title": "ShoppingListChangeLineItemQuantityAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitem-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListChangeLineItemsOrderAction": {
        "title": "ShoppingListChangeLineItemsOrderAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeLineItemsOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-lineitems-order",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListChangeNameAction": {
        "title": "ShoppingListChangeNameAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListChangeTextLineItemNameAction": {
        "title": "ShoppingListChangeTextLineItemNameAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeTextLineItemNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListChangeTextLineItemQuantityAction": {
        "title": "ShoppingListChangeTextLineItemQuantityAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeTextLineItemQuantityAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitem-quantity",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListChangeTextLineItemsOrderAction": {
        "title": "ShoppingListChangeTextLineItemsOrderAction",
        "includePath": "types/shopping-list/updates/ShoppingListChangeTextLineItemsOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemOrder": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#change-textlineitems-order",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListRemoveLineItemAction": {
        "title": "ShoppingListRemoveLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListRemoveLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-lineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListRemoveTextLineItemAction": {
        "title": "ShoppingListRemoveTextLineItemAction",
        "includePath": "types/shopping-list/updates/ShoppingListRemoveTextLineItemAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#remove-textlineitem",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetAnonymousIdAction": {
        "title": "ShoppingListSetAnonymousIdAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetAnonymousIdAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "anonymousId": {
                "description": "Anonymous ID of the anonymous customer that this shopping list belongs to.\nIf this field is not set any existing `anonymousId` is removed.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-anonymousid",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetCustomFieldAction": {
        "title": "ShoppingListSetCustomFieldAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetCustomTypeAction": {
        "title": "ShoppingListSetCustomTypeAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "type": {
                "description": "If set, the custom type is set to this new value.\nIf absent, the custom type and any existing custom fields are removed.",
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "description": "If set, the custom fields are set to this new value.",
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetCustomerAction": {
        "title": "ShoppingListSetCustomerAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetCustomerAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "customer": {
                "$ref": "#/components/schemas/CustomerResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-customer",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetDeleteDaysAfterLastModificationAction": {
        "title": "ShoppingListSetDeleteDaysAfterLastModificationAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetDeleteDaysAfterLastModificationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "deleteDaysAfterLastModification": {
                "format": "int64",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-deletedaysafterlastmodification",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetDescriptionAction": {
        "title": "ShoppingListSetDescriptionAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetKeyAction": {
        "title": "ShoppingListSetKeyAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "User-specific unique identifier for the shopping list.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetLineItemCustomFieldAction": {
        "title": "ShoppingListSetLineItemCustomFieldAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetLineItemCustomTypeAction": {
        "title": "ShoppingListSetLineItemCustomTypeAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "lineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-lineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetSlugAction": {
        "title": "ShoppingListSetSlugAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetSlugAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "slug": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-slug",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetTextLineItemCustomFieldAction": {
        "title": "ShoppingListSetTextLineItemCustomFieldAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetTextLineItemCustomFieldAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-customfield",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetTextLineItemCustomTypeAction": {
        "title": "ShoppingListSetTextLineItemCustomTypeAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetTextLineItemCustomTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/TypeResourceIdentifier"
              },
              "fields": {
                "$ref": "#/components/schemas/FieldContainer"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-custom-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ShoppingListSetTextLineItemDescriptionAction": {
        "title": "ShoppingListSetTextLineItemDescriptionAction",
        "includePath": "types/shopping-list/updates/ShoppingListSetTextLineItemDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShoppingListUpdateAction"
          },
          {
            "properties": {
              "textLineItemId": {
                "type": "string"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "ShoppingList",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-shoppingLists.html#set-textlineitem-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "State": {
        "title": "State",
        "includePath": "types/state/State.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "A unique identifier for the state.",
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/StateTypeEnum"
              },
              "name": {
                "description": "A human-readable name of the state.",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "description": "A human-readable description of the state.",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "initial": {
                "description": "A state can be declared as an initial state for any state machine.\nWhen a workflow starts, this first state must be an `initial` state.",
                "type": "boolean"
              },
              "builtIn": {
                "description": "Builtin states are integral parts of the project that cannot be deleted nor the key can be changed.",
                "type": "boolean"
              },
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                }
              },
              "transitions": {
                "description": "Transitions are a way to describe possible transformations of the current state to other states of the same `type` (e.g.: _Initial_ -> _Shipped_).\nWhen performing a `transitionState` update action and `transitions` is set, the currently referenced state must have a transition to the new state.\nIf `transitions` is an empty list, it means the current state is a final state and no further transitions are allowed.\nIf `transitions` is not set, the validation is turned off.\nWhen performing a `transitionState` update action, any other state of the same `type` can be transitioned to.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state",
        "x-annotation-updateType": "StateUpdate",
        "type": "string"
      },
      "StateDraft": {
        "title": "StateDraft",
        "includePath": "types/state/StateDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/StateTypeEnum"
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "initial": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateRoleEnum"
            }
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateResourceIdentifier"
            }
          }
        },
        "required": [
          "key",
          "type"
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#statedraft"
      },
      "StatePagedQueryResponse": {
        "title": "StatePagedQueryResponse",
        "includePath": "types/state/StatePagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/State"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "State"
      },
      "StateReference": {
        "title": "StateReference",
        "includePath": "types/state/StateReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/State"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state",
        "type": "string"
      },
      "StateResourceIdentifier": {
        "title": "StateResourceIdentifier",
        "includePath": "types/state/StateResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#state"
      },
      "StateRoleEnum": {
        "enum": [
          "ReviewIncludedInStatistics",
          "Return"
        ],
        "includePath": "types/state/StateRoleEnum.raml",
        "type": "string",
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#staterole"
      },
      "StateTypeEnum": {
        "enum": [
          "OrderState",
          "LineItemState",
          "ProductState",
          "ReviewState",
          "PaymentState"
        ],
        "includePath": "types/state/StateTypeEnum.raml",
        "type": "string",
        "x-annotation-package": "State"
      },
      "StateUpdate": {
        "title": "StateUpdate",
        "includePath": "types/state/StateUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "State"
      },
      "StateUpdateAction": {
        "title": "StateUpdateAction",
        "includePath": "types/state/StateUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "State"
      },
      "StateAddRolesAction": {
        "title": "StateAddRolesAction",
        "includePath": "types/state/updates/StateAddRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#add-state-roles",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateChangeInitialAction": {
        "title": "StateChangeInitialAction",
        "includePath": "types/state/updates/StateChangeInitialAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "initial": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-initial-state",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateChangeKeyAction": {
        "title": "StateChangeKeyAction",
        "includePath": "types/state/updates/StateChangeKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateChangeTypeAction": {
        "title": "StateChangeTypeAction",
        "includePath": "types/state/updates/StateChangeTypeAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/StateTypeEnum"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#change-state-type",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateRemoveRolesAction": {
        "title": "StateRemoveRolesAction",
        "includePath": "types/state/updates/StateRemoveRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#remove-state-roles",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateSetDescriptionAction": {
        "title": "StateSetDescriptionAction",
        "includePath": "types/state/updates/StateSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateSetNameAction": {
        "title": "StateSetNameAction",
        "includePath": "types/state/updates/StateSetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateSetRolesAction": {
        "title": "StateSetRolesAction",
        "includePath": "types/state/updates/StateSetRolesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateRoleEnum"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-state-roles",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StateSetTransitionsAction": {
        "title": "StateSetTransitionsAction",
        "includePath": "types/state/updates/StateSetTransitionsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StateUpdateAction"
          },
          {
            "properties": {
              "transitions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StateResourceIdentifier"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "State",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-states.html#set-transitions",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Store": {
        "title": "Store",
        "includePath": "types/store/Store.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "User-specific unique identifier for the store.\nThe `key` is mandatory and immutable.\nIt is used to reference the store.",
                "type": "string"
              },
              "name": {
                "description": "The name of the store",
                "$ref": "#/components/schemas/LocalizedString"
              },
              "languages": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "distributionChannels": {
                "description": "Array of References to a Channel with `ProductDistribution` role",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelReference"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores",
        "x-annotation-updateType": "StoreUpdate",
        "type": "string"
      },
      "StoreDraft": {
        "title": "StoreDraft",
        "includePath": "types/store/StoreDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "description": "User-specific unique identifier for the store.\nThe `key` is mandatory and immutable.\nIt is used to reference the store.",
            "type": "string"
          },
          "name": {
            "description": "The name of the store",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "distributionChannels": {
            "description": "Array of ResourceIdentifiers to a Channel with `ProductDistribution` role",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelResourceIdentifier"
            }
          }
        },
        "required": [
          "key",
          "name"
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#storedraft"
      },
      "StoreKeyReference": {
        "title": "StoreKeyReference",
        "includePath": "types/store/StoreKeyReference.raml",
        "$ref": "#/components/schemas/KeyReference",
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores"
      },
      "StorePagedQueryResponse": {
        "title": "StorePagedQueryResponse",
        "includePath": "types/store/StorePagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Store"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Store"
      },
      "StoreReference": {
        "title": "StoreReference",
        "includePath": "types/store/StoreReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Store"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores",
        "type": "string"
      },
      "StoreResourceIdentifier": {
        "title": "StoreResourceIdentifier",
        "includePath": "types/store/StoreResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#stores"
      },
      "StoreUpdate": {
        "title": "StoreUpdate",
        "includePath": "types/store/StoreUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Store"
      },
      "StoreUpdateAction": {
        "title": "StoreUpdateAction",
        "includePath": "types/store/StoreUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Store"
      },
      "StoreSetLanguagesAction": {
        "title": "StoreSetLanguagesAction",
        "includePath": "types/store/updates/StoreSetLanguagesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StoreUpdateAction"
          },
          {
            "properties": {
              "languages": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-languages",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StoreSetNameAction": {
        "title": "StoreSetNameAction",
        "includePath": "types/store/updates/StoreSetNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StoreUpdateAction"
          },
          {
            "properties": {
              "name": {
                "description": "The updated name of the store",
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StoresAddDistributionChannelsAction": {
        "title": "StoresAddDistributionChannelsAction",
        "includePath": "types/store/updates/StoresAddDistributionChannelsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StoreUpdateAction"
          },
          {
            "properties": {
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#add-distribution-channel",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StoresRemoveDistributionChannelsAction": {
        "title": "StoresRemoveDistributionChannelsAction",
        "includePath": "types/store/updates/StoresRemoveDistributionChannelsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StoreUpdateAction"
          },
          {
            "properties": {
              "distributionChannel": {
                "$ref": "#/components/schemas/ChannelResourceIdentifier"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#remove-distribution-channel",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "StoresSetDistributionChannelsAction": {
        "title": "StoresSetDistributionChannelsAction",
        "includePath": "types/store/updates/StoresSetDistributionChannelsAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/StoreUpdateAction"
          },
          {
            "properties": {
              "distributionChannels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelResourceIdentifier"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Store",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-stores#set-distribution-channels",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "AzureEventGridDestination": {
        "title": "AzureEventGridDestination",
        "includePath": "types/subscription/AzureEventGridDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "uri": {
                "type": "string"
              },
              "accessKey": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "AzureServiceBusDestination": {
        "title": "AzureServiceBusDestination",
        "includePath": "types/subscription/AzureServiceBusDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "connectionString": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "ChangeSubscription": {
        "title": "ChangeSubscription",
        "includePath": "types/subscription/ChangeSubscription.raml",
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "type": "string"
          }
        },
        "required": [
          "resourceTypeId"
        ],
        "x-annotation-package": "Subscription"
      },
      "DeliveryCloudEventsFormat": {
        "title": "DeliveryCloudEventsFormat",
        "includePath": "types/subscription/DeliveryCloudEventsFormat.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/DeliveryFormat"
          },
          {
            "properties": {
              "cloudEventsVersion": {
                "enum": [
                  "0.1"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#cloudevents-format-preview",
        "type": "string"
      },
      "DeliveryFormat": {
        "title": "DeliveryFormat",
        "includePath": "types/subscription/DeliveryFormat.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#format"
      },
      "DeliveryPlatformFormat": {
        "title": "DeliveryPlatformFormat",
        "includePath": "types/subscription/DeliveryPlatformFormat.raml",
        "$ref": "#/components/schemas/DeliveryFormat",
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#platform-format"
      },
      "Destination": {
        "title": "Destination",
        "includePath": "types/subscription/Destination.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Subscription"
      },
      "GoogleCloudPubSubDestination": {
        "title": "GoogleCloudPubSubDestination",
        "includePath": "types/subscription/GoogleCloudPubSubDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "projectId": {
                "type": "string"
              },
              "topic": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "IronMqDestination": {
        "title": "IronMqDestination",
        "includePath": "types/subscription/IronMqDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "uri": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "MessageDelivery": {
        "title": "MessageDelivery",
        "includePath": "types/subscription/MessageDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "id": {
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "sequenceNumber": {
                "format": "int64",
                "type": "number"
              },
              "resourceVersion": {
                "format": "int64",
                "type": "number"
              },
              "payloadNotIncluded": {
                "$ref": "#/components/schemas/PayloadNotIncluded"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#message-subscription-payload",
        "type": "string"
      },
      "MessageSubscription": {
        "title": "MessageSubscription",
        "includePath": "types/subscription/MessageSubscription.raml",
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "type": "string"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "resourceTypeId"
        ],
        "x-annotation-package": "Subscription"
      },
      "PayloadNotIncluded": {
        "title": "PayloadNotIncluded",
        "includePath": "types/subscription/PayloadNotIncluded.raml",
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "payloadType": {
            "type": "string"
          }
        },
        "required": [
          "reason",
          "payloadType"
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#payloadnotincluded"
      },
      "ResourceCreatedDelivery": {
        "title": "ResourceCreatedDelivery",
        "includePath": "types/subscription/ResourceCreatedDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "version": {
                "format": "int64",
                "type": "number"
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcecreated-payload",
        "type": "string"
      },
      "ResourceDeletedDelivery": {
        "title": "ResourceDeletedDelivery",
        "includePath": "types/subscription/ResourceDeletedDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "version": {
                "format": "int64",
                "type": "number"
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourcedeleted-payload",
        "type": "string"
      },
      "ResourceUpdatedDelivery": {
        "title": "ResourceUpdatedDelivery",
        "includePath": "types/subscription/ResourceUpdatedDelivery.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionDelivery"
          },
          {
            "properties": {
              "version": {
                "format": "int64",
                "type": "number"
              },
              "oldVersion": {
                "format": "int64",
                "type": "number"
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#resourceupdated-payload",
        "type": "string"
      },
      "SnsDestination": {
        "title": "SnsDestination",
        "includePath": "types/subscription/SnsDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "accessKey": {
                "type": "string"
              },
              "accessSecret": {
                "type": "string"
              },
              "topicArn": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "SqsDestination": {
        "title": "SqsDestination",
        "includePath": "types/subscription/SqsDestination.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Destination"
          },
          {
            "properties": {
              "accessKey": {
                "type": "string"
              },
              "accessSecret": {
                "type": "string"
              },
              "queueUrl": {
                "type": "string"
              },
              "region": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "type": "string"
      },
      "Subscription": {
        "title": "Subscription",
        "includePath": "types/subscription/Subscription.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "changes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChangeSubscription"
                }
              },
              "destination": {
                "$ref": "#/components/schemas/Destination"
              },
              "key": {
                "type": "string"
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MessageSubscription"
                }
              },
              "format": {
                "$ref": "#/components/schemas/DeliveryFormat"
              },
              "status": {
                "$ref": "#/components/schemas/SubscriptionHealthStatus"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscription",
        "x-annotation-updateType": "SubscriptionUpdate",
        "type": "string"
      },
      "SubscriptionDelivery": {
        "title": "SubscriptionDelivery",
        "includePath": "types/subscription/SubscriptionDelivery.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "notificationType"
        },
        "properties": {
          "projectKey": {
            "type": "string"
          },
          "notificationType": {
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/Reference"
          },
          "resourceUserProvidedIdentifiers": {
            "$ref": "#/components/schemas/UserProvidedIdentifiers"
          }
        },
        "required": [
          "projectKey",
          "notificationType",
          "resource"
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#delivery"
      },
      "SubscriptionDraft": {
        "title": "SubscriptionDraft",
        "includePath": "types/subscription/SubscriptionDraft.raml",
        "type": "object",
        "properties": {
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeSubscription"
            }
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "key": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscription"
            }
          },
          "format": {
            "$ref": "#/components/schemas/DeliveryFormat"
          }
        },
        "required": [
          "destination"
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscriptiondraft"
      },
      "SubscriptionHealthStatus": {
        "title": "SubscriptionHealthStatus",
        "enum": [
          "Healthy",
          "ConfigurationError",
          "ConfigurationErrorDeliveryStopped",
          "TemporaryError"
        ],
        "includePath": "types/subscription/SubscriptionHealthStatus.raml",
        "type": "string",
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscription-health-status"
      },
      "SubscriptionPagedQueryResponse": {
        "title": "SubscriptionPagedQueryResponse",
        "includePath": "types/subscription/SubscriptionPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Subscription"
      },
      "SubscriptionUpdate": {
        "title": "SubscriptionUpdate",
        "includePath": "types/subscription/SubscriptionUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Subscription"
      },
      "SubscriptionUpdateAction": {
        "title": "SubscriptionUpdateAction",
        "includePath": "types/subscription/SubscriptionUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Subscription"
      },
      "SubscriptionChangeDestinationAction": {
        "title": "SubscriptionChangeDestinationAction",
        "includePath": "types/subscription/updates/SubscriptionChangeDestinationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "destination": {
                "$ref": "#/components/schemas/Destination"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#change-destination",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "SubscriptionSetChangesAction": {
        "title": "SubscriptionSetChangesAction",
        "includePath": "types/subscription/updates/SubscriptionSetChangesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "changes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChangeSubscription"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-changes",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "SubscriptionSetKeyAction": {
        "title": "SubscriptionSetKeyAction",
        "includePath": "types/subscription/updates/SubscriptionSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "SubscriptionSetMessagesAction": {
        "title": "SubscriptionSetMessagesAction",
        "includePath": "types/subscription/updates/SubscriptionSetMessagesAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionUpdateAction"
          },
          {
            "properties": {
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MessageSubscription"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Subscription",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-subscriptions.html#set-messages",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "SubRate": {
        "title": "SubRate",
        "includePath": "types/tax-category/SubRate.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          }
        },
        "required": [
          "name",
          "amount"
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#subrate"
      },
      "TaxCategory": {
        "title": "TaxCategory",
        "includePath": "types/tax-category/TaxCategory.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the category.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the category.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "rates": {
                "description": "The tax rates have unique IDs in the rates list",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              },
              "key": {
                "description": "User-specific unique identifier for the category.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory",
        "x-annotation-updateType": "TaxCategoryUpdate",
        "type": "string"
      },
      "TaxCategoryDraft": {
        "title": "TaxCategoryDraft",
        "includePath": "types/tax-category/TaxCategoryDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRateDraft"
            }
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "rates"
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategorydraft"
      },
      "TaxCategoryPagedQueryResponse": {
        "title": "TaxCategoryPagedQueryResponse",
        "includePath": "types/tax-category/TaxCategoryPagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxCategory"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "TaxCategory"
      },
      "TaxCategoryReference": {
        "title": "TaxCategoryReference",
        "includePath": "types/tax-category/TaxCategoryReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/TaxCategory"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory",
        "type": "string"
      },
      "TaxCategoryResourceIdentifier": {
        "title": "TaxCategoryResourceIdentifier",
        "includePath": "types/tax-category/TaxCategoryResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxcategory"
      },
      "TaxCategoryUpdate": {
        "title": "TaxCategoryUpdate",
        "includePath": "types/tax-category/TaxCategoryUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxCategoryUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "TaxCategory"
      },
      "TaxCategoryUpdateAction": {
        "title": "TaxCategoryUpdateAction",
        "includePath": "types/tax-category/TaxCategoryUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "TaxCategory"
      },
      "TaxRate": {
        "title": "TaxRate",
        "includePath": "types/tax-category/TaxRate.raml",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID is always set if the tax rate is part of a TaxCategory.\nThe external tax rates in a\nCart do not contain an `id`.",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "amount": {
            "minimum": 0,
            "maximum": 1,
            "description": "Percentage in the range of [0..1].\nThe sum of the amounts of all `subRates`, if there are any.",
            "type": "number"
          },
          "includedInPrice": {
            "type": "boolean"
          },
          "country": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The state in the country",
            "type": "string"
          },
          "subRates": {
            "description": "For countries (e.g.\nthe US) where the total tax is a combination of multiple taxes (e.g.\nstate and local taxes).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubRate"
            }
          }
        },
        "required": [
          "name",
          "amount",
          "includedInPrice",
          "country"
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#taxrate"
      },
      "TaxRateDraft": {
        "title": "TaxRateDraft",
        "includePath": "types/tax-category/TaxRateDraft.raml",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "minimum": 0,
            "maximum": 1,
            "description": "Percentage in the range of [0..1].\nMust be supplied if no `subRates` are specified.\nIf `subRates` are specified\nthen the `amount` can be omitted or it must be the sum of the amounts of all `subRates`.",
            "type": "number"
          },
          "includedInPrice": {
            "type": "boolean"
          },
          "country": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "description": "The state in the country",
            "type": "string"
          },
          "subRates": {
            "description": "For countries (e.g.\nthe US) where the total tax is a combination of multiple taxes (e.g.\nstate and local taxes).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubRate"
            }
          }
        },
        "required": [
          "name",
          "includedInPrice",
          "country"
        ],
        "x-annotation-package": "TaxCategory"
      },
      "TaxCategoryAddTaxRateAction": {
        "title": "TaxCategoryAddTaxRateAction",
        "includePath": "types/tax-category/updates/TaxCategoryAddTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "taxRate": {
                "$ref": "#/components/schemas/TaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#add-tax-rate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TaxCategoryChangeNameAction": {
        "title": "TaxCategoryChangeNameAction",
        "includePath": "types/tax-category/updates/TaxCategoryChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TaxCategoryRemoveTaxRateAction": {
        "title": "TaxCategoryRemoveTaxRateAction",
        "includePath": "types/tax-category/updates/TaxCategoryRemoveTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "taxRateId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#remove-tax-rate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TaxCategoryReplaceTaxRateAction": {
        "title": "TaxCategoryReplaceTaxRateAction",
        "includePath": "types/tax-category/updates/TaxCategoryReplaceTaxRateAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "taxRateId": {
                "type": "string"
              },
              "taxRate": {
                "$ref": "#/components/schemas/TaxRateDraft"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#replace-tax-rate",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TaxCategorySetDescriptionAction": {
        "title": "TaxCategorySetDescriptionAction",
        "includePath": "types/tax-category/updates/TaxCategorySetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "description": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TaxCategorySetKeyAction": {
        "title": "TaxCategorySetKeyAction",
        "includePath": "types/tax-category/updates/TaxCategorySetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TaxCategoryUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, it is removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "TaxCategory",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-taxCategories.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "CustomFieldBooleanType": {
        "title": "CustomFieldBooleanType",
        "includePath": "types/type/CustomFieldBooleanType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#booleantype"
      },
      "CustomFieldDateTimeType": {
        "title": "CustomFieldDateTimeType",
        "includePath": "types/type/CustomFieldDateTimeType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetimetype"
      },
      "CustomFieldDateType": {
        "title": "CustomFieldDateType",
        "includePath": "types/type/CustomFieldDateType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#datetype"
      },
      "CustomFieldEnumType": {
        "title": "CustomFieldEnumType",
        "includePath": "types/type/CustomFieldEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#enumtype",
        "type": "string"
      },
      "CustomFieldEnumValue": {
        "title": "CustomFieldEnumValue",
        "includePath": "types/type/CustomFieldEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "Type"
      },
      "CustomFieldLocalizedEnumType": {
        "title": "CustomFieldLocalizedEnumType",
        "includePath": "types/type/CustomFieldLocalizedEnumType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldLocalizedEnumValue"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedenumtype",
        "type": "string"
      },
      "CustomFieldLocalizedEnumValue": {
        "title": "CustomFieldLocalizedEnumValue",
        "includePath": "types/type/CustomFieldLocalizedEnumValue.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "$ref": "#/components/schemas/LocalizedString"
          }
        },
        "required": [
          "key",
          "label"
        ],
        "x-annotation-package": "Type"
      },
      "CustomFieldLocalizedStringType": {
        "title": "CustomFieldLocalizedStringType",
        "includePath": "types/type/CustomFieldLocalizedStringType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#localizedstringtype"
      },
      "CustomFieldMoneyType": {
        "title": "CustomFieldMoneyType",
        "includePath": "types/type/CustomFieldMoneyType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#moneytype"
      },
      "CustomFieldNumberType": {
        "title": "CustomFieldNumberType",
        "includePath": "types/type/CustomFieldNumberType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#numbertype"
      },
      "CustomFieldReferenceType": {
        "title": "CustomFieldReferenceType",
        "includePath": "types/type/CustomFieldReferenceType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "referenceTypeId": {
                "$ref": "#/components/schemas/ReferenceTypeId"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#referencetype",
        "type": "string"
      },
      "CustomFieldSetType": {
        "title": "CustomFieldSetType",
        "includePath": "types/type/CustomFieldSetType.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldType"
          },
          {
            "properties": {
              "elementType": {
                "$ref": "#/components/schemas/FieldType"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#settype",
        "type": "string"
      },
      "CustomFieldStringType": {
        "title": "CustomFieldStringType",
        "includePath": "types/type/CustomFieldStringType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#stringtype"
      },
      "CustomFieldTimeType": {
        "title": "CustomFieldTimeType",
        "includePath": "types/type/CustomFieldTimeType.raml",
        "$ref": "#/components/schemas/FieldType",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#timetype"
      },
      "CustomFields": {
        "title": "CustomFields",
        "includePath": "types/type/CustomFields.raml",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeReference"
          },
          "fields": {
            "description": "A valid JSON object, based on FieldDefinition.",
            "$ref": "#/components/schemas/FieldContainer"
          }
        },
        "required": [
          "type",
          "fields"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#custom"
      },
      "CustomFieldsDraft": {
        "title": "CustomFieldsDraft",
        "includePath": "types/type/CustomFieldsDraft.raml",
        "type": "object",
        "properties": {
          "type": {
            "description": "The `id` or the `key` of the type to use.",
            "$ref": "#/components/schemas/TypeResourceIdentifier"
          },
          "fields": {
            "description": "A valid JSON object, based on the FieldDefinitions of the Type.",
            "$ref": "#/components/schemas/FieldContainer"
          }
        },
        "required": [
          "type"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfieldsdraft"
      },
      "FieldContainer": {
        "title": "FieldContainer",
        "includePath": "types/type/FieldContainer.raml",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-custom-fields.html#customfields",
        "x-annotation-asMap": {
          "key": "string",
          "value": "any"
        }
      },
      "FieldDefinition": {
        "title": "FieldDefinition",
        "includePath": "types/type/FieldDefinition.raml",
        "type": "object",
        "properties": {
          "type": {
            "description": "Describes the type of the field.",
            "$ref": "#/components/schemas/FieldType"
          },
          "name": {
            "description": "The name of the field.\nThe name must be between two and 36 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (`_`) and the hyphen-minus (`-`).\nThe name must be unique for a given resource type ID.\nIn case there is a field with the same name in another type it has to have the same FieldType also.",
            "type": "string"
          },
          "label": {
            "description": "A human-readable label for the field.",
            "$ref": "#/components/schemas/LocalizedString"
          },
          "required": {
            "description": "Whether the field is required to have a value.",
            "type": "boolean"
          },
          "inputHint": {
            "description": "Provides a visual representation type for this field.\nIt is only relevant for string-based field types like StringType and LocalizedStringType.",
            "$ref": "#/components/schemas/TypeTextInputHint"
          }
        },
        "required": [
          "type",
          "name",
          "label",
          "required"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fielddefinition"
      },
      "FieldType": {
        "title": "FieldType",
        "includePath": "types/type/FieldType.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "name"
        },
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#fieldtype"
      },
      "ResourceTypeId": {
        "title": "ResourceTypeId",
        "enum": [
          "asset",
          "category",
          "channel",
          "customer",
          "order",
          "order-edit",
          "inventory-entry",
          "line-item",
          "custom-line-item",
          "product-price",
          "payment",
          "payment-interface-interaction",
          "review",
          "shopping-list",
          "shopping-list-text-line-item",
          "discount-code",
          "cart-discount",
          "customer-group"
        ],
        "includePath": "types/type/ResourceTypeId.raml",
        "type": "string",
        "x-annotation-package": "Type"
      },
      "Type": {
        "title": "Type",
        "includePath": "types/type/Type.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the type.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the type.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "description": "Present on resources updated after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "description": "Present on resources created after 1/02/2019 except for events not tracked.",
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "Identifier for the type (max.\n256 characters).",
                "type": "string"
              },
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              },
              "resourceTypeIds": {
                "description": "Defines for which resource(s) the type is valid.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResourceTypeId"
                }
              },
              "fieldDefinitions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldDefinition"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type",
        "x-annotation-updateType": "TypeUpdate",
        "type": "string"
      },
      "TypeDraft": {
        "title": "TypeDraft",
        "includePath": "types/type/TypeDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "description": {
            "$ref": "#/components/schemas/LocalizedString"
          },
          "resourceTypeIds": {
            "description": "The IDs of the resources that can be customized with this type.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceTypeId"
            }
          },
          "fieldDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinition"
            }
          }
        },
        "required": [
          "key",
          "name",
          "resourceTypeIds"
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#typedraft"
      },
      "TypePagedQueryResponse": {
        "title": "TypePagedQueryResponse",
        "includePath": "types/type/TypePagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Type"
      },
      "TypeReference": {
        "title": "TypeReference",
        "includePath": "types/type/TypeReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Type"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type",
        "type": "string"
      },
      "TypeResourceIdentifier": {
        "title": "TypeResourceIdentifier",
        "includePath": "types/type/TypeResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#type"
      },
      "TypeTextInputHint": {
        "title": "TypeTextInputHint",
        "enum": [
          "SingleLine",
          "MultiLine"
        ],
        "includePath": "types/type/TypeTextInputHint.raml",
        "type": "string",
        "x-annotation-package": "Type"
      },
      "TypeUpdate": {
        "title": "TypeUpdate",
        "includePath": "types/type/TypeUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Type"
      },
      "TypeUpdateAction": {
        "title": "TypeUpdateAction",
        "includePath": "types/type/TypeUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Type"
      },
      "TypeAddEnumValueAction": {
        "title": "TypeAddEnumValueAction",
        "includePath": "types/type/updates/TypeAddEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/CustomFieldEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-enumvalue-to-fielddefinition",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeAddFieldDefinitionAction": {
        "title": "TypeAddFieldDefinitionAction",
        "includePath": "types/type/updates/TypeAddFieldDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldDefinition": {
                "$ref": "#/components/schemas/FieldDefinition"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-fielddefinition",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeAddLocalizedEnumValueAction": {
        "title": "TypeAddLocalizedEnumValueAction",
        "includePath": "types/type/updates/TypeAddLocalizedEnumValueAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/CustomFieldLocalizedEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#add-localizedenumvalue-to-fielddefinition",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeChangeEnumValueLabelAction": {
        "title": "TypeChangeEnumValueLabelAction",
        "includePath": "types/type/updates/TypeChangeEnumValueLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/CustomFieldEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-enumvalue-label",
        "type": "string"
      },
      "TypeChangeEnumValueOrderAction": {
        "title": "TypeChangeEnumValueOrderAction",
        "includePath": "types/type/updates/TypeChangeEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-enumvalues",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeChangeFieldDefinitionLabelAction": {
        "title": "TypeChangeFieldDefinitionLabelAction",
        "includePath": "types/type/updates/TypeChangeFieldDefinitionLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "label": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-deprecated": true,
        "type": "string"
      },
      "TypeChangeFieldDefinitionOrderAction": {
        "title": "TypeChangeFieldDefinitionOrderAction",
        "includePath": "types/type/updates/TypeChangeFieldDefinitionOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-fielddefinitions",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeChangeInputHintAction": {
        "title": "TypeChangeInputHintAction",
        "includePath": "types/type/updates/TypeChangeInputHintAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "inputHint": {
                "$ref": "#/components/schemas/TypeTextInputHint"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-inputhint",
        "type": "string"
      },
      "TypeChangeKeyAction": {
        "title": "TypeChangeKeyAction",
        "includePath": "types/type/updates/TypeChangeKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-key",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeChangeLabelAction": {
        "title": "TypeChangeLabelAction",
        "includePath": "types/type/updates/TypeChangeLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "label": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-label",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeChangeLocalizedEnumValueLabelAction": {
        "title": "TypeChangeLocalizedEnumValueLabelAction",
        "includePath": "types/type/updates/TypeChangeLocalizedEnumValueLabelAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/CustomFieldLocalizedEnumValue"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-localizedenumvalue-label",
        "type": "string"
      },
      "TypeChangeLocalizedEnumValueOrderAction": {
        "title": "TypeChangeLocalizedEnumValueOrderAction",
        "includePath": "types/type/updates/TypeChangeLocalizedEnumValueOrderAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-the-order-of-localizedenumvalues",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeChangeNameAction": {
        "title": "TypeChangeNameAction",
        "includePath": "types/type/updates/TypeChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "name": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeRemoveFieldDefinitionAction": {
        "title": "TypeRemoveFieldDefinitionAction",
        "includePath": "types/type/updates/TypeRemoveFieldDefinitionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "fieldName": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#remove-fielddefinition",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "TypeSetDescriptionAction": {
        "title": "TypeSetDescriptionAction",
        "includePath": "types/type/updates/TypeSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/TypeUpdateAction"
          },
          {
            "properties": {
              "description": {
                "$ref": "#/components/schemas/LocalizedString"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Type",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-types.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "Location": {
        "title": "Location",
        "includePath": "types/zone/Location.raml",
        "type": "object",
        "properties": {
          "country": {
            "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "$ref": "#/components/schemas/CountryCode"
          },
          "state": {
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#location"
      },
      "Zone": {
        "title": "Zone",
        "includePath": "types/zone/Zone.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResource"
          },
          {
            "properties": {
              "id": {
                "description": "The unique ID of the zone.",
                "type": "string",
                "x-annotation-identifier": true
              },
              "version": {
                "format": "int64",
                "description": "The current version of the zone.",
                "type": "number"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/LastModifiedBy"
              },
              "createdBy": {
                "$ref": "#/components/schemas/CreatedBy"
              },
              "key": {
                "description": "User-specific unique identifier for a zone.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction.",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "locations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone",
        "x-annotation-updateType": "ZoneUpdate",
        "type": "string"
      },
      "ZoneDraft": {
        "title": "ZoneDraft",
        "includePath": "types/zone/ZoneDraft.raml",
        "type": "object",
        "properties": {
          "key": {
            "description": "User-specific unique identifier for a zone.\nMust be unique across a project.\nThe field can be reset using the Set Key UpdateAction.",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          }
        },
        "required": [
          "name",
          "locations"
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zonedraft"
      },
      "ZonePagedQueryResponse": {
        "title": "ZonePagedQueryResponse",
        "includePath": "types/zone/ZonePagedQueryResponse.raml",
        "type": "object",
        "properties": {
          "limit": {
            "format": "int64",
            "type": "number"
          },
          "count": {
            "format": "int64",
            "type": "number"
          },
          "total": {
            "format": "int64",
            "type": "number"
          },
          "offset": {
            "format": "int64",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Zone"
            }
          }
        },
        "required": [
          "limit",
          "count",
          "offset",
          "results"
        ],
        "x-annotation-package": "Zone"
      },
      "ZoneReference": {
        "title": "ZoneReference",
        "includePath": "types/zone/ZoneReference.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "obj": {
                "$ref": "#/components/schemas/Zone"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone",
        "type": "string"
      },
      "ZoneResourceIdentifier": {
        "title": "ZoneResourceIdentifier",
        "includePath": "types/zone/ZoneResourceIdentifier.raml",
        "$ref": "#/components/schemas/ResourceIdentifier",
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#zone"
      },
      "ZoneUpdate": {
        "title": "ZoneUpdate",
        "includePath": "types/zone/ZoneUpdate.raml",
        "type": "object",
        "properties": {
          "version": {
            "format": "int64",
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneUpdateAction"
            }
          }
        },
        "required": [
          "version",
          "actions"
        ],
        "x-annotation-package": "Zone"
      },
      "ZoneUpdateAction": {
        "title": "ZoneUpdateAction",
        "includePath": "types/zone/ZoneUpdateAction.raml",
        "type": "object",
        "discriminator": {
          "propertyName": "action"
        },
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "required": [
          "action"
        ],
        "x-annotation-package": "Zone"
      },
      "ZoneAddLocationAction": {
        "title": "ZoneAddLocationAction",
        "includePath": "types/zone/updates/ZoneAddLocationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "location": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#add-location",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ZoneChangeNameAction": {
        "title": "ZoneChangeNameAction",
        "includePath": "types/zone/updates/ZoneChangeNameAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#change-name",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ZoneRemoveLocationAction": {
        "title": "ZoneRemoveLocationAction",
        "includePath": "types/zone/updates/ZoneRemoveLocationAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "location": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#remove-location",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ZoneSetDescriptionAction": {
        "title": "ZoneSetDescriptionAction",
        "includePath": "types/zone/updates/ZoneSetDescriptionAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "description": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#set-description",
        "x-annotation-postman-example": null,
        "type": "string"
      },
      "ZoneSetKeyAction": {
        "title": "ZoneSetKeyAction",
        "includePath": "types/zone/updates/ZoneSetKeyAction.raml",
        "allOf": [
          {
            "$ref": "#/components/schemas/ZoneUpdateAction"
          },
          {
            "properties": {
              "key": {
                "description": "If `key` is absent or `null`, this field will be removed if it exists.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "x-annotation-package": "Zone",
        "x-annotation-docs-uri": "https://docs.commercetools.com/http-api-projects-zones.html#set-key",
        "x-annotation-postman-example": null,
        "type": "string"
      }
    },
    "responses": {
      "trait_errorable_400": {
        "description": "## Bad Request\n\nA 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.\nBad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or\na parameter that references another resource that does not exist. Clients need to resolve the problems mentioned\nin the response before re-sending the request.\n\nThe following general error codes can appear in responses with the HTTP status code `400`:\n\n* `InvalidInput`\n  Invalid input has been sent to the service.\n  The client application should validate the input according to the constraints described in the error message\n  before sending the request.\n\n* `InvalidOperation`\n  The resource(s) involved in the request are not in a valid state for the operation. The client application\n  should validate the constraints described in the error message before sending the request.\n\n* `InvalidField`\n  A field has an invalid value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n  * `invalidValue` - *\n    The invalid value.\n  * `allowedValues` - Array of * - Optional\n    A fixed set of allowed values for the field, if any.\n\n* `RequiredField`\n  A required field is missing a value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n\n* `DuplicateField`\n  A value for a field conflicts with an existing duplicate value.\n  Extra fields:\n  * `field` - String\n    The name of the field.\n  * `duplicateValue` - *\n    The offending duplicate value.\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_errorable_401": {
        "description": "## Unauthorized\n\nA 401 indicates that the request is not properly authenticated.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_errorable_403": {
        "description": "## Forbidden\n\nA 403 indicates that the authenticated client is not allowed to perform the request.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_errorable_404": {
        "description": "## Not Found\n\nA 404 indicates that the addressed resource was not found / does not exist.\n\nThe following general error codes can appear in responses with the HTTP status code `404`:\n\n* `ResourceNotFound`\n  The resource addressed by the request URL does not exist.\n"
      },
      "trait_errorable_500": {
        "description": "## Internal Server Error\n\nA 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent\nrequests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs\nto be reported and resolved.\n\nThe following general error codes can appear in responses with the HTTP status code `500`:\n\n* `General`\n  A server-side problem occurred that is not further specified.\n  These errors [should be reported](http://support.commercetools.com/).\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_errorable_503": {
        "description": "## Service Unavailable\n\nThe following general error codes can appear in responses with the HTTP status code `503`:\n\n* `OverCapacity`\n  The service is having trouble handling the load. The client application should retry the request with\n  exponential backoff up to a point where further delay is unacceptable.\n\n* `PendingOperation`\n  A previous conflicting operation is still pending and needs to finish before the request can succeed.\n  The client application should retry the request with exponential backoff up to a point where further delay\n  is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "trait_deprecatable_200": {
        "description": "",
        "headers": {
          "X-DEPRECATION-NOTICE": {
            "description": "As the commercetools platform evolves, some features are superseded by better implementations and should not\nbe used anymore. The goal of our deprecation process is to communicate at runtime with users if they happen\nto use such deprecated feature. To achieve this in a non breaking fashion commercetools uses an additionnal\ncustom HTTP header called \"X-DEPRECATION-NOTICE\" with a specific message relative to the deprecation.\n",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "trait_conflicting_409": {
        "description": "## Conflict\n\nA 409 indicates that the resource targeted by the request (with the intention to modify or delete the resource),\nwas modified since the last time the client has requested it. As a reaction, the client will usually want to\nrequest the newest version of the resource to see what has changed and may then decide to apply the same or other\nchanges to the new version, or discard his changes entirely.\n\nConflicts indicate a concurrent modification and usually occur on versioned resources, for which the client has\nto include the version of the resource whenever he intends to apply modifications to it.\n\nThe following general error codes can appear in responses with the HTTP status code `409`:\n\n* `ConcurrentModification`\n  The request conflicts with the current state of the involved resource(s).\n  Typically, the request attempts to modify a resource that is out of date,\n  i.e. that has been modified by another client since the last time it was retrieved.\n  The client application should resolve the conflict (with or without involving the end-user)\n  before retrying the request.\n",
        "content": {
          "application/json": {
            "example": {
              "statusCode": 409,
              "message": "Version mismatch. Concurrent modification.",
              "errors": [
                {
                  "code": "ConcurrentModification",
                  "message": "Version mismatch. Concurrent modification."
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "trait_expandable_expand": {
        "name": "expand",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_query_where": {
        "name": "where",
        "in": "query",
        "description": "If queries support ad-hoc filtering of resources through flexible predicates, they do so via the where query\nparameter that accepts a single (possibly compound) predicate to determine whether a specific resource\nrepresentation should be included in the result.\n\nThe structure of predicates and the names of the fields follow the structure and naming of the fields in the\ndocumented response representation of the query results.\n\nExamples of predicates:\n\n    // Compare a field's value to a given value\n    name = \"Peter\"\n    age < 42\n    age > 42\n    age <= 42\n    age >= 42\n    age <> 42\n\n    // Combine any two conditional expressions in a logical conjunction / disjunction\n    name = \"Peter\" and age < 42\n    name = \"Peter\" or age < 42\n\n    // Negate any other conditional expression\n    not (name = \"Peter\" and age < 42)\n\n    // Check whether a field's value is or is not contained in\n    // a specified set of values.\n    age in (42, 43, 44)\n    age not in (42, 43, 44)\n\n    // Check whether an array contains all or any of a set of values\n    tags contains all (\"a\", \"b\", \"c\")\n    tags contains any (\"a\", \"b\", \"c\")\n\n    // Check whether an array is empty\n    tags is empty\n\n    // Check whether a field exists & has a non-null value\n    name is defined\n    name is not defined\n\n    // Descend into nested objects\n    dog(age < 7 and name = \"Beethoven\")\n\n    // Descend into nested arrays of objects\n    cities(zip > 10000 and zip < 20000)\n\nA query endpoint usually restricts predicates to only be allowed on a specified subset of a resource\nrepresentation's fields. The documentation of the endpoint will therefore list fields that can be used\nfor constructing predicates.\n\nIf multiple predicates are specified via multiple where query parameters, the individual predicates are\ncombined in a logical conjunction, just as if they had been specified in a single where query parameter\nand combined with and.\n\nNote: The encoding of the predicates is UTF-8 and the predicate must be URL-encoded in the HTTP request.\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_query_/^var[.][a-zA-Z0-9]+$/": {
        "name": "/^var[.][a-zA-Z0-9]+$/",
        "in": "query",
        "description": "Predicate parameter values",
        "schema": {
          "type": "string"
        },
        "x-annotation-placeholderParam": {
          "paramName": "predicateVar",
          "template": "var.<varName>",
          "placeholder": "varName"
        }
      },
      "trait_sortable_sort": {
        "name": "sort",
        "in": "query",
        "description": "A query endpoint that supports sorting does so through the sort query parameter. The provided value must be\na valid sort expression. The default sort direction is ASC. The allowed sort paths are typically listed on\nthe specific query endpoints.\n\nHere are some examples of sort expressions:\n\n    name desc\n    dog.age asc\n\nIf multiple sort expressions are specified via multiple sort parameters, they are combined into a composed\nsort where the results are first sorted by the first expression, followed by equal values being sorted\naccording to the second expression, and so on.\n\nNote: The sorting is case sensitive.\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_paging_limit": {
        "name": "limit",
        "in": "query",
        "description": "Number of results returned",
        "schema": {
          "type": "number"
        }
      },
      "trait_paging_offset": {
        "name": "offset",
        "in": "query",
        "description": "Number of results skipped",
        "schema": {
          "type": "number"
        }
      },
      "trait_paging_withTotal": {
        "name": "withTotal",
        "in": "query",
        "description": "Calculate total number of results",
        "schema": {
          "type": "boolean"
        }
      },
      "trait_versioned_version": {
        "name": "version",
        "in": "query",
        "required": true,
        "description": "Last seen version of the resource",
        "schema": {
          "format": "int64",
          "type": "number"
        }
      },
      "trait_priceSelecting_priceCurrency": {
        "name": "priceCurrency",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_priceCountry": {
        "name": "priceCountry",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_priceCustomerGroup": {
        "name": "priceCustomerGroup",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_priceChannel": {
        "name": "priceChannel",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_localeProjection": {
        "name": "localeProjection",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_priceSelecting_storeProjection": {
        "name": "storeProjection",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "trait_dataErasure_dataErasure": {
        "name": "dataErasure",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "oauth_2_0": {
        "description": "HTTP API authorization uses [OAuth2](http://tools.ietf.org/html/rfc6750).\n\nClients must obtain an access token from the auth service using one of\nthe authorization flows described below, before they are able to make authorized requests\nto other commercetools services. On successful completion of an authorization flow,\na client will be given an `access_token`, which they need to include in requests\nto authorized service endpoints via the HTTP `Authorization` header like this:\n",
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.europe-west1.gcp.commercetools.com/oauth/token",
            "scopes": {
              "manage_project:{projectKey}": "",
              "manage_products:{projectKey}": "",
              "view_products:{projectKey}": "",
              "manage_orders:{projectKey}": "",
              "manage_orders:{projectKey}:{storeKey}": "",
              "view_orders:{projectKey}": "",
              "view_orders:{projectKey}:{storeKey}": "",
              "manage_customers:{projectKey}": "",
              "view_customers:{projectKey}": "",
              "manage_payments:{projectKey}": "",
              "view_payments:{projectKey}": "",
              "manage_subscriptions:{projectKey}": "",
              "manage_extensions:{projectKey}": "",
              "manage_types:{projectKey}": "",
              "view_types:{projectKey}": "",
              "view_shopping_lists:{projectKey}": "",
              "manage_shopping_lists:{projectKey}": "",
              "manage_my_orders:{projectKey}": "",
              "manage_my_orders:{projectKey}:{storeKey}": "",
              "manage_my_profile:{projectKey}": "",
              "view_project_settings:{projectKey}": "",
              "view_published_products:{projectKey}": "",
              "manage_cart_discounts:{projectKey}": "",
              "view_cart_discounts:{projectKey}": "",
              "manage_customer_groups:{projectKey}": "",
              "view_customer_groups:{projectKey}": "",
              "view_shipping_methods:{projectKey}": "",
              "manage_shipping_methods:{projectKey}": "",
              "manage_tax_categories:{projectKey}": "",
              "view_tax_categories:{projectKey}": "",
              "manage_categories:{projectKey}": "",
              "view_categories:{projectKey}": ""
            }
          }
        }
      }
    },
    "links": {},
    "callbacks": {}
  }
}