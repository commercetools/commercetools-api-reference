type:
  baseDomain:
    resourceType: Cart
    resourceQueryType: CartPagedQueryResponse
    resourceDraft: CartDraft
    whereExample: customerEmail = "john.doe@example.com"
    sortExample: createdAt asc
description: A shopping cart holds product variants and can be ordered.
get:
  securedBy:
    [
      oauth_2_0:
        { scopes: ['manage_project:{projectKey}', 'view_orders:{projectKey}'] },
    ]
  queryParameters:
    customerId?:
      type: string
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/carts.example.json
post:
  securedBy:
    [
      oauth_2_0:
        {
          scopes: ['manage_project:{projectKey}', 'manage_orders:{projectKey}'],
        },
    ]
  description: |
    Creating a cart can fail with an InvalidOperation if the referenced shipping method in the
    CartDraft has a predicate which does not match the cart.
  body:
    application/json:
      example: !include ../examples/cart-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/cart.example.json
/replicate:
  type: base
  post:
    displayName: Replicate cart
    body:
      application/json:
        type: ReplicaCartDraft
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/cart.example.json
            type: Cart
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              ['manage_project:{projectKey}', 'manage_orders:{projectKey}'],
          },
      ]
/customer-id={customerId}:
  (methodName): withCustomerId
  type:
    baseResource:
      uriParameterName: customerId
      resourceType: Cart
  get:
    securedBy:
      [
        oauth_2_0:
          {
            scopes: ['manage_project:{projectKey}', 'view_orders:{projectKey}'],
          },
      ]
    description: |
      Retrieves the active cart of the customer that has been modified most recently.
      It does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.

      The cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,
      send an Update request with the Recalculate update action instead.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/cart.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Cart
      resourceUpdateType: Update
  get:
    securedBy:
      [
        oauth_2_0:
          {
            scopes: ['manage_project:{projectKey}', 'view_orders:{projectKey}'],
          },
      ]
    description: |
      The cart may not contain up-to-date prices, discounts etc.
      If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/cart.example.json
  post:
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              ['manage_project:{projectKey}', 'manage_orders:{projectKey}'],
          },
      ]
    body:
      application/json:
        example: !include ../examples/cart-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/cart.example.json
  delete:
    is:
      - dataErasure
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              ['manage_project:{projectKey}', 'manage_orders:{projectKey}'],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/cart.example.json
