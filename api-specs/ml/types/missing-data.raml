#%RAML 1.0 Library
usage: Missing data types
(annotations.package): missing-data

uses:
  common: ./common.raml
  annotations: ./annotations.raml

types:
  AttributeCount:
    properties:
      productTypeAttributes:
        description: Number of attributes defined in the product type.
        type: number
        format: int32
      variantAttributes:
        description: Number of attributes defined in the variant.
        type: number
        format: int32
      missingAttributeValues:
        description: Number of attributes missing values in the variant.
        type: number
        format: int32

  AttributeCoverage:
    properties:
      names:
        description:
          The percentage of attributes from the product type defined in the
          product variant. A value of `1.0` indicates a product variant contains
          all attributes defined in the product type.
        type: number
        format: float
      values:
        description:
          Represents the percentage of attributes in the product variant that
          contain values.
        type: number
        format: float

  MissingAttributesDetails:
    properties:
      total:
        description: Number of products scanned.
        type: number
        format: int32
      missingAttributeNames:
        description: Number of products missing attribute names.
        type: number
        format: int32
      missingAttributeValues:
        description: Number of products missing attribute values.
        type: number
        format: int32

  MissingAttributes:
    properties:
      product:
        type: common.ProductReference
      productType:
        type: common.ProductTypeReference
      variantId:
        description: ID of a ProductVariant.
        type: number
        format: int32
      missingAttributeValues:
        description:
          The names of the attributes of the product type that the variant is
          missing, sorted by attribute importance in descending order.
        type: string[]
      missingAttributeNames?:
        description:
          The names of the attributes of the product type that the variant is
          missing, sorted by attribute importance in descending order.
        type: string[]
      attributeCount?:
        type: AttributeCount
      attributeCoverage?:
        type: AttributeCoverage

  MissingAttributesMeta:
    properties:
      productLevel:
        type: MissingAttributesDetails
      variantLevel:
        type: MissingAttributesDetails
      productTypeIds?:
        description: The IDs of the product types containing the requested `attributeName`.
        type: string[]

  MissingAttributesSearchRequest:
    properties:
      limit?:
        type: number
        format: int32
      offset?:
        type: number
        format: int32
      staged?:
        description:
          If true, searches data from staged products in addition to published
          products.
        type: boolean
        default: false
      productSetLimit?:
        type: number
        format: int32
        default: 100000
        description: Maximum number of products to scan.
      includeVariants?:
        description:
          If true, searches all product variants. If false, only searches master
          variants.
        type: boolean
      coverageMin?:
        description:
          Minimum attribute coverage of variants to display, applied to both
          coverage types.
        type: number
        format: float
      coverageMax?:
        description:
          Maximum attribute coverage of variants to display, applied to both
          coverage types.
        type: number
        format: float
      sortBy?:
        description: |
          Default value: `coverageAttributeValues` - Allowed values: [`coverageAttributeValues`, `coverageAttributeNames`]
          `coverageAttributeValues` shows the product variants with the most missing attribute values first and `coverageAttributeNames` the ones with the most missing attribute names.
        type: string
      showMissingAttributeNames?:
        description: If true, the `missingAttributeNames` will be included in the results.
        type: boolean
      productIds?:
        description: |
          Filters results by the provided Product IDs.
          Cannot be applied in combination with any other filter.
        type: string[]
      productTypeIds?:
        description: |
          Filters results by the provided product type IDs.
          Cannot be applied in combination with any other filter.
        type: string[]
      attributeName?:
        description: |
          Filters results by the provided attribute name. If provided,  products are only checked for this attribute. Therefore, only products of product types which define the attribute name are considered. These product type IDs
          are then listed in `MissingAttributesMeta`. The  `attributeCount` and `attributeCoverage` fields are not part of the response when using this filter. Cannot be applied in combination with any other filter.
        type: string
  MissingAttributesPagedQueryResult:
    properties:
      count:
        type: number
        format: int64
      total:
        type: number
        format: int64
      offset:
        type: number
        format: int64
      results:
        type: MissingAttributes[]
      meta:
        type: MissingAttributesMeta

  MissingDataTaskStatus:
    description:
      Represents a URL path to poll to get the results of an Asynchronous
      Request.
    properties:
      state: common.TaskStatusEnum
      expires:
        description: |
          The expiry date of the result. You cannot access the result after the expiry date. Default: 1 day after the result first becomes available. This is only available when the TaskStatus state is SUCCESS.
        type: datetime
      result:
        description:
          The response to an asynchronous request. The type depends on the
          request initiated. Only populated when the status is `SUCCESS`.
        type: MissingAttributesPagedQueryResult
  ## Missing image section
  MissingImages:
    properties:
      product: common.ProductReference
      variantId:
        description: ID of the variant
        type: number
        format: int64
      imageCount:
        description: Number of images the variant contains.
        type: number
        format: int64

  MissingImagesCount:
    properties:
      missingImages:
        type: number
        format: int64
      total:
        description: Number of products scanned.
        type: number
        format: int64

  MissingImagesProductLevel:
    type: MissingImagesCount
    properties:
      missingImages:
        description: Number of products missing images.
        type: number
        format: int64
      total:
        description: Number of products scanned.
        type: number
        format: int64

  MissingImagesVariantLevel:
    type: MissingImagesCount
    properties:
      missingImages:
        description: Number of product variants missing images.
        type: number
        format: int64
      total:
        description: Number of products scanned.
        type: number
        format: int64

  MissingImagesMeta:
    properties:
      productLevel: MissingImagesProductLevel
      variantLevel: MissingImagesVariantLevel
      threshold:
        description:
          The minimum number of images a product variant must have. Anything
          below this value is considered a product variant with missing images.
        type: number
        format: int64

  MissingImagesSearchRequest:
    properties:
      limit?:
        type: number
        format: int64
      offset?:
        type: number
        format: int64
      staged?:
        description:
          If true, searches data from staged products in addition to published
          products.
        type: boolean
        default: false
      productSetLimit?:
        description: Maximum number of products to scan.
        type: number
        format: int64
      includeVariants?:
        description:
          If true, searches all product variants. If false, only searches master
          variants.
        type: boolean
        default: true
      autoThreshold?:
        description:
          If true, uses the median number of images per product variant as a
          threshold value.
        type: boolean
        default: false
      threshold?:
        description:
          The minimum number of images a product variant must have. Anything
          below this value is considered a product variant with missing images.
        type: number
        format: int64
      productIds?:
        description:
          Filters results by the provided Product IDs. Cannot be applied in
          combination with any other filter.
        type: string[]
      productTypeIds?:
        description:
          Filters results by the provided product type IDs. It cannot be applied
          in combination with any other filter.
        type: string[]
  MissingImagesPagedQueryResult:
    properties:
      count:
        type: number
        format: int64
      total:
        type: number
        format: int64
      offset:
        type: number
        format: int64
      results:
        type: MissingImages[]
      meta:
        type: MissingImagesMeta
  MissingImagesTaskStatus:
    description:
      Represents a URL path to poll to get the results of an Asynchronous
      Request.
    properties:
      state: common.TaskStatusEnum
      expires:
        description: |
          The expiry date of the result. You cannot access the result after the expiry date. Default: 1 day after the result first becomes available. This is only available when the TaskStatus state is SUCCESS.
        type: datetime
      result:
        description:
          The response to an asynchronous request. The type depends on the
          request initiated. Only populated when the status is `SUCCESS`.
        type: MissingImagesPagedQueryResult

  # Missing prices section
  MissingPrices:
    properties:
      product: common.ProductReference
      variantId:
        description: Id of the `ProductVariant`.
        type: number
        format: int64
  MissingPricesProductCount:
    properties:
      total:
        type: number
        format: int64
      missingPrices:
        type: number
        format: int64
  MissingPricesProductLevel:
    type: MissingPricesProductCount
    properties:
      total:
        description: Number of products scanned.
        type: number
        format: int64
      missingPrices:
        description: Number of products missing prices.
        type: number
        format: int64

  MissingPricesVariantLevel:
    type: MissingPricesProductCount
    properties:
      total:
        description: Number of product variants scanned.
        type: number
        format: int64
      missingPrices:
        description: Number of product variants missing prices.
        type: number
        format: int64
  MissingPricesMeta:
    properties:
      productLevel: MissingPricesProductLevel
      variantLevel: MissingPricesVariantLevel

  MissingPricesSearchRequest:
    properties:
      limit?:
        type: number
        format: int64
      offset?:
        type: number
        format: int64
      staged?:
        description:
          If true, searches data from staged products in addition to published
          products.
        type: boolean
        default: false
      productSetLimit?:
        description: Maximum number of products to scan.
        type: number
        format: int64
        default: 10000
      includeVariants?:
        description:
          If true, searches all product variants. If false, only searches master
          variants.
        type: boolean
        default: true
      currencyCode?:
        type: string
        description:
          If used, only checks if a product variant has a price in the provided
          currency code.
      checkDate?:
        type: boolean
        default: false
        description:
          If true, checks if there are prices for the specified date range and
          time.
      validFrom?:
        type: datetime
        description:
          Starting date of the range to check. If no value is given, checks
          prices valid at the time the search is initiated.
      validUntil?:
        type: datetime
        description:
          Ending date of the range to check. If no value is given, it is equal
          to `validFrom`.
      productIds?:
        description:
          Filters results by the provided Product IDs. Cannot be applied in
          combination with the `productTypeIds` filter.
        type: string[]
      productTypeIds?:
        description:
          Filters results by the provided product type IDs. Cannot be applied in
          combination with the `productIds` filter.
        type: string[]

  MissingPricesPagedQueryResult:
    properties:
      count:
        type: number
        format: int64
      total:
        type: number
        format: int64
      offset:
        type: number
        format: int64
      results:
        type: MissingPrices[]
      meta:
        type: MissingPricesMeta
  MissingPricesTaskStatus:
    description:
      Represents a URL path to poll to get the results of an Asynchronous
      Request.
    properties:
      state: common.TaskStatusEnum
      expires:
        description: |
          The expiry date of the result. You cannot access the result after the expiry date. Default: 1 day after the result first becomes available. This is only available when the TaskStatus state is SUCCESS.
        type: datetime
      result:
        description:
          The response to an asynchronous request. The type depends on the
          request initiated. Only populated when the status is `SUCCESS`.
        type: MissingPricesPagedQueryResult
