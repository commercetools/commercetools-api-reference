#%RAML 1.0
---
title: commercetools Change History API
annotationTypes:
  asMap:
    type: object
    properties:
      key: string
      value: string
  docsBaseUri:
    allowedTargets:
      - API
    type: string
  docsBaseUriParameters:
    allowedTargets:
      - API
    type: object
  products:
    allowedTargets:
      - API
    type: array
    items:
      type: string
  serviceRegions:
    allowedTargets:
      - API
      - SecuritySchemeSettings
    type: array
    items:
      type: object
      properties:
        uri: string
        region: string
        provider: string
        name: string
  package:
    type: string
    allowedTargets: TypeDeclaration
(products):
  - Composable Commerce
description: Fetch all Records from all resource types that match queryParameters.
version: 1
baseUri: https://history.europe-west1.gcp.commercetools.com
(docsBaseUri): https://history.{region}.commercetools.com
(docsBaseUriParameters):
  region:
    type: string
    enum:
      - europe-west1.gcp
      - us-central1.gcp
      - australia-southeast1.gcp
      - eu-central-1.aws
      - us-east-2.aws
      - eastus.azure
      - germanywestcentral.azure
    description: |
      The [Region](#hosts) in which the project is hosted.
(serviceRegions):
  - uri: https://history.us-central1.gcp.commercetools.com/
    region: us-central1
    provider: gcp
    name: North America (Google Cloud, Iowa)
  - uri: https://history.europe-west1.gcp.commercetools.com
    region: europe-west1
    provider: gcp
    name: Europe (Google Cloud, Belgium)
  - uri: https://history.australia-southeast1.gcp.commercetools.com
    region: australia-southeast1
    provider: gcp
    name: Australia (Google Cloud, Sydney)
  - uri: https://history.eu-central-1.aws.commercetools.com
    region: eu-central-1
    provider: aws
    name: Europe (AWS, Frankfurt)
  - uri: https://history.us-east-2.aws.commercetools.com
    region: us-east-2
    provider: aws
    name: North America (AWS, Ohio)
  - uri: https://history.eastus.azure.commercetools.com
    region: eastus
    provider: azure
    name: North America (Azure, Virginia)
  - uri: https://history.germanywestcentral.azure.commercetools.com
    region: germanywestcentral
    provider: azure
    name: Europe (Azure, Frankfurt)
securitySchemes:
  oauth_2_0: !include oauth2.raml
securedBy: [oauth_2_0]
mediaType: application/json
types: !include types/types.raml

resourceTypes:
  base:
    get:
      description: The `view_audit_log:{projectKey}` scope is required, and depending on the [resource type](ctp:history:type:ChangeHistoryResourceType) queried, their respective scopes must be granted.
      responses:
        200:
          body:
            application/json:
              type: RecordPagedQueryResponse
              example: !include examples/RecordPagedQueryResponse.json
          description: Records of the resource under query.
        400:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/BadRequest.json
          description:
            Bad Request. A 400 is the most commonly expected error response and
            indicates that a request failed due to providing bad input. Bad
            input can be a malformed request body, missing required parameters,
            wrongly typed or malformed parameters or a parameter that references
            another resource that does not exist. Clients need to resolve the
            problems mentioned in the response before re-sending the request.
        401:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/Unauthorized.json
          description: Unauthorized. Indicate that the request is not properly
            authenticated.
        403:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/Forbidden.json
          description:
            Forbidden. Indicates that the authenticated client is not allowed to
            perform the request.
        500:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/InternalServerError.json
          description:
            Internal Server Error. A 500 indicates that a request failed due to
            a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability
            or permanent server-side problem that needs to be reported and
            resolved.
        503:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/ServiceUnavailable.json
          description: |
            Service Unavailable. The following general error codes can appear in responses with the HTTP status code `503`
            - `OverCapacity` The service is having trouble handling the load. The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
/{projectKey}:
  type: base
  uriParameters:
    projectKey:
      type: string
      description: |
        `key` of the Project.
  get:
    displayName: Query Records
    securedBy:
      - oauth_2_0:
          scopes:
            [
              'view_associate_roles:{projectKey}',
              'view_audit_log:{projectKey}',
              'view_business_units:{projectKey}',
              'view_cart_discounts:{projectKey}',
              'view_categories:{projectKey}',
              'view_customers:{projectKey}',
              'view_customers:{projectKey}:{storeKey}',
              'view_customer_groups:{projectKey}',
              'view_discount_codes:{projectKey}',
              'view_key_value_documents:{projectKey}',
              'view_orders:{projectKey}',
              'view_orders:{projectKey}:{storeKey}',
              'view_payments:{projectKey}',
              'view_products:{projectKey}',
              'view_product_selections:{projectKey}',
              'view_quotes:{projectKey}',
              'view_quote_requests:{projectKey}',
              'view_shopping_lists:{projectKey}',
              'view_shopping_lists:{projectKey}:{storeKey}',
              'view_states:{projectKey}',
              'view_staged_quotes:{projectKey}',
              'view_stores:{projectKey}',
              'view_tax_categories:{projectKey}',
              'view_types:{projectKey}',
            ]
    queryParameters:
      resourceTypes?:
        type: ChangeHistoryResourceType[]
        description: |
          Can be used to filter Records of specified resource types.

          By default, the API returns the Records of all supported resource types.
        example: ['order', 'product']
      date.from?:
        type: number | datetime | DateStringFilter
        default: 24
        description: |
          Can be [DateTime](/types#datetime), non-negative integer, or `now`.
          The non-negative integer represents a point in time in the past measured in hours, for example, `24` means 24 hours ago.
          Can only be used together with the `date.to` query parameter, which has to represent a point in time after the value defined by `date.from`.
      date.to?:
        type: number | datetime | DateStringFilter
        default: 'now'
        description: |
          Can be [DateTime](/types#datetime), non-negative integer, or `now`.
          The non-negative integer represents a point in time in the past measured in hours, for example, `24` means 24 hours ago.
          Can only be used together with the `date.from` query parameter, which has to represent a point in time before the value defined by `date.to`.
      limit?:
        type: integer
        minimum: 0
        description: |
          Number of [results requested](/../api/general-concepts#limit).
      offset?:
        type: integer
        description: |
          Number of [elements skipped](/../api/general-concepts#offset).
      userId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the Merchant Center user who made the change.

          Can be used to query changes made by a Merchant Center user.
      clientId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the [API Client](ctp:api:type:ApiClient) that made the change.
      customerId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the [Customer](ctp:api:type:Customer) who made the change using a token from the [password flow](/authorization#password-flow).
      associateId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the [Associate](ctp:api:type:Associate) that made the change. Only [Changes](ctp:history:type:Change) to [Business Units](ctp:api:type:BusinessUnit), [Orders](ctp:api:type:Order), [Quote Requests](ctp:api:type:QuoteRequest), and [Quotes](ctp:api:type:Quote) can be filtered.
      businessUnit?:
        type: string
        description: |
          `key` of the [Business Unit](ctp:api:type:BusinessUnit) linked to the change. Only [Changes](ctp:history:type:Change) to [Orders](ctp:api:type:Order), [Quote Requests](ctp:api:type:QuoteRequest), and [Quotes](ctp:api:type:Quote) can be filtered.
      type?:
        type: string
        description: |
          Can be `"ResourceCreated"`, `"ResourceUpdated"`, or `"ResourceDeleted"`.

          Can be used to filter for a specific type of change (creation, update, or deletion).
      resourceId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the changed resource.
      resourceKey?:
        type: string
        description: |
          [Key](/general-concepts#identifier) of the changed resource. Only [Changes](ctp:history:type:Change) to [Business Units](ctp:api:type:BusinessUnit), [Associate Roles](ctp:api:type:AssociateRole), [Products](ctp:api:type:Product), and [Stores](ctp:api:type:Store) can be filtered.
      source?:
        type: string
        description: |
          Source from which changes were made: `"MerchantCenter"`, `"ImpEx"`, or `"ApiClient"`.
      changes?:
        type: string[]
        description: |
          Restrict the types of [Changes](ctp:history:type:Change) returned by passing the value of the `change` field.
          The values must belong to the resource type specified in the path parameter.
      stores?:
        type: string[]
        description: |
          `key` of the [Store](ctp:api:type:Store) linked to the Change.
      excludePlatformInitiatedChanges?:
        description: |
          Excludes [Changes](ctp:history:type:Change) initiated by background processes by passing the values of the `change` field.
          Only [Changes](ctp:history:type:Change) of resource type `product`, `product-discount`, `discount-code`, and `shopping-list` can be filtered.
          Allowed values depend on resource types.
            - To filter Product Changes, `excludeAll`, `changeReviewRatingStatistics`, and `setVariantAvailability` can be passed.
            - To filter Product Discount Changes, `excludeAll` and `setIsValid` can be passed.
            - To filter Discount Code Changes, `excludeAll` and `setApplicationVersion` can be passed.
            - To filter Shopping List Changes, `excludeAll` and `changeLineItemName`can be passed.

          `excludeAll` excludes all applicable changes.
        type: PlatformInitiatedChange[]
      expand?:
        type: boolean
        description: |
          If `true`, [CustomFieldExpandedValue](ctp:history:type:CustomFieldExpandedValue) is made available.
  /{resourceType}:
    type: base
    uriParameters:
      resourceType:
        type: string
        enum:
          - associate-roles
          - business-units
          - cart-discounts
          - categories
          - channels
          - custom-objects
          - customers
          - customer-groups
          - discount-codes
          - inventory
          - orders
          - payments
          - products
          - product-discounts
          - product-selections
          - product-types
          - quote-requests
          - quotes
          - reviews
          - shopping-lists
          - states
          - staged-quotes
          - stores
          - tax-categories
          - types
          - zones
        description: |
          Resource type for which a query is made.
          The value must be one of the following:
          `associate-roles`, `business-units`, `cart-discounts`, `categories`, `channels`, `custom-objects`, `customers`, `customer-groups`, `discount-codes`, `inventory`,
          `orders`, `payments`, `products`, `product-discounts`, `product-selections`, `product-types`,
          `quote-requests`, `quotes`, `reviews`, `shopping-lists`, `states`, `staged-quotes`, `stores`
          `tax-categories`, `types`, `zones`
    get:
      displayName: Query Records for a specific resource type
      securedBy:
        - oauth_2_0:
            scopes:
              [
                'view_associate_roles:{projectKey}',
                'view_audit_log:{projectKey}',
                'view_business_units:{projectKey}',
                'view_cart_discounts:{projectKey}',
                'view_categories:{projectKey}',
                'view_customers:{projectKey}',
                'view_customer_groups:{projectKey}',
                'view_discount_codes:{projectKey}',
                'view_key_value_documents:{projectKey}',
                'view_orders:{projectKey}',
                'view_orders:{projectKey}:{storeKey}',
                'view_payments:{projectKey}',
                'view_products:{projectKey}',
                'view_product_selections:{projectKey}',
                'view_quotes:{projectKey}',
                'view_quote_requests:{projectKey}',
                'view_shopping_lists:{projectKey}',
                'view_states:{projectKey}',
                'view_staged_quotes:{projectKey}',
                'view_stores:{projectKey}',
                'view_tax_categories:{projectKey}',
                'view_types:{projectKey}',
              ]
      queryParameters:
        date.from?:
          type: number | datetime | DateStringFilter
          default: 24
          description: |
            Can be [DateTime](/types#datetime), non-negative integer, or `now`.
            The non-negative integer represents a point in time in the past measured in hours, for example, `24` means 24 hours ago.
            Can only be used together with the `date.to` query parameter, which has to represent a point in time after the value defined by `date.from`.
        date.to?:
          type: number | datetime | DateStringFilter
          default: 'now'
          description: |
            Can be [DateTime](/types#datetime), non-negative integer, or `now`.
            The non-negative integer represents a point in time in the past measured in hours, for example, `24` means 24 hours ago.
            Can only be used together with the `date.from` query parameter, which has to represent a point in time before the value defined by `date.to`.
        limit?:
          type: integer
          description: |
            Number of [results requested](/../api/general-concepts#limit).
        offset?:
          type: integer
          description: |
            Number of [elements skipped](/../api/general-concepts#offset).
        userId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the Merchant Center user who made the change.
            Can be used to query changes made by a Merchant Center user.
        clientId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the [API Client](/projects/api-clients#apiclient) that made the change.
        customerId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the [Customer](/projects/customers#customer) who made the change using a token from the [Password Flow](/authorization#password-flow).
        associateId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the [Associate](ctp:api:type:Associate) that made the change. Only [Changes](ctp:history:type:Change) to [Business Units](ctp:api:type:BusinessUnit), [Orders](ctp:api:type:Order), [Quote Requests](ctp:api:type:QuoteRequest), and [Quotes](ctp:api:type:Quote) can be filtered.
        businessUnit?:
          type: string
          description: |
            `key` of the [Business Unit](ctp:api:type:BusinessUnit) linked to the change. Only [Changes](ctp:history:type:Change) to [Orders](ctp:api:type:Order), [Quote Requests](ctp:api:type:QuoteRequest), and [Quotes](ctp:api:type:Quote) can be filtered.
        type?:
          type: string
          description: |
            Can be `"ResourceCreated"`, `"ResourceUpdated"`, or `"ResourceDeleted"`.
            Can be used to filter for a specific type of change.
        resourceKey?:
          type: string
          description: |
            [Key](/general-concepts#identifier) of the changed resource. Only [Changes](ctp:history:type:Change) to [Business Units](ctp:api:type:BusinessUnit), [Associate Roles](ctp:api:type:AssociateRole), [Products](ctp:api:type:Product), and [Stores](ctp:api:type:Store) can be filtered.
        source?:
          type: string
          description: |
            Name of the source with which changes were made. Can be `"MerchantCenter"`, `"ImpEx"`, or `"ApiClient"`.
        changes?:
          type: string[]
          description: |
            Restrict the types of [Changes](/history/change-types#change) returned by passing the value of the `change` field.
            The values must belong to the resource type specified in the path parameter.
        stores?:
          type: string[]
          description: |
            `key` of the [Store](/api/projects/stores#store) linked to the Change.
        excludePlatformInitiatedChanges?:
          description: |
            Exclude [Changes](/history/change-types#change) initiated by background processes by passing the values of the `change` field.
            Only [Changes](/history/change-types#change) of resource type `product`, `product-discount`, `discount-code`, and `shopping-list` can be filtered.
            Allowed values depend on resource types.
              - To filter Product Changes, `excludeAll`, `changeReviewRatingStatistics`, and `setVariantAvailability` can be passed.
              - To filter Product Discount Changes, `excludeAll` and `setIsValid` can be passed.
              - To filter Discount Code Changes, `excludeAll` and `setApplicationVersion` can be passed.
              - To filter Shopping List Changes, `excludeAll` and `changeLineItemName`can be passed.

            `excludeAll` excludes all applicable changes.
          type: PlatformInitiatedChange[]
        expand?:
          type: boolean
          description: |
            If `true`, [CustomFieldExpandedValue](ctp:history:type:CustomFieldExpandedValue) is made available.
    /{ID}:
      type: base
      uriParameters:
        ID:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the resource for which a query is made.
      get:
        displayName: Query Records by a resource ID
        securedBy:
          - oauth_2_0:
              scopes:
                [
                  'view_associate_roles:{projectKey}',
                  'view_audit_log:{projectKey}',
                  'view_business_units:{projectKey}',
                  'view_cart_discounts:{projectKey}',
                  'view_orders:{projectKey}',
                  'view_orders:{projectKey}:{storeKey}',
                  'view_categories:{projectKey}',
                  'view_products:{projectKey}',
                  'view_customers:{projectKey}',
                  'view_customer_groups:{projectKey}',
                  'view_discount_codes:{projectKey}',
                  'view_key_value_documents:{projectKey}',
                  'view_payments:{projectKey}',
                  'view_product_selections:{projectKey}',
                  'view_quotes:{projectKey}',
                  'view_quote_requests:{projectKey}',
                  'view_shopping_lists:{projectKey}',
                  'view_states:{projectKey}',
                  'view_staged_quotes:{projectKey}',
                  'view_stores:{projectKey}',
                  'view_tax_categories:{projectKey}',
                  'view_types:{projectKey}',
                ]
        queryParameters:
          date.from?:
            type: number | datetime | DateStringFilter
            default: 24
            description: |
              Can be [DateTime](/types#datetime), non-negative integer, or `now`.
              The non-negative integer represents a point in time in the past from now measured in hours, for example, `24` means 24 hours ago.
              Can only be used together with the `date.to` query parameter, which has to represent a point in time after the value defined by `date.from`.
          date.to?:
            type: number | datetime | DateStringFilter
            default: 'now'
            description: |
              Can be [DateTime](/types#datetime), non-negative integer, or `now`.
              The non-negative integer represents a point in time in the past from now measured in hours, for example, `24` means 24 hours ago.
              Can only be used together with the `date.from` query parameter, which has to represent a point in time before the value defined by `date.to`.
          limit?:
            type: integer
            description: |
              Number of [results requested](/../api/general-concepts#limit).
          offset?:
            type: integer
            description: |
              Number of [elements skipped](/../api/general-concepts#offset).
          userId?:
            type: string
            description: |
              [ID](/general-concepts#identifier) of the Merchant Center user who made the change.
              Can be used to query changes made by a Merchant Center user.
          clientId?:
            type: string
            description: |
              [ID](/general-concepts#identifier) of the [API Client](/projects/api-clients#apiclient) that made the change.
          customerId?:
            type: string
            description: |
              [ID](/general-concepts#identifier) of the [Customer](/projects/customers#customer) who made the change using a token from the [Password Flow](/authorization#password-flow).
          associateId?:
            type: string
            description: |
              [ID](/general-concepts#identifier) of the [Associate](ctp:api:type:Associate) that made the change. Only [Changes](ctp:history:type:Change) to [Business Units](ctp:api:type:BusinessUnit), [Orders](ctp:api:type:Order), [Quote Requests](ctp:api:type:QuoteRequest), and [Quotes](ctp:api:type:Quote) can be filtered.
          businessUnit?:
            type: string
            description: |
              `key` of the [Business Unit](ctp:api:type:BusinessUnit) linked to the change. Only [Changes](ctp:history:type:Change) to [Orders](ctp:api:type:Order), [Quote Requests](ctp:api:type:QuoteRequest), and [Quotes](ctp:api:type:Quote) can be filtered.
          type?:
            type: string
            description: |
              Can be `"ResourceCreated"`, `"ResourceUpdated"`, or `"ResourceDeleted"`.
              Can be used to filter for a specific type of change.
          source?:
            type: string
            description: |
              Name of the source with which changes were made. Can be `"MerchantCenter"`, `"ImpEx"`, or `"ApiClient"`.
          changes?:
            type: string[]
            description: |
              Restrict the types of [Changes](/history/change-types#change) returned by passing the value of the `change` field.
              The values must belong to the resource type specified in the path parameter.
          stores?:
            type: string[]
            description: |
              `key` of the [Store](/api/projects/stores#store) linked to the Change.
          excludePlatformInitiatedChanges?:
            description: |
              Exclude [Changes](/history/change-types#change) initiated by background processes by passing the values of the `change` field.
              Only [Changes](/history/change-types#change) of resource type `product`, `product-discount`, `discount-code`, and `shopping-list` can be filtered.
              Allowed values depend on resource types.
                - To filter Product Changes, `excludeAll`, `changeReviewRatingStatistics`, and `setVariantAvailability` can be passed.
                - To filter Product Discount Changes, `excludeAll` and `setIsValid` can be passed.
                - To filter Discount Code Changes, `excludeAll` and `setApplicationVersion` can be passed.
                - To filter Shopping List Changes, `excludeAll` and `changeLineItemName`can be passed.

              `excludeAll` excludes all applicable changes.
            type: PlatformInitiatedChange[]
          expand?:
            type: boolean
            description: |
              If `true`, [CustomFieldExpandedValue](ctp:history:type:CustomFieldExpandedValue) is made available.
