#%RAML 1.0
---
title: Change History API
description: Fetch all Records from all resource types that match queryParameters.
version: 1
baseUri: https://history.europe-west1.gcp.commercetools.com
(docsBaseUri): https://history.{region}.commercetools.com
(docsBaseUriParameters):
  region:
    type: string
    enum:
      - europe-west1.gcp
      - us-central1.gcp
      - australia-southeast1.gcp
    description: |
      Our service regions.
(serviceRegions):
  - uri: https://history.us-central1.gcp.commercetools.com/
    region: us-central1
    provider: gcp
    name: North America (Google Cloud, Iowa)
  #  - uri: https://history.us-east-2.aws.commercetools.com/
  #    region: us-east-2
  #    provider: aws
  #    name: North America (AWS, Ohio)
  - uri: https://history.europe-west1.gcp.commercetools.com
    region: europe-west1
    provider: gcp
    name: Europe (Google Cloud, Belgium)
#  - uri: https://history.eu-central-1.aws.commercetools.com
#    region: eu-central-1
#    provider: aws
#    name: Europe (AWS, Frankfurt)
  - uri: https://history.australia-southeast1.gcp.commercetools.com
    region: australia-southeast1
    provider: gcp
    name: Australia (Google Cloud, Sydney)

securitySchemes:
  oauth_2_0: !include oauth2.raml
securedBy: [oauth_2_0]
mediaType: application/json
annotationTypes:
  asMap:
    type: object
    properties:
      key: string
      value: string
  docsBaseUri:
    allowedTargets:
      - API
    type: string
  docsBaseUriParameters:
    allowedTargets:
      - API
    type: object
  serviceRegions:
    allowedTargets:
      - API
      - SecuritySchemeSettings
    type: array
    items:
      type: object
      properties:
        uri: string
        region: string
        provider: string
        name: string
  package:
    type: string
    allowedTargets: TypeDeclaration
types: !include types/types.raml

resourceTypes:
  base:
    get:
      responses:
        200:
          body:
            application/json:
              type: RecordPagedQueryResponse
              example: !include examples/RecordPagedQueryResponse.json
          description: Records of the resource under query.
        400:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/BadRequest.json
          description:
            Bad Request. A 400 is the most commonly expected error response and
            indicates that a request failed due to providing bad input. Bad
            input can be a malformed request body, missing required parameters,
            wrongly typed or malformed parameters or a parameter that references
            another resource that does not exist. Clients need to resolve the
            problems mentioned in the response before re-sending the request.
        401:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/Unauthorized.json
          description: Unauthorized. Indicate that the request is not properly
            authenticated.
        403:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/Forbidden.json
          description:
            Forbidden. Indicates that the authenticated client is not allowed to
            perform the request.
        500:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/InternalServerError.json
          description:
            Internal Server Error. A 500 indicates that a request failed due to
            a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability
            or permanent server-side problem that needs to be reported and
            resolved.
        503:
          body:
            application/json:
              type: ErrorResponse
              example: !include examples/ServiceUnavailable.json
          description: |
            Service Unavailable. The following general error codes can appear in responses with the HTTP status code `503`
            - `OverCapacity` The service is having trouble handling the load. The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
/{projectKey}:
  type: base
  uriParameters:
    projectKey:
      type: string
      description: |
        `key` of the commercetools Project.
  get:
    displayName: Query Records
    securedBy:
      - oauth_2_0:
          scopes:
            [
              'view_audit_log:{projectKey}',
              'view_cart_discounts:{projectKey}',
              'view_orders:{projectKey}',
              'view_orders:{projectKey}:{storeKey}',
              'view_categories:{projectKey}',
              'view_products:{projectKey}',
              'view_customers:{projectKey}',
              'view_customer_groups:{projectKey}',
              'view_discount_codes:{projectKey}',
              'view_payments:{projectKey}',
              'view_shopping_lists:{projectKey}',
              'view_states:{projectKey}',
              'view_stores:{projectKey}',
              'view_tax_categories:{projectKey}',
              'view_types:{projectKey}',
            ]
    queryParameters:
      resourceType?:
        type: ChangeHistoryResourceType[]
        description: |
          Can be passed multiple times.
          Can be used to filter for Records of specified resource types.
          By default, the API returns the Records of all supported resource types.
        example: ['order', 'product']
      date.from?:
        type: number | datetime | DateStringFilter
        description: |
          Can be [DateTime](/types#datetime), non-negative integer, or `"now"`.
          The non-negative integer represents the point in time in the past from now measured in hours.
          For example, `24` signifies 24 hours ago.
          The time range must be valid.
          Assigning `date.from` a time point later than `date.to` will fail with an error.
          The default value for `date.from` (resp., `date.to`) is `24` (resp., `"now"`).
      date.to?:
        type: number | datetime | DateStringFilter
        description: |
          See `date.from`.
      limit?:
        type: integer
        description: Maximum number of results to return.
        minimum: 0
      offset?:
        type: integer
        description: Number of results to skip.
      userId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the Merchant Center user who made the change.
          Can be used to query changes made by a Merchant Center user.
      type?:
        type: string
        description: |
          Can be `"ResourceCreated"`, `"ResourceUpdated"`, or `"ResourceDeleted"`.
          Can be used to filter for a specific type of change.
        enum:
          - ResourceCreated
          - ResourceUpdated
          - ResourceDeleted
      clientId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the [API Client](/projects/api-clients#apiclient) that made the change.
      resourceId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the changed resource.
      source?:
        type: string
        description: |
          Name of the source with which changes were made. Can be `"MerchantCenter"`, `"ImpEx"`, or `"ApiClient"`.
      changes?:
        type: string[]
        description: |
          Restrict the types of [Changes](/history/change-types#change) returned by passing the value of the `change` field.
          Can be passed multiple times.
          The values must belong to the resource type specified in the path parameter.
      customerId?:
        type: string
        description: |
          [ID](/general-concepts#identifier) of the [Customer](/projects/customers#customer) who made the change using a token from the [Password Flow](/authorization#password-flow).
      expand?:
        type: boolean
        description: |
          If `true`, [CustomFieldExpandedValue](/history/change-types#customfieldexpandedvalue) is made available.
  /{resourceType}:
    type: base
    uriParameters:
      resourceType:
        type: ChangeHistoryResourceType
        description: |
          Resource type for which a query is made.
    get:
      displayName: Query Records for a specific resource type
      securedBy:
        - oauth_2_0:
            scopes:
              [
                'view_audit_log:{projectKey}',
                'view_cart_discounts:{projectKey}',
                'view_orders:{projectKey}',
                'view_orders:{projectKey}:{storeKey}',
                'view_categories:{projectKey}',
                'view_products:{projectKey}',
                'view_customers:{projectKey}',
                'view_customer_groups:{projectKey}',
                'view_discount_codes:{projectKey}',
                'view_payments:{projectKey}',
                'view_shopping_lists:{projectKey}',
                'view_states:{projectKey}',
                'view_stores:{projectKey}',
                'view_tax_categories:{projectKey}',
                'view_types:{projectKey}',
              ]
      queryParameters:
        date.from?:
          type: number | datetime | DateStringFilter
          description: |
            Can be [DateTime](/types#datetime), non-negative integer, or `"now"`.
            The non-negative integer represents the time point in the past in hours.
            For example, `24` signifies 24 hours ago.
            The time range must be valid.
            Assigning `date.from` a time point later than `date.to` will fail with an error.
            The default value for `date.from` (resp., `date.to`) is `24` (resp., `"now"`).
        date.to?:
          type: number | datetime | DateStringFilter
          description: |
            See `date.from`.
        limit?:
          type: integer
          description: Maximum number of results to return.
        offset?:
          type: integer
          description: Number of results to skip.
        userId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the Merchant Center user who made the change.
            Can be used to query changes made by a Merchant Center user.
        type?:
          type: string
          description: |
            Can be `"ResourceCreated"`, `"ResourceUpdated"`, or `"ResourceDeleted"`.
            Can be used to filter for a specific type of change.
        clientId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the [API Client](/projects/api-clients#apiclient) that made the change.
        resourceId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the changed resource.
        source?:
          type: string
          description: |
            Name of the source with which changes were made. Can be `"MerchantCenter"`, `"ImpEx"`, or `"ApiClient"`.
        changes?:
          type: string[]
          description: |
            Restrict the types of [Changes](/history/change-types#change) returned by passing the value of the `change` field.
            Can be passed multiple times.
            The values must belong to the resource type specified in the path parameter.
        customerId?:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the [Customer](/projects/customers#customer) who made the change using a token from the [Password Flow](/authorization#password-flow).
        expand?:
          type: boolean
          description: |
            If `true`, [CustomFieldExpandedValue](/history/change-types#customfieldexpandedvalue) is made available.
    /{ID}:
      type: base
      uriParameters:
        ID:
          type: string
          description: |
            [ID](/general-concepts#identifier) of the commercetools resource for which a query is made.
      get:
        displayName: Query Records by a resource ID
        securedBy:
          - oauth_2_0:
              scopes:
                [
                  'view_audit_log:{projectKey}',
                  'view_cart_discounts:{projectKey}',
                  'view_orders:{projectKey}',
                  'view_orders:{projectKey}:{storeKey}',
                  'view_categories:{projectKey}',
                  'view_products:{projectKey}',
                  'view_customers:{projectKey}',
                  'view_customer_groups:{projectKey}',
                  'view_discount_codes:{projectKey}',
                  'view_payments:{projectKey}',
                  'view_shopping_lists:{projectKey}',
                  'view_states:{projectKey}',
                  'view_stores:{projectKey}',
                  'view_tax_categories:{projectKey}',
                  'view_types:{projectKey}',
                ]
        queryParameters:
          date.from?:
            type: number | datetime | DateStringFilter
            description: |
              Can be [DateTime](/types#datetime), non-negative integer, or `"now"`.
              The non-negative integer represents the time point in the past in hours.
              For example, `24` signifies 24 hours ago.
              The time range must be valid.
              Assigning `date.from` a time point later than `date.to` will fail with an error.
              The default value for `date.from` (resp., `date.to`) is `24` (resp., `"now"`).
          date.to?:
            type: number | datetime | DateStringFilter
            description: |
              See `date.from`.
          limit?:
            type: integer
            description: The maximum number of results to return.
          offset?:
            type: integer
            description: The number of results to skip.
          userId?:
            type: string
            description: |
              [ID](/general-concepts#identifier) of the Merchant Center user who made the change.
              Can be used to query changes made by a Merchant Center user.
          type?:
            type: string
            description: |
              Can be `"ResourceCreated"`, `"ResourceUpdated"`, or `"ResourceDeleted"`.
              Can be used to filter for a specific type of change.
          clientId?:
            type: string
            description: |
              [ID](/general-concepts#identifier) of the [API Client](/projects/api-clients#apiclient) that made the change.
          source?:
            type: string
            description: |
              Name of the source with which changes were made. Can be `"MerchantCenter"`, `"ImpEx"`, or `"ApiClient"`.
          changes?:
            type: string[]
            description: |
              Restrict the types of [Changes](/history/change-types#change) returned by passing the value of the `change` field.
              Can be passed multiple times.
              The values must belong to the resource type specified in the path parameter.
          customerId?:
            type: string
            description: |
              [ID](/general-concepts#identifier) of the [Customer](/projects/customers#customer) who made the change using a token from the [Password Flow](/authorization#password-flow).
          expand?:
            type: boolean
            description: |
              If `true`, [CustomFieldExpandedValue](/history/change-types#customfieldexpandedvalue) is made available.
