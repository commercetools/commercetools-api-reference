#%RAML 1.0
---
title: Checkout API
uses:
  annotations: types/annotations.raml

(annotations.products):
  - Checkout
version: v1
mediaType: application/json
baseUri: https://checkout.{region}.commercetools.com
(annotations.sdkBaseUri): https://checkout.europe-west1.gcp.commercetools.com
baseUriParameters:
  region:
    type: string
    enum:
      - europe-west1.gcp
      - us-central1.gcp
      - australia-southeast1.gcp
    description: |
      [Region](ctp:checkout:type:Region) in which the Checkout application is [hosted](/hosts-and-authorization).
(annotations.serviceRegions):
  - uri: https://checkout.us-central1.gcp.commercetools.com/
    region: us-central1
    provider: gcp
    name: North America (Google Cloud, Iowa)
  - uri: https://checkout.europe-west1.gcp.commercetools.com
    region: europe-west1
    provider: gcp
    name: Europe (Google Cloud, Belgium)
  - uri: https://checkout.australia-southeast1.gcp.commercetools.com
    region: australia-southeast1
    provider: gcp
    name: Australia (Google Cloud, Sydney)

types: !include types/types.raml

securitySchemes:
  oauth_2_0: !include security-schemes/oauth2.raml
securedBy: [oauth_2_0]

traits:
  secured_by_manage_payments:
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_checkout_payment_intents:{projectKey}',
                'manage_projects:{projectKey}',
              ],
          },
      ]
  secured_by_manage_transactions:
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_checkout_transactions:{projectKey}',
                'manage_projects:{projectKey}',
              ],
          },
      ]
  secured_by_view_transactions:
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_checkout_transactions:{projectKey}',
                'manage_projects:{projectKey}',
              ],
          },
      ]

/{projectKey}:
  (annotations.methodName): withProjectKey
  uriParameters:
    projectKey:
      type: string
      description: Identifier of your Checkout entity and `key` of your [Project](/../api/projects/project#project).
  displayName: Project
  /payment-intents:
    displayName: Payment Intents
    /{paymentId}:
      (annotations.methodName): withPaymentId
      uriParameters:
        paymentId:
          type: string
          description: |
            `id` of the [Payment](/../api/projects/payments).
      post:
        displayName: Manage Payment by ID
        is:
          - secured_by_manage_payments
        body:
          type: PaymentIntent
          example: !include ./examples/payments/capturePayment.json
        description: |
          Specific Error Codes:
          - [MultipleActionsNotAllowed](ctp:checkout:type:MultipleActionsNotAllowedError)
          - [RequiredField](ctp:checkout:type:RequiredFieldError)
          - [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)
        responses:
          200:
            body:
              example: !include ../checkout/examples/payments/capturePaymentResponse.json
          400:
            description: The request was invalid.
            body:
              type: ErrorResponse
  /transactions:
    displayName: Transactions
    post:
      displayName: Create Transaction
      is:
        - secured_by_manage_transactions
      body:
        type: TransactionDraft
        example: !include ./examples/transactions/transactionDraft.json
      description: |
        Creates a Transaction on Checkout. Specific Error Codes:
        - [InvalidInput](ctp:checkout:type:InvalidInputError)
        - [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)
        - [ConnectorFailed](ctp:checkout:type:ConnectorFailedError)
        - [PaymentFailure](ctp:checkout:type:PaymentFailureError)
        - [RequiredField](ctp:checkout:type:RequiredFieldError)
      responses:
        201:
          body:
            type: Transaction
            example: !include ../checkout/examples/transactions/transaction.json
        400:
          description: The request was invalid.
          body:
            type: ErrorResponse
    /{id}:
      (annotations.methodName): withId
      uriParameters:
        id:
          type: string
          description: |
            `id` of the [Transaction](/transactions-api#transaction).
      get:
        displayName: Get Transaction by ID
        is:
          - secured_by_view_transactions
        description: |
          Returns a Transaction with a given `id`. Specific Error Codes:
          - [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)
          - [GeneralError](ctp:checkout:type:GeneralError)
        responses:
          200:
            body:
              type: Transaction
              example: !include ../checkout/examples/transactions/transaction.json
          400:
            description: The request was invalid.
            body:
              type: ErrorResponse
    /key={key}:
      (annotations.methodName): withKey
      uriParameters:
        key:
          type: string
          description: |
            `key` of the [Transaction](/transactions-api#transaction).
      get:
        displayName: Get Transaction by key
        is:
          - secured_by_view_transactions
        description: |
          Returns a Transaction with a given `key`. Specific Error Codes:
          - [ResourceNotFound](ctp:checkout:type:ResourceNotFoundError)
          - [GeneralError](ctp:checkout:type:GeneralError)
        responses:
          200:
            body:
              type: Transaction
              example: !include ../checkout/examples/transactions/transaction.json
          400:
            description: The request was invalid.
            body:
              type: ErrorResponse
