#%RAML 1.0 Library
usage: Product draft import types.
(annotations.package): productdrafts

uses:
  common: common.raml
  annotations: ../annotationTypes/annotations.raml
  product-import: product-import.raml
  product-variant-import: product-variant-import.raml
  custom-field: custom-field.raml

types:
  ProductDraftImport:
    type: common.ImportResource
    description: |
      The representation of a Product Draft for the import purpose.
    example: !include ../examples/product-draft-import.json
    properties:
      key:
        type: string
        description: User-defined unique identifier. If a [Product](ctp:api:type:Product) with this `key` exists, it is updated with the imported data.
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
      productType:
        description: |
          Maps to `Product.productType`. If the referenced [ProductType](ctp:api:type:ProductType) does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced ProductType is created.
        type: common.ProductTypeKeyReference
      name:
        type: common.LocalizedString
        description: Maps to `ProductData.name`.
      slug:
        type: common.LocalizedString
        description: Maps to `ProductData.slug`.
      description?:
        type: common.LocalizedString
        description: |
          Maps to `ProductData.description`.
      categories?:
        description: |
          Maps to `ProductData.categories`. If the referenced [Categories](ctp:api:type:Category) do not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced Categories are created.
        type: common.CategoryKeyReference[]
      attributes?:
        type: product-variant-import.Attribute[]
      metaTitle?:
        type: common.LocalizedString
        description: |
          Maps to `ProductData.metaTitle`.
      metaDescription?:
        type: common.LocalizedString
        description: |
          Maps to `ProductData.metaDescription`.
      metaKeywords?:
        type: common.LocalizedString
        description: |
          Maps to `ProductData.metaKeywords`.
      masterVariant?:
        type: ProductVariantDraftImport
        description: |
          The master ProductVariant.
          Required if `variants` contains at least one ProductVariant.
      variants?:
        type: ProductVariantDraftImport[]
        description: An array of related ProductVariants.
      taxCategory?:
        description: |
          Maps to `Product.taxCategory`. If the referenced [TaxCategory](ctp:api:type:TaxCategory) does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced TaxCategory is created.
        type: common.TaxCategoryKeyReference
      searchKeywords?:
        type: product-import.SearchKeywords
        description: |
          Maps to `ProductData.searchKeywords`.
      state?:
        description: |
          Maps to `Product.state`. If the referenced [State](ctp:api:type:State) does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced State is created.
        type: common.StateKeyReference
      publish?:
        type: boolean
        default: false
        description: |
          Determines the published status and current/staged projection of the Product. For more information, see [Managing the published state of Products](/import-export/best-practices#manage-published-state-of-products).
      priceMode?:
        type: common.ProductPriceModeEnum
        description: |
          Maps to `Product.priceMode`. If not provided, the existing `Product.priceMode` is not changed.
  ProductVariantDraftImport:
    type: object
    description: |
      The representation of a Product Variant Draft for the import purpose.
    properties:
      sku?:
        type: string
        description: |
          User-defined unique SKU of the Product Variant.
      key:
        type: string
        description: |
          User-defined unique identifier for the ProductVariant.
      prices?:
        type: PriceDraftImport[]
        description: |
          The Embedded Prices for the Product Variant.
          Each Price must have its unique Price scope (with same currency, country, Customer Group, Channel, `validFrom` and `validUntil`).
      attributes?:
        type: product-variant-import.Attribute[]
        description: |
          Attributes according to the respective AttributeDefinition.
      images?:
        type: common.Image[]
        description: |
          Images for the Product Variant.
      assets?:
        type: common.Asset[]
        description: |
          Media assets for the Product Variant.
  PriceDraftImport:
    type: object
    description: |
      The representation of a Price Draft for the import purpose.
    properties:
      value:
        type: common.TypedMoney
        description: Money value of this Price.
      country?:
        type: common.CountryCode
        description: Set this field if this Price is only valid for the specified country.
      customerGroup?:
        type: common.CustomerGroupKeyReference
        description: Set this field if this Price is only valid for the referenced [CustomerGroup](ctp:api:type:CustomerGroup). If the referenced CustomerGroup does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced CustomerGroup is created.
      channel?:
        type: common.ChannelKeyReference
        description: Set this field if this Price is only valid for the referenced `ProductDistribution` [Channel](ctp:api:type:Channel). If the referenced Channel does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced Channel is created.
      validFrom?:
        type: datetime
        description: Set this field if this Price is only valid from the specified date and time. Must be at least 1 ms earlier than `validUntil`.
      validUntil?:
        type: datetime
        description: Set this field if this Price is only valid until the specified date and time. Must be at least 1 ms later than `validFrom`.
      custom?:
        description: Custom Fields for the Embedded Price.
        type: custom-field.Custom
      discounted?:
        description: Set this field to add a DiscountedPrice from an **external service**.
        type: common.DiscountedPrice
      tiers?:
        description: The tiered prices for this price.
        type: common.PriceTier[]
      key:
        description: |
          User-defined unique identifier for the Embedded Price.
        type: string
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
