#%RAML 1.0 Library
usage: Price import types.
(annotations.package): prices

uses:
  common: common.raml
  annotations: ../annotationTypes/annotations.raml
  custom-field: custom-field.raml

types:
  SubRate:
    properties:
      name:
        type: string
        description: |
          Name of the SubRate.
      amount:
        type: number
        minimum: 0
        maximum: 1
  TaxRate:
    properties:
      id?:
        type: string
      name:
        type: string
      amount:
        type: number
        minimum: 0
        maximum: 1
      includedInPrice:
        type: boolean
      country:
        type: common.CountryCode
      state?:
        type: string
      subRates?:
        type: SubRate[]
  PriceImport:
    description: |
      Represents the data used to import an [Embedded Price](/../api/pricing-and-discounts-overview#embedded-prices) . Once imported, this data is persisted as a [Price](/../api/types#price) in a Product Variant.
    type: common.ImportResource
    example: !include ../examples/price-import.json
    properties:
      key:
        description: |
          User-defined unique identifier for the Embedded Price. If a [Price](/../api/types#price) with this `key` exists on the specified `productVariant`, it is updated with the imported data.
        type: string
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
      value:
        description: |
          Maps to `Price.value`.
        type: common.TypedMoney
      country?:
        description: |
          Maps to `Price.county`.
        type: common.CountryCode
      validFrom?:
        description: |
          Maps to `Price.validFrom`.
        type: datetime
      validUntil?:
        description: |
          Maps to `Price.validUntil`.
        type: datetime
      customerGroup?:
        description: |
          Maps to `Price.customerGroup`. If the referenced [CustomerGroup](ctp:api:type:CustomerGroup) does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced CustomerGroup is created.
        type: common.CustomerGroupKeyReference
      channel?:
        description: |
          Maps to `Price.channel`. If the referenced [Channel](ctp:api:type:Channel) does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced Channel is created.
        type: common.ChannelKeyReference
      discounted?:
        description: Sets a discounted price from an external service.
        type: common.DiscountedPrice
      publish?:
        type: boolean
        (annotations.deprecated): true
        default: false
        description: |
          Only the [Embedded Price](/types#price) updates will be published to `staged` and `current` projection.
      staged?:
        type: boolean
        default: true
        description: |
          - Set to `false` to update both the [current and staged projections](/../api/projects/productProjections#current--staged) of the [Product](ctp:api:type:Product) with the new Price data.
          - Leave empty or set to `true` to only update the staged projection.
      tiers?:
        description: The tiered prices for this price.
        type: common.PriceTier[]
      custom?:
        description: Maps to `Price.custom`.
        type: custom-field.Custom
      productVariant:
        description: |
          The [ProductVariant](ctp:api:type:ProductVariant) which contains this Embedded Price. If the referenced ProductVariant does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced ProductVariant is created.
        type: common.ProductVariantKeyReference
      product:
        description: |
          The [Product](ctp:api:type:Product) which contains the `productVariant`. If the referenced Product does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced Product is created.
        type: common.ProductKeyReference
