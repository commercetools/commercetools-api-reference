#%RAML 1.0 Library
usage: Type import.
(annotations.package): Types

uses:
  common: common.raml
  annotations: ../annotationTypes/annotations.raml

types:
  TypeTextInputHint:
    type: string
    description: |
      Provides a visual representation type for this field. It is only relevant for string-based field types like [CustomFieldStringType](ctp:api:type:CustomFieldStringType) and [CustomFieldLocalizedStringType](ctp:api:type:CustomFieldLocalizedStringType).
    default: SingleLine
    enum:
      - SingleLine
      - MultiLine
    (annotations.enumDescriptions):
      SingleLine: Hint for GUIs to display the field's content in a single line of text.
      MultiLine: Hint for GUIs to display the field's content over multiple lines of text.

  ResourceTypeId:
    type: string
    description: |
      IDs indicating the [type of resource](ctp:api:type:ResourceTypeId). Maps to `Type.resourceTypeIds`.
    enum:
      - address
      - asset
      - business-unit
      - cart-discount
      - category
      - channel
      - customer
      - customer-group
      - custom-line-item
      - discount-code
      - inventory-entry
      - line-item
      - order
      - order-edit
      - order-delivery
      - order-parcel
      - order-return-item
      - payment
      - payment-interface-interaction
      - product-price
      - product-selection
      - quote
      - review
      - shipping
      - shipping-method
      - shopping-list
      - shopping-list-text-line-item
      - standalone-price
      - store
      - transaction
    (annotations.enumDescriptions):
      address: |
        [Address](ctp:api:type:Address) on [BusinessUnit](ctp:api:type:BusinessUnit), [Cart](ctp:api:type:Cart), [Order](ctp:api:type:Order), [OrderEdit](ctp:api:type:OrderEdit), [Customer](ctp:api:type:Customer), and [Channel](ctp:api:type:Channel)
      asset: |
        [Asset](ctp:api:type:Asset) on [Category](ctp:api:type:Category) and [ProductVariant](ctp:api:type:ProductVariant)
      business-unit: |
        [BusinessUnit](ctp:api:type:BusinessUnit)
      cart-discount: |
        [CartDiscount](ctp:api:type:CartDiscount)
      category: |
        [Category](ctp:api:type:Category)
      channel: |
        [Channel](ctp:api:type:Channel)
      custom-line-item: |
        [CustomLineItem](ctp:api:type:CustomLineItem) on [Cart](ctp:api:type:Cart) and [Order](ctp:api:type:Order)
      customer: |
        [Customer](ctp:api:type:Customer)
      customer-group: |
        [CustomerGroup](ctp:api:type:CustomerGroup)
      discount-code: |
        [DiscountCode](ctp:api:type:DiscountCode)
      inventory-entry: |
        [InventoryEntry](ctp:api:type:InventoryEntry)
      line-item: |
        [LineItem](ctp:api:type:LineItem) on [Cart](ctp:api:type:Cart) and [Order](ctp:api:type:Order), and on [ShoppingListLineItem](ctp:api:type:ShoppingListLineItem).
      order: |
        [Cart](ctp:api:type:Cart) and [Order](ctp:api:type:Order).
        When a [Cart](ctp:api:type:Cart) is ordered, the [CustomFields](ctp:api:type:CustomFields) need to be copied to the [Order](ctp:api:type:Order).
        For this reason, the Types for Carts are also valid for Orders, and hence both have the same identifier: `order`.
      order-edit: |
        [OrderEdit](ctp:api:type:OrderEdit)
      order-delivery: |
        [Delivery](ctp:api:type:Delivery)
      order-parcel: |
        [Parcel](ctp:api:type:Parcel)
      order-return-item: |
        [ReturnItem](ctp:api:type:ReturnItem)
      payment: |
        [Payment](ctp:api:type:Payment)
      payment-interface-interaction: |
        [InterfaceInteraction](ctp:api:type:PaymentAddInterfaceInteractionAction) on [Payment](ctp:api:type:Payment)
      product-price: |
        [Embedded Price](/../api/types#price) on [ProductVariant](ctp:api:type:ProductVariant)
      product-selection: |
        [ProductSelection](ctp:api:type:ProductSelection)
      quote: |
        [Quote](ctp:api:type:Quote), [QuoteRequest](ctp:api:type:QuoteRequest) and [StagedQuote](ctp:api:type:StagedQuote).
        When a [StagedQuote](ctp:api:type:StagedQuote) is created, the [CustomFields](ctp:api:type:CustomFields) will be copied from the [QuoteRequest](ctp:api:type:QuoteRequest) and when a [Quote](ctp:api:type:Quote) is created, the [CustomFields](ctp:api:type:CustomFields) will be copied from the [StagedQuote](ctp:api:type:StagedQuote).
        For this reason, the Types for Quotes are also valid for QuoteRequests and StagedQuotes, and hence all have the same identifier: `quote`.
      review: |
        [Review](ctp:api:type:Review)
      shipping: |
        [Shipping](ctp:api:type:Shipping)
      shipping-method: |
        [ShippingMethod](ctp:api:type:ShippingMethod)
      shopping-list: |
        [ShoppingList](ctp:api:type:ShoppingList)
      shopping-list-text-line-item: |
        [TextLineItem](ctp:api:type:TextLineItem) on [ShoppingList](ctp:api:type:ShoppingList)
      standalone-price: |
        [StandalonePrice](ctp:api:type:StandalonePrice)
      store: |
        [Store](ctp:api:type:Store)
      transaction: |
        [Transaction](ctp:api:type:Transaction) on [Payment](ctp:api:type:Payment)

  FieldType:
    description: |
      Defines the data type of a Custom Field. Maps to `Type.FieldDefinition.type`.
      The `discriminator` is used to determine the type of the field.
    type: object
    discriminator: name
    properties:
      name:
        type: string
        description: |
          Name of the field type. Must be unique for a given [ResourceTypeId](ctp:import:type:ResourceTypeId). In case there is a FieldDefinition with the same `name` in another Type, both FieldDefinitions must have the same `type`. This value cannot be changed after the Type is imported.

  CustomFieldBooleanType:
    type: FieldType
    description: Field type for Boolean values.
    discriminatorValue: Boolean
  CustomFieldDateTimeType:
    type: FieldType
    description: Field type for [DateTime](ctp:api:type:DateTime) values.
    discriminatorValue: DateTime
  CustomFieldDateType:
    type: FieldType
    description: Field type for [Date](ctp:api:type:Date) values.
    discriminatorValue: Date
  CustomFieldEnumType:
    type: FieldType
    description: Field type for enum values.
    discriminatorValue: Enum
    properties:
      values:
        type: CustomFieldEnumValue[]
        description: Allowed values.
  CustomFieldEnumValue:
    type: object
    description: Defines an allowed value of a [CustomFieldEnumType](ctp:import:type:CustomFieldEnumType) field.
    properties:
      key:
        type: string
        description: Key of the value used as a programmatic identifier.
      label:
        type: string
        description: Descriptive label of the value.
  CustomFieldLocalizedEnumType:
    type: FieldType
    description: Field type for localized enum values.
    discriminatorValue: LocalizedEnum
    properties:
      values:
        type: CustomFieldLocalizedEnumValue[]
        description: Allowed values.
  CustomFieldLocalizedEnumValue:
    type: object
    description: Defines an allowed value of a [CustomFieldLocalizedEnumType](ctp:import:type:CustomFieldLocalizedEnumType) field.
    properties:
      key:
        type: string
        description: Key of the value used as a programmatic identifier.
      label:
        type: common.LocalizedString
        description: Descriptive localized label of the value.
  CustomFieldLocalizedStringType:
    type: FieldType
    description: Field type for [LocalizedString](ctp:api:type:LocalizedString) values.
    discriminatorValue: LocalizedString
  CustomFieldMoneyType:
    type: FieldType
    description: Field type for [CentPrecisionMoney](ctp:api:type:CentPrecisionMoney) values.
    discriminatorValue: Money
  CustomFieldNumberType:
    type: FieldType
    description: Field type for number values.
    discriminatorValue: Number
  CustomFieldReferenceType:
    type: FieldType
    description: Field type for [Reference](ctp:api:type:Reference) values.
    discriminatorValue: Reference
    properties:
      referenceTypeId:
        type: CustomFieldReferenceValue
        description: Resource type the Custom Field can reference.
  CustomFieldReferenceValue:
    type: string
    description: Defines which resource type a [CustomFieldReferenceType](ctp:import:type:CustomFieldReferenceType) can reference.
    enum:
      - associate-role
      - business-unit
      - cart
      - category
      - channel
      - customer
      - customer-group
      - key-value-document
      - order
      - product
      - product-type
      - review
      - state
      - shipping-method
      - zone
    (annotations.enumDescriptions):
      associate-role: |
        [AssociateRole](ctp:api:type:AssociateRole)
      business-unit: |
        [BusinessUnit](ctp:api:type:BusinessUnit)
      cart: |
        [Cart](ctp:api:type:Cart)
      category: |
        [Category](ctp:api:type:Category)
      channel: |
        [Channel](ctp:api:type:Channel)
      customer: |
        [Customer](ctp:api:type:Customer)
      customer-group: |
        [CustomerGroup](ctp:api:type:CustomerGroup)
      key-value-document: |
        [CustomObject](ctp:api:type:CustomObject)
      order: |
        [Order](ctp:api:type:Order)
      product: |
        [Product](ctp:api:type:Product)
      product-type: |
        [ProductType](ctp:api:type:ProductType)
      review: |
        [Review](ctp:api:type:Review)
      state: |
        [State](ctp:api:type:State)
      shipping-method: |
        [ShippingMethod](ctp:api:type:ShippingMethod)
      zone: |
        [Zone](ctp:api:type:Zone)
  CustomFieldSetType:
    type: FieldType
    description: Values of a SetType Custom Field are sets of values of the specified `elementType` (without duplicate elements).
    discriminatorValue: Set
    properties:
      elementType:
        type: FieldType
        description: Field type of the elements in the set.
  CustomFieldStringType:
    type: FieldType
    description: Field type for string values.
    discriminatorValue: String
  CustomFieldTimeType:
    type: FieldType
    description: Field type for [Time](ctp:api:type:Time) values.
    discriminatorValue: Time

  FieldDefinition:
    description: |
      Defines a [Custom Field](/projects/custom-fields) and its meta-information. Maps to `Type.FieldDefinition`.
    properties:
      type:
        type: FieldType
        description: Data type of the Custom Field to define.
      name:
        type: string
        description: |
          Name of the Custom Field to define. Must be unique for a given [ResourceTypeId](ctp:import:type:ResourceTypeId). In case there is a FieldDefinition with the same `name` in another Type, both FieldDefinitions must have the same `type`. This value cannot be changed after the Type is imported.
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 36
      label:
        type: common.LocalizedString
        description: A human-readable label for the field.
      required:
        type: boolean
        description: Defines whether the field is required to have a value. This value cannot be changed after the Type is imported.
      inputHint?:
        type: TypeTextInputHint

  TypeImport:
    description: |
      Represents the data used to import a Type. Once imported, this data is persisted as a [Type](ctp:api:type:Type) in the Project.
    type: common.ImportResource
    example: !include ../examples/type-import.json
    properties:
      key:
        description: |
          User-defined unique identifier for the Type. If a [Type](ctp:api:type:Type) with this `key` exists, it is updated with the imported data.
        type: string
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
      name:
        description: |
          Maps to `Type.name`.
        type: common.LocalizedString
      description?:
        description: |
          Maps to `Type.description`.
        type: common.LocalizedString
      resourceTypeIds:
        description: |
          Maps to `Type.resourceTypeIds`. This value cannot be changed after the Type is imported.
        type: ResourceTypeId[]
        minItems: 1
      fieldDefinitions?:
        description: |
          Maps to `Type.fieldDefinitions`.
        type: FieldDefinition[]
