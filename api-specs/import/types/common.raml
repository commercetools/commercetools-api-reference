#%RAML 1.0 Library
usage: Common data types.
(annotations.package): common

uses:
  annotations: ../annotationTypes/annotations.raml
  custom-field: custom-field.raml

types:
  Asset:
    properties:
      key:
        description: |
          User-defined identifier for the asset.
          Asset keys are unique inside their container (a product variant or a category).
        type: string
      sources:
        type: AssetSource[]
        minItems: 1
      name:
        type: LocalizedString
        description: Name of the Asset.
      description?:
        type: LocalizedString
        description: Description of the Asset.
      tags?:
        type: string[]
        description: Keywords for categorizing and organizing Assets.
      custom?:
        type: custom-field.Custom
        description: Custom Fields defined for the Asset.
  AssetDimensions:
    description: The width and height of the Asset Source.
    properties:
      w:
        description: The width of the asset source.
        type: number
        format: int32
      h:
        description: The height of the asset source.
        type: number
        format: int32
  AssetSource:
    description:
      An AssetSource is a representation of an Asset in a specific format, for
      example, a video in a certain encoding or an image in a certain
      resolution.
    properties:
      uri:
        type: string
      key?:
        type: string
      dimensions?:
        type: AssetDimensions
        description: The width and height of the Asset Source.
      contentType?:
        type: string
  CountryCode:
    type: string
    description: |
      A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
    pattern: ^[A-Z]{2}$
  CurrencyCode:
    type: string
    description: |
      The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
    pattern: ^[A-Z]{3}$
  Image:
    description:
      An Image uploaded to commercetools Composable Commerce is stored in a Content
      Delivery Network and it's available in several pre-defined sizes. If you
      already have an image stored on an external service, you can save the URL
      when creating a new product or adding a variant, or you can add it later.
    properties:
      url:
        description:
          URL of the image in its original size. The URL must be unique within a
          single variant. It can be used to obtain the image in different sizes.
        type: string
      dimensions:
        description: Dimensions of the original image. This can be used by your
          application, for example, to determine whether the image is large
          enough to display a zoom view.
        type: AssetDimensions
      label?:
        description: Custom label that can be used, for example, as an image description.
        type: string
  EnumValue:
    properties:
      key:
        type: string
      label:
        type: string
  LocalizedEnumValue:
    properties:
      key:
        type: string
      label:
        type: LocalizedString
  LocalizedString:
    type: object
    (annotations.asMap):
      keyTypeHint: string
    properties:
      /^[a-zA-Z]{2,3}(?:-[a-zA-Z]{4})?(?:-(?:[a-zA-Z]{2}|\d{3}))?$/:
        type: string
    description: |
      A localized string is a JSON object where the keys are of [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag), and the values the corresponding strings used for that language.
      ```json
      {
        "de": "Hundefutter",
        "en": "dog food"
      }
      ```
  ImportResource:
    description: |
      A representation of the resource to import.
      Import resources are similar to draft types, but they only support key references.
      In general, import resources are more granular then regular resources.
      They are optimized for incremental updates and therefore have a slightly different structure.
    properties:
      key:
        type: string
        description: |
          User-defined unique identifier.
  KeyReference:
    description: References a resource by key.
    discriminator: typeId
    properties:
      key:
        type: string
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
        description: |
          User-defined unique identifier of the referenced resource.
          If the referenced resource does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced resource is created.
      typeId: ReferenceType
  CartKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Cart
    type: KeyReference
    discriminatorValue: cart
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Cart.
  CartDiscountKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a CartDiscount.
    type: KeyReference
    discriminatorValue: cart-discount
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced CartDiscount.
  CategoryKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Category.
    type: KeyReference
    discriminatorValue: category
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Category.
  ChannelKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Channel.
    type: KeyReference
    discriminatorValue: channel
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Channel.
  CustomerKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Customer.
    type: KeyReference
    discriminatorValue: customer
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Customer.
  CustomerGroupKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a CustomerGroup.
    type: KeyReference
    discriminatorValue: customer-group
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced CustomerGroup.
  CustomObjectKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a CustomObject.
    type: KeyReference
    discriminatorValue: key-value-document
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced CustomObject.
      container:
        type: string
        description: The `container` of the referenced CustomObject.
  DiscountCodeKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a DiscountCode.
    type: KeyReference
    discriminatorValue: discount-code
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced DiscountCode.
  OrderKeyReference:
    description: References an order by key.
    type: KeyReference
    discriminatorValue: order
  PaymentKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Payment.
    type: KeyReference
    discriminatorValue: payment
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Payment.
  PriceKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify an Embedded Price.
    type: KeyReference
    discriminatorValue: price
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Embedded Price.
  ProductKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Product.
    type: KeyReference
    discriminatorValue: product
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Product.
  ProductDiscountKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a ProductDiscount.
    type: KeyReference
    discriminatorValue: product-discount
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced ProductDiscount.
  ProductTypeKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a ProductType.
    type: KeyReference
    discriminatorValue: product-type
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced ProductType.
  ProductVariantKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a ProductVariant.
    type: KeyReference
    discriminatorValue: product-variant
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced ProductVariant.
  ShippingMethodKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a ShippingMethod.
    type: KeyReference
    discriminatorValue: shipping-method
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced ShippingMethod.
  StateKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a State.
    type: KeyReference
    discriminatorValue: state
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced State.
  StoreKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Store.
    type: KeyReference
    discriminatorValue: store
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Store.
  TaxCategoryKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a TaxCategory.
    type: KeyReference
    discriminatorValue: tax-category
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced TaxCategory.
  TypeKeyReference:
    description: Used by the [Import API](/import-export/overview) to identify a Type.
    type: KeyReference
    discriminatorValue: type
    properties:
      key:
        type: string
        description: User-defined unique identifier of the referenced Type.
  UnresolvedReferences:
    description: Contains a reference to a resource which does not exist. For example, if a Category is imported with a parent Category that does not exist, the reference to the parent Category is an unresolved reference.
    example: !include ../examples/unresolved-references.json
    properties:
      key:
        type: string
        description: |
          `key` of the unresolved resource.
      typeId:
        type: ReferenceType
        description: Type of the unresolved resource.
  MoneyType:
    description: |
      The type of money.
      The `centPrecision` type is used for currencies with minor units, such as EUR and USD.
      The `highPrecision` type is used for currencies without minor units, such as JPY.
    type: string
    enum:
      - centPrecision
      - highPrecision
  TypedMoney:
    discriminator: type
    properties:
      type:
        description: The type of money.
          The `centPrecision` type is used for currencies with minor units, such as EUR and USD.
          The `highPrecision` type is used for currencies without minor units, such as JPY.
        type: MoneyType
      fractionDigits?:
        description: |
          The number of fraction digits of the money value.
          This is used to determine how many digits are after the decimal point.
          For example, for EUR and USD, this is `2`, and for JPY, this is `0`.
        type: number
        format: int32
        maximum: 12
      centAmount:
        type: number
        format: int64
        description: |
          Amount in the smallest indivisible unit of a currency, such as:

          * Cents for EUR and USD, pence for GBP, or centime for CHF (5 CHF is specified as `500`).
          * The value in the major unit for currencies without minor units, like JPY (5 JPY is specified as `5`).
      currencyCode:
        type: CurrencyCode
  HighPrecisionMoney:
    type: TypedMoney
    discriminatorValue: highPrecision
    properties:
      preciseAmount:
        type: number
        format: int64
  Money:
    type: TypedMoney
    discriminatorValue: centPrecision
  DiscountedPrice:
    properties:
      value:
        type: TypedMoney
        description: Money value of the discounted price.
      discount:
        description: Reference to a ProductDiscount. If the referenced [ProductDiscount](ctp:api:type:ProductDiscount) does not exist, the `state` of the [ImportOperation](ctp:import:type:ImportOperation) will be set to `unresolved` until the referenced ProductDiscount is created.
        type: ProductDiscountKeyReference
  PriceTier:
    description: |
      A price tier is selected instead of the default price when a certain quantity of the ProductVariant is added to a cart and ordered.
    properties:
      minimumQuantity:
        description: |
          The minimum quantity this price tier is valid for.
        type: number
        format: int64
      value:
        description:
          The currency of a price tier is always the same as the currency of the
          base Price.
        type: TypedMoney
  ImportResourceType:
    description: |
      The resource types that can be imported.
    (annotations.enumDescriptions):
      category: The [Category import](ctp:import:type:CategoryImport) resource type.
      customer: The [Customer import](ctp:import:type:CustomerImport) resource type.
      discount-code: The [Discount Code import](ctp:import:type:DiscountCodeImport) resource type.
      inventory: The [Inventory import](ctp:import:type:InventoryImport) resource type.
      order: The [Order import](ctp:import:type:OrderImport) resource type.
      order-patch: The [Order patch import](ctp:import:type:OrderPatchImport) resource type.
      price: The [Embedded Price import](ctp:import:type:PriceImport) resource type.
      product: The [Product import](ctp:import:type:ProductImport) resource type.
      product-draft: The [Product draft import](ctp:import:type:ProductDraftImport) resource type.
      product-selection: The [Product Selection import](ctp:import:type:ProductSelectionImport) resource type.
      product-type: The [Product Type import](ctp:import:type:ProductTypeImport) resource type.
      product-variant: The [Product Variant import](ctp:import:type:ProductVariantImport) resource type.
      product-variant-patch: The [Product Variant patch](ctp:import:type:ProductVariantPatch) resource type.
      standalone-price: The [Standalone Price import](ctp:import:type:StandalonePriceImport) resource type.
      type: The [Type import](ctp:import:type:TypeImport) resource type.
    type: string
    enum:
      - category
      - customer
      - discount-code
      - inventory
      - order
      - order-patch
      - price
      - product
      - product-draft
      - product-selection
      - product-type
      - product-variant
      - product-variant-patch
      - standalone-price
      - type
  ReferenceType:
    description: |
      Type of referenced resource.
    (annotations.enumDescriptions):
      cart: References a cart.
      cart-discount: References a cart discount.
      category: References a category.
      channel: References a channel.
      customer: References a customer.
      customer-group: References a customer group.
      discount-code: References a discount code.
      key-value-document: References a custom object
      order: References an order.
      payment: References a payment
      price: References a price.
      product: References a product.
      product-discount: References a product discount.
      product-type: References a product type.
      product-variant: References a product variant.
      shipping-method: References a shipping method.
      state: References a state.
      store: References a store.
      tax-category: References a tax-category.
      type: References a type.
    type: string
    enum:
      - cart
      - cart-discount
      - category
      - channel
      - customer
      - customer-group
      - discount-code
      - key-value-document
      - order
      - payment
      - price
      - product
      - product-discount
      - product-type
      - product-variant
      - shipping-method
      - state
      - store
      - tax-category
      - type
  ProcessingState:
    description: |
      Every [Import Operation](ctp:import:type:ImportOperation) is assigned one of the following states.
    (annotations.enumDescriptions):
      processing: The initial state assigned if the request payload (JSON structure and fields) meets Import API specifications. The resource import is in progress.
      imported: The resource was successfully imported.
      unresolved: The import request contains [KeyReferences](ctp:api:type:KeyReference) to resources that do not exist in your Composable Commerce Project. Generates the [ImportUnresolved](/projects/events#import-unresolved-event) Event.
      validationFailed: Either the request payload is missing the data as per Import API specifications, or even though the references were resolved, the data does not meet validation constraints. Generates the [ImportValidationFailed](/projects/events#import-validation-failed-event) Event.
      waitForMasterVariant: Products must have at least one Product Variant, also known as the Master Variant. If you import a Product without a Master Variant, the import request will have this status until another import request includes Master Variant data for the Product. Generates the [ImportWaitForMasterVariant](/projects/events#import-wait-for-master-variant-event) Event.
      rejected: The resource could not be imported. References were resolved, but the system could not import the data due to an internal server error and the retry limit was reached. Generates the [ImportOperationRejected](/projects/events#import-operation-rejected-event) Event.
      canceled: The import request was canceled and the resource was not imported.
    type: string
    enum:
      - processing
      - validationFailed
      - unresolved
      - waitForMasterVariant
      - imported
      - rejected
      - canceled
  Address:
    properties:
      id?:
        type: string
        description: |
          Unique identifier of the Address.

          It is not recommended to set it manually since the API overwrites this ID when creating an Address for a [Customer](ctp:api:type:Customer).
          Use `key` instead and omit this field from the request to let the API generate the ID for the Address.
      key?:
        type: string
        description: |
          User-defined identifier of the Address that must be unique when multiple addresses are referenced in [BusinessUnits](ctp:api:type:BusinessUnit), [Customers](ctp:api:type:Customer), and `itemShippingAddresses` (LineItem-specific addresses) of a [Cart](ctp:api:type:Cart), [Order](ctp:api:type:Order), [QuoteRequest](ctp:api:type:QuoteRequest), or [Quote](ctp:api:type:Quote).
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
      title?:
        type: string
        description: |
          Title of the contact, for example 'Dr.'
      salutation?:
        type: string
        description: |
          Salutation of the contact, for example 'Mr.' or 'Ms.'
      firstName?:
        type: string
        description: |
          Given name (first name) of the contact.
      lastName?:
        type: string
        description: |
          Family name (last name) of the contact.
      streetName?:
        type: string
        description: |
          Name of the street.
      streetNumber?:
        type: string
        description: |
          Street number.
      additionalStreetInfo?:
        type: string
        description: |
          Further information on the street address.
      postalCode?:
        type: string
        description: |
          Postal code.
      city?:
        type: string
        description: |
          Name of the city.
      region?:
        type: string
        description: |
          Name of the region.
      state?:
        type: string
        description: |
          Name of the state, for example, Colorado.
      country:
        type: CountryCode
        description: |
          Name of the country.
      company?:
        type: string
        description: |
          Name of the company.
      department?:
        type: string
        description: |
          Name of the department.
      building?:
        type: string
        description: |
          Number or name of the building.
      apartment?:
        type: string
        description: |
          Number or name of the apartment.
      pOBox?:
        type: string
        description: |
          Post office box number.
      phone?:
        type: string
        description: |
          Phone number of the contact.
      mobile?:
        type: string
        description: |
          Mobile phone number of the contact.
      email?:
        type: string
        description: |
          Email address of the contact.
      fax?:
        type: string
        description: |
          Fax number of the contact.
      additionalAddressInfo?:
        type: string
        description: |
          Further information on the Address.
      externalId?:
        type: string
        description: |
          ID for the contact used in an external system.
      custom?:
        description: Custom Fields defined for the Address.
        type: custom-field.Custom
  ProductPriceModeEnum:
    type: string
    enum:
      - Embedded
      - Standalone
