#%RAML 1.0 Library
usage: Import operation types.
(annotations.package): importoperations

uses:
  common: common.raml
  error: error.raml
  annotations: ../annotationTypes/annotations.raml

types:
  ImportOperation:
    description: |
      Represents the import status of a resource.
    properties:
      version:
        description: Current version of the ImportOperation.
        type: integer
        format: long
      importContainerKey:
        description: |
          `key` of the [ImportContainer](ctp:import:type:ImportContainer).
        type: string
      resourceKey:
        description: |
          `key` of the resource being imported.
        type: string
      id:
        description: Unique identifier of the ImportOperation.
        type: string
      state:
        description: |
          The import status of the resource. If `rejected` or `validationFailed`, the import was unsuccessful.
        type: common.ProcessingState
      resourceVersion?:
        description: The `version` of the imported resource when the import was successful.
        type: integer
        format: long
      errors?:
        description: |
          Contains errors if the import was unsuccessful. See [Errors](/import-export/error).
        type: error.ErrorObject[]
      unresolvedReferences?:
        description: |
          If the resource being imported contains references to resources which do not exist, these references are contained within this array.
        type: common.UnresolvedReferences[]
      createdAt:
        description: Date and time (UTC) the ImportOperation was created.
        type: datetime
      lastModifiedAt:
        description: Date and time (UTC) the ImportOperation was last updated.
        type: datetime
      expiresAt:
        description: Date and time (UTC) the ImportOperation will be deleted.
        type: datetime
    example: !include ../examples/import-operation-validation-failed.json
  ImportOperationPagedResponse:
    description: |
      [PagedQueryResult](/../api/general-concepts#pagedqueryresult) for Import Operations.
    example: !include ../examples/import-operation-paged.response.json
    properties:
      limit:
        description: Number of [results requested](/../api/general-concepts#limit).
        type: integer
        default: 20
        minimum: 0
        maximum: 500
      offset:
        description: |
          Number of [elements skipped](/../api/general-concepts#offset).
        type: integer
        format: long
        default: 0
        maximum: 10000
      count:
        description: The actual number of results returned.
        type: integer
        format: long
      total:
        description: The total number of import operations matching the query.
        type: integer
        format: long
      results:
        description: The array of Import Operations matching the query.
        type: ImportOperation[]
  ImportOperationState:
    description: |
      Describes the validation state of a newly created [ImportOperation](#importoperation).
    (annotations.enumDescriptions):
      processing: The import is in process. This is the initial state of the ImportOperation.
      validationFailed: The validation of the import resource failed.
    type: string
    enum:
      - processing
      - validationFailed
  ImportOperationStatus:
    description: The status of a new [ImportOperation](#importoperation).
    example: !include ../examples/import-operation-status.json
    properties:
      operationId?:
        description: |
          `id` of the [ImportOperation](#importoperation).
        type: string
      state:
        description: Validation state of the [ImportOperation](#importoperation).
        type: ImportOperationState
      errors?:
        description: |
          [Errors](/import-export/error) for the [ImportOperation](#importoperation).
        type: error.ErrorObject[]
