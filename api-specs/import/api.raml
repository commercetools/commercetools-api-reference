#%RAML 1.0
---
title: commercetools Composable Commerce Import API
(annotations.products):
  - Composable Commerce
version: v1
mediaType: application/json
baseUri: https://import.europe-west1.gcp.commercetools.com
(annotations.docsBaseUri): https://import.{region}.commercetools.com
(annotations.docsBaseUriParameters):
  region:
    type: string
    enum:
      - europe-west1.gcp
      - us-central1.gcp
      - australia-southeast1
      - us-east-2.aws
      - eu-central-1.aws
    description: |
      The [Region](/import-export/hosts-and-authorization#hosts) in which the Project is hosted.
(annotations.serviceRegions):
  - uri: https://import.us-central1.gcp.commercetools.com/
    region: us-central1
    provider: gcp
    name: North America (Google Cloud, Iowa)
  - uri: https://import.europe-west1.gcp.commercetools.com
    region: europe-west1
    provider: gcp
    name: Europe (Google Cloud, Belgium)
  - uri: https://import.australia-southeast1.gcp.commercetools.com
    region: australia-southeast1
    provider: gcp
    name: Australia (Google Cloud, Sydney)
  - uri: https://import.us-east-2.aws.commercetools.com
    region: us-east-2
    provider: aws
    name: North America (AWS, Ohio)
  - uri: https://import.eu-central-1.aws.commercetools.com
    region: eu-central-1
    provider: aws
    name: Europe (AWS, Frankfurt)
uses:
  annotations: annotationTypes/annotations.raml
  postman: annotationTypes/postman.raml

  error: types/error.raml
  import-operation: types/import-operation.raml
  import-container: types/import-container.raml
  import-summary: types/import-summary.raml
  import-request: types/import-request.raml
  price-import: types/price-import.raml
  standalone-price-import: types/standalone-price-import.raml
  product-import: types/product-import.raml
  product-draft-import: types/product-draft-import.raml
  product-type-import: types/product-type-import.raml
  product-variant-import: types/product-variant-import.raml
  category-import: types/category-import.raml
  customer-import: types/customer-import.raml
  order-import: types/order-import.raml
  order-patch-import: types/order-patch-import.raml
  inventory-import: types/inventory-import.raml
  type-import: types/type-import.raml
  custom-field: types/custom-field.raml
  common: types/common.raml
  discount-code-import: types/discount-code-import.raml
  product-selection-import: types/product-selection-import.raml

resourceTypes:
  base:
    get?:
      displayName: Query <<resourcePathName>>
      responses:
        200:
    post?:
      displayName: Import <<resourcePathName | !singularize>>
      responses:
        201:
    put?:
      displayName: Update <<resourcePathName | !singularize>>
      responses:
        200:
    delete?:
      displayName: Delete <<resourcePathName | !singularize>>
      responses:
        200:
  baseByParam:
    type: base
    get?:
      displayName: Get <<resourcePathName | !singularize>>
      responses:
        200:

securitySchemes:
  oauth_2_0: !include security-schemes/oauth2.raml
securedBy: [oauth_2_0]

traits:
  secured_by_manage_import_containers:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_import_containers:{projectKey}
  secured_by_view_import_containers:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_import_containers:{projectKey}
            - view_import_containers:{projectKey}
  secured_by_manage_products:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_products:{projectKey}
  secured_by_view_products:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_products:{projectKey}
            - view_products:{projectKey}
  secured_by_manage_customers:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_customers:{projectKey}
  secured_by_view_customers:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_customers:{projectKey}
            - view_customers:{projectKey}
  secured_by_manage_orders:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_orders:{projectKey}
  secured_by_view_orders:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_orders:{projectKey}
            - view_orders:{projectKey}
  secured_by_manage_standalone_prices:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_standalone_prices:{projectKey}
            - view_standalone_prices:{projectKey}
  secured_by_manage_types:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_project:{projectKey}
            - manage_types:{projectKey}
  secured_by_manage_discount_codes:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_discount_codes:{projectKey}
            - view_discount_codes:{projectKey}
  secured_by_manage_product_selections:
    securedBy:
      - oauth_2_0:
          scopes:
            - manage_product_selections:{projectKey}
            - view_product_selections:{projectKey}

/{projectKey}:
  displayName: Project
  uriParameters:
    projectKey:
      description: |
        `key` of the [Project](ctp:api:type:Project).
      type: string
  /import-containers:
    post:
      displayName: Creates an Import Container in the Project.
      description: |
        Creates an Import Container in the Project.

        Generates the [ImportContainerCreated](/projects/events#import-container-created-event) Event.
      is:
        - secured_by_manage_import_containers
      body:
        type: import-container.ImportContainerDraft
        example: !include examples/import-container-draft-minimal.json
      responses:
        201:
          body:
            type: import-container.ImportContainer
            example: !include examples/import-container-minimal.json
        400:
          description: The request was invalid.
          body:
            type: error.ErrorResponse
    get:
      queryParameters:
        limit?:
          type: number
          format: int64
          description: |
            Number of [results requested](/../api/general-concepts#limit).
          default: 20
          minimum: 0
          maximum: 500
        offset?:
          type: number
          format: int64
          description: |
            Number of [elements skipped](/../api/general-concepts#offset).
          default: 0
          maximum: 10000
        sort?:
          description: |
            See [Sorting](/../api/general-concepts#sorting).
          type: string[]
      description: Retrieves all ImportContainers in the Project.
      is:
        - secured_by_view_import_containers
      responses:
        200:
          body:
            type: import-container.ImportContainerPagedResponse
            example: !include examples/import-container-paged-query-response.json
    /{importContainerKey}:
      type: baseByParam
      uriParameters:
        importContainerKey:
          (postman.paramName): import-container-key
          description: |
            `key` of the [ImportContainer](ctp:import:type:ImportContainer).
          type: string
      put:
        description: Updates an [ImportContainer](ctp:import:type:ImportContainer) in the Project.
        is:
          - secured_by_manage_import_containers
        body:
          type: import-container.ImportContainerUpdateDraft
          example: !include examples/import-container-update-draft-minimal.json
        responses:
          200:
            description: The [ImportContainer](ctp:import:type:ImportContainer) was successfully updated.
            body:
              type: import-container.ImportContainer
              example: !include examples/import-container-updated.json
          409:
            description:
              A concurrent modification was detected. The client should retry
              and resolve the conflict.
            body:
              type: error.ErrorResponse
              example: !include examples/error-response-concurrent-modification.json
      get:
        description: Retrieves an [ImportContainer](ctp:import:type:ImportContainer) with the provided `importContainerKey`.
        is:
          - secured_by_view_import_containers
        responses:
          200:
            description: The requested Import Container was found.
            body:
              type: import-container.ImportContainer
              example: !include examples/import-container-minimal.json
          404:
            description: The requested Import Container wasn't found.
            body:
              type: error.ErrorResponse
              example: !include examples/error-response-resource-not-found.json
      delete:
        displayName: Delete an Import Container.
        description: |
          Deletes an Import Container in the Project.

          Generates the [ImportContainerDeleted](/projects/events#import-container-deleted-event) Event.
        is:
          - secured_by_manage_import_containers
        responses:
          200:
            description: The deleted Import Container.
            body:
              type: import-container.ImportContainer
              example: !include examples/import-container-minimal.json
          404:
            description: The Import Container to delete wasn't found.
            body:
              type: error.ErrorResponse
      /import-summaries:
        type: base
        get:
          is:
            - secured_by_view_import_containers
          description: |
            Retrieves an [ImportSummary](ctp:import:type:ImportSummary) for the [ImportContainer](ctp:import:type:ImportContainer) with the provided `importContainerKey`.
          responses:
            200:
              body:
                type: import-summary.ImportSummary
                example: !include examples/import-summary.json
      /import-operations:
        type: base
        get:
          description: |
            Retrieves all ImportOperations within an [ImportContainer](ctp:import:type:ImportContainer).
          is:
            - secured_by_view_import_containers
          queryParameters:
            limit?:
              type: number
              format: int64
              description: |
                Number of [results requested](/../api/general-concepts#limit).
              default: 20
              minimum: 0
              maximum: 500
            offset?:
              type: number
              format: int64
              description: |
                Number of [elements skipped](/../api/general-concepts#offset).
              default: 0
              maximum: 10000
            sort?:
              description: |
                See [Sorting](/../api/general-concepts#sorting).
              type: string[]
            resourceKey?:
              description: |
                `key` of the ImportOperation to retrieve.
              type: string
            state?:
              description: |
                `state` of the ImportOperations to retrieve.
              type: common.ProcessingState
            debug?:
              description: |
                In case of `Unresolved`, it will show the unresolved references.
              type: boolean
              default: false
          responses:
            200:
              body:
                type: import-operation.ImportOperationPagedResponse
                example: !include examples/import-operation-paged.response.json
  /import-operations:
    /{id}:
      type: baseByParam
      uriParameters:
        id:
          description: |
            `id` of the [ImportOperation](ctp:import:type:ImportOperation).
          type: string
      get:
        description: |
          Retrieves an ImportOperation with the provided `id`.
        is:
          - secured_by_view_import_containers
        responses:
          200:
            body:
              type: import-operation.ImportOperation
              example: !include examples/import-operation-validation-failed.json
          404:
            body:
              type: error.ErrorResponse
          503:
            body:
              type: error.ErrorResponse
  /categories:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Categories.
          is:
            - secured_by_manage_products
          body:
            type: import-request.CategoryImportRequest
            example: !include examples/category-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /prices:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Prices.
          is:
            - secured_by_manage_products
          body:
            type: import-request.PriceImportRequest
            example: !include examples/price-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /standalone-prices:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Standalone Prices.
          is:
            - secured_by_manage_standalone_prices
          body:
            type: import-request.StandalonePriceImportRequest
            example: !include examples/standalone-price-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /products:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Products.
          is:
            - secured_by_manage_products
          body:
            type: import-request.ProductImportRequest
            example: !include examples/product-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /product-drafts:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              The ImportContainer used to create the new resource
            type: string
        post:
          description: |
            Creates an Import Request for Products.
          is:
            - secured_by_manage_products
          body:
            type: import-request.ProductDraftImportRequest
            example: !include examples/product-draft-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /product-types:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for ProductTypes.
          is:
            - secured_by_manage_products
          body:
            type: import-request.ProductTypeImportRequest
            example: !include examples/product-type-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /product-variants:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for ProductVariants.
          is:
            - secured_by_manage_products
          body:
            type: import-request.ProductVariantImportRequest
            example: !include examples/product-variant-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /product-variant-patches:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: |
            Creates an Import Request for updating Product Variants.
            Returns an [InvalidField](ctp:import:type:InvalidFieldError) error if the [ProductVariantPatchRequest](ctp:import:type:ProductVariantPatchRequest) contains patches with and without the `product` field set.
          is:
            - secured_by_manage_products
          body:
            type: import-request.ProductVariantPatchRequest
            example: !include examples/product-variant-patch-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /orders:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for creating Orders.
          is:
            - secured_by_manage_orders
          body:
            type: import-request.OrderImportRequest
            example: !include examples/order-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /order-patches:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: The ImportContainer used to create the resource
            type: string
        post:
          description: Creates an Import Request for updating Orders.
          is:
            - secured_by_manage_orders
          body:
            type: import-request.OrderPatchImportRequest
            example: !include examples/order-patch-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /customers:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Customers.
          is:
            - secured_by_manage_customers
          body:
            type: import-request.CustomerImportRequest
            example: !include examples/customer-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /inventories:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for InventoryEntries.
          is:
            - secured_by_manage_products
          body:
            type: import-request.InventoryImportRequest
            example: !include examples/inventory-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /types:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Types.
          is:
            - secured_by_manage_types
          body:
            type: import-request.TypeImportRequest
            example: !include examples/type-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /discount-codes:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Discount Codes.
          is:
            - secured_by_manage_discount_codes
          body:
            type: import-request.DiscountCodeImportRequest
            example: !include examples/discount-code-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
  /product-selections:
    /import-containers:
      /{importContainerKey}:
        type: base
        uriParameters:
          importContainerKey:
            (postman.paramName): import-container-key
            description: |
              `key` of the [ImportContainer](ctp:import:type:ImportContainer) to send this ImportRequest.
            type: string
        post:
          description: Creates an Import Request for Product Selections.
          is:
            - secured_by_manage_product_selections
          body:
            type: import-request.ProductSelectionImportRequest
            example: !include examples/product-selection-import-request.json
          responses:
            201:
              body:
                type: import-request.ImportResponse
                example: !include examples/import-response.json
            400:
              description: The request was invalid.
              body:
                type: error.ErrorResponse
