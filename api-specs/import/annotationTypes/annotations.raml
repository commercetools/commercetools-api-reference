#%RAML 1.0 Library
usage: Generator annotation types.

annotationTypes:
  asMap:
    description: |
      When using map types the key type is usually specified as a string following a specific pattern,
      sometimes it comes handy to specify the type of the key ( for example use enum in order to limit the key scope)
    allowedTargets:
      - TypeDeclaration
    properties:
      keyTypeHint:
        description: |
          The RAML data type to use for the map keys. The data type could be imported from a library
          and thus supports namespaces (e.g. "common.LocalizedString" ).
          Must be mapped to a native/generated data type (e.g. "java.lang.String").
        type: string
  package:
    description: |
      Allows to specify a target package for a generator for a RAML library.
      This package name should be a language-independent logical name (e.g. "products"), which a generator then uses to
      generate a language specific package name (e.g. "com.myapi.jvm.products") from its configuration.
    allowedTargets:
      - Library
    type: string
  enumDescriptions:
    description: |
      Allows to describe the values of an enum type.
    type: object
    properties:
      //:
        description: |
          Adds a description for the enum value given by the key.
        type: string
  updateType:
    type: string
    allowedTargets: TypeDeclaration
  identifier:
    type: boolean
    allowedTargets: TypeDeclaration
  abstract:
    type: boolean
    allowedTargets: TypeDeclaration
  docsBaseUri:
    allowedTargets:
      - API
    type: string
  docsBaseUriParameters:
    allowedTargets:
      - API
    type: object
  products:
    allowedTargets:
      - API
    type: array
    items:
      type: string
  serviceRegions:
    allowedTargets:
      - API
      - SecuritySchemeSettings
    type: array
    items:
      type: object
      properties:
        uri: string
        region: string
        provider: string
        name: string
  markDeprecated:
    type: boolean
    allowedTargets:
      - TypeDeclaration
      - Resource
  deprecated:
    type: boolean
    allowedTargets:
      - TypeDeclaration
      - Resource
