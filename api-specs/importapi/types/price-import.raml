#%RAML 1.0 Library
usage: Price import types.
(annotations.package): prices

uses:
  common: common.raml
  annotations: ../annotationTypes/annotations.raml
  custom-field: custom-field.raml

types:
  SubRate:
    properties:
      name:
        type: string
      amount:
        type: number
        minimum: 0
        maximum: 1
  TaxRate:
    properties:
      id?:
        type: string
      name:
        type: string
      amount:
        type: number
        minimum: 0
        maximum: 1
      includedInPrice:
        type: boolean
      country:
        type: common.CountryCode
      state?:
        type: string
      subRates?:
        type: SubRate[]
  PriceImport:
    description: |
      The data representation for a Price to be imported that is persisted as a [Price](/../api/projects/products#price) in the Project.
    type: common.ImportResource
    properties:
      value:
        description: |
          Maps to `Price.value`. TypedMoney is what is called BaseMoney in the HTTP API.
        type: common.TypedMoney
      country?:
        description: |
          Maps to `Price.county`.
        type: common.CountryCode
      validFrom?:
        description: |
          Maps to `Price.validFrom`.
        type: datetime
      validUntil?:
        description: |
          Maps to `Price.validUntil`.
        type: datetime
      customerGroup?:
        description: |
          The Reference to the [CustomerGroup](/../api/projects/customerGroups#customergroup) with which the Price is associated.
          If referenced CustomerGroup does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `Unresolved` until the necessary CustomerGroup is created.
        type: common.CustomerGroupKeyReference
      channel?:
        description: |
          The Reference to the [Channel](/../api/projects/channels#channel) with which the Price is associated.
          If referenced Channel does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `Unresolved` until the necessary Channel is created.
        type: common.ChannelKeyReference
      discounted?:
        description: Sets a discounted price from an external service.
        type: common.DiscountedPrice
      publish?:
        type: boolean
        default: false
        description: |
          Only the Price updates will be published to `staged` and `current` projection.
      tiers?:
        description: The tiered prices for this price.
        type: common.PriceTier[]
      custom?:
        description: The custom fields for this price.
        type: custom-field.Custom
      productVariant:
        description: |
          The ProductVariant in which this Price is contained.
          The Reference to the [ProductVariant](/../api/projects/products#productvariant) with which the Price is associated.
          If referenced ProductVariant does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `Unresolved` until the necessary ProductVariant is created.
        type: common.ProductVariantKeyReference
      product:
        description: |
          The Product in which the Product Variant containing this Price is contained. Maps to `ProductVariant.product`.
          The Reference to the [Product](/../api/projects/products#product) with which the Price is associated.
          If referenced Product does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `Unresolved` until the necessary Product is created.
        type: common.ProductKeyReference
