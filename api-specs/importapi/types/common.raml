#%RAML 1.0 Library
usage: Common data types.
(annotations.package): common

uses:
  annotations: ../annotationTypes/annotations.raml
  custom-field: custom-field.raml

types:
  Asset:
    properties:
      key:
        description: |
          User-defined identifier for the asset.
          Asset keys are unique inside their container (a product variant or a category).
        type: string
      sources:
        type: AssetSource[]
        minItems: 1
      name:
        type: LocalizedString
      description?:
        type: LocalizedString
      tags?:
        type: string[]
      custom?:
        type: custom-field.Custom
        description: The representation to be sent to the server when creating a resource with custom fields.
  AssetDimensions:
    description: The width and height of the Asset Source.
    properties:
      w:
        description: The width of the asset source.
        type: number
        format: int32
      h:
        description: The height of the asset source.
        type: number
        format: int32
  AssetSource:
    description:
      An AssetSource is a representation of an Asset in a specific format, for
      example, a video in a certain encoding or an image in a certain
      resolution.
    properties:
      uri:
        type: string
      key?:
        type: string
      dimensions?:
        type: AssetDimensions
        description: The width and height of the Asset Source.
      contentType?:
        type: string
  CountryCode:
    type: string
    description: |
      A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
    pattern: ^[A-Z]{2}$
  CurrencyCode:
    type: string
    description: |
      The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
    pattern: ^[A-Z]{3}$
  Image:
    description:
      An Image uploaded to commercetools Composable Commerce is stored in a Content
      Delivery Network and it's available in several pre-defined sizes. If you
      already have an image stored on an external service, you can save the URL
      when creating a new product or adding a variant, or you can add it later.
    properties:
      url:
        description:
          URL of the image in its original size. The URL must be unique within a
          single variant. It can be used to obtain the image in different sizes.
        type: string
      dimensions:
        description: Dimensions of the original image. This can be used by your
          application, for example, to determine whether the image is large
          enough to display a zoom view.
        type: AssetDimensions
      label?:
        description: Custom label that can be used, for example, as an image description.
        type: string
  EnumValue:
    properties:
      key:
        type: string
      label:
        type: string
  LocalizedEnumValue:
    properties:
      key:
        type: string
      label:
        type: LocalizedString
  LocalizedString:
    type: object
    (annotations.asMap):
      keyTypeHint: string
    properties:
      /^[a-z]{2}(-[A-Z]{2})?$/:
        type: string
    description: |
      A localized string is a JSON object where the keys are of [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag), and the values the corresponding strings used for that language.
      ```json
      {
        "de": "Hundefutter",
        "en": "dog food"
      }
      ```
  ImportResource:
    description: |
      A representation of the resource to import.
      Import resources are similar to draft types, but they only support key references.
      In general, import resources are more granular then regular resources.
      They are optimized for incremental updates and therefore have a slightly different structure.
    properties:
      key:
        type: string
        description: |
          User-defined unique identifier.
  KeyReference:
    description: References a resource by key.
    discriminator: typeId
    properties:
      key: string
      typeId: ReferenceType
  CartKeyReference:
    description: References a cart by key.
    type: KeyReference
    discriminatorValue: cart
  CartDiscountKeyReference:
    description: References a cart discount by key.
    type: KeyReference
    discriminatorValue: cart-discount
  CategoryKeyReference:
    description: References a category by key.
    type: KeyReference
    discriminatorValue: category
  ChannelKeyReference:
    description: References a channel by key.
    type: KeyReference
    discriminatorValue: channel
  CustomerKeyReference:
    description: References a customer by key.
    type: KeyReference
    discriminatorValue: customer
  CustomerGroupKeyReference:
    description: References a customer group by key.
    type: KeyReference
    discriminatorValue: customer-group
  DiscountCodeKeyReference:
    description: References a discount code by key.
    type: KeyReference
    discriminatorValue: discount-code
  OrderKeyReference:
    description: References an order by key.
    type: KeyReference
    discriminatorValue: order
  PaymentKeyReference:
    description: References a payment by key.
    type: KeyReference
    discriminatorValue: payment
  PriceKeyReference:
    description: References a price by key.
    type: KeyReference
    discriminatorValue: price
  ProductKeyReference:
    description: References a product by key.
    type: KeyReference
    discriminatorValue: product
  ProductDiscountKeyReference:
    description: References a product discount by key.
    type: KeyReference
    discriminatorValue: product-discount
  ProductTypeKeyReference:
    description: References a product type by key.
    type: KeyReference
    discriminatorValue: product-type
  ProductVariantKeyReference:
    description: References a product variant by key.
    type: KeyReference
    discriminatorValue: product-variant
  ShippingMethodKeyReference:
    description: References a shipping method by key.
    type: KeyReference
    discriminatorValue: shipping-method
  StateKeyReference:
    description: References a state by key.
    type: KeyReference
    discriminatorValue: state
  StoreKeyReference:
    description: References a store by key.
    type: KeyReference
    discriminatorValue: store
  TaxCategoryKeyReference:
    description: References a tax category by key.
    type: KeyReference
    discriminatorValue: tax-category
  TypeKeyReference:
    description: References a type by key.
    type: KeyReference
    discriminatorValue: type
  CustomObjectKeyReference:
    description: References a key value document by key.
    type: KeyReference
    discriminatorValue: key-value-document
    properties:
      container: string
  UnresolvedReferences:
    properties:
      key: string
      typeId: ReferenceType
  MoneyType:
    type: string
    enum:
      - centPrecision
      - highPrecision
  TypedMoney:
    discriminator: type
    properties:
      type:
        type: MoneyType
      fractionDigits?:
        type: number
        format: int32
        maximum: 12
      centAmount:
        type: number
        format: int64
      currencyCode:
        type: CurrencyCode
  HighPrecisionMoney:
    type: TypedMoney
    discriminatorValue: highPrecision
    properties:
      preciseAmount:
        type: number
        format: int64
  Money:
    type: TypedMoney
    discriminatorValue: centPrecision
  DiscountedPrice:
    properties:
      value:
        type: TypedMoney
      discount:
        description: Reference to a ProductDiscount.
        type: ProductDiscountKeyReference
  PriceTier:
    description: |
      A price tier is selected instead of the default price when a certain quantity of the ProductVariant is added to a cart and ordered.
    properties:
      minimumQuantity:
        description: |
          The minimum quantity this price tier is valid for.
        type: number
        format: int64
      value:
        description:
          The currency of a price tier is always the same as the currency of the
          base Price.
        type: TypedMoney
  ImportResourceType:
    description: |
      The resource types that can be imported.
    (annotations.enumDescriptions):
      category: The [Category import](ctp:import:type:CategoryImport) resource type.
      customer: The [Customer import](ctp:import:type:CustomerImport) resource type.
      inventory: The [Inventory import](ctp:import:type:InventoryImport) resource type.
      order: The [Order import](ctp:import:type:OrderImport) resource type.
      order-patch: The [Order patch import](ctp:import:type:OrderPatchImport) resource type.
      price: The [Embedded Price import](ctp:import:type:PriceImport) resource type.
      product: The [Product import](ctp:import:type:ProductImport) resource type.
      product-draft: The [Product draft import](ctp:import:type:ProductDraftImport) resource type.
      product-type: The [Product Type import](ctp:import:type:ProductTypeImport) resource type.
      product-variant: The [Product Variant import](ctp:import:type:ProductVariantImport) resource type.
      product-variant-patch: The [Product Variant patch](ctp:import:type:ProductVariantPatch) resource type.
      standalone-price: The [Standalone Price import](ctp:import:type:StandalonePriceImport) resource type.
      type: The [Type import](ctp:import:type:TypeImport) resource type.
    type: string
    enum:
      - category
      - customer
      - inventory
      - order
      - order-patch
      - price
      - product
      - product-draft
      - product-type
      - product-variant
      - product-variant-patch
      - standalone-price
      - type
  ReferenceType:
    description: |
      The type of the referenced resource.
    (annotations.enumDescriptions):
      cart: References a cart.
      cart-discount: References a cart discount.
      category: References a category.
      channel: References a channel.
      customer: References a customer.
      customer-group: References a customer group.
      discount-code: References a discount code.
      order: References an order.
      payment: References a payment
      price: References a price.
      product: References a product.
      product-discount: References a product discount.
      product-type: References a product type.
      product-variant: References a product variant.
      shipping-method: References a shipping method.
      state: References a state.
      store: References a store.
      tax-category: References a tax-category.
      type: References a type.
      key-value-document: References a custom object
    type: string
    enum:
      - cart
      - cart-discount
      - category
      - channel
      - customer
      - customer-group
      - discount-code
      - order
      - payment
      - price
      - product
      - product-discount
      - product-type
      - product-variant
      - shipping-method
      - state
      - store
      - tax-category
      - type
      - key-value-document
  ProcessingState:
    description: |
      Every [Import Operation](/import-operation) is assigned one of the following states.
    (annotations.enumDescriptions):
      processing: The initial state assigned if the request payload (JSON structure and fields) meets Import API specifications. The resource import is in progress.
      imported: The resource was successfully imported.
      unresolved: The import request contains [KeyReferences](ctp:import:type:KeyReference) to resources that do not exist in your Composable Commerce Project.
      validationFailed: Either the request payload is missing the data as per Import API specifications, or even though the references were resolved, the data does not meet validation constraints.
      waitForMasterVariant: Products must have at least one Product Variant, also known as the Master Variant. If you import a Product without a Master Variant, the import request will have this status until another import request includes Master Variant data for the Product.
      rejected: The resource could not be imported. References were resolved, but the system could not import the data due to an internal server error and the retry limit was reached.
      canceled: The import request was canceled and the resource was not imported.
    type: string
    enum:
      - processing
      - validationFailed
      - unresolved
      - waitForMasterVariant
      - imported
      - rejected
      - canceled
  Address:
    properties:
      id?: string
      key?: string
      title?: string
      salutation?: string
      firstName?: string
      lastName?: string
      streetName?: string
      streetNumber?: string
      additionalStreetInfo?: string
      postalCode?: string
      city?: string
      region?: string
      state?: string
      country: CountryCode
      company?: string
      department?: string
      building?: string
      apartment?: string
      pOBox?: string
      phone?: string
      mobile?: string
      email?: string
      fax?: string
      additionalAddressInfo?: string
      externalId?: string
      custom?:
        description: Custom Fields defined for the Address. Custom Fields can only be applied to `shippingAddress`.
        type: custom-field.Custom
  ProductPriceModeEnum:
    type: string
    enum:
      - Embedded
      - Standalone
