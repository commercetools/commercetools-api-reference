#%RAML 1.0 Library
usage: Product draft import types.
(annotations.package): productdrafts

uses:
  common: common.raml
  annotations: ../annotationTypes/annotations.raml
  product-import: product-import.raml
  product-variant-import: product-variant-import.raml
  custom-field: custom-field.raml

types:
  ProductDraftImport:
    type: common.ImportResource
    description: |
      The representation of a Product Draft for the import purpose.
    properties:
      key:
        type: string
        description: User-defined unique identifier. If a [Product](/../api/projects/products#product) with this `key` exists, it will be updated with the imported data.
      productType:
        description: |
          The `productType` of a [Product](/../api/projects/products#product).
          Maps to `Product.productType`.
          The Reference to the [ProductType](/../api/projects/productTypes#producttype) with which the ProductDraft is associated.
          If referenced ProductType does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `unresolved` until the necessary ProductType is created.
        type: common.ProductTypeKeyReference
      name:
        type: common.LocalizedString
        description: ''
      slug:
        type: common.LocalizedString
        description: |
          Human-readable identifiers usually used as deep-link URL to the related product. Each slug must be unique across a project,
          but a product can have the same slug for different languages. Allowed are alphabetic, numeric, underscore (_) and hyphen (-) characters.
      description?:
        type: common.LocalizedString
        description: |
          Maps to `Product.description`.
      categories?:
        description: |
          The Reference to the [Categories](/../api/projects/categories#category) with which the ProductDraft is associated.
          If referenced Categories do not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `unresolved` until the necessary Categories are created.
        type: common.CategoryKeyReference[]
      metaTitle?:
        type: common.LocalizedString
      metaDescription?:
        type: common.LocalizedString
      metaKeywords?:
        type: common.LocalizedString
      masterVariant?:
        type: ProductVariantDraftImport
        description: |
          The master Product variant.
          Required if the `variants` array contains a Product Variant.
      variants?:
        type: ProductVariantDraftImport[]
        description: An array of related Product Variants.
      taxCategory?:
        description: |
          The Reference to the [TaxCategory](/../api/projects/taxCategories#taxcategory) with which the ProductDraft is associated.
          If referenced TaxCategory does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `unresolved` until the necessary TaxCategory is created.
        type: common.TaxCategoryKeyReference
      searchKeywords?:
        type: product-import.SearchKeywords
      state?:
        description: |
          The Reference to the [State](/../api/projects/states#state) with which the ProductDraft is associated.
          If referenced State does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `unresolved` until the necessary State is created.
        type: common.StateKeyReference
      publish?:
        type: boolean
        description: |
          If `publish` is set to either `true` or `false`, both staged and current projections are set to the same value provided by the import data.
          If `publish` is not set, the staged projection is set to the provided import data, but the current projection stays unchanged.
          However, if the import data contains no update, that is, if it matches the staged projection of the existing Product, the import induces no change in the existing Product whether `publish` is set or not.
      priceMode?:
        type: common.ProductPriceModeEnum
        description: |
          Determines the type of Prices the API uses. See [ProductPriceMode](/../api/projects/products#productpricemode) for more details. If not provided, the existing `Product.priceMode` is not changed.
  ProductVariantDraftImport:
    type: object
    description: |
      The representation of a Product Variant Draft for the import purpose.
    properties:
      sku?:
        type: string
      key:
        type: string
      prices?:
        type: PriceDraftImport[]
      attributes?:
        type: product-variant-import.Attribute[]
      images?:
        type: common.Image[]
      assets?:
        type: common.Asset[]
  PriceDraftImport:
    type: object
    description: |
      The representation of a Price Draft for the import purpose.
    properties:
      value:
        type: common.TypedMoney
        description:
      country?:
        type: common.CountryCode
      customerGroup?:
        type: common.CustomerGroupKeyReference
        description: References a customer group by key.
      channel?:
        type: common.ChannelKeyReference
        description: References a channel by key.
      validFrom?:
        type: datetime
      validUntil?:
        type: datetime
      custom?:
        description: The custom fields for this category.
        type: custom-field.Custom
      discounted?:
        description: Sets a discounted price from an external service.
        type: common.DiscountedPrice
      tiers?:
        description: The tiered prices for this price.
        type: common.PriceTier[]
      key:
        description: |
          User-defined unique identifier for the Embedded Price.
        type: string
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
