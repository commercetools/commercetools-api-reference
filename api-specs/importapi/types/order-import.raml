#%RAML 1.0 Library
usage: Order import types.
(annotations.package): orders

uses:
  common: common.raml
  annotations: ../annotationTypes/annotations.raml
  price: price-import.raml
  product-variant: product-variant-import.raml
  custom-field: custom-field.raml

types:
  ItemState:
    description: |
      The item's state.
    properties:
      quantity:
        type: number
      state:
        description: |
          Maps to `ItemState.state`.
        type: common.StateKeyReference
  ItemShippingTarget:
    description: |
      The item's shipping target.
    properties:
      addressKey:
        description: |
          Maps to `ItemShippingTarget.addressKey`.
        type: string
      quantity:
        description: |
          Maps to `ItemShippingTarget.quantity`.
        type: number
  ItemShippingDetailsDraft:
    properties:
      targets:
        description: |
          Maps to `ItemShippingDetailsDraft.targets`.
        type: ItemShippingTarget[]
  LineItemPrice:
    properties:
      value:
        description: |
          Maps to `Price.value`. TypedMoney is what is called BaseMoney in the HTTP API.
        type: common.TypedMoney
      country?:
        description: |
          Maps to `Price.county`.
        type: common.CountryCode
      validFrom?:
        description: |
          Maps to `Price.validFrom`.
        type: datetime
      validUntil?:
        description: |
          Maps to `Price.validUntil`.
        type: datetime
      customerGroup?:
        description: |
          References a customer group by its key.
        type: common.CustomerGroupKeyReference
      channel?:
        description: |
          References a channel by its key.
        type: common.ChannelKeyReference
      discounted?:
        description: Sets a discounted price from an external service.
        type: common.DiscountedPrice
      tiers?:
        description: The tiered prices for this price.
        type: common.PriceTier[]
      custom?:
        description: |
          Maps to `Price.custom`.
        type: custom-field.Custom
  LineItemProductVariantImportDraft:
    properties:
      productVariant?:
        description: |
          Maps to `ProductVariant.product`.
        type: common.ProductVariantKeyReference
      sku?:
        description: |
          Maps to `ProductVariantImportDraft.sku`.
        type: string
      prices?:
        description: |
          Maps to `ProductVariantImportDraft.prices`
        type: LineItemPrice[]
      attributes?:
        description: |
          Maps to `ProductVariantImportDraft.attributes`
        type: product-variant.Attribute[]
      images?:
        description: |
          Maps to `ProductVariantImportDraft.images`.
        type: common.Image[]
  LineItemImportDraft:
    description: |
      Represents an individual Line Item in an Order. A line item is a snapshot of a product at the time it was added to the order.

      You cannot create an Order that includes line item operations that do not exist in the Project or have been deleted.
      Products and Product Variants referenced by a line item must already exist in the commercetools Project.
    properties:
      product?:
        description: |
          Maps to `LineItem.productId`.
        type: common.ProductKeyReference
      name:
        description: |
          Maps to `LineItem.name`.
        type: common.LocalizedString
      variant:
        description: |
          Maps to `ProductVariantImportDraft`.
        type: LineItemProductVariantImportDraft
      price:
        description: |
          Maps to `LineItem.price`.
        type: LineItemPrice
      quantity:
        description: |
          Maps to `LineItem.quantity`.
        type: number
      state?:
        type: ItemState[]
      supplyChannel?:
        description: |
          Maps to `LineItem.supplyChannel`.
          The Reference to the Supply [Channel](/../api/projects/channels#channel) with which the LineItem is associated.
          If referenced Supply Channel does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `Unresolved` until the necessary Supply Channel is created.
        type: common.ChannelKeyReference
      distributionChannel?:
        description: |
          Maps to `LineItem.distributionChannel`.
          The Reference to the Distribution [Channel](/../api/projects/channels#channel) with which the LineItem is associated.
          If referenced CustomerGroup does not exist, the `state` of the [ImportOperation](/import-operation#importoperation) will be set to `Unresolved` until the necessary Distribution Channel is created.
        type: common.ChannelKeyReference
      taxRate?:
        description: |
          Maps to `LineItem.taxRate`.
        type: price.TaxRate
      shippingDetails?:
        description: |
          Maps to LineItem.shippingDetails.
        type: ItemShippingDetailsDraft
  ShippingRateTierType:
    type: string
    enum:
      - CartValue
      - CartClassification
      - CartScore
  ShippingRatePriceTier:
    discriminator: type
    properties:
      type:
        type: ShippingRateTierType
  CartClassificationTier:
    type: ShippingRatePriceTier
    discriminatorValue: CartClassification
    properties:
      value:
        type: string
      price:
        type: common.Money
      tiers:
        type: ShippingRatePriceTier[]
      isMatching?:
        type: boolean
  ShippingRateDraft:
    properties:
      price:
        type: common.Money
      freeAbove?:
        type: common.Money
      tiers?:
        type: ShippingRatePriceTier[]
  ParcelMeasurements:
    properties:
      heightInMillimeter?: number
      lengthInMillimeter?: number
      widthInMillimeter?: number
      weightInGram?: number
  TrackingData:
    properties:
      trackingId?: string
      carrier?: string
      provider?: string
      providerTransaction?: string
      isReturn?: boolean
  DeliveryItem:
    properties:
      id: string
      quantity: number
  Parcel:
    properties:
      id:
        type: string
      createdAt:
        type: datetime
      measurements?:
        type: ParcelMeasurements
      trackingData?: TrackingData
      items?:
        type: DeliveryItem[]
  Delivery:
    properties:
      id: string
      createdAt: datetime
      items: DeliveryItem[]
      parcels: Parcel[]
      address?:
        type: common.Address
  DiscountedLineItemPortion:
    properties:
      discount:
        type: common.CartDiscountKeyReference
        description: References a cart discount by its key.
      discountedAmount:
        type: common.Money
  DiscountedLineItemPriceDraft:
    properties:
      value:
        type: common.Money
      includedDiscounts: DiscountedLineItemPortion[]
  ShippingMethodState:
    type: string
    enum:
      - DoesNotMatchCart
      - MatchesCart
  ShippingInfoImportDraft:
    description: |
      Maps to an order's `shippingInfo` property. This field is usually populated by the cart assosciated with
      the order, but when importing orders you must provide a draft representation as a part of the OrderImport.
    properties:
      shippingMethodName:
        type: string
      price:
        type: common.TypedMoney
        description: |
          TypedMoney is what is called BaseMoney in the HTTP API.
      shippingRate:
        type: ShippingRateDraft
      taxRate?:
        type: price.TaxRate
      taxCategory?:
        type: common.TaxCategoryKeyReference
        description: References a tax category by its key.
      shippingMethod?:
        type: common.ShippingMethodKeyReference
        description: References a shipping method by its key.
      deliveries?:
        type: Delivery[]
        description: Note that you can not add a `DeliveryItem` on import, as `LineItems` and `CustomLineItems` are not yet referencable by an `id`.
      discountedPrice?:
        type: DiscountedLineItemPriceDraft
      shippingMethodState?:
        type: ShippingMethodState
  ExternalTaxRateDraft:
    properties:
      name: string
      amount?: number
      country: string
      state?: string
      subRates?: price.SubRate[]
      includedInPrice?: boolean
  CustomLineItemTaxedPrice:
    properties:
      totalNet:
        type: common.TypedMoney
        description: |
          TypedMoney is what is called BaseMoney in the HTTP API.
      totalGross:
        type: common.TypedMoney
        description: |
          TypedMoney is what is called BaseMoney in the HTTP API.
  CustomLineItemDraft:
    properties:
      name:
        type: common.LocalizedString
      money:
        type: common.TypedMoney
        description: |
          TypedMoney is what is called BaseMoney in the HTTP API.
      taxedPrice?:
        type: CustomLineItemTaxedPrice
      totalPrice:
        type: common.TypedMoney
        description: |
          TypedMoney is what is called BaseMoney in the HTTP API.
      slug: string
      quantity:
        type: number
      state?:
        type: ItemState[]
      taxCategory?:
        type: common.TaxCategoryKeyReference
        description: References a tax category by its key.
      taxRate?:
        type: price.TaxRate
      externalTaxRate?:
        type: ExternalTaxRateDraft
      discountedPricePerQuantity?:
        type: DiscountedLineItemPriceDraft[]
      shippingDetails?:
        type: ItemShippingDetailsDraft
  TaxPortion:
    properties:
      name?:
        type: string
      rate:
        type: number
        minimum: 0
        maximum: 1
      amount:
        type: common.TypedMoney
        description: |
          TypedMoney is what is called BaseMoney in the HTTP API.
  TaxedPrice:
    properties:
      totalNet:
        type: common.Money
        description: Maps to `TaxedPrice.totalNet`.
      totalGross:
        type: common.Money
        description: Maps to `TaxedPrice.totalGross`.
      taxPortions:
        type: TaxPortion[]
        description: Maps to `TaxedPrice.taxPortions`.
  TaxMode:
    type: string
    description: Maps to `Order.taxMode`
    enum:
      - Platform
      - External
      - ExternalAmount
      - Disabled
  OrderState:
    type: string
    description: Maps to `Order.orderState`.
    enum:
      - Open
      - Confirmed
      - Complete
      - Cancelled
  ShipmentState:
    type: string
    description: Maps to `Order.shipmentState`.
    enum:
      - Shipped
      - Ready
      - Pending
      - Delayed
      - Partial
      - Backorder
  PaymentState:
    type: string
    description: Maps to `Order.paymentState`.
    enum:
      - BalanceDue
      - Failed
      - Pending
      - CreditOwed
      - Paid
  InventoryMode:
    type: string
    description: Maps to `Order.inventoryMode`.
    enum:
      - TrackOnly
      - ReserveOnOrder
  RoundingMode:
    type: string
    description: Maps to `Order.taxRoundingMode`.
    enum:
      - HalfEven
      - HalfUp
      - HalfDown
  TaxCalculationMode:
    type: string
    description: Maps to `Order.taxCalculationMode`.
    enum:
      - LineItemLevel
      - UnitPriceLevel
  CartOrigin:
    type: string
    description: Maps to `Order.origin`.
    enum:
      - Customer
      - Merchant
  SyncInfo:
    properties:
      channel:
        type: common.ChannelKeyReference
        description: Maps to `SyncInfo.channel`
      externalId?:
        type: string
        description: Maps to `SyncInfo.externalId`
      syncedAt:
        type: datetime
        description: Maps to `SyncInfo.syncedAt`
  DiscountCodeState:
    type: string
    description: Maps to `DiscountCodeInfo.state`
    enum:
      - NotActive
      - NotValid
      - DoesNotMatchCart
      - MatchesCart
      - MaxApplicationReached
      - ApplicationStoppedByPreviousDiscount
  DiscountCodeInfo:
    properties:
      discountCode:
        type: common.DiscountCodeKeyReference
      state?:
        type: DiscountCodeState
  ShippingRateInputType:
    type: string
    enum:
      - Classification
      - Score
  ShippingRateInput:
    discriminator: type
    properties:
      type:
        type: ShippingRateInputType
  ClassificationShippingRateInput:
    type: ShippingRateInput
    discriminatorValue: Classification
    properties:
      key:
        type: string
      label:
        type: common.LocalizedString
  ScoreShippingRateInput:
    type: ShippingRateInput
    discriminatorValue: Score
    properties:
      score:
        type: number
  OrderImport:
    description: |
      The data representation for an Order to be imported that is persisted as an [Order](/../api/projects/orders#top) in the Project.

      In commercetools, you can import an Order using the
      [Create Order by Import](https://docs.commercetools.com/http-api-projects-orders-import.html#create-an-order-by-import)
      endpoint method instead of creating it from a Cart.

      An OrderImport is a snapshot of an order at the time it was imported.
    properties:
      orderNumber:
        description: |
          Maps to `Order.orderNumber`, String that uniquely identifies an order. It should be unique across a project. Once it's set it cannot be changed.
        type: string
      customer?:
        type: common.CustomerKeyReference
        description:
      customerEmail?:
        description: |
          Maps to `Order.customerEmail`.
        type: string
      lineItems?:
        description: |
          Maps to `Order.lineItems`.
        type: LineItemImportDraft[]
      customLineItems?:
        description: |
          Maps to `Order.customLineItems`
        type: CustomLineItemDraft[]
      totalPrice:
        description: |
          Maps to `Order.totalPrice`. TypedMoney is what is called BaseMoney in the HTTP API.
        type: common.TypedMoney
      taxedPrice?:
        description: |
          Maps to `Order.taxedPrice`.
        type: TaxedPrice
      shippingAddress?:
        description: |
          Maps to `Order.shippingAddress`.
        type: common.Address
      billingAddress?:
        description: |
          Maps to `Order.billingAddress`.
        type: common.Address
      customerGroup?:
        description: |
          Maps to `Order.customerGroup`.
        type: common.CustomerGroupKeyReference
      country?:
        description: |
          Maps to `Order.country`.
        type: string
      orderState?:
        description: |
          Maps to `Order.orderState`.
        type: OrderState
      shipmentState?:
        description: |
          Maps to `Order.shipmentState`.
        type: ShipmentState
      paymentState?:
        description: |
          Maps to `Order.paymentState`.
        type: PaymentState
      shippingInfo?:
        description: |
          Maps to `Order.shippingInfo`.
        type: ShippingInfoImportDraft
      completedAt?:
        description: |
          Maps to `Order.completedAt`.
        type: datetime
      custom?:
        description: |
          Maps to `Order.custom`.
        type: custom-field.Custom
      inventoryMode?:
        description: |
          Maps to `Order.inventoryMode`.
        type: InventoryMode
      taxRoundingMode?:
        description: |
          Maps to `Order.taxRoundingMode`.
        type: RoundingMode
      taxCalculationMode?:
        description: |
          Maps to `Order.taxCalculationMode`.
        type: TaxCalculationMode
      origin?:
        description: |
          Maps to `Order.origin`.
        type: CartOrigin
      itemShippingAddresses?:
        description: |
          Maps to `Order.itemShippingAddresses`.
        type: common.Address[]
