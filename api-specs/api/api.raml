#%RAML 1.0
---
title: commercetools Composable Commerce
baseUri: https://api.{region}.commercetools.com
(sdkBaseUri): https://api.europe-west1.gcp.commercetools.com
baseUriParameters:
  region:
    type: string
    enum:
      - us-central1.gcp
      - us-east-2.aws
      - europe-west1.gcp
      - eu-central-1.aws
      - australia-southeast1.gcp
    description: |
      [Region](/../api/general-concepts#hosts) in which the Project is hosted.
version: v1
securitySchemes:
  oauth_2_0: !include securitySchemes/oauth2.raml
securedBy: [oauth_2_0]
traits:
  errorable: !include traits/errorable.raml
  deprecatable200: !include traits/deprecatable200.raml
  deprecatable201: !include traits/deprecatable201.raml
  expandable: !include traits/expandable.raml
  query: !include traits/query.raml
  sortable: !include traits/sortable.raml
  paging: !include traits/paging.raml
  conflicting: !include traits/conflicting.raml
  versioned: !include traits/versioned.raml
  priceSelecting: !include traits/price-selecting.raml
  projectionSelecting: !include traits/projection-selecting.raml
  localeProjecting: !include traits/locale-projecting.raml
  storeProjecting: !include traits/store-projecting.raml
  dataErasure: !include traits/data-erasure.raml
annotationTypes: !include types/annotations.raml
types: !include types/types.raml
mediaType: application/json
resourceTypes:
  baseDomain:
    type: base
    get:
      is:
        - expandable
        - sortable:
            sortExample: <<sortExample>>
        - paging
        - query:
            whereExample: <<whereExample>>
      displayName: Query <<resourcePathName>>
      responses:
        200:
          body:
            application/json:
              type: <<resourceQueryType>>
    post?:
      is:
        - expandable
        - deprecatable201
      displayName: Create <<resourceType>>
      body:
        application/json:
          type: <<resourceDraft>>
      responses:
        201:
          body:
            application/json:
              type: <<resourceType>>
    head?:
      displayName: Check <<resourcePathName>> are existing
      responses:
        200:
          description: |
            At least one <<resourceType>> matching the query exists
        404:
          description: |
            ## Not Found

            A 404 in case no <<resourceType>> could be found that is matching the query condition.
  baseResource:
    type: base
    uriParameters:
      <<uriParameterName>>:
        type: string
        description: '`<<uriParameterName | !lowercamelcase>>` of the [<<resourceType>>](ctp:api:type:<<resourceType>>).'
    get:
      is:
        - expandable
      displayName: Get <<resourceType>> by <<uriParameterName | !lowercamelcase>>
      responses:
        200:
          body:
            application/json:
              type: <<resourceType>>
    post?:
      is:
        - conflicting
        - expandable
        - deprecatable200
      displayName: Update <<resourceType>> by <<uriParameterName | !lowercamelcase>>
      body:
        application/json:
          type: <<resourceUpdateType>>
      responses:
        200:
          body:
            application/json:
              type: <<resourceType>>
    delete?:
      is:
        - versioned
        - conflicting
        - expandable
      displayName: Delete <<resourceType>> by <<uriParameterName | !lowercamelcase>>
      responses:
        200:
          body:
            application/json:
              type: <<resourceType>>
    head?:
      displayName: Check <<resourceType>> exists by <<uriParameterName | !lowercamelcase>>
      responses:
        200:
          description: |
            The <<resourceType>> exists
        404:
          description: |
            ## Not Found

            A 404 indicates that the <<resourceType>> was not found / does not exist.
  base:
    get?:
      is:
        - errorable
        - deprecatable200
    post?:
      is:
        - errorable
    delete?:
      is:
        - errorable
        - deprecatable200
    head?:
      is:
        - errorable
        - deprecatable200
/{projectKey}:
  (methodName): withProjectKey
  uriParameters:
    projectKey:
      type: string
      description: '`key` of the [Project](ctp:api:type:Project).'
  displayName: Project
  (updateable): Project
  description: The Project endpoint is used to retrieve certain information from a project.
  get:
    displayName: Get project settings
    is:
      - errorable
      - deprecatable200
    securedBy: [oauth_2_0: { scopes: ['view_project_settings:{projectKey}'] }]
    responses:
      200:
        body:
          example: !include examples/project.example.json
          type: Project
  post:
    displayName: Update project settings
    is:
      - conflicting
    securedBy: [oauth_2_0: { scopes: ['manage_project_settings:{projectKey}'] }]
    body:
      application/json:
        type: ProjectUpdate
    responses:
      200:
        body:
          example: !include examples/project.example.json
          type: Project
  /as-associate: !include resources/as-associate.raml
  /associate-roles: !include resources/associate-roles.raml
  /business-units: !include resources/business-units.raml
  /categories: !include resources/categories.raml
  /carts: !include resources/carts.raml
  /cart-discounts: !include resources/cart-discounts.raml
  /channels: !include resources/channels.raml
  /customers: !include resources/customers.raml
  /customer-groups: !include resources/customer-groups.raml
  /custom-objects: !include resources/custom-objects.raml
  /discount-codes: !include resources/discount-codes.raml
  /graphql: !include resources/graphql.raml
  /inventory: !include resources/inventory.raml
  /login: !include resources/login.raml
  /messages: !include resources/messages.raml
  /orders: !include resources/orders.raml
  /payments: !include resources/payments.raml
  /products: !include resources/products.raml
  /product-discounts: !include resources/product-discounts.raml
  /product-projections: !include resources/product-projections.raml
  /product-selections: !include resources/product-selections.raml
  /product-types: !include resources/product-types.raml
  /quotes: !include resources/quotes.raml
  /quote-requests: !include resources/quote-requests.raml
  /staged-quotes: !include resources/staged-quotes.raml
  /reviews: !include resources/reviews.raml
  /shipping-methods: !include resources/shipping-methods.raml
  /shopping-lists: !include resources/shopping-lists.raml
  /states: !include resources/states.raml
  /subscriptions: !include resources/subscriptions.raml
  /tax-categories: !include resources/tax-categories.raml
  /types: !include resources/types.raml
  /zones: !include resources/zones.raml
  /me: !include resources/me.raml
  /extensions: !include resources/extensions.raml
  /api-clients: !include resources/api-clients.raml
  /stores: !include resources/stores.raml
  /in-store/key={storeKey}: !include resources/in-store.raml
  /standalone-prices: !include resources/standalone-prices.raml
  /in-business-unit/key={businessUnitKey}: !include resources/in-business-unit.raml
  /attribute-groups: !include resources/attribute-groups.raml
