#%RAML 1.0 DataType
(package): ProductSearch
type: object
displayName: ProductSearchRequest
example: !include ../../examples/ProductSearch/product-search-request.example.json
properties:
  query?:
    type: SearchQuery
    description: |
      The search query against [searchable Product fields](/../api/projects/product-search#searchable-product-fields).
  sort?:
    type: SearchSorting[]
    description: |
      Controls how results to your query are [sorted](/../api/projects/product-search#sorting).
      If not provided, the results are sorted by relevance score in descending order.
  limit?:
    type: number
    format: int32
    default: 20
    maximum: 100
    description: |
      The maximum number of search results to be returned in one [page](/../api/projects/product-search#pagination).
  offset?:
    type: number
    format: int32
    default: 0
    maximum: 9900
    description: |
      The number of search results to be skipped in the response for [pagination](/../api/projects/product-search#pagination).
  markMatchingVariants?:
    type: boolean
    default: false
    description: |
      If `query` specifies an expression for a Product Variant field,
      set this to `true` to get additional information for each returned Product about which Product Variants match the search query.
      For details, see [matching variants](/../api/projects/product-search#matching-variants).
  productProjectionParameters?:
    type: ProductSearchProjectionParams
    (beta): true
    description: |
      Controls data integration [with Product Projection parameters](/../api/projects/product-search#with-product-projection-parameters).
      If not set, the result does not include the Product Projection.
  facets?:
    type: ProductSearchFacetExpression[]
    (beta): true
    description: |
      Set this field to request [facets](/../api/projects/product-search#facets).
  postFilter?:
    type: SearchQuery
    description: |
      Specify an additional filter on the result of the `query` after the API calculated `facets`.
      This feature assists you in implementing faceted search.
