#%RAML 1.0 DataType
(package): ProductTailoring
displayName: ProductTailoringDraft
type: object
description: |
  Contains the information to be tailored for a Product.
properties:
  key?:
    type: string
    description: |
      User-defined unique identifier of the ProductTailoring.
  store:
    type: StoreResourceIdentifier
    description: |
      The Store to which the ProductTailoring belongs.
  product:
    type: ProductResourceIdentifier
    description: |
      ResourceIdentifier of the Product the ProductTailoring belongs to.
  name?:
    type: LocalizedString
    description: |
      Tailored name of the Product.
  description?:
    type: LocalizedString
    description: |
      Tailored description of the Product.
  metaTitle?:
    type: LocalizedString
    description: |
      Tailored title of the Product that is used by search engines.
  metaDescription?:
    type: LocalizedString
    description: |
      Tailored description of the Product that is used by search engines.
  metaKeywords?:
    type: LocalizedString
    description: |
      Tailored keywords related to the Product that are used by search engines.
  slug?:
    type: LocalizedString
    description: |
      User-defined identifier used in a deep-link URL for the ProductTailoring.
      Matches the pattern `[a-zA-Z0-9_\\-]{2,256}`.
  publish?:
    type: boolean
    description: |
      Set to `true` to [publish](/../api/projects/product-tailoring#stage-and-publish-tailored-product-information) the ProductTailoring immediately.
      Otherwise, the tailored product information is just staged.
    default: false
  variants?:
    type: ProductVariantTailoringDraft[]
    description: |
      Tailored Variants of the Product.
  attributes?:
    type: ProductTailoringAttribute[]
    (beta): true
    description: |
      Attributes of the tailored Product.
      If provided, these Attributes are selectively merged into the `attributes` of the corresponding [Product](ctp:api:type:Product). If the Product contains an Attribute with the same `name`, then its `value` is overwritten. Otherwise, the Attribute and its `value` are added to the Product.
