#%RAML 1.0 DataType
(package): Subscription
type: Destination
displayName: SnsDestination
discriminatorValue: SNS
example: !include ../../examples/Subscription/SubscriptionSnsDestination.json
description: |
  [AWS SNS](https://aws.amazon.com/sns/) can be used to push messages to AWS Lambda, HTTP endpoints (webhooks), or fan-out messages to SQS queues. The SQS queue must be a [Standard](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/standard-queues.html) queue type.

  We recommend setting `authenticationMode` to `IAM`, to avoid unnecessary key management. For IAM authentication, give permissions to user `arn:aws:iam::362576667341:user/subscriptions` to publish to the topic before creating the Subscription. Otherwise, a test message will not be sent.

  If you prefer to use `Credentials` for authentication, we recommend [creating an IAM user](https://docs.aws.amazon.com/sns/latest/dg/sns-setting-up.html#create-iam-user) with an `accessKey` and `accessSecret` pair specifically for each Subscription.

  The IAM user should only have the `sns:Publish` permission on this topic.
properties:
  accessKey?:
    type: string
    description: Only present if `authenticationMode` is set to `Credentials`.
  accessSecret?:
    type: string
    description: Only present if `authenticationMode` is set to `Credentials`.
  topicArn:
    type: string
    description: Amazon Resource Name (ARN) of the topic.
  authenticationMode?:
    type: AwsAuthenticationMode
    default: Credentials
    description: Defines the method of authentication for the SNS topic.
