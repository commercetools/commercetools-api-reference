type: base
/{associateId}:
  type: base
  uriParameters:
    associateId:
      type: string
      description: '`id` of the [Customer](ctp:api:type:Customer) who is acting on behalf of the [BusinessUnit](ctp:api:type:BusinessUnit).'
  /business-units:
    type:
      baseDomain:
        resourceType: BusinessUnit
        resourceQueryType: BusinessUnitPagedQueryResponse
        resourceDraft: BusinessUnitDraft
        whereExample: 'name = "Some company"'
        sortExample: createdAt asc
    (updateable): BusinessUnit
    (deleteable): BusinessUnit
    (createable): BusinessUnitDraft
    description: A Business Unit can represent a Company or a Division.
    get:
      securedBy: [oauth_2_0: { scopes: ['view_business_units:{projectKey}'] }]
      displayName: Query business units
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/business-units.example.json
    head:
      securedBy: [oauth_2_0: { scopes: ['view_business_units:{projectKey}'] }]
      description: Checks if a BusinessUnit exists for a given Query Predicate. Returns a `200 OK` status if any BusinessUnits match the Query Predicate or a `404 Not Found` otherwise.
      queryParameters:
        where?:
          type: QueryPredicate[]
    post:
      securedBy: [oauth_2_0: { scopes: ['manage_business_units:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/business-unit-create.example.json
      responses:
        201:
          body:
            application/json:
              example: !include ../examples/business-unit.example.json
    /key={key}:
      (methodName): withKey
      type:
        baseResource:
          uriParameterName: key
          resourceType: BusinessUnit
          resourceUpdateType: BusinessUnitUpdate
      get:
        securedBy: [oauth_2_0: { scopes: ['view_business_units:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/business-unit.example.json
      head:
        securedBy: [oauth_2_0: { scopes: ['view_business_units:{projectKey}'] }]
        description: Checks if a BusinessUnit exists for a given `key`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.
      post:
        securedBy:
          [oauth_2_0: { scopes: ['manage_business_units:{projectKey}'] }]
        body:
          application/json:
            example: !include ../examples/business-unit-update.example.json
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/business-unit.example.json
    /{ID}:
      (methodName): withId
      type:
        baseResource:
          uriParameterName: ID
          resourceType: BusinessUnit
          resourceUpdateType: BusinessUnitUpdate
      get:
        securedBy: [oauth_2_0: { scopes: ['view_business_units:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/business-unit.example.json
      head:
        securedBy: [oauth_2_0: { scopes: ['view_business_units:{projectKey}'] }]
        description: Checks if a BusinessUnit exists for a given `id`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.
      post:
        securedBy:
          [oauth_2_0: { scopes: ['manage_business_units:{projectKey}'] }]
        body:
          application/json:
            example: !include ../examples/business-unit-update.example.json
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/business-unit.example.json
  /in-business-unit/key={businessUnitKey}:
    type: base
    uriParameters:
      businessUnitKey:
        type: string
        description: '`key` of the [BusinessUnit](ctp:api:type:BusinessUnit).'
    /approval-rules:
      type:
        baseDomain:
          resourceType: ApprovalRule
          resourceQueryType: ApprovalRulePagedQueryResponse
          resourceDraft: ApprovalRuleDraft
      (createable): ApprovalRuleDraft
      (updateable): ApprovalRule
      description: 'An Approval Rule describes the conditions determining whether an Order that matches the predicate needs approval by an approver before it can be ordered by an requester within a Business Unit.'
      get:
        securedBy: [oauth_2_0: { scopes: ['view_approval_rules:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/approval-rules.example.json
      post:
        securedBy:
          [oauth_2_0: { scopes: ['manage_approval_rules:{projectKey}'] }]
        body:
          application/json:
            example: !include ../examples/approval-rule-create.example.json
        responses:
          201:
            body:
              application/json:
                example: !include ../examples/approval-rule.example.json
      /{ID}:
        (methodName): withId
        type:
          baseResource:
            uriParameterName: ID
            resourceType: ApprovalRule
            resourceUpdateType: ApprovalRuleUpdate
        get:
          securedBy:
            [oauth_2_0: { scopes: ['view_approval_rules:{projectKey}'] }]
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/approval-rule.example.json
        post:
          securedBy:
            [oauth_2_0: { scopes: ['manage_approval_rules:{projectKey}'] }]
          body:
            application/json:
              example: !include ../examples/approval-rule-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/approval-rule.example.json
      /key={key}:
        (methodName): withKey
        type:
          baseResource:
            uriParameterName: key
            resourceType: ApprovalRule
            resourceUpdateType: ApprovalRuleUpdate
        get:
          securedBy:
            [oauth_2_0: { scopes: ['view_approval_rules:{projectKey}'] }]
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/approval-rule.example.json
        post:
          securedBy:
            [oauth_2_0: { scopes: ['manage_approval_rules:{projectKey}'] }]
          body:
            application/json:
              example: !include ../examples/approval-rule-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/approval-rule.example.json
    /approval-flows:
      type:
        baseDomain:
          resourceType: ApprovalFlow
          resourceQueryType: ApprovalFlowPagedQueryResponse
          resourceDraft: ApprovalFlowDraft
      (updateable): ApprovalFlow
      description: |
        Approval Flows connect Orders that require approval with the Approval Rules that initiate the approval requirement.
        They represent the approval process by including information about approvals, rejections, and all involved parties.
      get:
        securedBy: [oauth_2_0: { scopes: ['view_approval_flows:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/approval-flows.example.json
      /{ID}:
        (methodName): withId
        type:
          baseResource:
            uriParameterName: ID
            resourceType: ApprovalFlow
            resourceUpdateType: ApprovalFlowUpdate
        get:
          securedBy:
            [oauth_2_0: { scopes: ['view_approval_flows:{projectKey}'] }]
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/approval-flow.example.json
        post:
          securedBy:
            [oauth_2_0: { scopes: ['manage_approval_flows:{projectKey}'] }]
          body:
            application/json:
              example: !include ../examples/approval-flow-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/approval-flow-update-response.example.json
    /carts:
      type:
        baseDomain:
          resourceType: Cart
          resourceQueryType: CartPagedQueryResponse
          resourceDraft: CartDraft
          whereExample: 'customerEmail = "john.doe@example.com"'
          sortExample: createdAt asc
      (updateable): Cart
      (deleteable): Cart
      (createable): CartDraft
      description: A shopping cart holds product variants and can be ordered.
      get:
        securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
        displayName: Query carts in business unit
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/b2b-carts.example.json
      head:
        securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
        description: Checks if a Cart exists for a given Query Predicate. Returns a `200 OK` status if any Carts match the Query Predicate or a `404 Not Found` otherwise.
        queryParameters:
          where?:
            type: QueryPredicate[]
      post:
        displayName: Create cart in business unit
        securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
        description: |
          Creates a [Cart](ctp:api:type:Cart) in the [BusinessUnit](ctp:api:type:BusinessUnit) referenced by `businessUnitKey`. As such, the `businessUnit` field on [CartDraft](ctp:api:type:CartDraft) is ignored for this request.
          Creating a Cart can fail with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match the Cart.

          Specific Error Codes:

          - [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)
          - [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)
          - [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)
          - [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)

        body:
          application/json:
            example: !include ../examples/cart-create.example.json
        responses:
          201:
            body:
              application/json:
                example: !include ../examples/b2b-cart.example.json
      /key={key}:
        (methodName): withKey
        type:
          baseResource:
            uriParameterName: key
            resourceType: Cart
            resourceUpdateType: CartUpdate
        get:
          displayName: Get cart by key in business unit
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: |
            If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/b2b-cart.example.json
        head:
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: Checks if a Cart exists for a given `key`. Returns a `200 OK` status if the Cart exists or a `404 Not Found` otherwise.
        post:
          displayName: Update cart by key in business unit
          securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
          description: |
            If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/cart-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/b2b-cart.example.json
        delete:
          displayName: Delete cart by key in business unit
          is:
            - dataErasure
          securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
          description: If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/b2b-cart.example.json
      /{ID}:
        (methodName): withId
        type:
          baseResource:
            uriParameterName: ID
            resourceType: Cart
            resourceUpdateType: CartUpdate
        get:
          displayName: Get cart by id in business unit
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: |
            If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/b2b-cart.example.json
        head:
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: Checks if a Cart exists for a given `id`. Returns a `200 OK` status if the Cart exists or a `404 Not Found` otherwise.
        post:
          displayName: Update cart by id in business unit
          securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
          description: |
            If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/cart-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/b2b-cart.example.json
        delete:
          displayName: Delete cart by id in business unit
          is:
            - dataErasure
          securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
          description: If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/b2b-cart.example.json
      /replicate:
        type: base
        post:
          displayName: Replicate cart
          description: |
            Creates a new Cart by replicating an existing Cart or Order. Can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.

            The replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order. If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart. If the Customer switches to another Customer Group, the new Cart is updated with the new value. It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).

            The new Cart does not contain Payments or Deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.

            If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.

            Specific Error Codes:

            - [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)
            - [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)

          body:
            application/json:
              example: !include ../examples/cart-replicate.example.json
              type: ReplicaCartDraft
          responses:
            201:
              body:
                application/json:
                  example: !include ../examples/b2b-cart.example.json
                  type: Cart
          securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
    /orders:
      type:
        baseDomain:
          resourceType: Order
          resourceQueryType: OrderPagedQueryResponse
          resourceDraft: OrderFromCartDraft
          whereExample: 'customerEmail = "john.doe@example.com"'
          sortExample: createdAt asc
      (updateable): Order
      (deleteable): Order
      (createable): OrderFromCartDraft
      get:
        displayName: Query orders in business unit
        securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/orders.example.json
      head:
        securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
        description: Checks if an Order exists for a given Query Predicate. Returns a `200 OK` status if any Orders match the Query Predicate or a `404 Not Found` otherwise.
        queryParameters:
          where?:
            type: QueryPredicate[]
      post:
        displayName: Create order from cart in business unit
        securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
        description: |
          Creates an Order from a [Cart](ctp:api:type:Cart) in a [BusinessUnit](ctp:api:type:BusinessUnit).
          The Cart must have a shipping address set before creating an Order.
          Creating an Order fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Cart does not reference the same BusinessUnit as the `businessUnitKey` path parameter.

          Specific Error Codes:

          - [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)
          - [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)
          - [OutOfStock](ctp:api:type:OutOfStockError)
          - [PriceChanged](ctp:api:type:PriceChangedError)
          - [ShippingMethodDoesNotMatchCart](ctp:api:type:ShippingMethodDoesNotMatchCartError)
          - [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)
          - [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)
        body:
          application/json:
            example: !include ../examples/order-create.example.json
        responses:
          201:
            body:
              application/json:
                example: !include ../examples/order.example.json
      /quotes:
        (methodName): orderQuote
        type: base
        displayName: Create order from quote in a business unit
        post:
          displayName: Create an Order from a Quote
          securedBy: [oauth_2_0: { scopes: ['manage_quotes:{projectKey}'] }]
          description: |

            Creates an Order from a [Quote](ctp:api:type:Quote) in a [BusinessUnit](ctp:api:type:BusinessUnit).

            The Quote must reference the same Business Unit as the `businessUnitKey` path parameter, must have the `Pending` [state](ctp:api:type:QuoteState), and must be valid (not past the `validTo` date). If these criteria are not met, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.

            Specific Error Codes:

            - [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)
            - [OutOfStock](ctp:api:type:OutOfStockError)
          body:
            application/json:
              example: !include ../examples/order-from-quote.example.json
              type: OrderFromQuoteDraft
          responses:
            201:
              body:
                application/json:
                  example: !include ../examples/order.example.json
                  type: Order
      /order-number={orderNumber}:
        (methodName): withOrderNumber
        uriParameters:
          orderNumber:
            type: string
            description: '`orderNumber` of the [Order](ctp:api:type:Order). Should be provided in URL-encoded format.'
        type:
          baseResource:
            uriParameterName: orderNumber
            resourceType: Order
            resourceUpdateType: OrderUpdate
        get:
          displayName: Get order by order number in business unit
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: |
            If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/order.example.json
        head:
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: Checks if an Order exists for a given `orderNumber`. Returns a `200 OK` status if the Order exists or a `404 Not Found` otherwise.
        post:
          displayName: Update order by order number in business unit
          securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
          description: |
            If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/order-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/order.example.json
      /{ID}:
        (methodName): withId
        type:
          baseResource:
            uriParameterName: ID
            resourceType: Order
            resourceUpdateType: OrderUpdate
        get:
          displayName: Get order by id in business unit
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: |
            If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/order.example.json
        head:
          securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
          description: Checks if an Order exists for a given `id`. Returns a `200 OK` status if the Order exists or a `404 Not Found` otherwise.
        post:
          displayName: Update order by id in business unit
          securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
          description: |
            If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/order-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/order.example.json
    /quotes:
      type:
        baseDomain:
          resourceType: Quote
          resourceQueryType: QuotePagedQueryResponse
          resourceDraft: QuoteDraft
          whereExample: 'quoteState = "Accepted"'
          sortExample: createdAt asc
      (updateable): Quote
      (deleteable): Quote
      (createable): QuoteDraft
      description: A quote holds the negotiated offer.
      get:
        securedBy: [oauth_2_0: { scopes: ['view_quotes:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/quotes.example.json
      head:
        securedBy: [oauth_2_0: { scopes: ['view_quotes:{projectKey}'] }]
        description: Checks if a Quote exists for a given Query Predicate. Returns a `200 OK` status if any Quotes match the Query Predicate or a `404 Not Found` otherwise.
        queryParameters:
          where?:
            type: QueryPredicate[]
      /key={key}:
        (methodName): withKey
        type:
          baseResource:
            uriParameterName: key
            resourceType: Quote
            resourceUpdateType: QuoteUpdate
        get:
          securedBy: [oauth_2_0: { scopes: ['view_quotes:{projectKey}'] }]
          description: |
            If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote.example.json
        head:
          securedBy: [oauth_2_0: { scopes: ['view_quotes:{projectKey}'] }]
          description: Checks if a Quote exists for a given `key`. Returns a `200 OK` status if the Quote exists or a `404 Not Found` otherwise.
        post:
          securedBy: [oauth_2_0: { scopes: ['manage_quotes:{projectKey}'] }]
          description: |
            If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/quote-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote.example.json
      /{ID}:
        (methodName): withId
        type:
          baseResource:
            uriParameterName: ID
            resourceType: Quote
            resourceUpdateType: QuoteUpdate
        get:
          securedBy: [oauth_2_0: { scopes: ['view_quotes:{projectKey}'] }]
          description: |
            If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote.example.json
        head:
          securedBy: [oauth_2_0: { scopes: ['view_quotes:{projectKey}'] }]
          description: Checks if a Quote exists for a given `id`. Returns a `200 OK` status if the Quote exists or a `404 Not Found` otherwise.
        post:
          securedBy: [oauth_2_0: { scopes: ['manage_quotes:{projectKey}'] }]
          description: |
            If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/quote-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote.example.json
    /quote-requests:
      type:
        baseDomain:
          resourceType: QuoteRequest
          resourceQueryType: QuoteRequestPagedQueryResponse
          resourceDraft: QuoteRequestDraft
          whereExample: 'quoteRequestState = "Submitted"'
          sortExample: createdAt asc
      (updateable): QuoteRequest
      (deleteable): QuoteRequest
      (createable): QuoteRequestDraft
      get:
        securedBy: [oauth_2_0: { scopes: ['view_quote_requests:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/quote-requests.example.json
      head:
        securedBy: [oauth_2_0: { scopes: ['view_quote_requests:{projectKey}'] }]
        description: Checks if a QuoteRequest exists for a given Query Predicate. Returns a `200 OK` status if any QuoteRequests match the Query Predicate or a `404 Not Found` otherwise.
        queryParameters:
          where?:
            type: QueryPredicate[]
      post:
        securedBy:
          [oauth_2_0: { scopes: ['manage_quote_requests:{projectKey}'] }]
        description:
          Creates a QuoteRequest in a [BusinessUnit](ctp:api:type:BusinessUnit).
          Creating QuoteRequest fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Cart does not reference the same BusinessUnit as the `businessUnitKey` path parameter.
        body:
          application/json:
            example: !include ../examples/quote-request-create.example.json
        responses:
          201:
            body:
              application/json:
                example: !include ../examples/quote-request.example.json
      /key={key}:
        (methodName): withKey
        type:
          baseResource:
            uriParameterName: key
            resourceType: QuoteRequest
            resourceUpdateType: QuoteRequestUpdate
        get:
          securedBy:
            [oauth_2_0: { scopes: ['view_quote_requests:{projectKey}'] }]
          description: |
            If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote-request.example.json
        head:
          securedBy:
            [oauth_2_0: { scopes: ['view_quote_requests:{projectKey}'] }]
          description: Checks if a QuoteRequest exists for a given `key`. Returns a `200 OK` status if the QuoteRequest exists or a `404 Not Found` otherwise.
        post:
          securedBy:
            [oauth_2_0: { scopes: ['manage_quote_requests:{projectKey}'] }]
          description: |
            If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/quote-request-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote-request-update-response.example.json
      /{ID}:
        (methodName): withId
        type:
          baseResource:
            uriParameterName: ID
            resourceType: QuoteRequest
            resourceUpdateType: QuoteRequestUpdate
        get:
          securedBy:
            [oauth_2_0: { scopes: ['view_quote_requests:{projectKey}'] }]
          description: |
            If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote-request.example.json
        head:
          securedBy:
            [oauth_2_0: { scopes: ['view_quote_requests:{projectKey}'] }]
          description: Checks if a QuoteRequest exists for a given `id`. Returns a `200 OK` status if the QuoteRequest exists or a `404 Not Found` otherwise.
        post:
          securedBy:
            [oauth_2_0: { scopes: ['manage_quote_requests:{projectKey}'] }]
          description: |
            If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
          body:
            application/json:
              example: !include ../examples/quote-request-update.example.json
          responses:
            200:
              body:
                application/json:
                  example: !include ../examples/quote-request-update-response.example.json
