type:
  baseDomain:
    resourceType: Product
    resourceQueryType: ProductPagedQueryResponse
    resourceDraft: ProductDraft
    whereExample: 'masterData(current (name = "jeans"))'
    sortExample: createdAt asc
(updateable): Product
(deleteable): Product
(createable): ProductDraft
description: |
  Products are the sellable goods in an e-commerce project on CTP. This document explains some design concepts
  of products on CTP and describes the available HTTP APIs for working with them.
get:
  (java-implements):
    'com.commercetools.api.models.PagedQueryResourceRequest<ByProjectKeyProductsGet,
    com.commercetools.api.models.product.ProductPagedQueryResponse>'
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  description: |
    You can use the query endpoint to get the full representations of products.
    REMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,
    the query API lacks like sorting on custom attributes, etc.
  is:
    - priceSelecting
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/products.example.json
post:
  securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
  description: |
    To create a new product, send a representation that is going to become the initial staged representation
    of the new product in the master catalog. If price selection query parameters are provided,
    the selected prices will be added to the response.
  is:
    - priceSelecting
  body:
    application/json:
      example: !include ../examples/product-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/product.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Product
      resourceUpdateType: ProductUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Gets the full representation of a product by Key.
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    body:
      application/json:
        example: !include ../examples/product-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Product
      resourceUpdateType: ProductUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Gets the full representation of a product by ID.
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    body:
      application/json:
        example: !include ../examples/product-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json

  /images:
    post:
      displayName: Upload a product image
      queryParameters:
        filename?:
          type: string
        variant?:
          type: number
          format: int64
        sku?:
          type: string
        staged?:
          type: boolean
      description: |
        Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.
      securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
      body:
        type: file
        fileTypes: ['image/jpeg', 'image/png', 'image/gif']
      headers:
        Content-Type:
          enum: ['image/jpeg', 'image/png', 'image/gif']
      responses:
        200:
          body:
            example: !include ../examples/product.example.json
            type: Product
