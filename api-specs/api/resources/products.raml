type:
  baseDomain:
    resourceType: Product
    resourceQueryType: ProductPagedQueryResponse
    resourceDraft: ProductDraft
    whereExample: 'masterData(current (name = "jeans"))'
    sortExample: createdAt asc
(updateable): Product
(deleteable): Product
(createable): ProductDraft
description: |
  Products themselves are not sellable. Instead, they act as a parent structure for sellable Product Variants.
get:
  (csharp-implements):
    'commercetools.Sdk.Api.Models.IPagedQueryResourceRequest<ByProjectKeyProductsGet,
    commercetools.Sdk.Api.Models.Products.IProductPagedQueryResponse>'
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  is:
    - priceSelecting
  description: |-
    If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
  queryParameters:
    where:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Product Attributes are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/products.example.json
head:
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  description: Check if Products exist. Responds with a `200 OK` status if any Products match the Query Predicate, or `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Product Attributes are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
post:
  securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
  description: |
    To create a new Product, send a representation that is going to become the initial _staged_ representation of the new Product in the master catalog.
    If [Price Selection](ctp:api:type:ProductPriceSelection) query parameters are provided, selected Prices will be added to the response.
    Produces the [ProductCreated](/projects/messages#product-created) Message.
  is:
    - priceSelecting
  body:
    application/json:
      example: !include ../examples/product-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/product.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Product
      resourceUpdateType: ProductUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: |-
      If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  head:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Check if a Product exists with a specified `key`. Responds with a `200 OK` status if the Product exists or `404 Not Found` otherwise.
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
    body:
      application/json:
        example: !include ../examples/product-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  delete:
    description: |-
      If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
      Produces the [ProductDeleted](/projects/messages#product-deleted) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json

  /product-selections:
    type:
      baseDomain:
        resourceType: ProductSelection
        resourceQueryType: AssignedProductSelectionPagedQueryResponse
    get:
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-assigned-selections.example.json

/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Product
      resourceUpdateType: ProductUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: |-
      If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  head:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Check if a Product exists with a specified `id`. Responds with a `200 OK` status if the Product exists or `404 Not Found` otherwise.
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: |-
      If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.

      A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
    body:
      application/json:
        example: !include ../examples/product-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  delete:
    description: |-
      If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
      Produces the [ProductDeleted](/projects/messages#product-deleted) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json

  /images:
    post:
      displayName: Upload a Product image
      queryParameters:
        filename?:
          type: string
          description: Base filename of the image when stored in the Content Delivery Network. The filename will be modified when uploaded to prevent filename conflicts. If not included a random filename will be allocated.
        variant?:
          type: number
          format: int64
          description: The id of the [ProductVariant](ctp:api:type:ProductVariant) the image should be uploaded to.
        sku?:
          type: string
          description: The sku of the [ProductVariant](ctp:api:type:ProductVariant) the image should be uploaded to.
        staged?:
          type: boolean
          description: If `true`, only the staged ProductVariant is updated. If `false`, both the current and staged ProductVariant are updated.
      description: |
        Upload a JPEG, PNG and GIF file to a [ProductVariant](ctp:api:type:ProductVariant). The maximum file size of the image is 10MB. `variant` or `sku` is required to update a specific ProductVariant. The image is uploaded to the Master Variant if `variant` or `sku` are not included. Produces the [ProductImageAdded](/projects/messages#product-image-added) Message when the `Small` version of the image has been uploaded to the CDN.
      securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
      body:
        type: file
        fileTypes: ['image/jpeg', 'image/png', 'image/gif']
      headers:
        Content-Type:
          enum: ['image/jpeg', 'image/png', 'image/gif']
      responses:
        200:
          body:
            example: !include ../examples/product.example.json
            type: Product

  /product-selections:
    type:
      baseDomain:
        resourceType: ProductSelection
        resourceQueryType: AssignedProductSelectionPagedQueryResponse
    get:
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-assigned-selections.example.json
