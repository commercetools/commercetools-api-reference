type:
  baseDomain:
    resourceType: Product
    resourceQueryType: ProductPagedQueryResponse
    resourceDraft: ProductDraft
    whereExample: 'masterData(current (name = "jeans"))'
    sortExample: createdAt asc
(updateable): Product
(deleteable): Product
(createable): ProductDraft
description: |
  Products themselves are not sellable. Instead, they act as a parent structure for sellable Product Variants.
get:
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'view_products:{projectKey}',
              'view_published_products:{projectKey}',
            ],
        },
    ]
  is:
    - priceSelecting
  description: |-
    If [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.
  queryParameters:
    where:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Product Attributes are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/products.example.json
head:
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  description: Checks if a Product exists for a given Query Predicate. Returns a `200 OK` status if any Products match the Query Predicate or a `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Product Attributes are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
post:
  securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
  description: |
    To create a new Product, send a representation that is going to become the initial _staged_ and _current_ representation of the new Product in the catalog.
    If [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, selected Prices will be added to the response.
    Produces the [ProductCreated](/projects/messages/product-catalog-messages#product-created) Message.
  is:
    - priceSelecting
  body:
    application/json:
      example: !include ../examples/product-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/product.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Product
      resourceUpdateType: ProductUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: |-
      If [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  head:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Checks if a Product exists for a given `key`. Returns a `200 OK` status if the Product exists or a `404 Not Found` otherwise.
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
    body:
      application/json:
        example: !include ../examples/product-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  delete:
    description: |-
      If [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.
      Produces the [ProductDeleted](/projects/messages/product-catalog-messages#product-deleted) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json

  /product-selections:
    type:
      baseDomain:
        resourceType: ProductSelection
        resourceQueryType: AssignedProductSelectionPagedQueryResponse
    get:
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-assigned-selections.example.json

/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Product
      resourceUpdateType: ProductUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: |-
      If [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  head:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Checks if a Product exists for a given `id`. Returns a `200 OK` status if the Product exists or a `404 Not Found` otherwise.
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    description: |-
      If [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.

      A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
    body:
      application/json:
        example: !include ../examples/product-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json
  delete:
    description: |-
      If [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.
      Produces the [ProductDeleted](/projects/messages/product-catalog-messages#product-deleted) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    is:
      - priceSelecting
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product.example.json

  /images:
    post:
      displayName: Upload a Product image
      description: |
        Uploads a JPEG, PNG, or a GIF image file to a [ProductVariant](ctp:api:type:ProductVariant).
        The maximum file size of the image is **10MB**.
        Either `variant` or `sku` is required to update a specific ProductVariant.
        If neither is provided, the image is uploaded to the Master Variant of the Product.

        The response status code depends on the size of the original image.
        If the image is small, the API responds with `200 OK`, and if the image is larger, it responds with `202 Accepted`.
        The Product returned with a `202 Accepted` status code contains a `warnings` field with an [ImageProcessingOngoing](ctp:api:type:ImageProcessingOngoingWarning) Warning.

        Produces the [ProductImageAdded](/projects/messages/product-catalog-messages#product-image-added) Message.

      queryParameters:
        filename?:
          type: string
          default: 'img'
          description: |
            URL-encoded filename of the image when stored in the Content Delivery Network (CDN).
            The filename is modified when uploaded to prevent filename conflicts.
            If not provided, a random filename is generated.
        variant?:
          type: number
          format: int64
          description: |
            The `id` of the [ProductVariant](ctp:api:type:ProductVariant) the image should be uploaded to.
        sku?:
          type: string
          description: |
            The `sku` of the [ProductVariant](ctp:api:type:ProductVariant) the image should be uploaded to.
        staged?:
          type: boolean
          default: true
          description: |
            If `true`, only the staged ProductVariant is updated.
            If `false`, both the current and staged ProductVariant are updated.
      securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
      body:
        image/jpeg:
          type: file
        image/png:
          type: file
        image/gif:
          type: file
      headers:
        Content-Type:
          type: string
          description: |
            One of `image/jpeg`, `image/png`, or `image/gif`.
      responses:
        200:
          body:
            application/json:
              type: Product
              example: !include ../examples/product.example.json
        202:
          body:
            application/json:
              type: Product
              example: !include ../examples/product-with-image-processing-warning.example.json
  /product-selections:
    type:
      baseDomain:
        resourceType: ProductSelection
        resourceQueryType: AssignedProductSelectionPagedQueryResponse
    get:
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-assigned-selections.example.json
/search:
  type: base
  displayName: Product Search
  description: |
    This endpoint provides high-performance search queries over Products. Product Search allows searching through all products with a current projection in your Project.
  post:
    displayName: Search Products
    securedBy: [oauth_2_0: { scopes: ['view_published_products:{projectKey}'] }]
    description: |
      If the indexing is in progress or the feature is inactive, an [ObjectNotFound](ctp:api:type:ObjectNotFoundError) error is returned.
      If inactive, you can [reactivate](/../api/projects/product-search#activation-of-the-feature) it.
    body:
      application/json:
        type: ProductSearchRequest
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/ProductSearch/product-search-response.example.json
            type: ProductPagedSearchResponse
