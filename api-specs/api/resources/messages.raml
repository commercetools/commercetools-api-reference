type:
  baseDomain:
    resourceType: Message
    resourceQueryType: MessagePagedQueryResponse
    resourceDraft: MessageDraft
    whereExample: 'type = "ProductCreated"'
    sortExample: createdAt asc
description:
  A message represents a change or an action performed on a resource (like an
  Order or a Product).
get:
  displayName: Query Messages
  description: 'Deprecated OAuth 2.0 Scope: `view_orders:{projectKey}`'
  securedBy: [oauth_2_0: { scopes: ['view_messages:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/messages.example.json
head:
  displayName: Check if Message exists by Query Predicate
  securedBy: [oauth_2_0: { scopes: ['view_messages:{projectKey}'] }]
  description: Checks if one or more Messages exist for the provided query predicate. Returns a `200 OK` status if any Messages match the query predicate, or a `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Messages are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Message
  get:
    displayName: Get Message by ID
    description: 'Deprecated OAuth 2.0 Scope: `view_orders:{projectKey}`'
    securedBy: [oauth_2_0: { scopes: ['view_messages:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/message.example.json
  head:
    displayName: Check if Message exists by ID
    securedBy: [oauth_2_0: { scopes: ['view_messages:{projectKey}'] }]
    description: Checks if a Message exists with the provided `id`. Returns a `200 OK` status if the Message exists or a `404 Not Found` otherwise.
