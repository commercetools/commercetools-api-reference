type:
  baseDomain:
    resourceType: Payment
    resourceQueryType: PaymentPagedQueryResponse
    resourceDraft: PaymentDraft
    whereExample: 'externalId = "1234567890"'
    sortExample: createdAt asc
(updateable): Payment
(deleteable): Payment
(createable): PaymentDraft
description:
  Payments hold information about the current state of receiving and/or
  refunding money
get:
  displayName: Query Payments
  securedBy: [oauth_2_0: { scopes: ['view_payments:{projectKey}'] }]
  description: Retrieves Payments in the Project.
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/payments.example.json
head:
  displayName: Check if Payment exists by Query Predicate
  securedBy: [oauth_2_0: { scopes: ['view_payments:{projectKey}'] }]
  description: Checks if one or more Payments exist for the provided query predicate. Returns a `200 OK` status if any Payments match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
post:
  displayName: Create Payment
  securedBy: [oauth_2_0: { scopes: ['manage_payments:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/payment-create.example.json
  description: |
    Creates a Payment in the Project.
    Creating a Payment produces the [PaymentCreated](ctp:api:type:PaymentCreatedMessage) Message.
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/payment.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Payment
      resourceUpdateType: PaymentUpdate
  get:
    displayName: Get Payment by Key
    securedBy: [oauth_2_0: { scopes: ['view_payments:{projectKey}'] }]
    description: Retrieves a Payment with the provided `key`.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment.example.json
  head:
    displayName: Check if Payment exists by Key
    securedBy: [oauth_2_0: { scopes: ['view_payments:{projectKey}'] }]
    description: Checks if a Payment exists with the provided `key`. Returns a `200 OK` status if the Payment exists, or [Not Found](/../api/errors#404-not-found) otherwise.
  post:
    displayName: Update Payment by Key
    securedBy: [oauth_2_0: { scopes: ['manage_payments:{projectKey}'] }]
    description: Updates a Payment in the Project using one or more [update actions](/../api/projects/payments#update-actions).
    body:
      application/json:
        example: !include ../examples/payment-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment.example.json
  delete:
    displayName: Delete Payment by Key
    is:
      - dataErasure
    securedBy: [oauth_2_0: { scopes: ['manage_payments:{projectKey}'] }]
    description: Deletes a Payment in the Project.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Payment
      resourceUpdateType: PaymentUpdate
  get:
    displayName: Get Payment by ID
    securedBy: [oauth_2_0: { scopes: ['view_payments:{projectKey}'] }]
    description: Retrieves a Payment with the provided `id`.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment.example.json
  head:
    displayName: Check if Payment exists by ID
    securedBy: [oauth_2_0: { scopes: ['view_payments:{projectKey}'] }]
    description: Checks if a Payment exists with the provided `id`. Returns a `200 OK` status if the Payment exists, or [Not Found](/../api/errors#404-not-found) otherwise.
  post:
    displayName: Update Payment by ID
    securedBy: [oauth_2_0: { scopes: ['manage_payments:{projectKey}'] }]
    description: Updates a Payment in the Project using one or more [update actions](/../api/projects/payments#update-actions).
    body:
      application/json:
        example: !include ../examples/payment-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment.example.json
  delete:
    displayName: Delete Payment by ID
    is:
      - dataErasure
    securedBy: [oauth_2_0: { scopes: ['manage_payments:{projectKey}'] }]
    description: Deletes a Payment in the Project.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment.example.json
