type:
  baseDomain:
    resourceType: AttributeGroup
    resourceQueryType: AttributeGroupPagedQueryResponse
    resourceDraft: AttributeGroupDraft
    whereExample: 'name(en = "SEO attributes")'
    sortExample: name.en asc
(updateable): AttributeGroup
(deleteable): AttributeGroup
(createable): AttributeGroupDraft
description: Attribute groups ... TODO
get:
  displayName: Query AttributeGroups
  securedBy: [oauth_2_0: { scopes: ['view_attribute_groups:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/AttributeGroup/AttributeGroups.json
head:
  displayName: Check if AttributeGroup exists by Query Predicate
  securedBy: [oauth_2_0: { scopes: ['view_attribute_groups:{projectKey}'] }]
  description: Checks if one or more AttributeGroups exist for the provided query predicate. Returns `200 OK` status if any AttributeGroups match the query predicate, or a `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Attribute Groups are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
post:
  displayName: Create AttributeGroup
  securedBy: [oauth_2_0: { scopes: ['manage_attribute_groups:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/AttributeGroup/AttributeGroupDraft.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/AttributeGroup/AttributeGroup.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: AttributeGroup
      resourceUpdateType: AttributeGroupUpdate
  get:
    displayName: Get AttributeGroup by Key
    securedBy: [oauth_2_0: { scopes: ['view_attribute_groups:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/AttributeGroup/AttributeGroup.json
  head:
    displayName: Check if AttributeGroup exists by Key
    securedBy: [oauth_2_0: { scopes: ['view_attribute_groups:{projectKey}'] }]
    description: Checks if an AttributeGroup exists with the provided `key`. Returns `200 OK` status if the AttributeGroup exists or a `404 Not Found` otherwise.
  post:
    displayName: Update AttributeGroup by Key
    securedBy: [oauth_2_0: { scopes: ['manage_attribute_groups:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/AttributeGroup/AttributeGroupUpdate.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/AttributeGroup/AttributeGroup.json
  delete:
    displayName: Delete AttributeGroup by Key
    securedBy: [oauth_2_0: { scopes: ['manage_attribute_groups:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/AttributeGroup/AttributeGroup.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: AttributeGroup
      resourceUpdateType: AttributeGroupUpdate
  get:
    displayName: Get AttributeGroup by ID
    securedBy: [oauth_2_0: { scopes: ['view_attribute_groups:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/AttributeGroup/AttributeGroup.json
  head:
    displayName: Check if AttributeGroup exists by ID
    securedBy: [oauth_2_0: { scopes: ['view_attribute_groups:{projectKey}'] }]
    description: Checks if an AttributeGroup exists with the provided `id`. Returns a `200 OK` status if the AttributeGroup exists or a `404 Not Found` otherwise.
  post:
    displayName: Update AttributeGroup by ID
    securedBy: [oauth_2_0: { scopes: ['manage_attribute_groups:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/AttributeGroup/AttributeGroupUpdate.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/AttributeGroup/AttributeGroup.json
  delete:
    displayName: Delete AttributeGroup by ID
    securedBy: [oauth_2_0: { scopes: ['manage_attribute_groups:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/AttributeGroup/AttributeGroup.json
