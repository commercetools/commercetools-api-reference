type:
  baseDomain:
    resourceType: Subscription
    resourceQueryType: SubscriptionPagedQueryResponse
    resourceDraft: SubscriptionDraft
    whereExample: 'key = "product-subscription"'
    sortExample: createdAt asc
(updateable): Subscription
(deleteable): Subscription
(createable): SubscriptionDraft
description:
  Subscriptions allow you to be notified of new messages or changes via a
  Message Queue of your choice
get:
  (java-implements):
    'com.commercetools.api.models.PagedQueryResourceRequest<ByProjectKeySubscriptionsGet,
    com.commercetools.api.models.subscription.SubscriptionPagedQueryResponse>'
  (csharp-implements):
    'commercetools.Sdk.Api.Models.IPagedQueryResourceRequest<ByProjectKeySubscriptionsGet,
    commercetools.Sdk.Api.Models.Subscriptions.ISubscriptionPagedQueryResponse>'
  securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/subscriptions.example.json
post:
  securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
  description: |
    The creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.
    In order to test that the destination is correctly configured, a test message will be put into the queue.
    If the message could not be delivered, the subscription will not be created.
    The payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.
    Currently, a maximum of 25 subscriptions can be created per project.
  body:
    application/json:
      example: !include ../examples/subscription-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/subscription.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Subscription
      resourceUpdateType: SubscriptionUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    description: Retrieves the representation of a subscription by its key.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/subscription-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Subscription
      resourceUpdateType: SubscriptionUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    description: Retrieves the representation of a subscription by its id.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/subscription-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
