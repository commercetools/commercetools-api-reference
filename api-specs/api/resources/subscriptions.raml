type:
  baseDomain:
    resourceType: Subscription
    resourceQueryType: SubscriptionPagedQueryResponse
    resourceDraft: SubscriptionDraft
    whereExample: 'key = "product-subscription"'
    sortExample: createdAt asc
(updateable): Subscription
(deleteable): Subscription
(createable): SubscriptionDraft
description:
  Subscriptions allow you to be notified of new messages or changes via a
  Message Queue of your choice
get:
  (csharp-implements):
    'commercetools.Sdk.Api.Models.IPagedQueryResourceRequest<ByProjectKeySubscriptionsGet,
    commercetools.Sdk.Api.Models.Subscriptions.ISubscriptionPagedQueryResponse>'
  securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/subscriptions.example.json
post:
  securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
  description: |
    A test message is sent to ensure the correct configuration of the Destination. If the message cannot be delivered, the Subscription will not be created. The payload of the test message is a notification of type [ResourceCreated](/../api/projects/subscriptions#resourcecreateddeliverypayload) for the `resourceTypeId` `subscription`.
  body:
    application/json:
      example: !include ../examples/subscription-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/subscription.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Subscription
      resourceUpdateType: SubscriptionUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/subscription-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Subscription
      resourceUpdateType: SubscriptionUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/subscription-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_subscriptions:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/subscription.example.json
  /health:
    (methodName): withIdHealth
    get:
      displayName: Get Health Status of Subscription by ID
      description: |
        This endpoint can be polled by a monitoring or alerting system that checks the health of your Subscriptions. To ease integration with such systems this endpoint does not require [Authorization](/../api/authorization).
      responses:
        200:
          description: |
            Healthy
        400:
          description: |
            ConfigurationError and ConfigurationErrorDeliveryStopped
        503:
          description: |
            TemporaryError
