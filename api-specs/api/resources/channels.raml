type:
  baseDomain:
    resourceType: Channel
    resourceQueryType: ChannelPagedQueryResponse
    resourceDraft: ChannelDraft
    whereExample: 'key = "berlin-store"'
    sortExample: createdAt asc
(updateable): Channel
(deleteable): Channel
(createable): ChannelDraft
description: |
  Channels represent a source or destination of different entities. They can be used to model warehouses or stores.
get:
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/channels.example.json
head:
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  description: Checks if a Channel exists for a given Query Predicate. Returns a `200 OK` status if any Channels match the Query Predicate or a `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Channels are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
post:
  securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/channel-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/channel.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Channel
      resourceUpdateType: ChannelUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/channel.example.json
  head:
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Checks if a Channel exists for a given `id`. Returns a `200 OK` status if the Channel exists or a `404 Not Found` otherwise.
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/channel-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/channel.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/channel.example.json
