type:
  baseDomain:
    resourceType: ProductSelection
    resourceQueryType: ProductSelectionPagedQueryResponse
    resourceDraft: ProductSelectionDraft
    whereExample: 'key = "berlin-selection"'
    sortExample: createdAt asc
(updateable): ProductSelection
(deleteable): ProductSelection
(createable): ProductSelectionDraft
description: |
  Manage individual Store assortments through Product Selections.

  After you have created Product Selections and populated them by Products,
  you can manage Store assortments by assigning Product Selections to Stores.
  Product Selections may be used by a single Store or shared across several Stores.

  As a good practice, we recommend first creating Products in the project, and then creating Product Selection.
get:
  securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/product-selections.example.json
post:
  securedBy: [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/product-selection-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/product-selection.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: ProductSelection
      resourceUpdateType: ProductSelectionUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  post:
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/product-selection-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  delete:
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    description: Deletion will only succeed if the Product Selection is not assigned to any [Store](/../api/projects/stores#store).
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  /products:
    type: base
    get:
      description:
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      is:
        - expandable
        - paging
        - sortable
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-selection-products.example.json
              type: ProductSelectionProductPagedQueryResponse
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: ProductSelection
      resourceUpdateType: ProductSelectionUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  post:
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/product-selection-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  delete:
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    description: Deletion will only succeed if the Product Selection is not assigned to any [Store](/../api/projects/stores#store).
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  /products:
    type: base
    get:
      description:
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      is:
        - expandable
        - paging
        - sortable
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-selection-products.example.json
              type: ProductSelectionProductPagedQueryResponse
