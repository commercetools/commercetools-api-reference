type:
  baseDomain:
    resourceType: ProductSelection
    resourceQueryType: ProductSelectionPagedQueryResponse
    resourceDraft: ProductSelectionDraft
    whereExample: 'key = "berlin-selection"'
    sortExample: createdAt asc
(updateable): ProductSelection
(deleteable): ProductSelection
(createable): ProductSelectionDraft
description: |
  Manage individual Store assortments through Product Selections.

  After you have created Product Selections and populated them with Products,
  you can manage Store assortments by assigning Product Selections to Stores.
  Product Selections may be used by a single Store or shared across several Stores.

  As a good practice, we recommend first creating Products in the project, and then creating Product Selection.
get:
  displayName: Query ProductSelections
  securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/product-selections.example.json
head:
  displayName: Check if ProductSelection exists by Query Predicate
  securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
  description: Checks if one or more ProductSelections exist for the provided query predicate. Returns a `200 OK` status if any ProductSelections match the query predicate, or a `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
post:
  displayName: Create ProductSelection
  securedBy: [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/product-selection-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/product-selection.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: ProductSelection
      resourceUpdateType: ProductSelectionUpdate
  get:
    displayName: Get ProductSelection by Key
    securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  head:
    displayName: Check if ProductSelection exists by Key
    securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
    description: Checks if a ProductSelection exists with the provided `key`. Returns a `200 OK` status if the ProductSelection exists or a `404 Not Found` otherwise.
  post:
    displayName: Update ProductSelection by Key
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/product-selection-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  delete:
    displayName: Delete ProductSelection by Key
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    description: Deletion will only succeed if the Product Selection is not assigned to any [Store](ctp:api:type:Store).
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  /products:
    type: base
    get:
      displayName: Query Products in ProductSelection by Key
      description:
      queryParameters:
        where?:
          type: QueryPredicate[]
        withTotal:
          type: boolean
          default: false
          required: false
          description: |
            Controls the calculation of the [total](/../api/general-concepts#total) number of query results. Set to `true` to get the [total](/general-concepts#total) number of query results. This may impact query performance.
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      is:
        - expandable
        - paging
        - sortable
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-selection-products.example.json
              type: ProductSelectionProductPagedQueryResponse
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: ProductSelection
      resourceUpdateType: ProductSelectionUpdate
  get:
    displayName: Get ProductSelection by ID
    securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  head:
    displayName: Check if ProductSelection exists by ID
    securedBy: [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
    description: Checks if a ProductSelection exists with the provided `id`. Returns a `200 OK` status if the ProductSelection exists or a `404 Not Found` otherwise.
  post:
    displayName: Update ProductSelection by ID
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/product-selection-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  delete:
    displayName: Delete ProductSelection by ID
    securedBy:
      [oauth_2_0: { scopes: ['manage_product_selections:{projectKey}'] }]
    description: Deletion will only succeed if the Product Selection is not assigned to any [Store](ctp:api:type:Store).
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/product-selection.example.json
  /products:
    type: base
    get:
      displayName: Query Products in ProductSelection by ID
      description:
      queryParameters:
        where?:
          type: QueryPredicate[]
        withTotal:
          type: boolean
          default: false
          required: false
          description: |
            Controls the calculation of the [total](/../api/general-concepts#total) number of query results. Set to `true` to get the [total](/general-concepts#total) number of query results. This may impact query performance.
      securedBy:
        [oauth_2_0: { scopes: ['view_product_selections:{projectKey}'] }]
      is:
        - expandable
        - paging
        - sortable
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/product-selection-products.example.json
              type: ProductSelectionProductPagedQueryResponse
