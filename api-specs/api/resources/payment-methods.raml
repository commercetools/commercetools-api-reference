type:
  baseDomain:
    resourceType: PaymentMethod
    resourceQueryType: PaymentMethodPagedQueryResponse
    resourceDraft: PaymentMethodDraft
    whereExample: 'name(en="Name of Payment Method")'
    sortExample: createdAt asc
(updateable): PaymentMethod
(deleteable): PaymentMethod
(createable): PaymentMethodDraft
description: A PaymentMethod stores details about the method and the PSP
get:
  displayName: Query PaymentMethods
  description: |
    Retrieves all PaymentMethods in the Project.
  securedBy: [oauth_2_0: { scopes: ['view_payment_methods:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/payment-methods.example.json
head:
  displayName: Check if PaymentMethod exists by Query Predicate
  description: |
    Checks if one or more PaymentMethods exist for the provided query predicate.
    Returns a `200` status if any PaymentMethods match the query predicate, or a `404` status otherwise.
  securedBy: [oauth_2_0: { scopes: ['view_payment_methods:{projectKey}'] }]
  queryParameters:
    where?:
      type: QueryPredicate[]
post:
  displayName: Create PaymentMethod
  description: |
    Creates a PaymentMethod in the Project.
    This request generates the [PaymentMethodCreated](ctp:api:type:PaymentMethodCreatedMessage) Message.
  securedBy: [oauth_2_0: { scopes: ['manage_payment_methods:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/payment-method-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/payment-method.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: PaymentMethod
      resourceUpdateType: PaymentMethodUpdate
  get:
    displayName: Get PaymentMethod by Key
    description: |
      Retrieves a PaymentMethod with the provided `key`.
    securedBy: [oauth_2_0: { scopes: ['view_payment_methods:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment-method.example.json
  head:
    displayName: Check if PaymentMethod exists by Key
    description: |
      Checks if a PaymentMethod exists with the provided `key`.
      Returns a `200` status if the PaymentMethod exists, or a `404` status otherwise.
    securedBy: [oauth_2_0: { scopes: ['view_payment_methods:{projectKey}'] }]
  post:
    displayName: Update PaymentMethod by Key
    description: |
      Updates a PaymentMethod in the Project using one or more [update actions](/../api/projects/payment-methods#update-actions).
    securedBy: [oauth_2_0: { scopes: ['manage_payment_methods:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/payment-method-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment-method.example.json
  delete:
    displayName: Delete PaymentMethod by Key
    description: |
      Deletes a PaymentMethod in the Project.
      This request generates the [PaymentMethodDeleted](ctp:api:type:PaymentMethodDeletedMessage) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_payment_methods:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment-method.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: PaymentMethod
      resourceUpdateType: PaymentMethodUpdate
  get:
    displayName: Get PaymentMethod by ID
    description: |
      Retrieves a PaymentMethod with the provided `id`.
    securedBy: [oauth_2_0: { scopes: ['view_payment_methods:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment-method.example.json
  head:
    displayName: Check if PaymentMethod exists by ID
    description: |
      Checks if a PaymentMethod exists with the provided `id`.
      Returns a `200` status if the PaymentMethod exists, or a `404` status otherwise.
    securedBy: [oauth_2_0: { scopes: ['view_payment_methods:{projectKey}'] }]
  post:
    displayName: Update PaymentMethod by ID
    description: |
      Updates a PaymentMethod in the Project using one or more [update actions](/../api/projects/payment-methods#update-actions).
    securedBy: [oauth_2_0: { scopes: ['manage_payment_methods:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/payment-method-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment-method.example.json
  delete:
    displayName: Delete PaymentMethod by ID
    description: |
      Deletes a PaymentMethod in the Project.
      This request generates the [PaymentMethodDeleted](ctp:api:type:PaymentMethodDeletedMessage) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_payment_methods:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/payment-method.example.json
