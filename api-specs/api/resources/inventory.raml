type:
  baseDomain:
    resourceType: InventoryEntry
    resourceQueryType: InventoryPagedQueryResponse
    resourceDraft: InventoryEntryDraft
    whereExample: 'key = "berlin-store"'
    sortExample: createdAt asc
(updateable): InventoryEntry
(deleteable): InventoryEntry
(createable): InventoryEntryDraft
description: Inventory allows you to track stock quantities.
get:
  displayName: Query InventoryEntries
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/inventories.example.json
head:
  displayName: Check if InventoryEntry exists by Query Predicate
  securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
  description: Checks if one or more InventoryEntries exist for the provided query predicate. Returns a `200` status if any Inventory Entries match the Query Predicate, or a `404` status otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Inventory Entries are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
post:
  displayName: Create InventoryEntry
  description: |
    Creates an InventoryEntry in the Project.

    If quantity limits are provided, existing Line Items that reference a Product Variant with an SKU that matches the Inventory Entry can be affected. For more information, see [Quantity limits](/../api/carts-orders-overview#quantity-limits).

    Produces the [InventoryEntryCreated](ctp:api:type:InventoryEntryCreatedMessage) Message.
  securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/inventory-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/inventory.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: InventoryEntry
      resourceUpdateType: InventoryEntryUpdate
  get:
    displayName: Get InventoryEntry by ID
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/inventory.example.json
  head:
    displayName: Check if InventoryEntry exists by ID
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Checks if an InventoryEntry exists with the provided `id`. Returns a `200` status if the InventoryEntry exists, or a `404` status otherwise.
  post:
    displayName: Update InventoryEntry by ID
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/inventory-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/inventory.example.json
  delete:
    displayName: Delete InventoryEntry by ID
    description: Produces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/inventory.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: InventoryEntry
      resourceUpdateType: InventoryEntryUpdate
  get:
    displayName: Get InventoryEntry by Key
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/inventory.example.json
  head:
    displayName: Check if InventoryEntry exists by Key
    securedBy: [oauth_2_0: { scopes: ['view_products:{projectKey}'] }]
    description: Checks if an InventoryEntry exists with the provided `key`. Returns a `200` status if the InventoryEntry exists, or a `404` status otherwise.
  post:
    displayName: Update InventoryEntry by Key
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/inventory-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/inventory.example.json
  delete:
    displayName: Delete InventoryEntry by Key
    description: Produces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.
    securedBy: [oauth_2_0: { scopes: ['manage_products:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/inventory.example.json
