type:
  baseDomain:
    resourceType: State
    resourceQueryType: StatePagedQueryResponse
    resourceDraft: StateDraft
    whereExample: 'key = "new-order"'
    sortExample: createdAt asc
(updateable): State
(deleteable): State
(createable): StateDraft
description: |
  commercetools Composable Commerce allows you to model states of certain objects, such as orders, line items, products,
  reviews, and payments in order to define finite state machines reflecting the business logic you'd like to
  implement.
get:
  (csharp-implements):
    'commercetools.Sdk.Api.Models.IPagedQueryResourceRequest<ByProjectKeyStatesGet,
    commercetools.Sdk.Api.Models.States.IStatePagedQueryResponse>'
  securedBy: [oauth_2_0: { scopes: ['view_states:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/states.example.json
post:
  securedBy: [oauth_2_0: { scopes: ['manage_states:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/state-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/state.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: State
      resourceUpdateType: StateUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_states:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/state.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_states:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/state-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/state.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_states:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/state.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: State
      resourceUpdateType: StateUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_states:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/state.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_states:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/state-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/state.example.json
  delete:
    securedBy: [oauth_2_0: { scopes: ['manage_states:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/state.example.json
