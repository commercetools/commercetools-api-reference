type:
  baseDomain:
    resourceType: ShippingMethod
    resourceQueryType: ShippingMethodPagedQueryResponse
    resourceDraft: ShippingMethodDraft
    whereExample: 'name = "DHL"'
    sortExample: createdAt asc
(updateable): ShippingMethod
(deleteable): ShippingMethod
(createable): ShippingMethodDraft
description: ShippingMethods define where orders can be shipped and what the costs are.
get:
  displayName: Query ShippingMethods
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'view_orders:{projectKey}',
              'view_shipping_methods:{projectKey}',
              'manage_my_orders:{projectKey}',
            ],
        },
    ]
  description: Retrieves all ShippingMethods in the Project.
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/shipping-methods.example.json
head:
  displayName: Check if ShippingMethod exists by Query Predicate
  description: Checks if one or more ShippingMethods exist for the provided query predicate. Returns a `200 OK` status if any ShippingMethods match the query predicate or a [Not Found](/../api/errors#404-not-found) error otherwise.
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'view_orders:{projectKey}',
              'view_shipping_methods:{projectKey}',
              'manage_my_orders:{projectKey}',
            ],
        },
    ]
  queryParameters:
    where?:
      type: QueryPredicate[]
post:
  displayName: Create ShippingMethod
  description: Creates a ShippingMethod in the Project.
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'manage_orders:{projectKey}',
              'manage_shipping_methods:{projectKey}',
            ],
        },
    ]
  body:
    application/json:
      example: !include ../examples/shipping-method-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/shipping-method.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: ShippingMethod
      resourceUpdateType: ShippingMethodUpdate
  get:
    displayName: Get ShippingMethod by Key
    description: Retrieves a ShippingMethod with the provided `key`.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/shipping-method.example.json
  head:
    displayName: Check if ShippingMethod exists by Key
    description: Checks if a ShippingMethod exists with the provided `key`. Returns a `200 OK` status if the ShippingMethod exists or a [Not Found](/../api/errors#404-not-found) error otherwise.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
  post:
    displayName: Update ShippingMethod by Key
    description: Updates a ShippingMethod in the Project using one or more [update actions](/../api/projects/shippingMethods#update-actions).
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_orders:{projectKey}',
                'manage_shipping_methods:{projectKey}',
              ],
          },
      ]
    body:
      application/json:
        example: !include ../examples/shipping-method-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/shipping-method.example.json
  delete:
    displayName: Delete ShippingMethod by Key
    description: Deletes a ShippingMethod in the Project.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_orders:{projectKey}',
                'manage_shipping_methods:{projectKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/shipping-method.example.json
/matching-cart:
  type: base
  description: Get matching ShippingMethods for a Cart
  get:
    displayName: Get matching ShippingMethods for a Cart
    description: |
      Retrieves the active ShippingMethods that can ship to the shipping address of the provided Cart.

      Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`. This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).

      If a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.
    is:
      - expandable
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    queryParameters:
      cartId:
        type: string
        description: |
          ID of the Cart with a shipping address set.
    responses:
      200:
        body:
          application/json:
            type: ShippingMethodPagedQueryResponse
            example: !include ../examples/shipping-methods.example.json
  head:
    displayName: Check if matching ShippingMethod exists for a Cart
    description: Checks if an active ShippingMethod exists for the provided Cart. Returns a `200 OK` status if the ShippingMethod exists or a [Not Found](/../api/errors#404-not-found) error otherwise.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    queryParameters:
      cartId:
        type: string
        description: |
          ID of the Cart with a shipping address set.
/matching-cart-location:
  type: base
  description: Get matching ShippingMethods for a Cart and Location
  get:
    displayName: Get matching ShippingMethods for a Cart and Location
    description: |
      Retrieves the active ShippingMethods that can ship to the provided [Location](ctp:api:type:Location)
      with a `predicate` that matches the provided Cart.

      Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`. This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).

      If a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.
    is:
      - expandable
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    queryParameters:
      country:
        type: CountryCode
        description: |
          A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      state?:
        type: string
        description: |
          Name of the state, for example, Colorado.
      cartId:
        type: string
        description: |
          ID of the Cart.
    responses:
      200:
        body:
          application/json:
            type: ShippingMethodPagedQueryResponse
            example: !include ../examples/shipping-methods.example.json
  head:
    displayName: Check if matching ShippingMethod exists for a Cart and Location
    description: Checks if an active ShippingMethod that can ship to the provided [Location](ctp:api:type:Location) exists for the provided Cart. Returns a `200 OK` status if the ShippingMethod exists or a [Not Found](/../api/errors#404-not-found) error otherwise.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    queryParameters:
      country:
        type: CountryCode
        description: |
          A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      state?:
        type: string
        description: |
          Name of the state, for example, Colorado.
      cartId:
        type: string
        description: |
          ID of the Cart.
/matching-orderedit:
  type: base
  description: Get matching ShippingMethods for an OrderEdit
  get:
    displayName: Get matching ShippingMethods for an OrderEdit
    description: |
      Retrieves the active ShippingMethods that can ship to the provided [Location](ctp:api:type:Location) for an [OrderEdit](ctp:api:type:OrderEdit).

      If a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.

      If the OrderEdit preview cannot be generated, an [EditPreviewFailed](ctp:api:type:EditPreviewFailedError) error is returned.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
              ],
          },
      ]
    queryParameters:
      orderEditId:
        type: string
        description: The ID of the [OrderEdit](/projects/order-edits).
      country:
        type: CountryCode
        description: |
          A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      state?:
        type: string
        description: |
          Name of the state, for example, Colorado.
    responses:
      200:
        body:
          application/json:
            type: ShippingMethodPagedQueryResponse
            example: !include ../examples/shipping-methods.example.json
  head:
    displayName: Check if matching ShippingMethod exists for an Order Edit
    description: Checks if an active ShippingMethod that can ship to the provided [Location](ctp:api:type:Location) exists for the provided [OrderEdit](ctp:api:type:OrderEdit). Returns a `200 OK` status if the ShippingMethod exists or a [Not Found](/../api/errors#404-not-found) error otherwise.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
              ],
          },
      ]
    queryParameters:
      orderEditId:
        type: string
        description: The ID of the [OrderEdit](/projects/order-edits).
      country:
        type: CountryCode
        description: |
          A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      state?:
        type: string
        description: |
          Name of the state, for example, Colorado.
/matching-location:
  type: base
  description: Get matching ShippingMethods for a Location
  get:
    displayName: Get matching ShippingMethods for a Location
    description: |
      Retrieves the active ShippingMethods that can ship to the provided [Location](/projects/zones#location).

      The following applies:

      - ShippingMethods that have a `predicate` defined are automatically disqualified.
      - If the `currency` parameter is provided, then the ShippingMethods must also have a rate defined in the specified currency.
      - Each ShippingMethod contains at least one ShippingRate with the flag `isMatching` set to `true`.
      - If the `currency` parameter is provided, exactly one ShippingRate will contain it.
      - If a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.

    is:
      - expandable
      - sortable
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    queryParameters:
      country:
        type: CountryCode
        description: |
          A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      state?:
        type: string
        description: |
          Name of the state, for example, Colorado.
      currency?:
        type: string
        description: |
          The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
    responses:
      200:
        body:
          application/json:
            type: ShippingMethodPagedQueryResponse
            example: !include ../examples/shipping-methods.example.json
  head:
    displayName: Check if matching ShippingMethod exists for a Location
    description: Checks if an active ShippingMethod that can ship to the provided [Location](ctp:api:type:Location) exists. Returns a `200 OK` status if the ShippingMethod exists or a [Not Found](/../api/errors#404-not-found) error otherwise.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    queryParameters:
      country:
        type: CountryCode
        description: |
          A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      state?:
        type: string
        description: |
          Name of the state, for example, Colorado.
      currency?:
        type: string
        description: |
          The currency code compliant to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: ShippingMethod
      resourceUpdateType: ShippingMethodUpdate
  get:
    displayName: Get ShippingMethod by ID
    description: Retrieves a ShippingMethod with the provided `id`.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/shipping-method.example.json
  head:
    displayName: Check if ShippingMethod exists by ID
    description: Checks if a ShippingMethod exists with the provided `id`. Returns a `200 OK` status if the ShippingMethod exists or a [Not Found](/../api/errors#404-not-found) error otherwise.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_orders:{projectKey}',
                'view_shipping_methods:{projectKey}',
                'manage_my_orders:{projectKey}',
              ],
          },
      ]
  post:
    displayName: Update ShippingMethod by ID
    description: Updates a ShippingMethod in the Project using one or more [update actions](/../api/projects/shippingMethods#update-actions).
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_orders:{projectKey}',
                'manage_shipping_methods:{projectKey}',
              ],
          },
      ]
    body:
      application/json:
        example: !include ../examples/shipping-method-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/shipping-method.example.json
  delete:
    displayName: Delete ShippingMethod by ID
    description: Deletes a ShippingMethod in the Project.
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_orders:{projectKey}',
                'manage_shipping_methods:{projectKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/shipping-method.example.json
