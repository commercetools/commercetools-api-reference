type:
  baseDomain:
    resourceType: Order
    resourceQueryType: OrderPagedQueryResponse
    resourceDraft: OrderFromCartDraft
    whereExample: 'customerEmail = "john.doe@example.com"'
    sortExample: createdAt asc
(updateable): Order
(deleteable): Order
(createable): OrderFromCartDraft
description:
  An order can be created from a order, usually after a checkout process has
  been completed.
get:
  (csharp-implements):
    'commercetools.Sdk.Api.Models.IPagedQueryResourceRequest<ByProjectKeyOrdersGet,
    commercetools.Sdk.Api.Models.Orders.IOrderPagedQueryResponse>'
  securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/orders.example.json
post:
  securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
  is:
    - conflicting
  description: |
    Creates an order from a Cart.
    The cart must have a shipping address set before creating an order.
    When using the Platform TaxMode, the shipping address is used for tax calculation.
  body:
    application/json:
      example: !include ../examples/order-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/order.example.json
/import:
  (methodName): importOrder
  type: base
  displayName: import orders
  post:
    displayName: Create an Order by Import
    description: Create an Order by Import
    securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/order-import.example.json
        type: OrderImportDraft
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/order.example.json
            type: Order
/quotes:
  (methodName): orderQuote
  type: base
  displayName: Order from Quote
  post:
    displayName: Create an Order from a Quote
    description: Create an Order from a Quote
    securedBy: [oauth_2_0: { scopes: ['manage_quotes:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/order-from-quote.example.json
        type: OrderFromQuoteDraft
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/order.example.json
            type: Order
/order-number={orderNumber}:
  (methodName): withOrderNumber
  type:
    baseResource:
      uriParameterName: orderNumber
      resourceType: Order
      resourceUpdateType: OrderUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
    description: |
      In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
      it should be provided in URL-encoded format.
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/order.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/order-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/order.example.json
  delete:
    is:
      - dataErasure
    securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/order.example.json
/edits:
  type:
    baseDomain:
      resourceType: OrderEdit
      resourceQueryType: OrderEditPagedQueryResponse
      resourceDraft: OrderEditDraft
      whereExample: 'resource(id = "order-id")'
      sortExample: createdAt asc
  (updateable): OrderEdit
  (deleteable): OrderEdit
  (createable): OrderEditDraft
  description:
    OrderEdit are containers for financial changes after an Order has been
    placed.
  get:
    (csharp-implements):
      'commercetools.Sdk.Api.Models.IPagedQueryResourceRequest<ByProjectKeyOrdersEditsGet,
      commercetools.Sdk.Api.Models.OrderEdits.IOrderEditPagedQueryResponse>'
    securedBy: [oauth_2_0: { scopes: ['view_order_edits:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/order-edits-query.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_order_edits:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/order-edits-create.example.json
        type: OrderEditDraft
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/order-edits.example.json
            type: OrderEdit
  /key={key}:
    (methodName): withKey
    type:
      baseResource:
        uriParameterName: key
        resourceType: OrderEdit
        resourceUpdateType: OrderEditUpdate
    get:
      securedBy: [oauth_2_0: { scopes: ['view_order_edits:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order-edits.example.json
    post:
      securedBy: [oauth_2_0: { scopes: ['manage_order_edits:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/order-edits-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order-edits.example.json
    delete:
      securedBy: [oauth_2_0: { scopes: ['manage_order_edits:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order-edits.example.json
  /{ID}:
    (methodName): withId
    type:
      baseResource:
        uriParameterName: ID
        resourceType: OrderEdit
        resourceUpdateType: OrderEditUpdate
    get:
      securedBy: [oauth_2_0: { scopes: ['view_order_edits:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order-edits.example.json
    post:
      securedBy: [oauth_2_0: { scopes: ['manage_order_edits:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/order-edits-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order-edits.example.json
    delete:
      securedBy: [oauth_2_0: { scopes: ['manage_order_edits:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order-edits.example.json
    /apply:
      type: base
      post:
        displayName: Apply order edit
        body:
          application/json:
            type: OrderEditApply
        securedBy: [oauth_2_0: { scopes: ['manage_order_edits:{projectKey}'] }]
        responses:
          200:
            body:
              application/json:
                type: OrderEdit
                example: !include ../examples/order-edits.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Order
      resourceUpdateType: OrderUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/order.example.json
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/order-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/order.example.json
  delete:
    is:
      - dataErasure
    securedBy: [oauth_2_0: { scopes: ['manage_orders:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/order.example.json
/search:
  type: base
  displayName: Order Search
  description: |
    This endpoint provides high performance search queries over Orders. The order search allows searching through all orders (currently supporting a limit of the 10.000.000 newest orders) in your project.
  post:
    displayName: Search Orders
    securedBy: [oauth_2_0: { scopes: ['view_orders:{projectKey}'] }]
    body:
      application/json:
        type: OrderSearchRequest
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/OrderSearch/order-search.example.json
            type: OrderPagedSearchResponse
  head:
    securedBy: [oauth_2_0: { scopes: ['project_settings:{projectKey}'] }]
    description: Checks whether a search index for the Project's Orders exists.
    responses:
      200:
        description: The index exists and the Search Orders endpoint can be used.
      404:
        description: The index does not exist and the Search Orders endpoint returns Error 404 only.
