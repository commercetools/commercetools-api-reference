type:
  baseDomain:
    resourceType: StagedQuote
    resourceQueryType: StagedQuotePagedQueryResponse
    resourceDraft: StagedQuoteDraft
    whereExample: 'stagedQuoteState = "InProgress"'
    sortExample: createdAt asc
(updateable): StagedQuote
(deleteable): StagedQuote
(createable): StagedQuoteDraft
description: A staged quote holds the negotiation between the [Buyer](/../api/quotes-overview#buyer) and the [Seller](/../api/quotes-overview#seller).
get:
  securedBy: [oauth_2_0: { scopes: ['view_staged_quotes:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/staged-quotes.example.json
head:
  securedBy: [oauth_2_0: { scopes: ['view_staged_quotes:{projectKey}'] }]
  description: Checks if a StagedQuote exists for a given Query Predicate. Returns a `200 OK` status if any StagedQuotes match the Query Predicate or a `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
post:
  securedBy: [oauth_2_0: { scopes: ['manage_staged_quotes:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/staged-quote-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/staged-quote.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: StagedQuote
      resourceUpdateType: StagedQuoteUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_staged_quotes:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/staged-quote.example.json
  head:
    securedBy: [oauth_2_0: { scopes: ['view_staged_quotes:{projectKey}'] }]
    description: Checks if a StagedQuote exists for a given `key`. Returns a `200 OK` status if the StagedQuote exists or a `404 Not Found` otherwise.
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_staged_quotes:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/staged-quote-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/staged-quote.example.json
  delete:
    is:
      - dataErasure
    securedBy: [oauth_2_0: { scopes: ['manage_staged_quotes:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/staged-quote.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: StagedQuote
      resourceUpdateType: StagedQuoteUpdate
  get:
    securedBy: [oauth_2_0: { scopes: ['view_staged_quotes:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/staged-quote.example.json
  head:
    securedBy: [oauth_2_0: { scopes: ['view_staged_quotes:{projectKey}'] }]
    description: Checks if a StagedQuote exists for a given `id`. Returns a `200 OK` status if the StagedQuote exists or a `404 Not Found` otherwise.
  post:
    securedBy: [oauth_2_0: { scopes: ['manage_staged_quotes:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/staged-quote-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/staged-quote.example.json
  delete:
    is:
      - dataErasure
    securedBy: [oauth_2_0: { scopes: ['manage_staged_quotes:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/staged-quote.example.json
