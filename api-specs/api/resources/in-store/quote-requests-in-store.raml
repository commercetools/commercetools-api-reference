type:
  baseDomain:
    resourceType: QuoteRequest
    resourceQueryType: QuoteRequestPagedQueryResponse
    resourceDraft: QuoteRequestDraft
    whereExample: 'quoteRequestState = "Submitted"'
    sortExample: createdAt asc
(updateable): QuoteRequest
(deleteable): QuoteRequest
(createable): QuoteRequestDraft
description: A request for a Quote holds product variants and can be ordered.
get:
  displayName: Query QuoteRequests in Store
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'view_quote_requests:{projectKey}',
              'view_quote_requests:{projectKey}:{storeKey}',
            ],
        },
    ]
  responses:
    200:
      body:
        application/json:
          example: !include ../../examples/quote-requests.example.json
head:
  displayName: Check if QuoteRequest exists in Store by Query Predicate
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'view_quote_requests:{projectKey}',
              'view_quote_requests:{projectKey}:{storeKey}',
            ],
        },
    ]
  description: Checks if one or more QuoteRequests exist for the provided query predicate. Returns a `200` status if any QuoteRequests match the query predicate, or a `404` status otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
post:
  displayName: Create QuoteRequest in Store
  description: |
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'manage_quote_requests:{projectKey}',
              'manage_quote_requests:{projectKey}:{storeKey}',
            ],
        },
    ]
  body:
    application/json:
      example: !include ../../examples/quote-request-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../../examples/quote-request.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: QuoteRequest
      resourceUpdateType: QuoteRequestUpdate
  get:
    displayName: Get QuoteRequest in Store by Key
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quote_requests:{projectKey}',
                'view_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote-request.example.json
  head:
    displayName: Check if QuoteRequest exists in Store by Key
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quote_requests:{projectKey}',
                'view_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    description: Checks if a QuoteRequest exists with the provided `key`. Returns a `200` status if the QuoteRequest exists, or a `404` status otherwise.
  post:
    displayName: Update QuoteRequest in Store by Key
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quote_requests:{projectKey}',
                'manage_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    body:
      application/json:
        example: !include ../../examples/quote-request-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote-request-update-response.example.json
  delete:
    displayName: Delete QuoteRequest in Store by Key
    is:
      - dataErasure
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quote_requests:{projectKey}',
                'manage_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote-request.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: QuoteRequest
      resourceUpdateType: QuoteRequestUpdate
  get:
    displayName: Get QuoteRequest in Store by ID
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quote_requests:{projectKey}',
                'view_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote-request.example.json
  head:
    displayName: Check if QuoteRequest exists in Store by ID
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quote_requests:{projectKey}',
                'view_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    description: Checks if a QuoteRequest exists with the provided `id`. Returns a `200` status if the QuoteRequest exists, or a `404` status otherwise.
  post:
    displayName: Update QuoteRequest in Store by ID
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quote_requests:{projectKey}',
                'manage_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    body:
      application/json:
        example: !include ../../examples/quote-request-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote-request-update-response.example.json
  delete:
    displayName: Delete QuoteRequest in Store by ID
    is:
      - dataErasure
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quote_requests:{projectKey}',
                'manage_quote_requests:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote-request.example.json
