type:
  baseDomain:
    resourceType: Quote
    resourceQueryType: QuotePagedQueryResponse
    resourceDraft: QuoteDraft
    whereExample: 'quoteState = "Accepted"'
    sortExample: createdAt asc
(updateable): Quote
(deleteable): Quote
(createable): QuoteDraft
description: A quote holds the negotiated offer.
get:
  displayName: Query Quotes in Store
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            ['view_quotes:{projectKey}', 'view_quotes:{projectKey}:{storeKey}'],
        },
    ]
  responses:
    200:
      body:
        application/json:
          example: !include ../../examples/quotes.example.json
head:
  displayName: Check if Quote exists in Store by Query Predicate
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            ['view_quotes:{projectKey}', 'view_quotes:{projectKey}:{storeKey}'],
        },
    ]
  description: Checks if one or more Quotes exist for the provided query predicate. Returns a `200` status if any Quotes match the query predicate, or a `404` status otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
post:
  displayName: Create Quote in Store
  securedBy:
    [
      oauth_2_0:
        {
          scopes:
            [
              'manage_quotes:{projectKey}',
              'manage_quotes:{projectKey}:{storeKey}',
            ],
        },
    ]
  body:
    application/json:
      example: !include ../../examples/quote-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../../examples/quote.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Quote
      resourceUpdateType: QuoteUpdate
  get:
    displayName: Get Quote in Store by Key
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quotes:{projectKey}',
                'view_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote.example.json
  head:
    displayName: Check if Quote exists in Store by Key
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quotes:{projectKey}',
                'view_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    description: Checks if a Quote exists with the provided `key`. Returns a `200` status if the Quote exists, or a `404` status otherwise.
  post:
    displayName: Update Quote in Store by Key
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quotes:{projectKey}',
                'manage_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    body:
      application/json:
        example: !include ../../examples/quote-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote.example.json
  delete:
    displayName: Delete Quote in Store by Key
    is:
      - dataErasure
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quotes:{projectKey}',
                'manage_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Quote
      resourceUpdateType: QuoteUpdate
  get:
    displayName: Get Quote in Store by ID
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quotes:{projectKey}',
                'view_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote.example.json
  head:
    displayName: Check if Quote exists in Store by ID
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'view_quotes:{projectKey}',
                'view_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    description: Checks if a Quote exists with the provided `id`. Returns a `200` status if the Quote exists, or a `404` status otherwise.
  post:
    displayName: Update Quote in Store by ID
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quotes:{projectKey}',
                'manage_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    body:
      application/json:
        example: !include ../../examples/quote-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote.example.json
  delete:
    displayName: Delete Quote in Store by ID
    is:
      - dataErasure
    securedBy:
      [
        oauth_2_0:
          {
            scopes:
              [
                'manage_quotes:{projectKey}',
                'manage_quotes:{projectKey}:{storeKey}',
              ],
          },
      ]
    responses:
      200:
        body:
          application/json:
            example: !include ../../examples/quote.example.json
