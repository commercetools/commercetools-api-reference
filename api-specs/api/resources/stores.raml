type:
  baseDomain:
    resourceType: Store
    resourceQueryType: StorePagedQueryResponse
    resourceDraft: StoreDraft
    whereExample: 'name(en = "big store")'
    sortExample: name.en asc
(updateable): Store
(deleteable): Store
(createable): StoreDraft
description: Stores let you model the context your customers shop in.
get:
  displayName: Query Stores
  securedBy: [oauth_2_0: { scopes: ['view_stores:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/stores.example.json
head:
  displayName: Check if Store exists by Query Predicate
  securedBy: [oauth_2_0: { scopes: ['view_stores:{projectKey}'] }]
  description: Checks if one or more Stores exist for the provided query predicate. Returns a `200 OK` status if any Stores match the query predicate, or a `404 Not Found` otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Stores are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
post:
  displayName: Create Store
  securedBy: [oauth_2_0: { scopes: ['manage_stores:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/store-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/store.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Store
      resourceUpdateType: StoreUpdate
  get:
    displayName: Get Store by Key
    securedBy: [oauth_2_0: { scopes: ['view_stores:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/store.example.json
  head:
    displayName: Check if Store exists by Key
    securedBy: [oauth_2_0: { scopes: ['view_stores:{projectKey}'] }]
    description: Checks if a Store exists with the provided `key`. Returns a `200 OK` status if the Store exists or a `404 Not Found` otherwise.
  post:
    displayName: Update Store by Key
    securedBy: [oauth_2_0: { scopes: ['manage_stores:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/store-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/store.example.json
  delete:
    displayName: Delete Store by Key
    securedBy: [oauth_2_0: { scopes: ['manage_stores:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/store.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Store
      resourceUpdateType: StoreUpdate
  get:
    displayName: Get Store by ID
    securedBy: [oauth_2_0: { scopes: ['view_stores:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/store.example.json
  head:
    displayName: Check if Store exists by ID
    securedBy: [oauth_2_0: { scopes: ['view_states:{projectKey}'] }]
    description: Checks if a Store exists with the provided `id`. Returns a `200 OK` status if the Store exists or a `404 Not Found` otherwise.
  post:
    displayName: Update Store by ID
    securedBy: [oauth_2_0: { scopes: ['manage_stores:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/store-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/store.example.json
  delete:
    displayName: Delete Store by ID
    securedBy: [oauth_2_0: { scopes: ['manage_stores:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/store.example.json
