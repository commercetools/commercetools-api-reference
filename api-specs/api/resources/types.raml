type:
  baseDomain:
    resourceType: Type
    resourceQueryType: TypePagedQueryResponse
    resourceDraft: TypeDraft
    whereExample: 'key = "my-type"'
    sortExample: createdAt asc
(updateable): Type
(deleteable): Type
(createable): TypeDraft
description: Types define custom fields that are used to enhance resources as you need.
get:
  displayName: Query Types
  securedBy: [oauth_2_0: { scopes: ['view_types:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/types.example.json
head:
  displayName: Check if Type exists by Query Predicate
  securedBy: [oauth_2_0: { scopes: ['view_types:{projectKey}'] }]
  description: Checks if one or more Types exist for the provided query predicate. Returns a `200` status if any Types match the query predicate, or a `404` status otherwise.
  queryParameters:
    where?:
      type: QueryPredicate[]
      description: |-
        Query Predicates on Types are limited to [Text](ctp:api:type:AttributeTextType),
        [Enum](ctp:api:type:AttributeEnumType), [Boolean](ctp:api:type:AttributeBooleanType),
        [Number](ctp:api:type:AttributeNumberType), [Date](ctp:api:type:AttributeDateType),
        [Time](ctp:api:type:AttributeTimeType), and [DateTime](ctp:api:type:AttributeDateTimeType) attribute types.
post:
  displayName: Create Type
  securedBy: [oauth_2_0: { scopes: ['manage_types:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/type-create.example.json
  responses:
    201:
      body:
        application/json:
          example: !include ../examples/type.example.json
/key={key}:
  (methodName): withKey
  type:
    baseResource:
      uriParameterName: key
      resourceType: Type
      resourceUpdateType: TypeUpdate
  get:
    displayName: Get Type by Key
    securedBy: [oauth_2_0: { scopes: ['view_types:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/type.example.json
  head:
    displayName: Check if Type exists by Key
    securedBy: [oauth_2_0: { scopes: ['view_types:{projectKey}'] }]
    description: Checks if a Type exists with the provided `key`. Returns a `200` status if the Type exists, or a `404` status otherwise.
  post:
    displayName: Update Type by Key
    securedBy: [oauth_2_0: { scopes: ['manage_types:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/type-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/type-update-response.example.json
  delete:
    displayName: Delete Type by Key
    securedBy: [oauth_2_0: { scopes: ['manage_types:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/type.example.json
/{ID}:
  (methodName): withId
  type:
    baseResource:
      uriParameterName: ID
      resourceType: Type
      resourceUpdateType: TypeUpdate
  get:
    displayName: Get Type by ID
    securedBy: [oauth_2_0: { scopes: ['view_types:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/type.example.json
  head:
    displayName: Check if Type exists by ID
    securedBy: [oauth_2_0: { scopes: ['view_types:{projectKey}'] }]
    description: Checks if a Type exists with the provided `id`. Returns a `200` status if the Type exists, or a `404` status otherwise.
  post:
    displayName: Update Type by ID
    securedBy: [oauth_2_0: { scopes: ['manage_types:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/type-update.example.json
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/type-update-response.example.json
  delete:
    displayName: Delete Type by ID
    securedBy: [oauth_2_0: { scopes: ['manage_types:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/type.example.json
