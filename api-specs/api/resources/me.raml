type: base
get:
  displayName: Get my customer details
  is:
    - sortable:
        sortExample: createdAt asc
    - paging
    - expandable
    - query:
        whereExample: 'customerEmail = "foo@bar.com"'
  securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          type: Customer
post:
  displayName: Update my customer
  description: Update my customer
  securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
  body:
    application/json:
      example: !include ../examples/customer-update.example.json
      type: MyCustomerUpdate
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/customer-update-response.example.json
          type: Customer
delete:
  displayName: Delete my Customer
  description: Delete my Customer
  is:
    - versioned
    - conflicting
  securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
  responses:
    200:
      body:
        application/json:
          example: !include ../examples/customer.example.json
          type: Customer
/email/confirm:
  type: base
  post:
    displayName: Verify my Customer's Email
    securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
/password:
  type: base
  post:
    displayName: Change my customers password
    is:
      - conflicting
    securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
    body:
      application/json:
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/customer.example.json
            type: Customer
  /reset:
    type: base
    post:
      displayName: Reset my Customer's Password
      securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/customer.example.json
              type: Customer
/signup:
  type: base
  post:
    displayName: Signup my customer
    securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
    body:
      application/json:
        type: MyCustomerDraft
    responses:
      201:
        body:
          application/json:
            type: CustomerSignInResult
/login:
  type: base
  post:
    displayName: Authenticate my Customer (Sign In)
    securedBy: [oauth_2_0: { scopes: ['manage_my_profile:{projectKey}'] }]
    body:
      application/json:
    responses:
      200:
        body:
          application/json:
            type: CustomerSignInResult
/active-cart:
  type: base
  get:
    displayName: Get my active cart
    securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            type: Cart
/carts:
  type:
    baseDomain:
      resourceType: Cart
      resourceQueryType: CartPagedQueryResponse
      resourceDraft: MyCartDraft
      whereExample: 'customerEmail = "john.doe@example.com"'
      sortExample: createdAt asc
  (updateable): Cart
  (deleteable): Cart
  (createable): MyCartDraft
  description: A shopping cart holds product variants and can be ordered.
  get:
    displayName: Query my carts
    securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/carts.example.json
  post:
    displayName: Create my cart
    securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/cart-create.example.json
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/cart.example.json
  /key={key}:
    (methodName): withKey
    type:
      baseResource:
        uriParameterName: key
        resourceType: Cart
        resourceUpdateType: MyCartUpdate
    get:
      displayName: Get my cart by key
      securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
    post:
      displayName: Update my cart by key
      securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/cart-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
    delete:
      displayName: Delete my cart by key
      securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
  /{ID}:
    (methodName): withId
    type:
      baseResource:
        uriParameterName: ID
        resourceType: Cart
        resourceUpdateType: MyCartUpdate
    get:
      displayName: Get my cart by id
      securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
    post:
      displayName: Update my cart by id
      securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/cart-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
    delete:
      displayName: Delete my cart by id
      securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
/orders:
  type:
    baseDomain:
      resourceType: Order
      resourceQueryType: OrderPagedQueryResponse
      resourceDraft: MyOrderFromCartDraft
      whereExample: 'customerEmail = "john.doe@example.com"'
      sortExample: createdAt asc
  description:
    An order can be created from a cart, usually after a checkout process has
    been completed.
  get:
    displayName: Query my orders
    securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/orders.example.json
  post:
    displayName: Create my order
    securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/order-create.example.json
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/order.example.json
  /{ID}:
    (methodName): withId
    type:
      baseResource:
        uriParameterName: ID
        resourceType: Order
        resourceUpdateType: MyOrderUpdate
    get:
      displayName: Get my order by id
      securedBy: [oauth_2_0: { scopes: ['manage_my_orders:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order.example.json
/payments:
  type:
    baseDomain:
      resourceType: MyPayment
      resourceQueryType: MyPaymentPagedQueryResponse
      resourceDraft: MyPaymentDraft
      whereExample: 'customer(id = "43645-23uf")'
      sortExample: id asc
  (updateable): MyPayment
  (deleteable): MyPayment
  (createable): MyPaymentDraft
  description:
    The My Payments endpoint creates and provides access to payments scoped to a
    specific user.
  get:
    displayName: Query my payments
    securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/my-payments.example.json
  post:
    displayName: Create my payment
    securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/my-payment-create.example.json
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/my-payment.example.json
  /key={key}:
    (methodName): withKey
    type:
      baseResource:
        uriParameterName: key
        resourceType: MyPayment
        resourceUpdateType: MyPaymentUpdate
    get:
      displayName: Get my payment by key
      securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-payment.example.json
    post:
      displayName: Update my payment by key
      securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/my-payment-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-payment.example.json
    delete:
      displayName: Delete my payment by key
      securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-payment.example.json
  /{ID}:
    (methodName): withId
    type:
      baseResource:
        uriParameterName: ID
        resourceType: MyPayment
        resourceUpdateType: MyPaymentUpdate
    get:
      displayName: Get my payment by id
      securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-payment.example.json
    post:
      displayName: Update my payment by id
      securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/my-payment-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-payment.example.json
    delete:
      displayName: Delete my payment by id
      securedBy: [oauth_2_0: { scopes: ['manage_my_payments:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-payment.example.json
/shopping-lists:
  type:
    baseDomain:
      resourceType: ShoppingList
      resourceQueryType: ShoppingListPagedQueryResponse
      resourceDraft: MyShoppingListDraft
      whereExample: 'name(en = "list-name")'
      sortExample: createdAt asc
  (updateable): ShoppingList
  (deleteable): ShoppingList
  (createable): MyShoppingListDraft
  description:
    The My Shopping Lists endpoint creates and provides access to shopping lists
    scoped to a specific user.
  get:
    displayName: Query my shopping lists
    securedBy:
      [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/my-shopping-lists.example.json
  post:
    displayName: Create my shopping list
    securedBy:
      [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
    body:
      application/json:
        example: !include ../examples/my-shopping-list-create.example.json
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/my-shopping-list.example.json
  /{ID}:
    (methodName): withId
    type:
      baseResource:
        uriParameterName: ID
        resourceType: ShoppingList
        resourceUpdateType: MyShoppingListUpdate
    get:
      displayName: Get my shopping list by id
      securedBy:
        [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-shopping-list.example.json
    post:
      displayName: Update my shopping list by id
      securedBy:
        [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/my-shopping-list-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-shopping-list.example.json
    delete:
      displayName: Delete my shopping list by id
      securedBy:
        [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-shopping-list.example.json
  /key={key}:
    (methodName): withKey
    type:
      baseResource:
        uriParameterName: key
        resourceType: ShoppingList
        resourceUpdateType: MyShoppingListUpdate
    get:
      displayName: Get my shopping list by key
      securedBy:
        [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-shopping-list.example.json
    post:
      displayName: Update my shopping list by key
      securedBy:
        [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
      body:
        application/json:
          example: !include ../examples/my-shopping-list-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-shopping-list.example.json
    delete:
      displayName: Delete my shopping list by key
      securedBy:
        [oauth_2_0: { scopes: ['manage_my_shopping_lists:{projectKey}'] }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/my-shopping-list.example.json
