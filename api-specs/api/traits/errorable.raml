#%RAML 1.0 Trait

responses:
  400:
    description: |
      ## Bad Request

      A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
      Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
      a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
      in the response before re-sending the request.

      The following general error codes can appear in responses with the HTTP status code `400`:

      * `InvalidInput`
        Invalid input has been sent to the service.
        The client application should validate the input according to the constraints described in the error message
        before sending the request.

      * `InvalidOperation`
        The resource(s) involved in the request are not in a valid state for the operation. The client application
        should validate the constraints described in the error message before sending the request.

      * `InvalidField`
        A field has an invalid value.
        Extra fields:
        * `field` - String
          The name of the field.
        * `invalidValue` - *
          The invalid value.
        * `allowedValues` - Array of * - Optional
          A fixed set of allowed values for the field, if any.

      * `RequiredField`
        A required field is missing a value.
        Extra fields:
        * `field` - String
          The name of the field.

      * `DuplicateField`
        A value for a field conflicts with an existing duplicate value.
        Extra fields:
        * `field` - String
          The name of the field.
        * `duplicateValue` - *
          The offending duplicate value.
    body:
      application/json:
        example: !include ../examples/error.example.json
        type: ErrorResponse
  401:
    description: |
      ## Unauthorized

      A 401 indicates that the request is not properly authenticated.
    body:
      application/json:
        type: ErrorResponse
  403:
    description: |
      ## Forbidden

      A 403 indicates that the authenticated client is not allowed to perform the request.
    body:
      application/json:
        type: ErrorResponse
  404:
    description: |
      ## Not Found

      A 404 indicates that the addressed resource was not found / does not exist.

      The following general error codes can appear in responses with the HTTP status code `404`:

      * `ResourceNotFound`
        The resource addressed by the request URL does not exist.
  500:
    description: |
      ## Internal Server Error

      A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
      requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
      to be reported and resolved.

      The following general error codes can appear in responses with the HTTP status code `500`:

      * `General`
        A server-side problem occurred that is not further specified.
        These errors [should be reported](http://support.commercetools.com/).
    body:
      application/json:
        example: !include ../examples/error.example.json
        type: ErrorResponse
  503:
    description: |
      ## Service Unavailable

      The following general error codes can appear in responses with the HTTP status code `503`:

      * `OverCapacity`
        The service is having trouble handling the load. The client application should retry the request with
        exponential backoff up to a point where further delay is unacceptable.

      * `PendingOperation`
        A previous conflicting operation is still pending and needs to finish before the request can succeed.
        The client application should retry the request with exponential backoff up to a point where further delay
        is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
    body:
      application/json:
        example: !include ../examples/error.example.json
        type: ErrorResponse
