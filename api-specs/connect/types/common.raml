#%RAML 1.0 Library
usage: Common data types.
(annotations.package): common

uses:
  annotations: annotations.raml

types:
  Artifact:
    description: |
      A connector internal build artifact (ex: docker image).
    properties:
      applicationName: string
      artifactPath: string
  CertificationInfo:
    properties:
      comments:
        type: CertificationInfoComment[]
        description: Comments made during the certification process.
  CertificationInfoComment:
    description: |
      Contains metadata and body text of a comment made during the certification process.
    example: !include ../examples/connector/CertificationInfoComment.json
    properties:
      userId:
        type: string
        description: The commercetools Composable Commerce Project key associated with the person making the comment.
      datetime:
        type: datetime
        description: Date and time (UTC) the comment was added.
      comment:
        type: string
        description: The body text of the comment.
  StandardConfigurationKey:
    example: !include ../examples/connector/ConfigurationKey.json
    description: |
      The name, description, and default value of a standard environment variable.
    properties:
      key:
        type: string
        description: Name of the environment variable.
      description:
        type: string
        description: Description of the environment variable.
      default?:
        type: string
        description: Default value of the environment variable.
      required?:
        type: boolean
        description: Indicates if the environment variable is required.
        default: false
  SecuredConfigurationKey:
    example: !include ../examples/connector/ConfigurationKey.json
    description: |
      The name and description of a secret environment variable.
    properties:
      key:
        type: string
        description: Name of the environment variable.
      description:
        type: string
        description: Description of the environment variable.
      required?:
        type: boolean
        description: Indicates if the environment variable is required.
        default: false
  ConfigurationValue:
    example: !include ../examples/deployment/ConfigurationValue.json
    properties:
      key:
        type: string
        description: Name of the environment variable.
      value:
        type: string
        description: Value of the environment variable.
  ConnectorConfigurationApplication:
    example: !include ../examples/connector/ConnectorConfigurationApplication.json
    description: |
      The configuration of a Connect application. These values are automatically obtained from the connect.yaml file in the GitHub repository.
    properties:
      applicationName:
        type: string
        description: Name of the Connect application.
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
      applicationType:
        type: string
        description: The Connect application type.
        enum:
          - service
          - event
          - job
          - merchant-center-custom-application
          - assets
      standardConfiguration:
        type: StandardConfigurationKey[]
        description: Contains the name, description, and default values of standard environment variables.
      securedConfiguration:
        type: SecuredConfigurationKey[]
        description: Contains the name and description of secret environment variables.
  ConnectorGlobalConfiguration:
    description: Global configuration applied to all applications in the deployment.
    properties:
      standardConfiguration?:
        type: StandardConfigurationKey[]
        description: Contains the name and description of standard environment variables.
      securedConfiguration?:
        type: SecuredConfigurationKey[]
        description: Contains the name and description of secret environment variables.
  DeploymentConfigurationApplication:
    description: |
      Describes the configuration set of a given application.
    properties:
      applicationName:
        type: string
        description: Name of the application. Should match the value of `name` within the connect.yaml file of the Connect application.
      standardConfiguration:
        type: ConfigurationValue[]
        description: Contains values of keys that are saved in plain text. Can be accessed after being set.
      securedConfiguration:
        type: ConfigurationValue[]
        description: Contains values of secret keys. Cannot be accessed after being set.
  ApplicationDeployment:
    description: |
      Describes an application deployment of the Connector.
    example: !include ../examples/deployment/ApplicationDeployment.json
    properties:
      id:
        type: string
        description: Unique identifier of the application deployment.
      applicationName:
        type: string
        description: Name of the application. Should match the value of `name` within the connect.yaml file of the Connector.
        pattern: ^[A-Za-z0-9_-]+$
        minLength: 2
        maxLength: 256
      standardConfiguration:
        type: ConfigurationValue[]
        description: Contains values of keys that are saved in plain text. Can be accessed after being set.
      securedConfiguration:
        type: ConfigurationValue[]
        description: Contains values of secret keys. After being set, these values are encrypted and cannot be accessed.
      url?:
        type: string
        description: URL generated after deployment of service applications.
      topic?:
        type: string
        description: Google Cloud Pub/Sub Topic generated after deployment of event applications.
      connectionString?:
        type: string
        description: Azure Service Bus connection string generated after deployment of event applications.
      schedule?:
        type: string
        description: Cron schedule for job applications.
  ConnectorReportEntryType:
    type: string
    description: |
      The type of message being reported.
    (annotations.enumDescriptions):
      Information: Indicates information returned during the publish/preview task.
      Warning: Indicates an issue that arose during the publish/preview task.
      Error: Indicates a crash or failure to complete the publish/preview task.
    enum:
      - Information
      - Warning
      - Error
  ConnectorReportEntry:
    description: Describes an information, error, or warning notice.
    example: !include ../examples/connector/ConnectorReportEntry.json
    properties:
      type:
        type: ConnectorReportEntryType
        description: The report entry type.
      title:
        type: string
        description: The title of the report entry.
      message?:
        type: string
        description: The message related to the report entry.
      createdAt:
        type: datetime
        description: When the report entry was created.
  ConnectorReport:
    description: Contains report entries for publish/preview requests.
    properties:
      entries:
        type: ConnectorReportEntry[]
        description: Contains information, error, and warning notices.
  ConnectorStatus:
    type: string
    description: |
      Indicates the current status of the ConnectorStaged.
    (annotations.enumDescriptions):
      Draft: The ConnectorStaged is currently a draft.
      Processing: The ConnectorStaged publish request is being processed.
      ReadyForCertification: The ConnectorStaged is ready to be certified.
      InCertification: The ConnectorStaged is in the certification process.
      Published: The ConnectorStaged was published.
      Failed: The ConnectorStaged was not published.
    enum:
      - Draft
      - Processing
      - ReadyForCertification
      - InCertification
      - Published
      - Failed
  ConnectorReference:
    description: Reference to a [Connector](ctp:connect:type:Connector) or [ConnectorStaged](ctp:connect:type:ConnectorStaged). Either `id` or `key` is required.
    example: !include ../examples/connector/ConnectorReference.json
    properties:
      id?:
        type: string
        description: Unique identifier of the referenced Connector.
      key?:
        type: string
        description: User-defined unique identifier of the referenced Connector.
      staged?:
        type: boolean
        default: false
        description: If `true`, a previewable [ConnectorStaged](ctp:connect:type:ConnectorStaged) must be referenced in `id` or `key` instead of the published Connector. The `isPreviewable` field of the [ConnectorStaged](ctp:connect:type:ConnectorStaged) must be `true` to reference a previewable ConnectorStaged.
      version?:
        type: number
        format: int64
        description: Version of the referenced Connector.
  Creator:
    example: !include ../examples/connector/Creator.json
    description: |
      Details of the individual or organization who developed the Connector.
    properties:
      name?:
        type: string
        description: Name of the person who owns the Connector.
      title?:
        type: string
        description: Title of the person who owns the Connector.
      email:
        type: string
        description: Contact email address of the creator.
      company?:
        type: string
        description: Name of the company that owns the Connector.
      logoUrl?:
        type: string
        description: URL to a logo image used to represent the creator.
      noOfContributors?:
        type: integer
        description: Number of contributors currently working for the company.
      supportUrl?:
        type: string
        description: URL to the support website of the Connector.
  DeploymentConnector:
    example: !include ../examples/deployment/DeploymentConnector.json
    description: The details of the deployed [Connector](ctp:connect:type:Connector).
    type: object
    properties:
      id:
        type: string
        description: |
          `id` of the Connector.
      key?:
        type: string
        description: User-defined unique identifier of the Connector.
      version:
        type: integer
        description: Version of the Connector.
      name:
        type: string
        description: Name of the Connector.
      description?:
        type: string
        description: Description of the Connector.
      integrationTypes:
        type: IntegrationType[]
        description: Connector integration type list.
      creator:
        type: DeploymentCreator
        description: Owner of the Connector.
      repository:
        type: Repository
        description: Details of the GitHub repository that contains the Connect applications.
      configurations?:
        type: ConnectorConfigurationApplication[]
        description: Configurations needed by Connectors for hosting. Loaded as environment variables in the application.
      globalConfiguration?:
        type: ConnectorGlobalConfiguration
        description: Global configuration applied to all applications in the deployment.
      certified:
        type: boolean
        description: If `true`, the Connector is certified.
      supportedRegions?:
        type: Region[]
        description: If not empty, Connectors can only be deployed in these Regions. If empty, Connectors can be deployed in any [supported Region](hosts-and-authorization#hosts).
      documentationUrl?:
        type: string
        description: URL to the documentation of the Connector.
  DeploymentGlobalConfiguration:
    description: Global configuration applied to all applications in the deployment.
    properties:
      standardConfiguration?:
        type: ConfigurationValue[]
        description: List of standard environment variables.
      securedConfiguration?:
        type: ConfigurationValue[]
        description: List of secured environment variables.
  DeploymentCreator:
    example: !include ../examples/deployment/DeploymentCreator.json
    description: The details of the deployed [DeploymentConnector](ctp:connect:type:DeploymentConnector) creator.
    type: object
    properties:
      name?:
        type: string
        description: Name of the person who owns the Connector.
      title?:
        type: string
        description: Title of the person who owns the Connector.
      email:
        type: string
        description: Contact email address of the creator.
      company?:
        type: string
        description: Name of the company that owns the Connector.
      noOfContributors?:
        type: integer
        description: Number of contributors currently working for the company.
      logoUrl?:
        type: string
        description: URL to an image used as the company logo.
      supportUrl?:
        type: string
        description: Url to support website of the company.
  DeploymentReportEntryType:
    type: string
    description: |
      The type of message being reported.
    (annotations.enumDescriptions):
      Information: Indicates information returned during the deployment process.
      Warning: Indicates an issue that arose during the deployment process.
      Error: Indicates a crash or failure to complete the deployment process.
    enum:
      - Information
      - Warning
      - Error
  DeploymentReportEntry:
    description: Describes an information, error, or warning in the deployment report.
    properties:
      type:
        type: DeploymentReportEntryType
        description: The report entry type.
      title:
        type: string
        description: The title of the report entry.
      message?:
        type: string
        description: The message related to the report entry.
      application?:
        type: string
        description: The name of the Connect application related to the entry.
      createdAt:
        type: datetime
        description: When the report entry was created.
  DeploymentReport:
    description: Describes a report of the Connector deployment process.
    properties:
      entries:
        type: DeploymentReportEntry[]
        description: Contains informations, errors and warnings about the Connector deployment.
  DeploymentDetailsBuild:
    example: !include ../examples/deployment/DeploymentDetailsBuild.json
    properties:
      id:
        type: string
        description: The build execution id of the deployed application.
      report?:
        type: DeploymentReport
        description: The build report of the deployed Connector.
  DeploymentDetails:
    description: Additional details about the deployed Connector.
    type: object
    properties:
      build:
        type: DeploymentDetailsBuild
        description: The build details of deployed applications.
  DeploymentStatus:
    type: string
    description: |
      Indicates the current status of the Deployment.
    (annotations.enumDescriptions):
      Queued: The Deployment is in a queue waiting to be processed.
      Deploying: The deployment process has started.
      Deployed: The Deployment is live.
      Failed: The deployment process failed.
      Undeploying: The Deployment is being undeployed.
      UndeployFailed: The process to undeploy failed.
    enum:
      - Draft
      - Queued
      - Deploying
      - Deployed
      - Failed
      - Undeploying
      - UndeployFailed
  DeploymentLogSeverity:
    type: string
    description: The severity of the log message.
    (annotations.enumDescriptions):
      DEFAULT: The log entry has no assigned severity level.
      DEBUG: Debug or trace information.
      INFO: Routine information, such as ongoing status or performance.
      NOTICE: Normal but significant events, such as start up, shut down, or a configuration change.
      WARNING: Warning events might cause problems.
      ERROR: Error events are likely to cause problems.
      CRITICAL: Critical events cause more severe problems or outages.
      ALERT: A person must take an action immediately.
      EMERGENCY: One or more systems are unusable.
    enum:
      - DEFAULT
      - DEBUG
      - INFO
      - NOTICE
      - WARNING
      - ERROR
      - CRITICAL
      - ALERT
      - EMERGENCY
  Region:
    description: |
      The Region of a commercetools Composable Commerce Project or Deployment. For more information, see [Hosts](/hosts-and-authorization#hosts).
    enum:
      - europe-west1.gcp
      - us-central1.gcp
      - australia-southeast1.gcp
      - eastus.azure
      - germanywestcentral.azure
    (annotations.enumDescriptions):
      europe-west1.gcp: Europe (Google Cloud, Belgium)
      us-central1.gcp: North America (Google Cloud, Iowa)
      australia-southeast1.gcp: Australia (Google Cloud, Sydney)
      eastus.azure: North America (Azure, Virginia)
      germanywestcentral.azure: Europe (Azure, Frankfurt)
  IntegrationType:
    description: |
      Integration type of the Connector.
    (annotations.enumDescriptions):
      tax: Tax.
      marketplace: Marketplace.
      oms: Order management.
      psp: Payment service provider.
      pim: Product information management.
      promotion: Promotions and loyalty.
      search: Search.
      erp: Enterprise resource planning.
      crm: Customer relationship management.
      email: Email and marketing.
      analytics: Analytics.
      shipping: Shipping and delivery.
      other: The Connector provides a service or functionality that is not covered by the other values.
    enum:
      - tax
      - marketplace
      - oms
      - psp
      - pim
      - promotion
      - search
      - erp
      - crm
      - email
      - analytics
      - shipping
      - other
  DeploymentType:
    description: |
      Deployment type of the Connector.
    enum:
      - preview
      - production
    (annotations.enumDescriptions):
      preview: The deployed Connector is the previewable [ConnectorStaged](ctp:connect:type:ConnectorStaged).
      production: The deployed Connector is the production [Connector](ctp:connect:type:Connector).
  Repository:
    example: !include ../examples/connector/Repository.json
    description: |
      Details of the GitHub repository that contains the Connect applications.
    properties:
      url:
        type: string
        description: HTTPS or SSH GitHub URL of the GitHub repository. Private repositories must use an SSH URL.
      tag:
        type: string
        description: Git tag of the release to use.
  ProjectIdentifier:
    type: string
    pattern: ^[a-zA-Z0-9-_.]+:[a-zA-Z0-9-_]{2,36}$
    description: Identifies a Composable Commerce Project. Uses the format "{region}:{projectKey}".
    example: europe-west1.gcp:my-project-key
  IsPreviewable:
    type: string
    description: |
      The previewable status of the ConnectorStaged.
    enum:
      - 'true'
      - 'false'
      - 'pending'
      - 'none'
    (annotations.enumDescriptions):
      'true': |
        ConnectorStaged can be used in a Deployment.
      'false': |
        ConnectorStaged cannot be used in a Deployment.
      pending: |
        The request for previewable status is currently being processed.
      none: |
        No request for previewable status has been made.
